
firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005f56  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000031c  00800060  00005f56  0000600a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  0080037c  0080037c  00006326  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00006326  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  0000632a  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00006386  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005e7a  00000000  00000000  000064d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000404  00000000  00000000  0000c350  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b28  00000000  00000000  0000c754  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000648  00000000  00000000  0000d27c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000635  00000000  00000000  0000d8c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000038d5  00000000  00000000  0000def9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000117ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e7 11 	jmp	0x23ce	; 0x23ce <__ctors_end>
       4:	0c 94 cd 18 	jmp	0x319a	; 0x319a <__vector_1>
       8:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
       c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      10:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      14:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      18:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      1c:	0c 94 f2 18 	jmp	0x31e4	; 0x31e4 <__vector_7>
      20:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      24:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      28:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      2c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      30:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      34:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      38:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      3c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      40:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      44:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      48:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      4c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      50:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>

00000054 <FONT_16x16>:
	...
      78:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      88:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      98:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b4:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c4:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d4:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e4:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f4:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     104:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     114:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     124:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     134:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     158:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     168:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     178:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     188:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     198:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1a8:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1b8:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1c8:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1e8:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     200:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     228:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     238:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     248:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     258:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     268:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     278:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     288:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     298:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2a8:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2b8:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2c8:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2d8:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2e8:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2f8:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     308:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     318:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     328:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     338:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     348:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     358:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     368:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     378:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     388:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     398:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3a8:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3b8:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3c8:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3d8:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3e8:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3f8:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     408:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     418:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     428:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     438:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     448:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     458:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     468:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     478:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     488:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     498:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4a8:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4b8:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4c8:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4d8:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4e8:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4f8:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     508:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     518:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     528:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     538:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     548:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     558:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     568:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     578:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     588:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     598:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5a8:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5b8:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5d8:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5e8:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5f8:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     608:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     618:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     628:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     638:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     648:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     658:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     668:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     678:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     688:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     698:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6a8:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6b8:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6c8:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6d8:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6e8:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6f8:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     708:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     718:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     728:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     738:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     748:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     758:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     768:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     778:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     788:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     798:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7a8:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7b8:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7c8:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7d8:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7e8:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7f8:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     808:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     818:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     850:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     880:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     898:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8a8:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c0:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8d8:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8e8:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     900:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     918:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     928:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     940:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     950:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     960:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     978:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     988:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     998:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9a8:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9b8:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9d8:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9e8:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a00:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a20:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a40:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a60:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a70:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a80:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a90:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa0:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac0:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     ad8:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     ae8:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b00:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b20:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b40:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b60:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b80:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b90:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba0:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bb8:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bc8:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bd8:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     be8:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bf8:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c08:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c18:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c34 <FONT_8x8>:
	...
     c3c:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     c4c:	6c 6c fe 6c fe 6c 6c 00 18 3e 60 3c 06 7c 18 00     ll.l.ll..>`<.|..
     c5c:	00 63 66 0c 18 33 63 00 1c 36 1c 3b 6e 66 3b 00     .cf..3c..6.;nf;.
     c6c:	30 30 60 00 00 00 00 00 0c 18 30 30 30 18 0c 00     00`.......000...
     c7c:	30 18 0c 0c 0c 18 30 00 00 66 3c ff 3c 66 00 00     0.....0..f<.<f..
     c8c:	00 30 30 fc 30 30 00 00 00 00 00 00 00 18 18 30     .00.00.........0
     c9c:	00 00 00 7e 00 00 00 00 00 00 00 00 00 18 18 00     ...~............
     cac:	03 06 0c 18 30 60 40 00 3e 63 63 6b 63 63 3e 00     ....0`@.>cckcc>.
     cbc:	18 38 58 18 18 18 7e 00 3c 66 06 1c 30 66 7e 00     .8X...~.<f..0f~.
     ccc:	3c 66 06 1c 06 66 3c 00 0e 1e 36 66 7f 06 0f 00     <f...f<...6f....
     cdc:	7e 60 7c 06 06 66 3c 00 1c 30 60 7c 66 66 3c 00     ~`|..f<..0`|ff<.
     cec:	7e 66 06 0c 18 18 18 00 3c 66 66 3c 66 66 3c 00     ~f......<ff<ff<.
     cfc:	3c 66 66 3e 06 0c 38 00 00 18 18 00 00 18 18 00     <ff>..8.........
     d0c:	00 18 18 00 00 18 18 30 0c 18 30 60 30 18 0c 00     .......0..0`0...
     d1c:	00 00 7e 00 00 7e 00 00 30 18 0c 06 0c 18 30 00     ..~..~..0.....0.
     d2c:	3c 66 06 0c 18 00 18 00 3e 63 6f 69 6f 60 3e 00     <f......>coio`>.
     d3c:	18 3c 66 66 7e 66 66 00 7e 33 33 3e 33 33 7e 00     .<ff~ff.~33>33~.
     d4c:	1e 33 60 60 60 33 1e 00 7c 36 33 33 33 36 7c 00     .3```3..|63336|.
     d5c:	7f 31 34 3c 34 31 7f 00 7f 31 34 3c 34 30 78 00     .14<41...14<40x.
     d6c:	1e 33 60 60 67 33 1f 00 66 66 66 7e 66 66 66 00     .3``g3..fff~fff.
     d7c:	3c 18 18 18 18 18 3c 00 0f 06 06 06 66 66 3c 00     <.....<.....ff<.
     d8c:	73 33 36 3c 36 33 73 00 78 30 30 30 31 33 7f 00     s36<63s.x00013..
     d9c:	63 77 7f 7f 6b 63 63 00 63 73 7b 6f 67 63 63 00     cw..kcc.cs{ogcc.
     dac:	3e 63 63 63 63 63 3e 00 7e 33 33 3e 30 30 78 00     >ccccc>.~33>00x.
     dbc:	3c 66 66 66 6e 3c 0e 00 7e 33 33 3e 36 33 73 00     <fffn<..~33>63s.
     dcc:	3c 66 30 18 0c 66 3c 00 7e 5a 18 18 18 18 3c 00     <f0..f<.~Z....<.
     ddc:	66 66 66 66 66 66 7e 00 66 66 66 66 66 3c 18 00     ffffff~.fffff<..
     dec:	63 63 63 6b 7f 77 63 00 63 63 36 1c 1c 36 63 00     ccck.wc.cc6..6c.
     dfc:	66 66 66 3c 18 18 3c 00 7f 63 46 0c 19 33 7f 00     fff<..<..cF..3..
     e0c:	3c 30 30 30 30 30 3c 00 60 30 18 0c 06 03 01 00     <00000<.`0......
     e1c:	3c 0c 0c 0c 0c 0c 3c 00 08 1c 36 63 00 00 00 00     <.....<...6c....
     e2c:	00 00 00 00 00 00 00 ff 18 18 0c 00 00 00 00 00     ................
     e3c:	00 00 3c 06 3e 66 3b 00 70 30 3e 33 33 33 6e 00     ..<.>f;.p0>333n.
     e4c:	00 00 3c 66 60 66 3c 00 0e 06 3e 66 66 66 3b 00     ..<f`f<...>fff;.
     e5c:	00 00 3c 66 7e 60 3c 00 1c 36 30 78 30 30 78 00     ..<f~`<..60x00x.
     e6c:	00 00 3b 66 66 3e 06 7c 70 30 36 3b 33 33 73 00     ..;ff>.|p06;33s.
     e7c:	18 00 38 18 18 18 3c 00 06 00 06 06 06 66 66 3c     ..8...<......ff<
     e8c:	70 30 33 36 3c 36 73 00 38 18 18 18 18 18 3c 00     p036<6s.8.....<.
     e9c:	00 00 66 7f 7f 6b 63 00 00 00 7c 66 66 66 66 00     ..f..kc...|ffff.
     eac:	00 00 3c 66 66 66 3c 00 00 00 6e 33 33 3e 30 78     ..<fff<...n33>0x
     ebc:	00 00 3b 66 66 3e 06 0f 00 00 6e 3b 33 30 78 00     ..;ff>....n;30x.
     ecc:	00 00 3e 60 3c 06 7c 00 08 18 3e 18 18 1a 0c 00     ..>`<.|...>.....
     edc:	00 00 66 66 66 66 3b 00 00 00 66 66 66 3c 18 00     ..ffff;...fff<..
     eec:	00 00 63 6b 7f 7f 36 00 00 00 63 36 1c 36 63 00     ..ck..6...c6.6c.
     efc:	00 00 66 66 66 3e 06 7c 00 00 7e 4c 18 32 7e 00     ..fff>.|..~L.2~.
     f0c:	0e 18 18 70 18 18 0e 00 0c 0c 0c 00 0c 0c 0c 00     ...p............
     f1c:	70 18 18 0e 18 18 70 00 3b 6e 00 00 00 00 00 00     p.....p.;n......
     f2c:	1c 36 36 1c 00 00 00 00 60 90 90 60 00 00 00 00     .66.....`..`....
     f3c:	22 77 7f 7f 3e 1c 08 00                             "w..>...

00000f44 <image_data_astex_logo>:
     f44:	fe ff df ff df ff ff ff ff ff ff ff df ff ff ff     ................
     f54:	ff f7 ff f7 ff ff df ff ff ff ff f7 ff ef ff ef     ................
     f64:	de ff 9e ff 7e ff 1d ff 97 fd 11 f4 0c d3 49 ba     ....~.........I.
     f74:	c6 a1 e7 a1 07 a2 69 b2 4d cb 72 f4 f8 fd 1d ff     ......i.M.r.....
     f84:	5f ff 9e ff ff ff ff e7 ff e7 ff f7 be ff bd ff     _...............
     f94:	df ff ff f7 ff f7 ff f7 ff ff ff ff ff ff df ff     ................
     fa4:	ff ff ff ff df ff ff ff ff ff ff ff ff ff ff ff     ................
     fb4:	ff ff ff ff df ff ff ff ff f7 ff f7 ff ff 9e ff     ................
     fc4:	9f ff 7f ff 9e ff d7 d5 51 ac cf a3 ef b3 51 cc     ........Q.....Q.
     fd4:	f3 ec 55 fd b7 fd d7 fd 96 fd 35 fd d4 ec 51 cc     ..U.......5...Q.
     fe4:	ae b3 8e a3 72 ac 18 d6 df ff be ff 9d ff ff ff     ....r...........
     ff4:	ff f7 ff f7 df ff ff ff fe ff fe ff fe ff ff ff     ................
    1004:	ff ff ff ff ff ff ff ff df ff ff ff ff f7 fe ff     ................
    1014:	ff ff ff ff ff ff ff ff df ff df ff ff ff ff f7     ................
    1024:	ff ff 9f ff 5b fe d1 e3 8f 9b 31 ac f8 dd 7d ff     ....[.....1...}.
    1034:	9e ff 7d ff 1c ff 9a fe b7 fd 56 fd b8 fd 9b fe     ..}.......V.....
    1044:	3d ff 7d ff 7d ff 5d ff d6 d5 ef 9b 4e 9b 71 dc     =.}.}.].....N.q.
    1054:	da fe 9d ff ff f7 ff e7 ff f7 de ff dd ff ff ff     ................
    1064:	ff ff ff ff ff ff ff ff ff ff ff ff df ff ff ff     ................
    1074:	fe f7 ff f7 ff f7 ff ff de ff ff ff ff f7 ff ff     ................
    1084:	bf ff be ff 5d ff b2 ac 6d a3 b2 ec 3d ff 3c ff     ....]...m...=.<.
    1094:	59 fe 92 ec 2c cb 08 b2 45 a9 a3 a8 a3 b0 a3 b0     Y...,...E.......
    10a4:	83 a8 c3 a0 66 a9 08 b2 4d d3 d3 fc fa fe 3c ff     ....f...M.....<.
    10b4:	fc fe 72 dc 4d 9b f3 bc 9e ff ff ff ff ff de ff     ..r.M...........
    10c4:	ff ff df ff bf f7 ff f7 ff ff fe ff ff ff ff ff     ................
    10d4:	ff ff ff ff ff ff ff ef ff f7 fe ff dd ff fe ff     ................
    10e4:	ff f7 ff ff 7f ff 15 ed 4c 9b 12 bd dc ff 9b ff     ........L.......
    10f4:	0f fc 07 da 82 b8 61 c0 21 c8 01 d0 21 d0 20 d0     ......a.!...!. .
    1104:	20 d0 20 c8 41 d0 61 d0 41 c8 41 c0 41 c0 20 c0      . .A.a.A.A.A. .
    1114:	82 b8 e7 e1 52 fc 5d ff bf ff b2 b4 0b a3 b5 fd     ....R.].........
    1124:	bd ff ff ff ff ff ff ff ff ff ff f7 ff ff fd ff     ................
    1134:	ff ff ff ff ff ff ff ff ff ff ff ff fe ff fe ff     ................
    1144:	ff ff ff ff df ff 5e ff 32 bc 6e ab ba fe 5b ff     ......^.2.n...[.
    1154:	90 ec c5 99 20 c8 20 d0 00 d8 00 e8 00 f0 00 f0     .... . .........
    1164:	00 e8 00 e8 00 e0 20 e8 00 e0 00 e0 00 e8 00 e8     ...... .........
    1174:	00 e8 00 e8 00 e0 42 e0 62 b8 a7 a9 14 ed 5c ff     ......B.b.....\.
    1184:	57 fe 0b b3 51 c4 bf ff df ff df ff ff ff ff ff     W...Q...........
    1194:	fe ff fe ff ff ff ff ff df ff ff ff ff ff de ff     ................
    11a4:	fd ff ff ff ff f7 bf ff 1c ff 0b b3 92 cc 7e ff     ..............~.
    11b4:	76 fd 86 d9 21 d0 22 d0 00 e0 00 e0 00 e8 00 e8     v...!.".........
    11c4:	00 e0 00 e8 00 e8 00 e0 00 e8 00 e0 00 e0 00 e8     ................
    11d4:	00 e8 00 e8 00 e8 00 e8 01 f0 00 d0 41 d0 41 d0     ............A.A.
    11e4:	40 c0 28 d2 38 fe 5d ff 11 c4 8f b3 7f ff df ff     @.(.8.].........
    11f4:	de ff fe ff de ff ff ff ff ff ff ff df ff df ff     ................
    1204:	df ff ff ff fe ff ff ff 9f ff fd fe ec aa 13 f5     ................
    1214:	5c ff 10 e4 83 a8 21 d8 00 f0 01 f0 00 e8 00 e0     \.....!.........
    1224:	00 d8 20 d8 20 d0 00 d8 00 d8 00 e0 00 e0 00 e8     .. . ...........
    1234:	00 e0 00 d8 00 e0 00 e0 00 d8 00 e0 01 e0 22 e0     ..............".
    1244:	00 e0 00 f0 00 f0 21 d0 a4 98 94 ec 1e ff 72 e4     ......!.......r.
    1254:	4c ab bd ff fe ff ff ff ff ff ff ff ff ff ff ff     L...............
    1264:	ff ff df ff df ff ff f7 ff f7 9e ff dc fe ec aa     ................
    1274:	95 e5 7c ff ca da 21 c8 21 d8 01 d0 01 e0 00 f0     ..|...!.!.......
    1284:	00 e0 00 e0 00 d8 20 d8 20 d8 00 d8 00 e0 00 e0     ...... . .......
    1294:	00 e0 00 e0 00 e0 00 d8 00 d8 20 d8 00 d8 00 d8     .......... .....
    12a4:	01 e0 00 e0 00 e0 00 e8 00 f0 00 e8 02 d8 64 b8     ..............d.
    12b4:	4e eb 1c ff 12 e5 6c 9b df ff ff ff ff ff de ff     N.....l.........
    12c4:	ff ff df ff ff ff ff ff fe ff ff f7 df ff 5e ff     ..............^.
    12d4:	0c b3 53 ed 9d ff aa b2 21 c0 00 f0 00 f0 41 d0     ..S.....!.....A.
    12e4:	41 c8 40 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     A.@.............
    12f4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1304:	00 d8 00 d8 00 e0 00 e0 00 e0 00 d8 01 d8 00 e8     ................
    1314:	00 f0 00 f0 62 c0 eb d2 5c ff d3 dc 8e a3 9f ff     ....b...\.......
    1324:	ff ff ff ff ff ff ff ff ff ff ff ef ff ef df ff     ................
    1334:	5f ff f2 cb d2 cc 7b ff ea ca 21 c0 41 e8 00 e8     _.....{...!.A...
    1344:	00 e0 00 e0 20 d8 40 d0 00 d8 00 e0 00 e0 00 e8     .... .@.........
    1354:	00 e8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1364:	00 e0 00 e0 00 d8 20 d8 00 e0 00 e0 00 e0 21 d8     ...... .......!.
    1374:	21 d0 00 e0 00 f0 00 f0 00 e0 83 b8 4d d3 3d ff     !...........M.=.
    1384:	10 cc d2 d4 de ff ff ef df ff ff ff df ff ff ef     ................
    1394:	ff f7 be ff f5 f4 4e b3 9e ff ef db 41 c8 00 f0     ......N.....A...
    13a4:	00 e8 20 d0 40 d8 00 e8 00 f0 00 e8 00 e0 00 e0     .. .@...........
    13b4:	00 e0 00 e0 00 e0 00 e0 00 d8 00 d8 00 d8 00 d8     ................
    13c4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 20 d8 20 d8     ............ . .
    13d4:	01 d8 00 e0 00 e0 20 d8 20 d8 00 e0 00 e8 00 d8     ...... . .......
    13e4:	63 b8 31 fc 1c ff 0b a3 38 ee df ff ff ff ff ff     c.1.....8.......
    13f4:	ff ff ff ff bf ff 5d ff 6c 93 1b ff d4 fc 43 b8     ......].l.....C.
    1404:	01 e0 00 e8 00 e8 40 e0 00 d8 00 e8 00 f0 00 e8     ......@.........
    1414:	00 e8 00 e8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1424:	00 e0 00 d8 00 d8 00 d8 00 e0 00 e0 00 e8 00 e8     ................
    1434:	20 d8 00 d8 00 e0 00 e0 00 e0 20 d8 20 d0 20 d0      ......... . . .
    1444:	00 e0 00 e8 00 e0 62 b0 75 fd 99 fe 2d 9b 3d ff     ......b.u...-.=.
    1454:	df ff df ff ff f7 9f ff 5f ff b2 b4 b4 bd 5b ff     ........_.....[.
    1464:	a3 d0 01 f0 01 e0 21 d0 00 e0 00 e8 00 e8 40 d8     ......!.......@.
    1474:	00 d0 01 e8 00 e8 00 e8 00 e0 00 e0 00 e0 00 e0     ................
    1484:	00 e0 00 e0 00 e0 00 e0 00 d8 20 d8 00 e0 00 e0     .......... .....
    1494:	00 e8 00 f0 00 d8 00 e0 00 e0 00 e0 01 d8 00 e0     ................
    14a4:	00 e0 20 d8 20 d8 00 e8 00 e8 21 d0 09 ba 3d ff     .. . .....!...=.
    14b4:	31 cc b2 fc ff ff df ff ff f7 9f ff 7b fe 6d 9b     1...........{.m.
    14c4:	dc ff ad db 00 d0 01 f8 01 e0 40 c8 00 e0 00 f8     ..........@.....
    14d4:	00 f0 20 d0 20 d0 00 d8 00 e0 00 e0 00 e0 00 e0     .. . ...........
    14e4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    14f4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1504:	01 e0 01 e0 00 e0 00 e0 00 d8 00 e0 00 e0 21 d8     ..............!.
    1514:	42 b8 11 fc fc fe 4c a3 9e f7 ff ff ff ff 9f ff     B.....L.........
    1524:	72 d4 13 ed b9 fe c2 98 42 c8 01 e8 00 e8 00 e0     r.......B.......
    1534:	00 e0 00 f0 00 e8 01 e0 00 d8 00 d8 01 d8 01 d8     ................
    1544:	01 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1554:	00 e8 00 e8 00 e0 00 e0 20 d8 20 d0 00 e0 00 e0     ........ . .....
    1564:	00 e0 00 f0 00 f0 01 e8 01 d8 00 e0 00 e8 00 e0     ................
    1574:	41 d8 00 d0 00 e0 c3 d8 1c ff f3 a4 96 b5 df ff     A...............
    1584:	de ff bd ff ad 93 3c ff 0d f3 22 c8 21 d8 20 d8     ......<...".!. .
    1594:	20 d8 00 e0 01 e0 01 e0 00 e0 00 e0 00 e0 03 e8      ...............
    15a4:	03 d8 00 d8 20 d8 40 e0 00 d8 00 d8 21 e0 01 e0     .... .@.....!...
    15b4:	03 e8 03 e0 01 d8 20 d8 40 e0 20 e0 00 d8 40 d0     ...... .@. ...@.
    15c4:	60 c0 22 d8 02 e0 00 e0 60 d8 00 d0 02 e0 01 f0     `.".....`.......
    15d4:	00 f0 00 e0 01 e8 01 e8 00 e8 40 c0 71 f4 ff fe     ..........@.q...
    15e4:	2e bb 7e ff 9e ff 38 d6 92 ac 1c ff 03 d1 00 e0     ..~...8.........
    15f4:	00 e8 00 e8 00 e0 01 f0 00 e0 00 d8 20 d0 20 d8     ............ . .
    1604:	00 e8 00 f0 00 e8 20 e8 00 d8 00 e0 00 f8 00 f0     ...... .........
    1614:	00 d8 21 d8 01 d8 00 e8 00 f0 00 e0 00 d8 00 e0     ..!.............
    1624:	00 e0 00 e8 00 e0 00 d8 02 e0 00 e0 00 e0 00 e8     ................
    1634:	01 e8 02 e8 00 e0 00 d8 00 e0 00 e8 00 e8 20 d0     .............. .
    1644:	e8 b9 5f ff 8f c3 d8 fd 5d ff b3 ac 19 de 15 fd     .._.....].......
    1654:	20 c8 00 f8 00 f0 01 e0 01 e0 00 e8 00 e8 40 d8      .............@.
    1664:	40 d8 00 d8 00 e8 00 e8 00 e8 00 d8 21 d8 01 e0     @...........!...
    1674:	00 e0 00 e0 20 d0 60 d0 20 d8 00 e0 00 e8 20 f0     .... .`. ..... .
    1684:	00 e8 00 e0 00 e8 00 e8 00 f0 00 e0 21 e0 00 e0     ............!...
    1694:	00 f0 00 f0 00 e0 01 d8 01 d8 20 d8 00 d0 20 e0     .......... ... .
    16a4:	00 e0 02 d8 83 a8 d7 fd 14 ed 92 e4 5d ff af 9b     ............]...
    16b4:	7f ff 2e cb 41 c0 00 e0 01 d8 02 c0 42 c8 41 d8     ....A.......B.A.
    16c4:	00 d8 00 d8 01 e8 01 e8 20 d8 60 c8 40 d0 a6 f1     ........ .`.@...
    16d4:	29 ea 09 d2 49 ca 29 ca 49 e2 a5 f1 c1 f0 40 d8     )...I.).I.....@.
    16e4:	40 c8 20 d0 00 e0 00 f0 00 e0 42 d0 20 d0 00 d8     @. .......B. ...
    16f4:	00 e0 00 e0 00 d0 60 d8 40 d8 00 d8 01 d8 41 d8     ......`.@.....A.
    1704:	20 d0 20 d8 00 e0 02 e0 82 c0 8c fb b9 fe ae c3      . .............
    1714:	17 fe cf b3 7e ff e8 b1 22 c0 42 d8 22 b8 e9 d1     ....~...".B."...
    1724:	a7 c1 e3 c0 41 c8 22 d8 01 d8 02 d0 66 d9 45 b1     ....A.".....f.E.
    1734:	41 c0 a7 e9 08 d2 db fe bf ff 9e ff 51 fc 85 f9     A...........Q...
    1744:	a1 f0 60 c0 c2 a8 86 c9 42 c8 01 d0 42 c8 e4 b8     ..`.....B...B...
    1754:	03 99 60 b8 00 d8 00 d8 62 c0 e3 c8 40 d0 00 e0     ..`.....b...@...
    1764:	00 e0 01 d8 40 d8 00 d8 00 e8 00 e0 20 c8 e6 f1     ....@....... ...
    1774:	bc ff ce bb 91 f4 71 dc 9b fe a3 a8 42 d8 26 f9     ......q.....B.&.
    1784:	11 fc 6a ba 92 f4 f8 fd 52 fc 05 c1 87 c1 55 fd     ..j.....R.....U.
    1794:	93 fc 90 eb 08 fa 00 c8 a3 b0 19 fe ff ef ff ff     ................
    17a4:	eb ca 21 c8 61 d0 c7 d1 76 fd 52 f4 36 fd ab d2     ..!.a...v.R.6...
    17b4:	a3 a8 93 fc b9 fe 17 fe eb fa 62 c0 0d fb cc fa     ..........b.....
    17c4:	00 d8 00 e0 00 d8 20 d0 00 d8 00 e8 00 e8 00 e0     ...... .........
    17d4:	00 d0 c2 e8 dd ff 50 c4 0a cb 13 fd 76 fd 61 b0     ......P.....v.a.
    17e4:	00 d8 c2 e8 c7 d1 a7 91 6e b3 3d ff fc fe 4d bb     ........n.=...M.
    17f4:	33 dd 9c ff 59 fe 2a a2 40 d0 00 e0 21 c0 d8 fd     3...Y.*.@...!...
    1804:	ff f7 be ff cb da 41 c0 04 b9 bc fe dc fe 09 92     ......A.........
    1814:	d7 ed 5e ff 87 b1 47 f9 7e ff 9e ff 5d ff 8e db     ..^...G.~...]...
    1824:	4e fb 01 c8 00 e0 20 e0 20 d8 20 d8 00 d8 01 e8     N..... . . .....
    1834:	00 e0 00 e0 20 e0 00 d8 fb fe f4 d4 89 b2 14 fd     .... ...........
    1844:	d3 fc 81 b8 60 b8 4c fb 78 fe 34 f5 51 c4 9e ff     ....`.L.x.4.Q...
    1854:	9e ff 0f ac ed ab 9c ff bd ff fc fe 24 d1 00 d8     ............$...
    1864:	41 d0 d7 fd ff f7 bf ff aa e2 61 b8 eb d2 7e ff     A.........a...~.
    1874:	5e ff 8f bb 19 fe 7e ff 2d eb 00 e0 f0 bb ff ff     ^.....~.-.......
    1884:	ff ef 9d ff c2 98 41 c8 21 d8 00 d8 00 e0 00 e8     ......A.!.......
    1894:	20 e0 21 d0 01 d8 00 e8 00 e0 00 d8 18 fe 56 ed      .!...........V.
    18a4:	08 92 d7 fd 51 fc 82 a8 c7 b1 5c ff 9d ff 0e bc     ....Q.....\.....
    18b4:	27 82 9e ff 9e ff f0 bb 03 91 f2 fc 9e ff ff e7     '...............
    18c4:	d5 fc 62 c0 82 c0 b7 fd ff ef df ff aa da 61 c0     ..b...........a.
    18d4:	8a d2 7e ff 5e ff 6e c3 c8 a9 08 c2 a5 c9 60 c8     ..~.^.n.......`.
    18e4:	cc d2 fc fe ff e7 fe ff 90 e4 c2 a8 83 c0 64 e0     ..............d.
    18f4:	00 e8 00 e0 42 c8 c4 c0 42 d0 00 e8 00 e8 20 d0     ....B...B..... .
    1904:	76 f5 97 f5 09 92 f8 fd 10 fc a3 b0 46 a9 1d ff     v...........F...
    1914:	7d ff d2 dc ad cb 3d ff 3d ff f1 fb 25 d9 25 d9     }.....=.=...%.%.
    1924:	b6 fd df f7 57 fd 62 b8 41 b0 79 fe bf ff 9e ff     ....W.b.A.y.....
    1934:	eb ea 00 d0 42 c0 97 fd 5d ff 08 aa 63 b8 d0 fb     ....B...]...c...
    1944:	64 e1 e8 fa ac fa 46 a1 3d ff bd ff 5b ff 0b db     d.....F.=...[...
    1954:	46 c1 32 fc c5 d8 63 b8 4f fb 8f fb 41 d0 00 f0     F.2...c.O...A...
    1964:	00 e8 20 d0 76 f5 96 f5 08 9a d8 fd 32 fc 63 b0     .. .v.......2.c.
    1974:	62 c0 08 da 14 fd d3 fc 8f fb 32 fc 32 fc ab fa     b.........2.2...
    1984:	86 e9 2c fb ce fb f3 fc 46 d9 41 c0 82 c8 cf fb     ..,.....F.A.....
    1994:	b3 fc b2 fc e7 e9 00 e0 00 e0 e5 d0 51 fc cf fb     ............Q...
    19a4:	0d fb 87 f9 e3 d8 4b fb 00 f0 02 c8 2a d2 b3 fc     ......K.....*...
    19b4:	d3 fc 52 fc 67 c1 92 fc 10 fc 72 f4 d4 fc 4f fb     ..R.g.....r...O.
    19c4:	00 d0 00 f0 00 e8 00 d0 d6 f5 d6 f5 a9 b2 76 fd     ..............v.
    19d4:	f5 fc 83 b0 00 c8 40 d0 20 b0 c4 b0 a4 b8 63 c0     ......@. .....c.
    19e4:	62 c0 61 b8 a2 a8 c2 a8 82 b0 61 b8 40 d0 41 d0     b.a.......a.@.A.
    19f4:	21 c8 21 c8 41 c8 41 c0 61 c8 20 d0 21 e0 21 d0     !.!.A.A.a. .!.!.
    1a04:	41 b8 c3 a8 a3 b0 62 b8 42 c0 41 b8 00 e8 01 d0     A.....b.B.A.....
    1a14:	63 c0 63 b0 42 a8 62 b0 24 b9 50 fc 4f e4 6d bb     c.c.B.b.$.P.O.m.
    1a24:	b3 f4 4e fb 20 c0 60 e0 20 d8 00 c8 37 f6 75 dd     ..N. .`. ...7.u.
    1a34:	4b c3 f3 f4 98 fd c3 90 c2 b8 60 b8 82 b8 63 b0     K.........`...c.
    1a44:	62 a8 82 b0 81 b0 c1 a8 a1 a0 c2 a8 c3 b0 62 b0     b.............b.
    1a54:	81 b8 40 b0 62 c0 62 c0 62 c0 41 b0 61 b0 81 b8     ..@.b.b.b.A.a...
    1a64:	60 b0 61 b0 a3 b8 62 a8 a3 a0 c3 a8 83 b0 64 b8     `.a...b.......d.
    1a74:	80 b8 61 b0 42 b0 a3 b8 81 a8 c1 b0 a1 a8 a1 a0     ..a.B...........
    1a84:	c2 90 03 91 e2 90 c3 a0 c3 b0 82 b8 21 b0 83 c0     ............!...
    1a94:	3b ff f3 cc b1 ec 71 d4 3d ff 92 e4 50 fc ef fb     ;.....q.=...P...
    1aa4:	f0 fb f0 fb 10 fc 0f fc 2e fc 0f fc ef fb af fb     ................
    1ab4:	11 fc 32 fc 10 fc 10 fc 10 fc cf fb 11 fc 31 fc     ..2...........1.
    1ac4:	10 fc 2f fc 2f fc ef fb 31 fc 11 fc f0 fb ce fb     .././...1.......
    1ad4:	f0 fb f1 fb 4e fc 30 fc 31 fc cf fb 2f fc 2d fc     ....N.0.1.../.-.
    1ae4:	ed fb ce fb af fb 0f fc ee fb ee fb f0 fb 10 fc     ................
    1af4:	10 fc 10 fc 9d ff 10 bc 37 fe ce b3 7e ff b3 dc     ........7...~...
    1b04:	2c eb 2d fb 0d fb 2d fb 4d fb 2b fb 4b fb 2c fb     ,.-...-.M.+.K.,.
    1b14:	0d fb ed fa 0d fb 4e fb 4d fb 0c fb 4d fb 4d fb     ......N.M...M.M.
    1b24:	4e fb 4e fb 4d fb eb fa 2d fb 2d fb 2d fb cc fa     N.N.M...-.-.-...
    1b34:	2d fb 2c fb 2c fb 4c fb 4c fb 2d fb 0c fb 4d fb     -.,.,.L.L.-...M.
    1b44:	2c fb 2c fb 2d fb ec fa ec fa 0c fb 2c fb 2d fb     ,.,.-.......,.-.
    1b54:	4d fb 4d fb 0c eb 92 fc 7c ff 8e bb 1b ff ae a3     M.M.....|.......
    1b64:	9e ff 2d b3 62 c0 00 d8 21 d0 83 b0 a3 a8 81 b8     ..-.b...!.......
    1b74:	61 c0 41 b8 63 c0 23 c0 42 c8 41 c0 20 c0 81 c0     a.A.c.#.B.A. ...
    1b84:	41 b8 63 b8 42 c0 41 c0 41 c0 63 c0 43 c0 43 c0     A.c.B.A.A.c.C.C.
    1b94:	21 c0 61 b8 42 b8 42 b8 61 b8 60 b8 22 c8 42 c0     !.a.B.B.a.`.".B.
    1ba4:	62 c0 62 b8 42 c0 44 c0 44 c0 62 b0 a2 b0 a2 b0     b.b.B.D.D.b.....
    1bb4:	43 b8 23 c0 42 c0 81 b8 c2 a0 8e eb da fe 8e c3     C.#.B...........
    1bc4:	7e ff b2 b4 f5 dd 74 fd 42 b8 03 d0 66 d8 43 c8     ~.....t.B...f.C.
    1bd4:	62 c8 04 c9 05 a9 88 a9 46 b1 c3 a0 07 b2 ce c3     b.......F.......
    1be4:	e4 a8 25 b9 a3 a8 66 b9 6a da 05 b9 a3 b0 25 b9     ..%...f.j.....%.
    1bf4:	66 b9 ae f3 65 a9 8e eb ec da 25 a1 06 a9 06 b9     f...e.....%.....
    1c04:	07 b9 a4 a0 a7 c1 cc ea 27 b9 c5 98 a7 a1 4e db     ........'.....N.
    1c14:	c5 98 26 b1 05 a9 c7 c1 cc e2 a4 a0 a2 98 16 fe     ..&.............
    1c24:	b4 fc 72 ec be ff 17 ce 50 ac 1c ff a4 c8 47 f9     ..r.....P.....G.
    1c34:	33 fc 05 c1 c6 c9 91 fc 10 fc b0 fb b0 fb d0 fb     3...............
    1c44:	51 fc 30 fc ae fb cf fb af fb 0c fb 72 fc 45 c9     Q.0.........r.E.
    1c54:	a8 e1 11 fc 11 fc 4d fb a3 a0 92 fc 31 fc f0 fb     ......M.....1...
    1c64:	af fb d0 fb f0 fb d0 fb af f3 af fb d0 fb 11 fc     ................
    1c74:	d0 fb 51 fc 10 fc 2d fb 51 fc 2e fb 73 fc ab e2     ..Q...-.Q...s...
    1c84:	28 aa 5b ff 8e bb 38 fe fe ff df ff 8f a3 9c fe     (.[...8.........
    1c94:	2e fb e4 d0 8a fa c3 b8 49 d2 ef fb 07 e2 86 e9     ........I.......
    1ca4:	a7 f1 c8 e9 29 f2 29 ea e7 e1 6a fa c7 f1 66 e1     ....).)...j...f.
    1cb4:	a7 e9 e4 d8 a4 d8 29 fa e8 e9 a7 d9 82 b8 6a fa     ......).......j.
    1cc4:	e8 e1 69 ea 49 ea 29 f2 a9 e2 71 fc 52 fc 6a da     ..i.I.)...q.R.j.
    1cd4:	28 ea 48 f2 e8 e9 28 ea 07 ea c6 d9 28 ea e9 f1     (.H...(.....(...
    1ce4:	4a fa a7 c9 b2 e4 1b f7 cf 9b be ff ff ef bf ff     J...............
    1cf4:	52 d4 b5 e4 1d ff c3 98 60 d0 21 d0 05 d1 45 c9     R.......`.!...E.
    1d04:	40 c0 20 e0 20 d8 42 c0 01 c0 00 d8 40 c8 21 d0     @. . .B.....@.!.
    1d14:	21 d8 00 d0 21 d0 01 d8 21 d8 01 d0 21 d0 62 d0     !...!...!...!.b.
    1d24:	21 d0 21 d0 41 d0 41 c8 41 c8 20 c8 81 b0 44 d1     !.!.A.A.A. ...D.
    1d34:	46 d9 42 c0 62 c8 61 c8 40 c8 40 d0 60 d8 00 c8     F.B.b.a.@.@.`...
    1d44:	41 c8 42 c8 42 c0 25 b1 3d ff 72 ac b6 c5 ff ff     A.B.B.%.=.r.....
    1d54:	ff ef 9f ff dc fe 2d 9b be ff 10 dc 20 c0 00 f0     ......-..... ...
    1d64:	01 e8 02 d0 20 d8 00 e0 00 d8 42 d0 21 d8 00 e8     .... .....B.!...
    1d74:	41 d8 00 d0 00 e0 21 e8 01 e0 00 e0 00 e0 00 e0     A.....!.........
    1d84:	00 d8 00 d8 00 e0 00 e8 00 e0 00 d8 00 e0 20 e0     .............. .
    1d94:	61 c8 20 d0 00 e8 00 e0 01 d8 20 d0 20 d8 20 d8     a. ....... . . .
    1da4:	00 d8 20 e0 00 d8 41 d0 82 a8 92 fc dc fe 2e b3     .. ...A.........
    1db4:	bf ff ff ff df ff bf ff 9e ff f3 cc d2 c4 5d ff     ..............].
    1dc4:	66 c1 01 e0 00 f0 00 f0 00 e0 00 d8 20 d8 00 d8     f........... ...
    1dd4:	00 e0 00 e0 41 d8 00 d8 00 e0 00 d8 00 e0 00 e0     ....A...........
    1de4:	00 e8 00 e0 00 e0 00 e0 00 e8 00 f0 00 e8 00 e8     ................
    1df4:	20 e0 00 d8 20 d0 00 e0 00 e8 00 e8 00 e0 00 e8      ... ...........
    1e04:	00 e0 00 d8 20 d8 20 e8 00 e8 20 d0 49 ba 5d ff     .... . ... .I.].
    1e14:	f0 bb b4 fc df ff df ff ff ff ff ff df ff 7c ff     ..............|.
    1e24:	0a ab 79 fe 56 fd a3 a8 00 e0 00 f8 00 e8 01 d0     ..y.V...........
    1e34:	40 d8 20 e8 00 e8 01 e0 21 d8 00 d8 01 e0 00 e0     @. .....!.......
    1e44:	00 d8 00 e0 20 e0 00 e0 00 d8 00 e0 00 e8 00 e0     .... ...........
    1e54:	00 e8 00 d8 00 d8 21 d8 00 d8 00 e0 00 e0 00 e0     ......!.........
    1e64:	00 e8 00 e8 00 e0 01 d8 20 d8 00 e0 00 e8 62 c0     ........ .....b.
    1e74:	38 fe 58 e6 8d 93 5d ff bf ff df ff fd ff ff ef     8.X...].........
    1e84:	ff f7 de ff b5 f5 2b ab 7d ff 51 e4 81 b0 00 e0     ......+.}.Q.....
    1e94:	00 f0 01 e0 00 d0 20 d8 00 e0 01 e0 00 e0 00 e8     ...... .........
    1ea4:	00 e0 00 e0 20 e0 00 d8 20 d8 20 d8 20 d8 20 e0     .... ... . . . .
    1eb4:	00 d8 00 e0 00 e0 00 e0 00 d8 21 d8 00 e0 01 e0     ..........!.....
    1ec4:	20 d8 00 d8 00 e0 00 e0 01 e0 01 e8 00 e8 00 d8      ...............
    1ed4:	62 c0 b2 fc 3c ff 4b 93 99 f6 bf ff ff ff ff ff     b...<.K.........
    1ee4:	fe ff ff ff ff f7 ff f7 fe ff b2 c4 2f c4 3c ff     ............/.<.
    1ef4:	2c db 62 c0 00 e0 00 f0 00 e0 20 d8 21 e0 00 e0     ,.b....... .!...
    1f04:	00 f0 00 e8 00 e0 00 e0 00 d8 20 d8 00 d8 20 d8     .......... ... .
    1f14:	00 d8 00 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1f24:	01 d8 00 e0 00 e0 00 e8 00 e0 21 d0 21 e0 00 f0     ..........!.!...
    1f34:	00 f0 22 c0 f0 eb 5d ff ce bb b2 e4 9e ff ff ff     .."...].........
    1f44:	ff ff ff ff ff ff de ff ff ff ff f7 ff f7 be ff     ................
    1f54:	ee b3 91 e4 1d ff ac d2 82 b8 20 d8 00 e8 00 e8     .......... .....
    1f64:	00 e0 00 e0 00 e8 00 e8 00 e0 40 e0 20 d8 20 d8     ..........@. . .
    1f74:	00 d8 00 e0 00 d8 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1f84:	00 e8 00 e8 20 d0 21 e8 00 e8 00 e8 00 e0 00 d8     .... .!.........
    1f94:	00 e0 00 d8 42 c0 6e eb 3d ff 71 c4 ef bb 7e ff     ....B.n.=.q...~.
    1fa4:	bf ff ff f7 ff ff ff ff df ff ff ff ff ff ff ff     ................
    1fb4:	df ff df ff 9e ff 6d a3 d4 ec 1d ff 8e e3 61 a8     ......m.......a.
    1fc4:	41 e0 00 f0 00 f0 01 e0 00 e0 20 e0 20 d8 00 d0     A......... . ...
    1fd4:	00 d0 00 e0 00 e0 00 e0 01 e8 01 e8 00 e0 00 d8     ................
    1fe4:	00 d8 00 e0 00 e0 00 e0 40 d8 00 e0 00 f0 00 e0     ........@.......
    1ff4:	20 e0 00 e0 20 e0 62 b0 31 e4 7d ff b2 dc 4d bb      ... .b.1.}...M.
    2004:	9f ff ff ff ff f7 fe ff ff ff ff ff df ff bf ff     ................
    2014:	ff ff bf ff 9f ff df ff ff ff 9e ff 6d a3 b2 e4     ............m...
    2024:	3c ff d2 fc c2 b0 41 d0 00 d8 01 d8 00 e8 00 e0     <.....A.........
    2034:	00 e0 00 e0 00 e8 00 e8 00 e0 01 e8 01 e8 00 e0     ................
    2044:	00 e0 20 d8 20 e0 00 e0 00 e0 00 e0 00 e8 00 f0     .. . ...........
    2054:	00 e8 20 d8 80 d0 20 c8 a3 c0 15 fd 9e ff 91 b4     .. ... .........
    2064:	6e b3 5e ff bf ff ff e7 ff ef fd ff ff ff ff ff     n.^.............
    2074:	ff f7 ff ff df ff 9f ff df ff ff ff df f7 ff ff     ................
    2084:	bf ff 8e ab ae cb 3c ff 79 fe aa ba 81 a8 41 d8     ......<.y.....A.
    2094:	01 f0 00 e8 00 e0 00 e8 01 e8 00 e8 00 e0 00 e0     ................
    20a4:	01 e8 01 e0 01 e0 20 d8 00 d8 00 e0 00 e8 00 e8     ...... .........
    20b4:	00 f0 00 e8 20 e0 40 c8 60 a8 cb d2 fc fe 1d ff     .... .@.`.......
    20c4:	8e b3 ef b3 9f ff bf ff ff ff ff ff fe ff ff ff     ................
    20d4:	ff ff ff ff ff ef ff ff bf ff ff ff ff f7 ff ff     ................
    20e4:	ff ff ff ff df ff 9e ff 51 dc 0c b3 17 ee bd ff     ........Q.......
    20f4:	33 fd a6 d1 02 c8 01 c0 22 c8 02 d8 01 e0 01 e0     3.......".......
    2104:	00 d8 00 d8 00 e0 00 e0 00 d8 00 d0 00 d8 01 e0     ................
    2114:	01 e0 00 d8 03 d0 21 c8 40 b8 27 e2 34 fd 7e ff     ......!.@.'.4.~.
    2124:	18 de 2c 9b 92 ec 7e ff ff ff ff e7 ff ff be ff     ..,...~.........
    2134:	be ff ff ff ff ff ff ff ff f7 df ff df ff ff ff     ................
    2144:	fe f7 ff f7 ff ff ff ff ff ff df ff 9f ff d8 ed     ................
    2154:	6e a3 51 c4 3c ff 3c ff 14 fd 4c d3 66 a9 62 a8     n.Q.<.<...L.f.b.
    2164:	42 c0 21 c8 20 d0 20 d8 00 e0 00 e0 00 d8 41 d0     B.!. . .......A.
    2174:	41 d0 22 c8 42 c8 62 c0 46 a1 0c cb 75 fd fc fe     A.".B.b.F...u...
    2184:	9b fe d0 bb 8e 93 79 ee be ff bf ff ff ff ff f7     ......y.........
    2194:	de ff df ff df ff ff ff ff ff ff ff de ff ff ff     ................
    21a4:	ff ff ff ff fe ff fe ff ff f7 fe f7 ff ff ff ff     ................
    21b4:	ff f7 df ff 3e ff 72 fc ec aa 92 ac 3a f7 dd ff     ....>.r.....:...
    21c4:	7b ff 34 fd 2c fb e7 f1 44 e9 a1 e0 20 e0 00 e0     {.4.,...D... ...
    21d4:	41 d8 e3 e0 45 e1 e8 e9 6e fb d3 fc 9c ff bd ff     A...E...n.......
    21e4:	ba ee 32 b4 0d b3 f4 fc 3c ff df ff ff ef ff f7     ..2.....<.......
    21f4:	fd ff dd ff ff ff ff f7 ff ef ff ff ff ff ff ff     ................
    2204:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2214:	ff ff ff ff ff ff ff ff ff ff ff ff 7d ff 55 c5     ............}.U.
    2224:	6e b3 6e bb b3 ec 59 fe 5d ff 9d ff 9e ff 9e ff     n.n...Y.].......
    2234:	3d ff 7e ff 7d ff 9e ff 9e ff 7e ff 5d ff 59 fe     =.~.}.....~.].Y.
    2244:	b3 e4 2d bb 4e ab 76 d5 de ff ff ff ff ff ff ff     ..-.N.v.........
    2254:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2264:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2274:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff df ff     ................
    2284:	df ff 9e ff 5d ff b7 fd 72 dc af c3 8e ab 30 b4     ....]...r.....0.
    2294:	d3 c4 75 d5 96 dd b7 dd b6 d5 76 d5 d3 c4 10 bc     ..u.......v.....
    22a4:	cf bb ae b3 92 e4 f8 fd 5e ff be ff ff ff ff ff     ........^.......
    22b4:	ff ff df ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    22c4:	ff ff ff ff ff ff ff ff                             ........

000022cc <__c.2161>:
    22cc:	6e 61 6e 00                                         nan.

000022d0 <__c.2159>:
    22d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
    22e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
    22f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
    2300:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
    2310:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
    2320:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
    2330:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
    2340:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
    2350:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
    2360:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
    2370:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
    2380:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
    2390:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
    23a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
    23b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
    23c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000023ce <__ctors_end>:
    23ce:	11 24       	eor	r1, r1
    23d0:	1f be       	out	0x3f, r1	; 63
    23d2:	cf e5       	ldi	r28, 0x5F	; 95
    23d4:	d8 e0       	ldi	r29, 0x08	; 8
    23d6:	de bf       	out	0x3e, r29	; 62
    23d8:	cd bf       	out	0x3d, r28	; 61

000023da <__do_copy_data>:
    23da:	13 e0       	ldi	r17, 0x03	; 3
    23dc:	a0 e6       	ldi	r26, 0x60	; 96
    23de:	b0 e0       	ldi	r27, 0x00	; 0
    23e0:	e6 e5       	ldi	r30, 0x56	; 86
    23e2:	ff e5       	ldi	r31, 0x5F	; 95
    23e4:	02 c0       	rjmp	.+4      	; 0x23ea <__do_copy_data+0x10>
    23e6:	05 90       	lpm	r0, Z+
    23e8:	0d 92       	st	X+, r0
    23ea:	ac 37       	cpi	r26, 0x7C	; 124
    23ec:	b1 07       	cpc	r27, r17
    23ee:	d9 f7       	brne	.-10     	; 0x23e6 <__do_copy_data+0xc>

000023f0 <__do_clear_bss>:
    23f0:	23 e0       	ldi	r18, 0x03	; 3
    23f2:	ac e7       	ldi	r26, 0x7C	; 124
    23f4:	b3 e0       	ldi	r27, 0x03	; 3
    23f6:	01 c0       	rjmp	.+2      	; 0x23fa <.do_clear_bss_start>

000023f8 <.do_clear_bss_loop>:
    23f8:	1d 92       	st	X+, r1

000023fa <.do_clear_bss_start>:
    23fa:	a0 39       	cpi	r26, 0x90	; 144
    23fc:	b2 07       	cpc	r27, r18
    23fe:	e1 f7       	brne	.-8      	; 0x23f8 <.do_clear_bss_loop>
    2400:	0e 94 17 19 	call	0x322e	; 0x322e <main>
    2404:	0c 94 a9 2f 	jmp	0x5f52	; 0x5f52 <_exit>

00002408 <__bad_interrupt>:
    2408:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000240c <TFT_DP_DATA>:
#include <avr/pgmspace.h>

//display data write path define function
void TFT_DP_DATA(uint16_t Data)
{
	PORTC = (uint8_t) (Data & 0x00FF);
    240c:	85 bb       	out	0x15, r24	; 21
	PORTA = (uint8_t) ((Data & 0xFE00)>>8);
    240e:	9c 01       	movw	r18, r24
    2410:	22 27       	eor	r18, r18
    2412:	3e 7f       	andi	r19, 0xFE	; 254
    2414:	3b bb       	out	0x1b, r19	; 27
	if (Data & (1<<8)) PORTB |=(1<<0);
    2416:	90 ff       	sbrs	r25, 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <TFT_DP_DATA+0x12>
    241a:	c0 9a       	sbi	0x18, 0	; 24
    241c:	08 95       	ret
	else PORTB &=~(1<<0);
    241e:	c0 98       	cbi	0x18, 0	; 24
    2420:	08 95       	ret

00002422 <Write_Command>:



void Write_Command(uint16_t Wcommand)
{
	TFT_RD_1;
    2422:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RS_0;
    2424:	95 98       	cbi	0x12, 5	; 18
	TFT_DP_DATA(Wcommand);
    2426:	0e 94 06 12 	call	0x240c	; 0x240c <TFT_DP_DATA>
	TFT_WR_0;
    242a:	c1 98       	cbi	0x18, 1	; 24
	TFT_WR_1;
    242c:	c1 9a       	sbi	0x18, 1	; 24
    242e:	08 95       	ret

00002430 <Write_Data>:
}

void Write_Data(uint16_t Wdata)
{
		TFT_RD_1;
    2430:	c2 9a       	sbi	0x18, 2	; 24
		TFT_RS_1;
    2432:	95 9a       	sbi	0x12, 5	; 18
		TFT_DP_DATA(Wdata);
    2434:	0e 94 06 12 	call	0x240c	; 0x240c <TFT_DP_DATA>
		TFT_WR_0;
    2438:	c1 98       	cbi	0x18, 1	; 24
		TFT_WR_1;
    243a:	c1 9a       	sbi	0x18, 1	; 24
    243c:	08 95       	ret

0000243e <Write_Command_Data>:
}

void Write_Command_Data(uint16_t Wcommand, uint16_t Wdata)
{
    243e:	cf 93       	push	r28
    2440:	df 93       	push	r29
    2442:	eb 01       	movw	r28, r22
	Write_Command(Wcommand);
    2444:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
	Write_Data(Wdata);
    2448:	ce 01       	movw	r24, r28
    244a:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
}
    244e:	df 91       	pop	r29
    2450:	cf 91       	pop	r28
    2452:	08 95       	ret

00002454 <TFT_Set_Address>:

void TFT_Set_Address(uint16_t PX1, uint16_t PY1, uint16_t PX2, uint16_t PY2)
{
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	8c 01       	movw	r16, r24
    2462:	eb 01       	movw	r28, r22
    2464:	79 01       	movw	r14, r18
	Write_Command_Data(0x0044,(PX2 << 8) + PX1 );	//Column address start2
    2466:	e0 e0       	ldi	r30, 0x00	; 0
    2468:	f0 e0       	ldi	r31, 0x00	; 0
    246a:	f4 2f       	mov	r31, r20
    246c:	bf 01       	movw	r22, r30
    246e:	68 0f       	add	r22, r24
    2470:	79 1f       	adc	r23, r25
    2472:	84 e4       	ldi	r24, 0x44	; 68
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0045,PY1);					//Column address start1
    247a:	be 01       	movw	r22, r28
    247c:	85 e4       	ldi	r24, 0x45	; 69
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0046,PY2);					//Column address end2
    2484:	b7 01       	movw	r22, r14
    2486:	86 e4       	ldi	r24, 0x46	; 70
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004E,PX1);					//Column address end1
    248e:	b8 01       	movw	r22, r16
    2490:	8e e4       	ldi	r24, 0x4E	; 78
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004F,PY1);					//Row address start2
    2498:	be 01       	movw	r22, r28
    249a:	8f e4       	ldi	r24, 0x4F	; 79
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command(0x0022);
    24a2:	82 e2       	ldi	r24, 0x22	; 34
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
}
    24aa:	df 91       	pop	r29
    24ac:	cf 91       	pop	r28
    24ae:	1f 91       	pop	r17
    24b0:	0f 91       	pop	r16
    24b2:	ff 90       	pop	r15
    24b4:	ef 90       	pop	r14
    24b6:	08 95       	ret

000024b8 <TFT_Init>:

void TFT_Init(void)
{
	TFT_RD_1;
    24b8:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RST_1;
    24ba:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    24bc:	8f e0       	ldi	r24, 0x0F	; 15
    24be:	97 e2       	ldi	r25, 0x27	; 39
    24c0:	01 97       	sbiw	r24, 0x01	; 1
    24c2:	f1 f7       	brne	.-4      	; 0x24c0 <TFT_Init+0x8>
    24c4:	00 c0       	rjmp	.+0      	; 0x24c6 <TFT_Init+0xe>
    24c6:	00 00       	nop
	_delay_ms(5);
	TFT_RST_0;
    24c8:	c3 98       	cbi	0x18, 3	; 24
    24ca:	8f e2       	ldi	r24, 0x2F	; 47
    24cc:	95 e7       	ldi	r25, 0x75	; 117
    24ce:	01 97       	sbiw	r24, 0x01	; 1
    24d0:	f1 f7       	brne	.-4      	; 0x24ce <TFT_Init+0x16>
    24d2:	00 c0       	rjmp	.+0      	; 0x24d4 <TFT_Init+0x1c>
    24d4:	00 00       	nop
	_delay_ms(15);
	TFT_RST_1;
    24d6:	c3 9a       	sbi	0x18, 3	; 24
    24d8:	8f e2       	ldi	r24, 0x2F	; 47
    24da:	95 e7       	ldi	r25, 0x75	; 117
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	f1 f7       	brne	.-4      	; 0x24dc <TFT_Init+0x24>
    24e0:	00 c0       	rjmp	.+0      	; 0x24e2 <TFT_Init+0x2a>
    24e2:	00 00       	nop
	_delay_ms(15);
	TFT_CS_0;
    24e4:	94 98       	cbi	0x12, 4	; 18
	Write_Command_Data(0x0000,0x0001);
    24e6:	61 e0       	ldi	r22, 0x01	; 1
    24e8:	70 e0       	ldi	r23, 0x00	; 0
    24ea:	80 e0       	ldi	r24, 0x00	; 0
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0003,0xA8A4);
    24f2:	64 ea       	ldi	r22, 0xA4	; 164
    24f4:	78 ea       	ldi	r23, 0xA8	; 168
    24f6:	83 e0       	ldi	r24, 0x03	; 3
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000C,0x0000);
    24fe:	60 e0       	ldi	r22, 0x00	; 0
    2500:	70 e0       	ldi	r23, 0x00	; 0
    2502:	8c e0       	ldi	r24, 0x0C	; 12
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000D,0x800C);
    250a:	6c e0       	ldi	r22, 0x0C	; 12
    250c:	70 e8       	ldi	r23, 0x80	; 128
    250e:	8d e0       	ldi	r24, 0x0D	; 13
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000E,0x2B00);
    2516:	60 e0       	ldi	r22, 0x00	; 0
    2518:	7b e2       	ldi	r23, 0x2B	; 43
    251a:	8e e0       	ldi	r24, 0x0E	; 14
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x001E,0x00B7);
    2522:	67 eb       	ldi	r22, 0xB7	; 183
    2524:	70 e0       	ldi	r23, 0x00	; 0
    2526:	8e e1       	ldi	r24, 0x1E	; 30
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0001,0x2B3F);
    252e:	6f e3       	ldi	r22, 0x3F	; 63
    2530:	7b e2       	ldi	r23, 0x2B	; 43
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	90 e0       	ldi	r25, 0x00	; 0
    2536:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0002,0x0600);
    253a:	60 e0       	ldi	r22, 0x00	; 0
    253c:	76 e0       	ldi	r23, 0x06	; 6
    253e:	82 e0       	ldi	r24, 0x02	; 2
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0010,0x0000);
    2546:	60 e0       	ldi	r22, 0x00	; 0
    2548:	70 e0       	ldi	r23, 0x00	; 0
    254a:	80 e1       	ldi	r24, 0x10	; 16
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0011,0x6070);
    2552:	60 e7       	ldi	r22, 0x70	; 112
    2554:	70 e6       	ldi	r23, 0x60	; 96
    2556:	81 e1       	ldi	r24, 0x11	; 17
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0005,0x0000);
    255e:	60 e0       	ldi	r22, 0x00	; 0
    2560:	70 e0       	ldi	r23, 0x00	; 0
    2562:	85 e0       	ldi	r24, 0x05	; 5
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0006,0x0000);
    256a:	60 e0       	ldi	r22, 0x00	; 0
    256c:	70 e0       	ldi	r23, 0x00	; 0
    256e:	86 e0       	ldi	r24, 0x06	; 6
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0016,0xEF1C);
    2576:	6c e1       	ldi	r22, 0x1C	; 28
    2578:	7f ee       	ldi	r23, 0xEF	; 239
    257a:	86 e1       	ldi	r24, 0x16	; 22
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0017,0x0003);
    2582:	63 e0       	ldi	r22, 0x03	; 3
    2584:	70 e0       	ldi	r23, 0x00	; 0
    2586:	87 e1       	ldi	r24, 0x17	; 23
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0007,0x0233);
    258e:	63 e3       	ldi	r22, 0x33	; 51
    2590:	72 e0       	ldi	r23, 0x02	; 2
    2592:	87 e0       	ldi	r24, 0x07	; 7
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000B,0x0000);
    259a:	60 e0       	ldi	r22, 0x00	; 0
    259c:	70 e0       	ldi	r23, 0x00	; 0
    259e:	8b e0       	ldi	r24, 0x0B	; 11
    25a0:	90 e0       	ldi	r25, 0x00	; 0
    25a2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000F,0x0000);
    25a6:	60 e0       	ldi	r22, 0x00	; 0
    25a8:	70 e0       	ldi	r23, 0x00	; 0
    25aa:	8f e0       	ldi	r24, 0x0F	; 15
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0041,0x0000);
    25b2:	60 e0       	ldi	r22, 0x00	; 0
    25b4:	70 e0       	ldi	r23, 0x00	; 0
    25b6:	81 e4       	ldi	r24, 0x41	; 65
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0042,0x0000);
    25be:	60 e0       	ldi	r22, 0x00	; 0
    25c0:	70 e0       	ldi	r23, 0x00	; 0
    25c2:	82 e4       	ldi	r24, 0x42	; 66
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0048,0x0000);
    25ca:	60 e0       	ldi	r22, 0x00	; 0
    25cc:	70 e0       	ldi	r23, 0x00	; 0
    25ce:	88 e4       	ldi	r24, 0x48	; 72
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0049,0x013F);
    25d6:	6f e3       	ldi	r22, 0x3F	; 63
    25d8:	71 e0       	ldi	r23, 0x01	; 1
    25da:	89 e4       	ldi	r24, 0x49	; 73
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004A,0x0000);
    25e2:	60 e0       	ldi	r22, 0x00	; 0
    25e4:	70 e0       	ldi	r23, 0x00	; 0
    25e6:	8a e4       	ldi	r24, 0x4A	; 74
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004B,0x0000);
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	70 e0       	ldi	r23, 0x00	; 0
    25f2:	8b e4       	ldi	r24, 0x4B	; 75
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0044,0xEF95);
    25fa:	65 e9       	ldi	r22, 0x95	; 149
    25fc:	7f ee       	ldi	r23, 0xEF	; 239
    25fe:	84 e4       	ldi	r24, 0x44	; 68
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0045,0x0000);
    2606:	60 e0       	ldi	r22, 0x00	; 0
    2608:	70 e0       	ldi	r23, 0x00	; 0
    260a:	85 e4       	ldi	r24, 0x45	; 69
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0046,0x013F);
    2612:	6f e3       	ldi	r22, 0x3F	; 63
    2614:	71 e0       	ldi	r23, 0x01	; 1
    2616:	86 e4       	ldi	r24, 0x46	; 70
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0030,0x0707);
    261e:	67 e0       	ldi	r22, 0x07	; 7
    2620:	77 e0       	ldi	r23, 0x07	; 7
    2622:	80 e3       	ldi	r24, 0x30	; 48
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0031,0x0204);
    262a:	64 e0       	ldi	r22, 0x04	; 4
    262c:	72 e0       	ldi	r23, 0x02	; 2
    262e:	81 e3       	ldi	r24, 0x31	; 49
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0032,0x0204);
    2636:	64 e0       	ldi	r22, 0x04	; 4
    2638:	72 e0       	ldi	r23, 0x02	; 2
    263a:	82 e3       	ldi	r24, 0x32	; 50
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0033,0x0502);
    2642:	62 e0       	ldi	r22, 0x02	; 2
    2644:	75 e0       	ldi	r23, 0x05	; 5
    2646:	83 e3       	ldi	r24, 0x33	; 51
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0034,0x0507);
    264e:	67 e0       	ldi	r22, 0x07	; 7
    2650:	75 e0       	ldi	r23, 0x05	; 5
    2652:	84 e3       	ldi	r24, 0x34	; 52
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0035,0x0204);
    265a:	64 e0       	ldi	r22, 0x04	; 4
    265c:	72 e0       	ldi	r23, 0x02	; 2
    265e:	85 e3       	ldi	r24, 0x35	; 53
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0036,0x0204);
    2666:	64 e0       	ldi	r22, 0x04	; 4
    2668:	72 e0       	ldi	r23, 0x02	; 2
    266a:	86 e3       	ldi	r24, 0x36	; 54
    266c:	90 e0       	ldi	r25, 0x00	; 0
    266e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0037,0x0502);
    2672:	62 e0       	ldi	r22, 0x02	; 2
    2674:	75 e0       	ldi	r23, 0x05	; 5
    2676:	87 e3       	ldi	r24, 0x37	; 55
    2678:	90 e0       	ldi	r25, 0x00	; 0
    267a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x003A,0x0302);
    267e:	62 e0       	ldi	r22, 0x02	; 2
    2680:	73 e0       	ldi	r23, 0x03	; 3
    2682:	8a e3       	ldi	r24, 0x3A	; 58
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x003B,0x0302);
    268a:	62 e0       	ldi	r22, 0x02	; 2
    268c:	73 e0       	ldi	r23, 0x03	; 3
    268e:	8b e3       	ldi	r24, 0x3B	; 59
    2690:	90 e0       	ldi	r25, 0x00	; 0
    2692:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0023,0x0000);
    2696:	60 e0       	ldi	r22, 0x00	; 0
    2698:	70 e0       	ldi	r23, 0x00	; 0
    269a:	83 e2       	ldi	r24, 0x23	; 35
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0024,0x0000);
    26a2:	60 e0       	ldi	r22, 0x00	; 0
    26a4:	70 e0       	ldi	r23, 0x00	; 0
    26a6:	84 e2       	ldi	r24, 0x24	; 36
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0025,0x8000);
    26ae:	60 e0       	ldi	r22, 0x00	; 0
    26b0:	70 e8       	ldi	r23, 0x80	; 128
    26b2:	85 e2       	ldi	r24, 0x25	; 37
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004f,0x0000);
    26ba:	60 e0       	ldi	r22, 0x00	; 0
    26bc:	70 e0       	ldi	r23, 0x00	; 0
    26be:	8f e4       	ldi	r24, 0x4F	; 79
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004e,0x0000);
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	70 e0       	ldi	r23, 0x00	; 0
    26ca:	8e e4       	ldi	r24, 0x4E	; 78
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command(0x0022);
    26d2:	82 e2       	ldi	r24, 0x22	; 34
    26d4:	90 e0       	ldi	r25, 0x00	; 0
    26d6:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
	TFT_CS_1;
    26da:	94 9a       	sbi	0x12, 4	; 18
    26dc:	08 95       	ret

000026de <TFT_Fill>:
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    26de:	cf 93       	push	r28
    26e0:	df 93       	push	r29
    26e2:	ec 01       	movw	r28, r24
	unsigned int i,j;
	TFT_CS_0;
    26e4:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(0,0,239,319);
    26e6:	2f e3       	ldi	r18, 0x3F	; 63
    26e8:	31 e0       	ldi	r19, 0x01	; 1
    26ea:	4f ee       	ldi	r20, 0xEF	; 239
    26ec:	50 e0       	ldi	r21, 0x00	; 0
    26ee:	60 e0       	ldi	r22, 0x00	; 0
    26f0:	70 e0       	ldi	r23, 0x00	; 0
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    26fa:	ce 01       	movw	r24, r28
    26fc:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
    2700:	20 e4       	ldi	r18, 0x40	; 64
    2702:	31 e0       	ldi	r19, 0x01	; 1
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    2704:	50 ef       	ldi	r21, 0xF0	; 240
    2706:	40 e0       	ldi	r20, 0x00	; 0
    2708:	0a c0       	rjmp	.+20     	; 0x271e <TFT_Fill+0x40>
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
		{
			TFT_WR_0;
    270a:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    270c:	c1 9a       	sbi	0x18, 1	; 24
    270e:	01 97       	sbiw	r24, 0x01	; 1
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
    2710:	00 97       	sbiw	r24, 0x00	; 0
    2712:	d9 f7       	brne	.-10     	; 0x270a <TFT_Fill+0x2c>
    2714:	21 50       	subi	r18, 0x01	; 1
    2716:	31 09       	sbc	r19, r1
{
	unsigned int i,j;
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
    2718:	21 15       	cp	r18, r1
    271a:	31 05       	cpc	r19, r1
    271c:	19 f0       	breq	.+6      	; 0x2724 <TFT_Fill+0x46>
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    271e:	85 2f       	mov	r24, r21
    2720:	94 2f       	mov	r25, r20
    2722:	f3 cf       	rjmp	.-26     	; 0x270a <TFT_Fill+0x2c>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    2724:	94 9a       	sbi	0x12, 4	; 18
}
    2726:	df 91       	pop	r29
    2728:	cf 91       	pop	r28
    272a:	08 95       	ret

0000272c <TFT_Box>:

void TFT_Box(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    272c:	af 92       	push	r10
    272e:	bf 92       	push	r11
    2730:	cf 92       	push	r12
    2732:	df 92       	push	r13
    2734:	ef 92       	push	r14
    2736:	ff 92       	push	r15
    2738:	0f 93       	push	r16
    273a:	1f 93       	push	r17
    273c:	cf 93       	push	r28
    273e:	df 93       	push	r29
    2740:	6c 01       	movw	r12, r24
    2742:	7b 01       	movw	r14, r22
    2744:	ea 01       	movw	r28, r20
    2746:	59 01       	movw	r10, r18
	unsigned int  i,j;
	TFT_CS_0;
    2748:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x1,y1,x2,y2);
    274a:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    274e:	c8 01       	movw	r24, r16
    2750:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
	for(i = y1; i <= y2; i++)
    2754:	ae 14       	cp	r10, r14
    2756:	bf 04       	cpc	r11, r15
    2758:	a8 f0       	brcs	.+42     	; 0x2784 <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    275a:	9c 2d       	mov	r25, r12
    275c:	8d 2d       	mov	r24, r13
    275e:	0c c0       	rjmp	.+24     	; 0x2778 <TFT_Box+0x4c>
		{
			TFT_WR_0;
    2760:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    2762:	c1 9a       	sbi	0x18, 1	; 24
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
	{
		for(j = x1; j <= x2; j++)
    2764:	31 96       	adiw	r30, 0x01	; 1
    2766:	ce 17       	cp	r28, r30
    2768:	df 07       	cpc	r29, r31
    276a:	d0 f7       	brcc	.-12     	; 0x2760 <TFT_Box+0x34>
{
	unsigned int  i,j;
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
    276c:	2f ef       	ldi	r18, 0xFF	; 255
    276e:	e2 1a       	sub	r14, r18
    2770:	f2 0a       	sbc	r15, r18
    2772:	ae 14       	cp	r10, r14
    2774:	bf 04       	cpc	r11, r15
    2776:	30 f0       	brcs	.+12     	; 0x2784 <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    2778:	cc 15       	cp	r28, r12
    277a:	dd 05       	cpc	r29, r13
    277c:	b8 f3       	brcs	.-18     	; 0x276c <TFT_Box+0x40>
    277e:	e9 2f       	mov	r30, r25
    2780:	f8 2f       	mov	r31, r24
    2782:	ee cf       	rjmp	.-36     	; 0x2760 <TFT_Box+0x34>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    2784:	94 9a       	sbi	0x12, 4	; 18
}
    2786:	df 91       	pop	r29
    2788:	cf 91       	pop	r28
    278a:	1f 91       	pop	r17
    278c:	0f 91       	pop	r16
    278e:	ff 90       	pop	r15
    2790:	ef 90       	pop	r14
    2792:	df 90       	pop	r13
    2794:	cf 90       	pop	r12
    2796:	bf 90       	pop	r11
    2798:	af 90       	pop	r10
    279a:	08 95       	ret

0000279c <TFT_Dot>:

void TFT_Dot(unsigned int x,unsigned int y,unsigned int color)
{
    279c:	cf 93       	push	r28
    279e:	df 93       	push	r29
    27a0:	ea 01       	movw	r28, r20
	TFT_CS_0;
    27a2:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x,y,x,y);
    27a4:	9b 01       	movw	r18, r22
    27a6:	ac 01       	movw	r20, r24
    27a8:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    27ac:	ce 01       	movw	r24, r28
    27ae:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
	TFT_CS_1;
    27b2:	94 9a       	sbi	0x12, 4	; 18
}
    27b4:	df 91       	pop	r29
    27b6:	cf 91       	pop	r28
    27b8:	08 95       	ret

000027ba <TFT_H_Line>:
	}
}


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
    27ba:	ef 92       	push	r14
    27bc:	ff 92       	push	r15
    27be:	0f 93       	push	r16
    27c0:	1f 93       	push	r17
    27c2:	cf 93       	push	r28
    27c4:	df 93       	push	r29
    27c6:	f8 2e       	mov	r15, r24
    27c8:	e6 2e       	mov	r14, r22
    27ca:	8a 01       	movw	r16, r20
    27cc:	e9 01       	movw	r28, r18
	char k;
	for(k = x1; k <= x2; k++)
    27ce:	68 17       	cp	r22, r24
    27d0:	48 f0       	brcs	.+18     	; 0x27e4 <TFT_H_Line+0x2a>
	{
		TFT_Dot(k,y_pos,color);
    27d2:	ae 01       	movw	r20, r28
    27d4:	b8 01       	movw	r22, r16
    27d6:	8f 2d       	mov	r24, r15
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
	char k;
	for(k = x1; k <= x2; k++)
    27de:	f3 94       	inc	r15
    27e0:	ef 14       	cp	r14, r15
    27e2:	b8 f7       	brcc	.-18     	; 0x27d2 <TFT_H_Line+0x18>
	{
		TFT_Dot(k,y_pos,color);
	}
}
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	1f 91       	pop	r17
    27ea:	0f 91       	pop	r16
    27ec:	ff 90       	pop	r15
    27ee:	ef 90       	pop	r14
    27f0:	08 95       	ret

000027f2 <TFT_V_Line>:

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
    27f2:	cf 92       	push	r12
    27f4:	df 92       	push	r13
    27f6:	ef 92       	push	r14
    27f8:	ff 92       	push	r15
    27fa:	0f 93       	push	r16
    27fc:	1f 93       	push	r17
    27fe:	cf 93       	push	r28
    2800:	df 93       	push	r29
    2802:	ec 01       	movw	r28, r24
    2804:	8b 01       	movw	r16, r22
    2806:	79 01       	movw	r14, r18
	unsigned int k;
	for(k = y1; k <= y2; k++)
    2808:	68 17       	cp	r22, r24
    280a:	79 07       	cpc	r23, r25
    280c:	58 f0       	brcs	.+22     	; 0x2824 <TFT_V_Line+0x32>
	{
		TFT_Dot(x_pos,k,color);
    280e:	c4 2e       	mov	r12, r20
    2810:	d1 2c       	mov	r13, r1
    2812:	a7 01       	movw	r20, r14
    2814:	be 01       	movw	r22, r28
    2816:	c6 01       	movw	r24, r12
    2818:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
}

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
	unsigned int k;
	for(k = y1; k <= y2; k++)
    281c:	21 96       	adiw	r28, 0x01	; 1
    281e:	0c 17       	cp	r16, r28
    2820:	1d 07       	cpc	r17, r29
    2822:	b8 f7       	brcc	.-18     	; 0x2812 <TFT_V_Line+0x20>
	{
		TFT_Dot(x_pos,k,color);
	}
}
    2824:	df 91       	pop	r29
    2826:	cf 91       	pop	r28
    2828:	1f 91       	pop	r17
    282a:	0f 91       	pop	r16
    282c:	ff 90       	pop	r15
    282e:	ef 90       	pop	r14
    2830:	df 90       	pop	r13
    2832:	cf 90       	pop	r12
    2834:	08 95       	ret

00002836 <TFT_Rectangle>:

void TFT_Rectangle(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    2836:	cf 92       	push	r12
    2838:	df 92       	push	r13
    283a:	ef 92       	push	r14
    283c:	ff 92       	push	r15
    283e:	0f 93       	push	r16
    2840:	1f 93       	push	r17
    2842:	cf 93       	push	r28
    2844:	df 93       	push	r29
    2846:	c8 2e       	mov	r12, r24
    2848:	eb 01       	movw	r28, r22
    284a:	d4 2e       	mov	r13, r20
    284c:	79 01       	movw	r14, r18
	TFT_H_Line(x1,x2,y1,color);
    284e:	98 01       	movw	r18, r16
    2850:	ab 01       	movw	r20, r22
    2852:	6d 2d       	mov	r22, r13
    2854:	0e 94 dd 13 	call	0x27ba	; 0x27ba <TFT_H_Line>
	TFT_H_Line(x1,x2,y2,color);
    2858:	98 01       	movw	r18, r16
    285a:	a7 01       	movw	r20, r14
    285c:	6d 2d       	mov	r22, r13
    285e:	8c 2d       	mov	r24, r12
    2860:	0e 94 dd 13 	call	0x27ba	; 0x27ba <TFT_H_Line>
	TFT_V_Line(y1,y2,x1,color);
    2864:	98 01       	movw	r18, r16
    2866:	4c 2d       	mov	r20, r12
    2868:	b7 01       	movw	r22, r14
    286a:	ce 01       	movw	r24, r28
    286c:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <TFT_V_Line>
	TFT_V_Line(y1,y2,x2,color);
    2870:	98 01       	movw	r18, r16
    2872:	4d 2d       	mov	r20, r13
    2874:	b7 01       	movw	r22, r14
    2876:	ce 01       	movw	r24, r28
    2878:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <TFT_V_Line>
}
    287c:	df 91       	pop	r29
    287e:	cf 91       	pop	r28
    2880:	1f 91       	pop	r17
    2882:	0f 91       	pop	r16
    2884:	ff 90       	pop	r15
    2886:	ef 90       	pop	r14
    2888:	df 90       	pop	r13
    288a:	cf 90       	pop	r12
    288c:	08 95       	ret

0000288e <TFT_Char>:
		}
	}
}

void TFT_Char(char C,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    288e:	2f 92       	push	r2
    2890:	3f 92       	push	r3
    2892:	4f 92       	push	r4
    2894:	5f 92       	push	r5
    2896:	6f 92       	push	r6
    2898:	7f 92       	push	r7
    289a:	8f 92       	push	r8
    289c:	9f 92       	push	r9
    289e:	af 92       	push	r10
    28a0:	bf 92       	push	r11
    28a2:	cf 92       	push	r12
    28a4:	df 92       	push	r13
    28a6:	ef 92       	push	r14
    28a8:	ff 92       	push	r15
    28aa:	0f 93       	push	r16
    28ac:	1f 93       	push	r17
    28ae:	cf 93       	push	r28
    28b0:	df 93       	push	r29
    28b2:	cd b7       	in	r28, 0x3d	; 61
    28b4:	de b7       	in	r29, 0x3e	; 62
    28b6:	ae 97       	sbiw	r28, 0x2e	; 46
    28b8:	0f b6       	in	r0, 0x3f	; 63
    28ba:	f8 94       	cli
    28bc:	de bf       	out	0x3e, r29	; 62
    28be:	0f be       	out	0x3f, r0	; 63
    28c0:	cd bf       	out	0x3d, r28	; 61
    28c2:	7a a7       	std	Y+42, r23	; 0x2a
    28c4:	69 a7       	std	Y+41, r22	; 0x29
    28c6:	5a 01       	movw	r10, r20
    28c8:	28 01       	movw	r4, r16
	unsigned int font16x16[16];
	unsigned int x_new;
	unsigned char k,i,print1,print2;  //edited breb LINE: char k,i,x_new,x_old,print1,print2;
	unsigned int print3,print4;

	if(DimFont == 8)
    28ca:	28 30       	cpi	r18, 0x08	; 8
    28cc:	09 f0       	breq	.+2      	; 0x28d0 <TFT_Char+0x42>
    28ce:	62 c0       	rjmp	.+196    	; 0x2994 <TFT_Char+0x106>
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
    28d0:	08 2f       	mov	r16, r24
    28d2:	10 e0       	ldi	r17, 0x00	; 0
    28d4:	00 0f       	add	r16, r16
    28d6:	11 1f       	adc	r17, r17
    28d8:	00 0f       	add	r16, r16
    28da:	11 1f       	adc	r17, r17
    28dc:	00 0f       	add	r16, r16
    28de:	11 1f       	adc	r17, r17
		PtrFont = PtrFont + Cptrfont;
    28e0:	0c 5c       	subi	r16, 0xCC	; 204
    28e2:	14 4f       	sbci	r17, 0xF4	; 244

		TFT_Set_Address(x,y,x,y);
    28e4:	9a 01       	movw	r18, r20
    28e6:	ab 01       	movw	r20, r22
    28e8:	b5 01       	movw	r22, r10
    28ea:	ca 01       	movw	r24, r20
    28ec:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    28f0:	ce 01       	movw	r24, r28
    28f2:	09 96       	adiw	r24, 0x09	; 9
    28f4:	de 01       	movw	r26, r28
    28f6:	11 96       	adiw	r26, 0x01	; 1
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
    28f8:	f8 01       	movw	r30, r16
    28fa:	24 91       	lpm	r18, Z
    28fc:	2d 93       	st	X+, r18
			PtrFont++;
    28fe:	0f 5f       	subi	r16, 0xFF	; 255
    2900:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
    2902:	a8 17       	cp	r26, r24
    2904:	b9 07       	cpc	r27, r25
    2906:	c1 f7       	brne	.-16     	; 0x28f8 <TFT_Char+0x6a>
    2908:	c5 01       	movw	r24, r10
    290a:	08 96       	adiw	r24, 0x08	; 8
    290c:	9c a7       	std	Y+44, r25	; 0x2c
    290e:	8b a7       	std	Y+43, r24	; 0x2b
    2910:	fe 01       	movw	r30, r28
    2912:	31 96       	adiw	r30, 0x01	; 1
    2914:	1f 01       	movw	r2, r30
    2916:	65 01       	movw	r12, r10
    2918:	89 a5       	ldd	r24, Y+41	; 0x29
    291a:	9a a5       	ldd	r25, Y+42	; 0x2a
    291c:	01 96       	adiw	r24, 0x01	; 1
    291e:	9e a7       	std	Y+46, r25	; 0x2e
    2920:	8d a7       	std	Y+45, r24	; 0x2d
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    2922:	61 2c       	mov	r6, r1
    2924:	32 c0       	rjmp	.+100    	; 0x298a <TFT_Char+0xfc>
    2926:	c8 01       	movw	r24, r16
    2928:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
			{
				print1 = (font8x8[i] & 0x80);
    292a:	f1 01       	movw	r30, r2
    292c:	20 81       	ld	r18, Z
				print2 = print1 >>7;
				if(print2 == 1)
    292e:	22 23       	and	r18, r18
    2930:	2c f4       	brge	.+10     	; 0x293c <TFT_Char+0xae>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    2932:	a2 01       	movw	r20, r4
    2934:	b6 01       	movw	r22, r12
    2936:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
    293a:	0a c0       	rjmp	.+20     	; 0x2950 <TFT_Char+0xc2>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    293c:	a7 01       	movw	r20, r14
    293e:	b6 01       	movw	r22, r12
    2940:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    2944:	95 01       	movw	r18, r10
    2946:	a8 01       	movw	r20, r16
    2948:	b5 01       	movw	r22, r10
    294a:	c8 01       	movw	r24, r16
    294c:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
				}
				font8x8[i] = font8x8[i] << 1;
    2950:	f4 01       	movw	r30, r8
    2952:	80 81       	ld	r24, Z
    2954:	88 0f       	add	r24, r24
    2956:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
    2958:	73 94       	inc	r7
    295a:	0f 5f       	subi	r16, 0xFF	; 255
    295c:	1f 4f       	sbci	r17, 0xFF	; 255
    295e:	f8 e0       	ldi	r31, 0x08	; 8
    2960:	7f 12       	cpse	r7, r31
    2962:	e1 cf       	rjmp	.-62     	; 0x2926 <TFT_Char+0x98>
					TFT_Set_Address(x_new,y,x_new,y);
				}
				font8x8[i] = font8x8[i] << 1;
			}

			y_new++;
    2964:	8f ef       	ldi	r24, 0xFF	; 255
    2966:	c8 1a       	sub	r12, r24
    2968:	d8 0a       	sbc	r13, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    296a:	96 01       	movw	r18, r12
    296c:	49 a5       	ldd	r20, Y+41	; 0x29
    296e:	5a a5       	ldd	r21, Y+42	; 0x2a
    2970:	b6 01       	movw	r22, r12
    2972:	ca 01       	movw	r24, r20
    2974:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    2978:	9f ef       	ldi	r25, 0xFF	; 255
    297a:	29 1a       	sub	r2, r25
    297c:	39 0a       	sbc	r3, r25
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
    297e:	eb a5       	ldd	r30, Y+43	; 0x2b
    2980:	fc a5       	ldd	r31, Y+44	; 0x2c
    2982:	ce 16       	cp	r12, r30
    2984:	df 06       	cpc	r13, r31
    2986:	09 f4       	brne	.+2      	; 0x298a <TFT_Char+0xfc>
    2988:	73 c0       	rjmp	.+230    	; 0x2a70 <TFT_Char+0x1e2>
    298a:	0d a5       	ldd	r16, Y+45	; 0x2d
    298c:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    298e:	76 2c       	mov	r7, r6
    2990:	41 01       	movw	r8, r2
    2992:	c9 cf       	rjmp	.-110    	; 0x2926 <TFT_Char+0x98>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

	else if(DimFont == 16)
    2994:	20 31       	cpi	r18, 0x10	; 16
    2996:	09 f0       	breq	.+2      	; 0x299a <TFT_Char+0x10c>
    2998:	6b c0       	rjmp	.+214    	; 0x2a70 <TFT_Char+0x1e2>
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
    299a:	f0 e2       	ldi	r31, 0x20	; 32
    299c:	8f 9f       	mul	r24, r31
    299e:	80 01       	movw	r16, r0
    29a0:	11 24       	eor	r1, r1
		PtrFont = PtrFont + Cptrfont;
    29a2:	0c 5a       	subi	r16, 0xAC	; 172
    29a4:	13 40       	sbci	r17, 0x03	; 3

		TFT_Set_Address(x,y,x,y);
    29a6:	9a 01       	movw	r18, r20
    29a8:	49 a5       	ldd	r20, Y+41	; 0x29
    29aa:	5a a5       	ldd	r21, Y+42	; 0x2a
    29ac:	b5 01       	movw	r22, r10
    29ae:	ca 01       	movw	r24, r20
    29b0:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    29b4:	98 01       	movw	r18, r16
    29b6:	20 5e       	subi	r18, 0xE0	; 224
    29b8:	3f 4f       	sbci	r19, 0xFF	; 255
    29ba:	de 01       	movw	r26, r28
    29bc:	19 96       	adiw	r26, 0x09	; 9
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    29be:	f8 01       	movw	r30, r16
    29c0:	84 91       	lpm	r24, Z
    29c2:	31 96       	adiw	r30, 0x01	; 1
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    29c4:	e4 91       	lpm	r30, Z
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    29c6:	90 e0       	ldi	r25, 0x00	; 0
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
    29c8:	98 2f       	mov	r25, r24
    29ca:	88 27       	eor	r24, r24
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    29cc:	8e 0f       	add	r24, r30
    29ce:	91 1d       	adc	r25, r1
    29d0:	8d 93       	st	X+, r24
    29d2:	9d 93       	st	X+, r25
    29d4:	0e 5f       	subi	r16, 0xFE	; 254
    29d6:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
    29d8:	20 17       	cp	r18, r16
    29da:	31 07       	cpc	r19, r17
    29dc:	81 f7       	brne	.-32     	; 0x29be <TFT_Char+0x130>
    29de:	c5 01       	movw	r24, r10
    29e0:	40 96       	adiw	r24, 0x10	; 16
    29e2:	9c a7       	std	Y+44, r25	; 0x2c
    29e4:	8b a7       	std	Y+43, r24	; 0x2b
    29e6:	fe 01       	movw	r30, r28
    29e8:	39 96       	adiw	r30, 0x09	; 9
    29ea:	3f 01       	movw	r6, r30
    29ec:	45 01       	movw	r8, r10
    29ee:	89 a5       	ldd	r24, Y+41	; 0x29
    29f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    29f2:	01 96       	adiw	r24, 0x01	; 1
    29f4:	9e a7       	std	Y+46, r25	; 0x2e
    29f6:	8d a7       	std	Y+45, r24	; 0x2d
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    29f8:	21 2c       	mov	r2, r1
    29fa:	35 c0       	rjmp	.+106    	; 0x2a66 <TFT_Char+0x1d8>
    29fc:	c8 01       	movw	r24, r16
    29fe:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
			{
				print3 = (font16x16[i] & 0x8000);
    2a00:	f3 01       	movw	r30, r6
    2a02:	20 81       	ld	r18, Z
    2a04:	31 81       	ldd	r19, Z+1	; 0x01
				print4 = print3 >>15;

				if(print4 == 1)
    2a06:	33 23       	and	r19, r19
    2a08:	2c f4       	brge	.+10     	; 0x2a14 <TFT_Char+0x186>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    2a0a:	a2 01       	movw	r20, r4
    2a0c:	b4 01       	movw	r22, r8
    2a0e:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
    2a12:	0a c0       	rjmp	.+20     	; 0x2a28 <TFT_Char+0x19a>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    2a14:	a7 01       	movw	r20, r14
    2a16:	b4 01       	movw	r22, r8
    2a18:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    2a1c:	95 01       	movw	r18, r10
    2a1e:	a8 01       	movw	r20, r16
    2a20:	b5 01       	movw	r22, r10
    2a22:	c8 01       	movw	r24, r16
    2a24:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
				}

				font16x16[i] = font16x16[i] << 1;
    2a28:	f6 01       	movw	r30, r12
    2a2a:	80 81       	ld	r24, Z
    2a2c:	91 81       	ldd	r25, Z+1	; 0x01
    2a2e:	88 0f       	add	r24, r24
    2a30:	99 1f       	adc	r25, r25
    2a32:	91 83       	std	Z+1, r25	; 0x01
    2a34:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
    2a36:	33 94       	inc	r3
    2a38:	0f 5f       	subi	r16, 0xFF	; 255
    2a3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a3c:	f0 e1       	ldi	r31, 0x10	; 16
    2a3e:	3f 12       	cpse	r3, r31
    2a40:	dd cf       	rjmp	.-70     	; 0x29fc <TFT_Char+0x16e>
				}

				font16x16[i] = font16x16[i] << 1;
			}

			y_new++;
    2a42:	8f ef       	ldi	r24, 0xFF	; 255
    2a44:	88 1a       	sub	r8, r24
    2a46:	98 0a       	sbc	r9, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    2a48:	94 01       	movw	r18, r8
    2a4a:	49 a5       	ldd	r20, Y+41	; 0x29
    2a4c:	5a a5       	ldd	r21, Y+42	; 0x2a
    2a4e:	b4 01       	movw	r22, r8
    2a50:	ca 01       	movw	r24, r20
    2a52:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    2a56:	92 e0       	ldi	r25, 0x02	; 2
    2a58:	69 0e       	add	r6, r25
    2a5a:	71 1c       	adc	r7, r1
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
    2a5c:	eb a5       	ldd	r30, Y+43	; 0x2b
    2a5e:	fc a5       	ldd	r31, Y+44	; 0x2c
    2a60:	8e 16       	cp	r8, r30
    2a62:	9f 06       	cpc	r9, r31
    2a64:	29 f0       	breq	.+10     	; 0x2a70 <TFT_Char+0x1e2>
    2a66:	0d a5       	ldd	r16, Y+45	; 0x2d
    2a68:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    2a6a:	32 2c       	mov	r3, r2
    2a6c:	63 01       	movw	r12, r6
    2a6e:	c6 cf       	rjmp	.-116    	; 0x29fc <TFT_Char+0x16e>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

}
    2a70:	ae 96       	adiw	r28, 0x2e	; 46
    2a72:	0f b6       	in	r0, 0x3f	; 63
    2a74:	f8 94       	cli
    2a76:	de bf       	out	0x3e, r29	; 62
    2a78:	0f be       	out	0x3f, r0	; 63
    2a7a:	cd bf       	out	0x3d, r28	; 61
    2a7c:	df 91       	pop	r29
    2a7e:	cf 91       	pop	r28
    2a80:	1f 91       	pop	r17
    2a82:	0f 91       	pop	r16
    2a84:	ff 90       	pop	r15
    2a86:	ef 90       	pop	r14
    2a88:	df 90       	pop	r13
    2a8a:	cf 90       	pop	r12
    2a8c:	bf 90       	pop	r11
    2a8e:	af 90       	pop	r10
    2a90:	9f 90       	pop	r9
    2a92:	8f 90       	pop	r8
    2a94:	7f 90       	pop	r7
    2a96:	6f 90       	pop	r6
    2a98:	5f 90       	pop	r5
    2a9a:	4f 90       	pop	r4
    2a9c:	3f 90       	pop	r3
    2a9e:	2f 90       	pop	r2
    2aa0:	08 95       	ret

00002aa2 <TFT_Text>:

void TFT_Text(const char* S,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    2aa2:	2f 92       	push	r2
    2aa4:	3f 92       	push	r3
    2aa6:	4f 92       	push	r4
    2aa8:	5f 92       	push	r5
    2aaa:	6f 92       	push	r6
    2aac:	7f 92       	push	r7
    2aae:	8f 92       	push	r8
    2ab0:	9f 92       	push	r9
    2ab2:	af 92       	push	r10
    2ab4:	bf 92       	push	r11
    2ab6:	cf 92       	push	r12
    2ab8:	df 92       	push	r13
    2aba:	ef 92       	push	r14
    2abc:	ff 92       	push	r15
    2abe:	0f 93       	push	r16
    2ac0:	1f 93       	push	r17
    2ac2:	cf 93       	push	r28
    2ac4:	df 93       	push	r29
    2ac6:	cd b7       	in	r28, 0x3d	; 61
    2ac8:	de b7       	in	r29, 0x3e	; 62
    2aca:	6a 97       	sbiw	r28, 0x1a	; 26
    2acc:	0f b6       	in	r0, 0x3f	; 63
    2ace:	f8 94       	cli
    2ad0:	de bf       	out	0x3e, r29	; 62
    2ad2:	0f be       	out	0x3f, r0	; 63
    2ad4:	cd bf       	out	0x3d, r28	; 61
    2ad6:	6b 01       	movw	r12, r22
    2ad8:	1a 01       	movw	r2, r20
    2ada:	28 01       	movw	r4, r16
    2adc:	47 01       	movw	r8, r14
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);
    2ade:	fc 01       	movw	r30, r24
    2ae0:	01 90       	ld	r0, Z+
    2ae2:	00 20       	and	r0, r0
    2ae4:	e9 f7       	brne	.-6      	; 0x2ae0 <TFT_Text+0x3e>
    2ae6:	af 01       	movw	r20, r30
    2ae8:	48 1b       	sub	r20, r24
    2aea:	59 0b       	sbc	r21, r25

	for(k = 0; k <= (lenght - 1); k++)
    2aec:	ba 01       	movw	r22, r20
    2aee:	62 50       	subi	r22, 0x02	; 2
    2af0:	71 09       	sbc	r23, r1
    2af2:	5b 01       	movw	r10, r22
    2af4:	77 23       	and	r23, r23
    2af6:	0c f4       	brge	.+2      	; 0x2afa <TFT_Text+0x58>
    2af8:	4c c0       	rjmp	.+152    	; 0x2b92 <TFT_Text+0xf0>
    2afa:	dc 01       	movw	r26, r24
    2afc:	fe 01       	movw	r30, r28
    2afe:	31 96       	adiw	r30, 0x01	; 1
    2b00:	40 e0       	ldi	r20, 0x00	; 0
    2b02:	50 e0       	ldi	r21, 0x00	; 0
	{
		buffer[k] = S[k];
    2b04:	8d 91       	ld	r24, X+
    2b06:	81 93       	st	Z+, r24
{
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);

	for(k = 0; k <= (lenght - 1); k++)
    2b08:	4f 5f       	subi	r20, 0xFF	; 255
    2b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b0c:	a4 16       	cp	r10, r20
    2b0e:	b5 06       	cpc	r11, r21
    2b10:	cc f7       	brge	.-14     	; 0x2b04 <TFT_Text+0x62>
    2b12:	3c c0       	rjmp	.+120    	; 0x2b8c <TFT_Text+0xea>
    2b14:	ce 01       	movw	r24, r28
    2b16:	01 96       	adiw	r24, 0x01	; 1
    2b18:	9a 8f       	std	Y+26, r25	; 0x1a
    2b1a:	89 8f       	std	Y+25, r24	; 0x19
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    2b1c:	61 2c       	mov	r6, r1
    2b1e:	71 2c       	mov	r7, r1
	{
		for(k = 0; k <= (lenght - 1); k++)
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    2b20:	74 01       	movw	r14, r8
    2b22:	82 01       	movw	r16, r4
    2b24:	28 e0       	ldi	r18, 0x08	; 8
    2b26:	a1 01       	movw	r20, r2
    2b28:	b6 01       	movw	r22, r12
    2b2a:	e9 8d       	ldd	r30, Y+25	; 0x19
    2b2c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2b2e:	81 91       	ld	r24, Z+
    2b30:	fa 8f       	std	Y+26, r31	; 0x1a
    2b32:	e9 8f       	std	Y+25, r30	; 0x19
    2b34:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
			x = x + 8;
    2b38:	f8 e0       	ldi	r31, 0x08	; 8
    2b3a:	cf 0e       	add	r12, r31
    2b3c:	d1 1c       	adc	r13, r1
		buffer[k] = S[k];
	}

	if(DimFont == 8)
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b3e:	6f ef       	ldi	r22, 0xFF	; 255
    2b40:	66 1a       	sub	r6, r22
    2b42:	76 0a       	sbc	r7, r22
    2b44:	a6 14       	cp	r10, r6
    2b46:	b7 04       	cpc	r11, r7
    2b48:	5c f7       	brge	.-42     	; 0x2b20 <TFT_Text+0x7e>
    2b4a:	25 c0       	rjmp	.+74     	; 0x2b96 <TFT_Text+0xf4>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 8;
		}
	}
	else if(DimFont == 16)
    2b4c:	20 31       	cpi	r18, 0x10	; 16
    2b4e:	19 f5       	brne	.+70     	; 0x2b96 <TFT_Text+0xf4>
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b50:	bb 20       	and	r11, r11
    2b52:	0c f1       	brlt	.+66     	; 0x2b96 <TFT_Text+0xf4>
    2b54:	ce 01       	movw	r24, r28
    2b56:	01 96       	adiw	r24, 0x01	; 1
    2b58:	9a 8f       	std	Y+26, r25	; 0x1a
    2b5a:	89 8f       	std	Y+25, r24	; 0x19
    2b5c:	61 2c       	mov	r6, r1
    2b5e:	71 2c       	mov	r7, r1
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    2b60:	74 01       	movw	r14, r8
    2b62:	82 01       	movw	r16, r4
    2b64:	20 e1       	ldi	r18, 0x10	; 16
    2b66:	a1 01       	movw	r20, r2
    2b68:	b6 01       	movw	r22, r12
    2b6a:	e9 8d       	ldd	r30, Y+25	; 0x19
    2b6c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2b6e:	81 91       	ld	r24, Z+
    2b70:	fa 8f       	std	Y+26, r31	; 0x1a
    2b72:	e9 8f       	std	Y+25, r30	; 0x19
    2b74:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
			x = x + 14;  //default is 16 but 14 is to minimize the space
    2b78:	fe e0       	ldi	r31, 0x0E	; 14
    2b7a:	cf 0e       	add	r12, r31
    2b7c:	d1 1c       	adc	r13, r1
			x = x + 8;
		}
	}
	else if(DimFont == 16)
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b7e:	6f ef       	ldi	r22, 0xFF	; 255
    2b80:	66 1a       	sub	r6, r22
    2b82:	76 0a       	sbc	r7, r22
    2b84:	a6 14       	cp	r10, r6
    2b86:	b7 04       	cpc	r11, r7
    2b88:	5c f7       	brge	.-42     	; 0x2b60 <TFT_Text+0xbe>
    2b8a:	05 c0       	rjmp	.+10     	; 0x2b96 <TFT_Text+0xf4>
	for(k = 0; k <= (lenght - 1); k++)
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    2b8c:	28 30       	cpi	r18, 0x08	; 8
    2b8e:	f1 f6       	brne	.-68     	; 0x2b4c <TFT_Text+0xaa>
    2b90:	c1 cf       	rjmp	.-126    	; 0x2b14 <TFT_Text+0x72>
    2b92:	28 30       	cpi	r18, 0x08	; 8
    2b94:	d9 f6       	brne	.-74     	; 0x2b4c <TFT_Text+0xaa>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 14;  //default is 16 but 14 is to minimize the space
		}
	}
}
    2b96:	6a 96       	adiw	r28, 0x1a	; 26
    2b98:	0f b6       	in	r0, 0x3f	; 63
    2b9a:	f8 94       	cli
    2b9c:	de bf       	out	0x3e, r29	; 62
    2b9e:	0f be       	out	0x3f, r0	; 63
    2ba0:	cd bf       	out	0x3d, r28	; 61
    2ba2:	df 91       	pop	r29
    2ba4:	cf 91       	pop	r28
    2ba6:	1f 91       	pop	r17
    2ba8:	0f 91       	pop	r16
    2baa:	ff 90       	pop	r15
    2bac:	ef 90       	pop	r14
    2bae:	df 90       	pop	r13
    2bb0:	cf 90       	pop	r12
    2bb2:	bf 90       	pop	r11
    2bb4:	af 90       	pop	r10
    2bb6:	9f 90       	pop	r9
    2bb8:	8f 90       	pop	r8
    2bba:	7f 90       	pop	r7
    2bbc:	6f 90       	pop	r6
    2bbe:	5f 90       	pop	r5
    2bc0:	4f 90       	pop	r4
    2bc2:	3f 90       	pop	r3
    2bc4:	2f 90       	pop	r2
    2bc6:	08 95       	ret

00002bc8 <TFT_PutsInt>:

void TFT_PutsInt(int32_t val,signed int field_length,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    2bc8:	2f 92       	push	r2
    2bca:	3f 92       	push	r3
    2bcc:	4f 92       	push	r4
    2bce:	5f 92       	push	r5
    2bd0:	6f 92       	push	r6
    2bd2:	7f 92       	push	r7
    2bd4:	8f 92       	push	r8
    2bd6:	9f 92       	push	r9
    2bd8:	af 92       	push	r10
    2bda:	bf 92       	push	r11
    2bdc:	cf 92       	push	r12
    2bde:	df 92       	push	r13
    2be0:	ef 92       	push	r14
    2be2:	ff 92       	push	r15
    2be4:	0f 93       	push	r16
    2be6:	1f 93       	push	r17
    2be8:	cf 93       	push	r28
    2bea:	df 93       	push	r29
    2bec:	cd b7       	in	r28, 0x3d	; 61
    2bee:	de b7       	in	r29, 0x3e	; 62
    2bf0:	2b 97       	sbiw	r28, 0x0b	; 11
    2bf2:	0f b6       	in	r0, 0x3f	; 63
    2bf4:	f8 94       	cli
    2bf6:	de bf       	out	0x3e, r29	; 62
    2bf8:	0f be       	out	0x3f, r0	; 63
    2bfa:	cd bf       	out	0x3d, r28	; 61
    2bfc:	3a 01       	movw	r6, r20
    2bfe:	49 01       	movw	r8, r18
    2c00:	18 01       	movw	r2, r16
    2c02:	eb 86       	std	Y+11, r14	; 0x0b
    2c04:	26 01       	movw	r4, r12
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
    2c06:	fe 01       	movw	r30, r28
    2c08:	31 96       	adiw	r30, 0x01	; 1
    2c0a:	2a e0       	ldi	r18, 0x0A	; 10
    2c0c:	df 01       	movw	r26, r30
    2c0e:	1d 92       	st	X+, r1
    2c10:	2a 95       	dec	r18
    2c12:	e9 f7       	brne	.-6      	; 0x2c0e <TFT_PutsInt+0x46>
	int i=9,j=0;
	while(val)
    2c14:	61 15       	cp	r22, r1
    2c16:	71 05       	cpc	r23, r1
    2c18:	81 05       	cpc	r24, r1
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	c9 f0       	breq	.+50     	; 0x2c50 <TFT_PutsInt+0x88>
    2c1e:	6e 01       	movw	r12, r28
    2c20:	bb e0       	ldi	r27, 0x0B	; 11
    2c22:	cb 0e       	add	r12, r27
    2c24:	d1 1c       	adc	r13, r1
	{
		str[i]=val%10;
    2c26:	1a e0       	ldi	r17, 0x0A	; 10
    2c28:	e1 2e       	mov	r14, r17
    2c2a:	f1 2c       	mov	r15, r1
    2c2c:	00 e0       	ldi	r16, 0x00	; 0
    2c2e:	10 e0       	ldi	r17, 0x00	; 0
    2c30:	a8 01       	movw	r20, r16
    2c32:	97 01       	movw	r18, r14
    2c34:	0e 94 7a 2d 	call	0x5af4	; 0x5af4 <__divmodsi4>
    2c38:	f6 01       	movw	r30, r12
    2c3a:	62 93       	st	-Z, r22
    2c3c:	6f 01       	movw	r12, r30
		val=val/10;
    2c3e:	62 2f       	mov	r22, r18
    2c40:	73 2f       	mov	r23, r19
    2c42:	84 2f       	mov	r24, r20
    2c44:	95 2f       	mov	r25, r21
{
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
	int i=9,j=0;
	while(val)
    2c46:	61 15       	cp	r22, r1
    2c48:	71 05       	cpc	r23, r1
    2c4a:	81 05       	cpc	r24, r1
    2c4c:	91 05       	cpc	r25, r1
    2c4e:	81 f7       	brne	.-32     	; 0x2c30 <TFT_PutsInt+0x68>
	{
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
    2c50:	ff ef       	ldi	r31, 0xFF	; 255
    2c52:	6f 16       	cp	r6, r31
    2c54:	7f 06       	cpc	r7, r31
    2c56:	71 f4       	brne	.+28     	; 0x2c74 <TFT_PutsInt+0xac>
	while(str[j]==0) j++;
    2c58:	29 81       	ldd	r18, Y+1	; 0x01
    2c5a:	21 11       	cpse	r18, r1
    2c5c:	11 c0       	rjmp	.+34     	; 0x2c80 <TFT_PutsInt+0xb8>
    2c5e:	fe 01       	movw	r30, r28
    2c60:	32 96       	adiw	r30, 0x02	; 2
    2c62:	c1 2c       	mov	r12, r1
    2c64:	d1 2c       	mov	r13, r1
    2c66:	2f ef       	ldi	r18, 0xFF	; 255
    2c68:	c2 1a       	sub	r12, r18
    2c6a:	d2 0a       	sbc	r13, r18
    2c6c:	21 91       	ld	r18, Z+
    2c6e:	22 23       	and	r18, r18
    2c70:	d1 f3       	breq	.-12     	; 0x2c66 <TFT_PutsInt+0x9e>
    2c72:	08 c0       	rjmp	.+16     	; 0x2c84 <TFT_PutsInt+0xbc>
	else
	j=10-field_length;
    2c74:	2a e0       	ldi	r18, 0x0A	; 10
    2c76:	30 e0       	ldi	r19, 0x00	; 0
    2c78:	69 01       	movw	r12, r18
    2c7a:	c6 18       	sub	r12, r6
    2c7c:	d7 08       	sbc	r13, r7
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <TFT_PutsInt+0xbc>
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
	while(str[j]==0) j++;
    2c80:	c1 2c       	mov	r12, r1
    2c82:	d1 2c       	mov	r13, r1
	else
	j=10-field_length;

	if(val<0)
    2c84:	99 23       	and	r25, r25
    2c86:	ac f4       	brge	.+42     	; 0x2cb2 <TFT_PutsInt+0xea>
	{
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
    2c88:	75 01       	movw	r14, r10
    2c8a:	82 01       	movw	r16, r4
    2c8c:	2b 85       	ldd	r18, Y+11	; 0x0b
    2c8e:	a1 01       	movw	r20, r2
    2c90:	b4 01       	movw	r22, r8
    2c92:	8d e2       	ldi	r24, 0x2D	; 45
    2c94:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
		if(DimFont == 8) x+=8;
    2c98:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c9a:	88 30       	cpi	r24, 0x08	; 8
    2c9c:	21 f4       	brne	.+8      	; 0x2ca6 <TFT_PutsInt+0xde>
    2c9e:	98 e0       	ldi	r25, 0x08	; 8
    2ca0:	89 0e       	add	r8, r25
    2ca2:	91 1c       	adc	r9, r1
    2ca4:	06 c0       	rjmp	.+12     	; 0x2cb2 <TFT_PutsInt+0xea>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    2ca6:	ab 85       	ldd	r26, Y+11	; 0x0b
    2ca8:	a0 31       	cpi	r26, 0x10	; 16
    2caa:	19 f4       	brne	.+6      	; 0x2cb2 <TFT_PutsInt+0xea>
    2cac:	be e0       	ldi	r27, 0x0E	; 14
    2cae:	8b 0e       	add	r8, r27
    2cb0:	91 1c       	adc	r9, r1
	}

	for(i=j;i<10;i++)
    2cb2:	ea e0       	ldi	r30, 0x0A	; 10
    2cb4:	ce 16       	cp	r12, r30
    2cb6:	d1 04       	cpc	r13, r1
    2cb8:	2c f5       	brge	.+74     	; 0x2d04 <TFT_PutsInt+0x13c>
    2cba:	81 e0       	ldi	r24, 0x01	; 1
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	8c 0f       	add	r24, r28
    2cc0:	9d 1f       	adc	r25, r29
    2cc2:	c8 0e       	add	r12, r24
    2cc4:	d9 1e       	adc	r13, r25
    2cc6:	3e 01       	movw	r6, r28
    2cc8:	9b e0       	ldi	r25, 0x0B	; 11
    2cca:	69 0e       	add	r6, r25
    2ccc:	71 1c       	adc	r7, r1
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
    2cce:	d6 01       	movw	r26, r12
    2cd0:	8d 91       	ld	r24, X+
    2cd2:	6d 01       	movw	r12, r26
    2cd4:	75 01       	movw	r14, r10
    2cd6:	82 01       	movw	r16, r4
    2cd8:	2b 85       	ldd	r18, Y+11	; 0x0b
    2cda:	a1 01       	movw	r20, r2
    2cdc:	b4 01       	movw	r22, r8
    2cde:	80 5d       	subi	r24, 0xD0	; 208
    2ce0:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
		if(DimFont == 8) x+=8;
    2ce4:	bb 85       	ldd	r27, Y+11	; 0x0b
    2ce6:	b8 30       	cpi	r27, 0x08	; 8
    2ce8:	21 f4       	brne	.+8      	; 0x2cf2 <TFT_PutsInt+0x12a>
    2cea:	e8 e0       	ldi	r30, 0x08	; 8
    2cec:	8e 0e       	add	r8, r30
    2cee:	91 1c       	adc	r9, r1
    2cf0:	06 c0       	rjmp	.+12     	; 0x2cfe <TFT_PutsInt+0x136>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    2cf2:	fb 85       	ldd	r31, Y+11	; 0x0b
    2cf4:	f0 31       	cpi	r31, 0x10	; 16
    2cf6:	19 f4       	brne	.+6      	; 0x2cfe <TFT_PutsInt+0x136>
    2cf8:	2e e0       	ldi	r18, 0x0E	; 14
    2cfa:	82 0e       	add	r8, r18
    2cfc:	91 1c       	adc	r9, r1
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}

	for(i=j;i<10;i++)
    2cfe:	c6 14       	cp	r12, r6
    2d00:	d7 04       	cpc	r13, r7
    2d02:	29 f7       	brne	.-54     	; 0x2cce <TFT_PutsInt+0x106>
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}
}
    2d04:	2b 96       	adiw	r28, 0x0b	; 11
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	df 91       	pop	r29
    2d12:	cf 91       	pop	r28
    2d14:	1f 91       	pop	r17
    2d16:	0f 91       	pop	r16
    2d18:	ff 90       	pop	r15
    2d1a:	ef 90       	pop	r14
    2d1c:	df 90       	pop	r13
    2d1e:	cf 90       	pop	r12
    2d20:	bf 90       	pop	r11
    2d22:	af 90       	pop	r10
    2d24:	9f 90       	pop	r9
    2d26:	8f 90       	pop	r8
    2d28:	7f 90       	pop	r7
    2d2a:	6f 90       	pop	r6
    2d2c:	5f 90       	pop	r5
    2d2e:	4f 90       	pop	r4
    2d30:	3f 90       	pop	r3
    2d32:	2f 90       	pop	r2
    2d34:	08 95       	ret

00002d36 <TFT_Image>:


void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
    2d36:	2f 92       	push	r2
    2d38:	3f 92       	push	r3
    2d3a:	4f 92       	push	r4
    2d3c:	5f 92       	push	r5
    2d3e:	6f 92       	push	r6
    2d40:	7f 92       	push	r7
    2d42:	8f 92       	push	r8
    2d44:	9f 92       	push	r9
    2d46:	af 92       	push	r10
    2d48:	bf 92       	push	r11
    2d4a:	cf 92       	push	r12
    2d4c:	df 92       	push	r13
    2d4e:	ef 92       	push	r14
    2d50:	ff 92       	push	r15
    2d52:	0f 93       	push	r16
    2d54:	1f 93       	push	r17
    2d56:	cf 93       	push	r28
    2d58:	df 93       	push	r29
    2d5a:	4c 01       	movw	r8, r24
    2d5c:	6b 01       	movw	r12, r22
	unsigned int x, y;

	TFT_CS_0;
    2d5e:	94 98       	cbi	0x12, 4	; 18
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
    2d60:	3b 01       	movw	r6, r22
    2d62:	62 0e       	add	r6, r18
    2d64:	73 1e       	adc	r7, r19
    2d66:	66 15       	cp	r22, r6
    2d68:	77 05       	cpc	r23, r7
    2d6a:	50 f5       	brcc	.+84     	; 0x2dc0 <TFT_Image+0x8a>
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2d6c:	5c 01       	movw	r10, r24
    2d6e:	a4 0e       	add	r10, r20
    2d70:	b5 1e       	adc	r11, r21
    2d72:	2a 01       	movw	r4, r20
    2d74:	44 0c       	add	r4, r4
    2d76:	55 1c       	adc	r5, r5
    2d78:	28 2e       	mov	r2, r24
    2d7a:	39 2c       	mov	r3, r9
    2d7c:	1a c0       	rjmp	.+52     	; 0x2db2 <TFT_Image+0x7c>

			TFT_Set_Address(x, y, x, y);
    2d7e:	96 01       	movw	r18, r12
    2d80:	ae 01       	movw	r20, r28
    2d82:	b6 01       	movw	r22, r12
    2d84:	ce 01       	movw	r24, r28
    2d86:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
			picture++;
    2d8a:	82 e0       	ldi	r24, 0x02	; 2
    2d8c:	e8 0e       	add	r14, r24
    2d8e:	f1 1c       	adc	r15, r1
			Write_Data(pgm_read_word(picture));
    2d90:	f7 01       	movw	r30, r14
    2d92:	85 91       	lpm	r24, Z+
    2d94:	94 91       	lpm	r25, Z
    2d96:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
	unsigned int x, y;

	TFT_CS_0;
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2d9a:	21 96       	adiw	r28, 0x01	; 1
    2d9c:	ca 15       	cp	r28, r10
    2d9e:	db 05       	cpc	r29, r11
    2da0:	70 f3       	brcs	.-36     	; 0x2d7e <TFT_Image+0x48>
    2da2:	04 0d       	add	r16, r4
    2da4:	15 1d       	adc	r17, r5

void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
	unsigned int x, y;

	TFT_CS_0;
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
    2da6:	8f ef       	ldi	r24, 0xFF	; 255
    2da8:	c8 1a       	sub	r12, r24
    2daa:	d8 0a       	sbc	r13, r24
    2dac:	c6 14       	cp	r12, r6
    2dae:	d7 04       	cpc	r13, r7
    2db0:	38 f4       	brcc	.+14     	; 0x2dc0 <TFT_Image+0x8a>
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2db2:	8a 14       	cp	r8, r10
    2db4:	9b 04       	cpc	r9, r11
    2db6:	b8 f7       	brcc	.-18     	; 0x2da6 <TFT_Image+0x70>
    2db8:	c2 2d       	mov	r28, r2
    2dba:	d3 2d       	mov	r29, r3
    2dbc:	78 01       	movw	r14, r16
    2dbe:	df cf       	rjmp	.-66     	; 0x2d7e <TFT_Image+0x48>
			TFT_Set_Address(x, y, x, y);
			picture++;
			Write_Data(pgm_read_word(picture));
		}
	}
	TFT_CS_1;
    2dc0:	94 9a       	sbi	0x12, 4	; 18
}
    2dc2:	df 91       	pop	r29
    2dc4:	cf 91       	pop	r28
    2dc6:	1f 91       	pop	r17
    2dc8:	0f 91       	pop	r16
    2dca:	ff 90       	pop	r15
    2dcc:	ef 90       	pop	r14
    2dce:	df 90       	pop	r13
    2dd0:	cf 90       	pop	r12
    2dd2:	bf 90       	pop	r11
    2dd4:	af 90       	pop	r10
    2dd6:	9f 90       	pop	r9
    2dd8:	8f 90       	pop	r8
    2dda:	7f 90       	pop	r7
    2ddc:	6f 90       	pop	r6
    2dde:	5f 90       	pop	r5
    2de0:	4f 90       	pop	r4
    2de2:	3f 90       	pop	r3
    2de4:	2f 90       	pop	r2
    2de6:	08 95       	ret

00002de8 <SPI_MasterInit>:
//clock rate: 125Khz

void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	DDR_SPI |= (1<<DD_MOSI)|(1<<DD_SCK);
    2de8:	87 b3       	in	r24, 0x17	; 23
    2dea:	80 6a       	ori	r24, 0xA0	; 160
    2dec:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/64=125kHz */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR1);  
    2dee:	82 e5       	ldi	r24, 0x52	; 82
    2df0:	8d b9       	out	0x0d, r24	; 13
    2df2:	08 95       	ret

00002df4 <SPI_MasterTransmit_Receive>:
}

unsigned char SPI_MasterTransmit_Receive(char cData)
{
	/* Start transmission */
	SPDR = cData;
    2df4:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
    2df6:	77 9b       	sbis	0x0e, 7	; 14
    2df8:	fe cf       	rjmp	.-4      	; 0x2df6 <SPI_MasterTransmit_Receive+0x2>
	cData=SPDR;
    2dfa:	8f b1       	in	r24, 0x0f	; 15
	return cData;
}
    2dfc:	08 95       	ret

00002dfe <TPReadX>:
{
	SPI_MasterInit();
}

uint16_t TPReadX(void)
{
    2dfe:	cf 93       	push	r28
    2e00:	df 93       	push	r29
	uint16_t x=0;
	TP_CS_0;
    2e02:	c4 98       	cbi	0x18, 4	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2e04:	2a e1       	ldi	r18, 0x1A	; 26
    2e06:	2a 95       	dec	r18
    2e08:	f1 f7       	brne	.-4      	; 0x2e06 <TPReadX+0x8>
    2e0a:	00 c0       	rjmp	.+0      	; 0x2e0c <TPReadX+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0x90);
    2e0c:	80 e9       	ldi	r24, 0x90	; 144
    2e0e:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e12:	3a e1       	ldi	r19, 0x1A	; 26
    2e14:	3a 95       	dec	r19
    2e16:	f1 f7       	brne	.-4      	; 0x2e14 <TPReadX+0x16>
    2e18:	00 c0       	rjmp	.+0      	; 0x2e1a <TPReadX+0x1c>
	_delay_us(10);
	x=SPI_MasterTransmit_Receive(0x00);
    2e1a:	80 e0       	ldi	r24, 0x00	; 0
    2e1c:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e20:	c8 2f       	mov	r28, r24
    2e22:	d0 e0       	ldi	r29, 0x00	; 0
	x<<=8;
    2e24:	dc 2f       	mov	r29, r28
    2e26:	cc 27       	eor	r28, r28
	x+=SPI_MasterTransmit_Receive(0x00);
    2e28:	80 e0       	ldi	r24, 0x00	; 0
    2e2a:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e2e:	9e 01       	movw	r18, r28
    2e30:	28 0f       	add	r18, r24
    2e32:	31 1d       	adc	r19, r1
    2e34:	c9 01       	movw	r24, r18
	TP_CS_1;
    2e36:	c4 9a       	sbi	0x18, 4	; 24
	x=x>>7;
	x  = x & 0x0FFF;
	return x;
}
    2e38:	88 0f       	add	r24, r24
    2e3a:	89 2f       	mov	r24, r25
    2e3c:	88 1f       	adc	r24, r24
    2e3e:	99 0b       	sbc	r25, r25
    2e40:	91 95       	neg	r25
    2e42:	df 91       	pop	r29
    2e44:	cf 91       	pop	r28
    2e46:	08 95       	ret

00002e48 <TPReadY>:

uint16_t TPReadY(void)
{
    2e48:	cf 93       	push	r28
    2e4a:	df 93       	push	r29
	uint16_t y=0;
	TP_CS_0;
    2e4c:	c4 98       	cbi	0x18, 4	; 24
    2e4e:	8a e1       	ldi	r24, 0x1A	; 26
    2e50:	8a 95       	dec	r24
    2e52:	f1 f7       	brne	.-4      	; 0x2e50 <TPReadY+0x8>
    2e54:	00 c0       	rjmp	.+0      	; 0x2e56 <TPReadY+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0xd0);
    2e56:	80 ed       	ldi	r24, 0xD0	; 208
    2e58:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e5c:	8a e1       	ldi	r24, 0x1A	; 26
    2e5e:	8a 95       	dec	r24
    2e60:	f1 f7       	brne	.-4      	; 0x2e5e <TPReadY+0x16>
    2e62:	00 c0       	rjmp	.+0      	; 0x2e64 <TPReadY+0x1c>
	_delay_us(10);
	y=SPI_MasterTransmit_Receive(0x00);
    2e64:	80 e0       	ldi	r24, 0x00	; 0
    2e66:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e6a:	c8 2f       	mov	r28, r24
    2e6c:	d0 e0       	ldi	r29, 0x00	; 0
	y<<=8;
    2e6e:	dc 2f       	mov	r29, r28
    2e70:	cc 27       	eor	r28, r28
	y+=SPI_MasterTransmit_Receive(0x00);
    2e72:	80 e0       	ldi	r24, 0x00	; 0
    2e74:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e78:	c8 0f       	add	r28, r24
    2e7a:	d1 1d       	adc	r29, r1
	TP_CS_1;
    2e7c:	c4 9a       	sbi	0x18, 4	; 24
	y = y>>7;
    2e7e:	ce 01       	movw	r24, r28
    2e80:	88 0f       	add	r24, r24
    2e82:	89 2f       	mov	r24, r25
    2e84:	88 1f       	adc	r24, r24
    2e86:	99 0b       	sbc	r25, r25
    2e88:	91 95       	neg	r25
	y = y & 0x00FF;
	return y;
}
    2e8a:	99 27       	eor	r25, r25
    2e8c:	df 91       	pop	r29
    2e8e:	cf 91       	pop	r28
    2e90:	08 95       	ret

00002e92 <Read_TPval>:

uint16_t Read_TPval(unsigned int *tpxyval)
{
    2e92:	cf 93       	push	r28
    2e94:	df 93       	push	r29
    2e96:	ec 01       	movw	r28, r24
	tpxyval[0]=TPReadX();
    2e98:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <TPReadX>
    2e9c:	99 83       	std	Y+1, r25	; 0x01
    2e9e:	88 83       	st	Y, r24
	tpxyval[1]=TPReadY();
    2ea0:	0e 94 24 17 	call	0x2e48	; 0x2e48 <TPReadY>
    2ea4:	9b 83       	std	Y+3, r25	; 0x03
    2ea6:	8a 83       	std	Y+2, r24	; 0x02
	return 1;
}
    2ea8:	81 e0       	ldi	r24, 0x01	; 1
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	df 91       	pop	r29
    2eae:	cf 91       	pop	r28
    2eb0:	08 95       	ret

00002eb2 <Read_ADC>:
{
	ADCSRA=0x80 | AD_PRSCL;
}

unsigned int Read_ADC(unsigned char adc_input, unsigned char ADC_VREF)
{
    2eb2:	95 e0       	ldi	r25, 0x05	; 5
	char i;
	int temp=0;
    2eb4:	20 e0       	ldi	r18, 0x00	; 0
    2eb6:	30 e0       	ldi	r19, 0x00	; 0
	for (i=0;i<5;i++)
	{
		ADMUX=adc_input | ADC_VREF; //MUX setup page 215
    2eb8:	86 2b       	or	r24, r22
    2eba:	87 b9       	out	0x07, r24	; 7
    2ebc:	4a e1       	ldi	r20, 0x1A	; 26
    2ebe:	4a 95       	dec	r20
    2ec0:	f1 f7       	brne	.-4      	; 0x2ebe <Read_ADC+0xc>
    2ec2:	00 c0       	rjmp	.+0      	; 0x2ec4 <Read_ADC+0x12>
		_delay_us(10);
		ADCSRA|=0x40;
    2ec4:	36 9a       	sbi	0x06, 6	; 6
		while ((ADCSRA & 0x10)==0);
    2ec6:	34 9b       	sbis	0x06, 4	; 6
    2ec8:	fe cf       	rjmp	.-4      	; 0x2ec6 <Read_ADC+0x14>
		ADCSRA|=(1<<4);
    2eca:	34 9a       	sbi	0x06, 4	; 6
		temp = temp + ADCW;
    2ecc:	44 b1       	in	r20, 0x04	; 4
    2ece:	55 b1       	in	r21, 0x05	; 5
    2ed0:	24 0f       	add	r18, r20
    2ed2:	35 1f       	adc	r19, r21
    2ed4:	91 50       	subi	r25, 0x01	; 1

unsigned int Read_ADC(unsigned char adc_input, unsigned char ADC_VREF)
{
	char i;
	int temp=0;
	for (i=0;i<5;i++)
    2ed6:	89 f7       	brne	.-30     	; 0x2eba <Read_ADC+0x8>
		ADCSRA|=0x40;
		while ((ADCSRA & 0x10)==0);
		ADCSRA|=(1<<4);
		temp = temp + ADCW;
	}
	return (temp/i);	
    2ed8:	c9 01       	movw	r24, r18
    2eda:	65 e0       	ldi	r22, 0x05	; 5
    2edc:	70 e0       	ldi	r23, 0x00	; 0
    2ede:	0e 94 44 2d 	call	0x5a88	; 0x5a88 <__divmodhi4>
    2ee2:	cb 01       	movw	r24, r22
}
    2ee4:	08 95       	ret

00002ee6 <show_button>:

#define text_color black
#define bg_color white

void show_button()
{
    2ee6:	ef 92       	push	r14
    2ee8:	ff 92       	push	r15
    2eea:	0f 93       	push	r16
    2eec:	1f 93       	push	r17
	TFT_Text("3",141,93,16,text_color,bg_color);
	TFT_Box(181,76,231,126,bg_color);
	TFT_Text("/",198,93,16,text_color,bg_color);
	/////////////////////////////////////////////
	*/
	TFT_Box(10,133,60,183,bg_color);
    2eee:	0f ef       	ldi	r16, 0xFF	; 255
    2ef0:	1f ef       	ldi	r17, 0xFF	; 255
    2ef2:	27 eb       	ldi	r18, 0xB7	; 183
    2ef4:	30 e0       	ldi	r19, 0x00	; 0
    2ef6:	4c e3       	ldi	r20, 0x3C	; 60
    2ef8:	50 e0       	ldi	r21, 0x00	; 0
    2efa:	65 e8       	ldi	r22, 0x85	; 133
    2efc:	70 e0       	ldi	r23, 0x00	; 0
    2efe:	8a e0       	ldi	r24, 0x0A	; 10
    2f00:	90 e0       	ldi	r25, 0x00	; 0
    2f02:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("1",27,150,16,text_color,bg_color);
    2f06:	ee 24       	eor	r14, r14
    2f08:	ea 94       	dec	r14
    2f0a:	fe 2c       	mov	r15, r14
    2f0c:	00 e0       	ldi	r16, 0x00	; 0
    2f0e:	10 e0       	ldi	r17, 0x00	; 0
    2f10:	20 e1       	ldi	r18, 0x10	; 16
    2f12:	46 e9       	ldi	r20, 0x96	; 150
    2f14:	50 e0       	ldi	r21, 0x00	; 0
    2f16:	6b e1       	ldi	r22, 0x1B	; 27
    2f18:	70 e0       	ldi	r23, 0x00	; 0
    2f1a:	80 e6       	ldi	r24, 0x60	; 96
    2f1c:	90 e0       	ldi	r25, 0x00	; 0
    2f1e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,133,117,183,bg_color);
    2f22:	0f ef       	ldi	r16, 0xFF	; 255
    2f24:	1f ef       	ldi	r17, 0xFF	; 255
    2f26:	27 eb       	ldi	r18, 0xB7	; 183
    2f28:	30 e0       	ldi	r19, 0x00	; 0
    2f2a:	45 e7       	ldi	r20, 0x75	; 117
    2f2c:	50 e0       	ldi	r21, 0x00	; 0
    2f2e:	65 e8       	ldi	r22, 0x85	; 133
    2f30:	70 e0       	ldi	r23, 0x00	; 0
    2f32:	83 e4       	ldi	r24, 0x43	; 67
    2f34:	90 e0       	ldi	r25, 0x00	; 0
    2f36:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("2",84,150,16,text_color,bg_color);
    2f3a:	00 e0       	ldi	r16, 0x00	; 0
    2f3c:	10 e0       	ldi	r17, 0x00	; 0
    2f3e:	20 e1       	ldi	r18, 0x10	; 16
    2f40:	46 e9       	ldi	r20, 0x96	; 150
    2f42:	50 e0       	ldi	r21, 0x00	; 0
    2f44:	64 e5       	ldi	r22, 0x54	; 84
    2f46:	70 e0       	ldi	r23, 0x00	; 0
    2f48:	82 e6       	ldi	r24, 0x62	; 98
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,133,174,183,bg_color);
    2f50:	0f ef       	ldi	r16, 0xFF	; 255
    2f52:	1f ef       	ldi	r17, 0xFF	; 255
    2f54:	27 eb       	ldi	r18, 0xB7	; 183
    2f56:	30 e0       	ldi	r19, 0x00	; 0
    2f58:	4e ea       	ldi	r20, 0xAE	; 174
    2f5a:	50 e0       	ldi	r21, 0x00	; 0
    2f5c:	65 e8       	ldi	r22, 0x85	; 133
    2f5e:	70 e0       	ldi	r23, 0x00	; 0
    2f60:	8c e7       	ldi	r24, 0x7C	; 124
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("3",141,150,16,text_color,bg_color);
    2f68:	00 e0       	ldi	r16, 0x00	; 0
    2f6a:	10 e0       	ldi	r17, 0x00	; 0
    2f6c:	20 e1       	ldi	r18, 0x10	; 16
    2f6e:	46 e9       	ldi	r20, 0x96	; 150
    2f70:	50 e0       	ldi	r21, 0x00	; 0
    2f72:	6d e8       	ldi	r22, 0x8D	; 141
    2f74:	70 e0       	ldi	r23, 0x00	; 0
    2f76:	84 e6       	ldi	r24, 0x64	; 100
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,133,231,183,bg_color);
    2f7e:	0f ef       	ldi	r16, 0xFF	; 255
    2f80:	1f ef       	ldi	r17, 0xFF	; 255
    2f82:	27 eb       	ldi	r18, 0xB7	; 183
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	47 ee       	ldi	r20, 0xE7	; 231
    2f88:	50 e0       	ldi	r21, 0x00	; 0
    2f8a:	65 e8       	ldi	r22, 0x85	; 133
    2f8c:	70 e0       	ldi	r23, 0x00	; 0
    2f8e:	85 eb       	ldi	r24, 0xB5	; 181
    2f90:	90 e0       	ldi	r25, 0x00	; 0
    2f92:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("4",198,150,16,text_color,bg_color);
    2f96:	00 e0       	ldi	r16, 0x00	; 0
    2f98:	10 e0       	ldi	r17, 0x00	; 0
    2f9a:	20 e1       	ldi	r18, 0x10	; 16
    2f9c:	46 e9       	ldi	r20, 0x96	; 150
    2f9e:	50 e0       	ldi	r21, 0x00	; 0
    2fa0:	66 ec       	ldi	r22, 0xC6	; 198
    2fa2:	70 e0       	ldi	r23, 0x00	; 0
    2fa4:	86 e6       	ldi	r24, 0x66	; 102
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,190,60,240,bg_color);
    2fac:	0f ef       	ldi	r16, 0xFF	; 255
    2fae:	1f ef       	ldi	r17, 0xFF	; 255
    2fb0:	20 ef       	ldi	r18, 0xF0	; 240
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	4c e3       	ldi	r20, 0x3C	; 60
    2fb6:	50 e0       	ldi	r21, 0x00	; 0
    2fb8:	6e eb       	ldi	r22, 0xBE	; 190
    2fba:	70 e0       	ldi	r23, 0x00	; 0
    2fbc:	8a e0       	ldi	r24, 0x0A	; 10
    2fbe:	90 e0       	ldi	r25, 0x00	; 0
    2fc0:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("5",27,207,16,text_color,bg_color);
    2fc4:	00 e0       	ldi	r16, 0x00	; 0
    2fc6:	10 e0       	ldi	r17, 0x00	; 0
    2fc8:	20 e1       	ldi	r18, 0x10	; 16
    2fca:	4f ec       	ldi	r20, 0xCF	; 207
    2fcc:	50 e0       	ldi	r21, 0x00	; 0
    2fce:	6b e1       	ldi	r22, 0x1B	; 27
    2fd0:	70 e0       	ldi	r23, 0x00	; 0
    2fd2:	88 e6       	ldi	r24, 0x68	; 104
    2fd4:	90 e0       	ldi	r25, 0x00	; 0
    2fd6:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,190,117,240,bg_color);
    2fda:	0f ef       	ldi	r16, 0xFF	; 255
    2fdc:	1f ef       	ldi	r17, 0xFF	; 255
    2fde:	20 ef       	ldi	r18, 0xF0	; 240
    2fe0:	30 e0       	ldi	r19, 0x00	; 0
    2fe2:	45 e7       	ldi	r20, 0x75	; 117
    2fe4:	50 e0       	ldi	r21, 0x00	; 0
    2fe6:	6e eb       	ldi	r22, 0xBE	; 190
    2fe8:	70 e0       	ldi	r23, 0x00	; 0
    2fea:	83 e4       	ldi	r24, 0x43	; 67
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("6",84,207,16,text_color,bg_color);
    2ff2:	00 e0       	ldi	r16, 0x00	; 0
    2ff4:	10 e0       	ldi	r17, 0x00	; 0
    2ff6:	20 e1       	ldi	r18, 0x10	; 16
    2ff8:	4f ec       	ldi	r20, 0xCF	; 207
    2ffa:	50 e0       	ldi	r21, 0x00	; 0
    2ffc:	64 e5       	ldi	r22, 0x54	; 84
    2ffe:	70 e0       	ldi	r23, 0x00	; 0
    3000:	8a e6       	ldi	r24, 0x6A	; 106
    3002:	90 e0       	ldi	r25, 0x00	; 0
    3004:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,190,174,240,bg_color);
    3008:	0f ef       	ldi	r16, 0xFF	; 255
    300a:	1f ef       	ldi	r17, 0xFF	; 255
    300c:	20 ef       	ldi	r18, 0xF0	; 240
    300e:	30 e0       	ldi	r19, 0x00	; 0
    3010:	4e ea       	ldi	r20, 0xAE	; 174
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	6e eb       	ldi	r22, 0xBE	; 190
    3016:	70 e0       	ldi	r23, 0x00	; 0
    3018:	8c e7       	ldi	r24, 0x7C	; 124
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("7",141,207,16,text_color,bg_color);
    3020:	00 e0       	ldi	r16, 0x00	; 0
    3022:	10 e0       	ldi	r17, 0x00	; 0
    3024:	20 e1       	ldi	r18, 0x10	; 16
    3026:	4f ec       	ldi	r20, 0xCF	; 207
    3028:	50 e0       	ldi	r21, 0x00	; 0
    302a:	6d e8       	ldi	r22, 0x8D	; 141
    302c:	70 e0       	ldi	r23, 0x00	; 0
    302e:	8c e6       	ldi	r24, 0x6C	; 108
    3030:	90 e0       	ldi	r25, 0x00	; 0
    3032:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,190,231,240,bg_color);
    3036:	0f ef       	ldi	r16, 0xFF	; 255
    3038:	1f ef       	ldi	r17, 0xFF	; 255
    303a:	20 ef       	ldi	r18, 0xF0	; 240
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	47 ee       	ldi	r20, 0xE7	; 231
    3040:	50 e0       	ldi	r21, 0x00	; 0
    3042:	6e eb       	ldi	r22, 0xBE	; 190
    3044:	70 e0       	ldi	r23, 0x00	; 0
    3046:	85 eb       	ldi	r24, 0xB5	; 181
    3048:	90 e0       	ldi	r25, 0x00	; 0
    304a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("8",198,207,16,text_color,bg_color);
    304e:	00 e0       	ldi	r16, 0x00	; 0
    3050:	10 e0       	ldi	r17, 0x00	; 0
    3052:	20 e1       	ldi	r18, 0x10	; 16
    3054:	4f ec       	ldi	r20, 0xCF	; 207
    3056:	50 e0       	ldi	r21, 0x00	; 0
    3058:	66 ec       	ldi	r22, 0xC6	; 198
    305a:	70 e0       	ldi	r23, 0x00	; 0
    305c:	8e e6       	ldi	r24, 0x6E	; 110
    305e:	90 e0       	ldi	r25, 0x00	; 0
    3060:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,247,60,297,bg_color);
    3064:	0f ef       	ldi	r16, 0xFF	; 255
    3066:	1f ef       	ldi	r17, 0xFF	; 255
    3068:	29 e2       	ldi	r18, 0x29	; 41
    306a:	31 e0       	ldi	r19, 0x01	; 1
    306c:	4c e3       	ldi	r20, 0x3C	; 60
    306e:	50 e0       	ldi	r21, 0x00	; 0
    3070:	67 ef       	ldi	r22, 0xF7	; 247
    3072:	70 e0       	ldi	r23, 0x00	; 0
    3074:	8a e0       	ldi	r24, 0x0A	; 10
    3076:	90 e0       	ldi	r25, 0x00	; 0
    3078:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("9",27,264,16,text_color,bg_color);
    307c:	00 e0       	ldi	r16, 0x00	; 0
    307e:	10 e0       	ldi	r17, 0x00	; 0
    3080:	20 e1       	ldi	r18, 0x10	; 16
    3082:	48 e0       	ldi	r20, 0x08	; 8
    3084:	51 e0       	ldi	r21, 0x01	; 1
    3086:	6b e1       	ldi	r22, 0x1B	; 27
    3088:	70 e0       	ldi	r23, 0x00	; 0
    308a:	80 e7       	ldi	r24, 0x70	; 112
    308c:	90 e0       	ldi	r25, 0x00	; 0
    308e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,247,117,297,bg_color);
    3092:	0f ef       	ldi	r16, 0xFF	; 255
    3094:	1f ef       	ldi	r17, 0xFF	; 255
    3096:	29 e2       	ldi	r18, 0x29	; 41
    3098:	31 e0       	ldi	r19, 0x01	; 1
    309a:	45 e7       	ldi	r20, 0x75	; 117
    309c:	50 e0       	ldi	r21, 0x00	; 0
    309e:	67 ef       	ldi	r22, 0xF7	; 247
    30a0:	70 e0       	ldi	r23, 0x00	; 0
    30a2:	83 e4       	ldi	r24, 0x43	; 67
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("0",84,264,16,text_color,bg_color);
    30aa:	00 e0       	ldi	r16, 0x00	; 0
    30ac:	10 e0       	ldi	r17, 0x00	; 0
    30ae:	20 e1       	ldi	r18, 0x10	; 16
    30b0:	48 e0       	ldi	r20, 0x08	; 8
    30b2:	51 e0       	ldi	r21, 0x01	; 1
    30b4:	64 e5       	ldi	r22, 0x54	; 84
    30b6:	70 e0       	ldi	r23, 0x00	; 0
    30b8:	8b e5       	ldi	r24, 0x5B	; 91
    30ba:	93 e0       	ldi	r25, 0x03	; 3
    30bc:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,247,174,297,bg_color);
    30c0:	0f ef       	ldi	r16, 0xFF	; 255
    30c2:	1f ef       	ldi	r17, 0xFF	; 255
    30c4:	29 e2       	ldi	r18, 0x29	; 41
    30c6:	31 e0       	ldi	r19, 0x01	; 1
    30c8:	4e ea       	ldi	r20, 0xAE	; 174
    30ca:	50 e0       	ldi	r21, 0x00	; 0
    30cc:	67 ef       	ldi	r22, 0xF7	; 247
    30ce:	70 e0       	ldi	r23, 0x00	; 0
    30d0:	8c e7       	ldi	r24, 0x7C	; 124
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("DEL",128,264,16,text_color,bg_color);
    30d8:	00 e0       	ldi	r16, 0x00	; 0
    30da:	10 e0       	ldi	r17, 0x00	; 0
    30dc:	20 e1       	ldi	r18, 0x10	; 16
    30de:	48 e0       	ldi	r20, 0x08	; 8
    30e0:	51 e0       	ldi	r21, 0x01	; 1
    30e2:	60 e8       	ldi	r22, 0x80	; 128
    30e4:	70 e0       	ldi	r23, 0x00	; 0
    30e6:	82 e7       	ldi	r24, 0x72	; 114
    30e8:	90 e0       	ldi	r25, 0x00	; 0
    30ea:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,247,231,297,bg_color);
    30ee:	0f ef       	ldi	r16, 0xFF	; 255
    30f0:	1f ef       	ldi	r17, 0xFF	; 255
    30f2:	29 e2       	ldi	r18, 0x29	; 41
    30f4:	31 e0       	ldi	r19, 0x01	; 1
    30f6:	47 ee       	ldi	r20, 0xE7	; 231
    30f8:	50 e0       	ldi	r21, 0x00	; 0
    30fa:	67 ef       	ldi	r22, 0xF7	; 247
    30fc:	70 e0       	ldi	r23, 0x00	; 0
    30fe:	85 eb       	ldi	r24, 0xB5	; 181
    3100:	90 e0       	ldi	r25, 0x00	; 0
    3102:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("OK",191,264,16,text_color,bg_color);
    3106:	00 e0       	ldi	r16, 0x00	; 0
    3108:	10 e0       	ldi	r17, 0x00	; 0
    310a:	20 e1       	ldi	r18, 0x10	; 16
    310c:	48 e0       	ldi	r20, 0x08	; 8
    310e:	51 e0       	ldi	r21, 0x01	; 1
    3110:	6f eb       	ldi	r22, 0xBF	; 191
    3112:	70 e0       	ldi	r23, 0x00	; 0
    3114:	86 e7       	ldi	r24, 0x76	; 118
    3116:	90 e0       	ldi	r25, 0x00	; 0
    3118:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/*********************************************/
	//_________End Button Creatoin_______________//
	/*********************************************/
}
    311c:	1f 91       	pop	r17
    311e:	0f 91       	pop	r16
    3120:	ff 90       	pop	r15
    3122:	ef 90       	pop	r14
    3124:	08 95       	ret

00003126 <usart_init>:
#include <string.h>

void usart_init(uint32_t baud)
{
	// Calculation for baud rate value into ubrr value
	uint16_t ubrr = lrint(( F_CPU / (16L * baud) ) - 1);
    3126:	dc 01       	movw	r26, r24
    3128:	cb 01       	movw	r24, r22
    312a:	88 0f       	add	r24, r24
    312c:	99 1f       	adc	r25, r25
    312e:	aa 1f       	adc	r26, r26
    3130:	bb 1f       	adc	r27, r27
    3132:	88 0f       	add	r24, r24
    3134:	99 1f       	adc	r25, r25
    3136:	aa 1f       	adc	r26, r26
    3138:	bb 1f       	adc	r27, r27
    313a:	9c 01       	movw	r18, r24
    313c:	ad 01       	movw	r20, r26
    313e:	22 0f       	add	r18, r18
    3140:	33 1f       	adc	r19, r19
    3142:	44 1f       	adc	r20, r20
    3144:	55 1f       	adc	r21, r21
    3146:	22 0f       	add	r18, r18
    3148:	33 1f       	adc	r19, r19
    314a:	44 1f       	adc	r20, r20
    314c:	55 1f       	adc	r21, r21
    314e:	60 e0       	ldi	r22, 0x00	; 0
    3150:	72 e1       	ldi	r23, 0x12	; 18
    3152:	8a e7       	ldi	r24, 0x7A	; 122
    3154:	90 e0       	ldi	r25, 0x00	; 0
    3156:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    315a:	ca 01       	movw	r24, r20
    315c:	b9 01       	movw	r22, r18
    315e:	61 50       	subi	r22, 0x01	; 1
    3160:	71 09       	sbc	r23, r1
    3162:	81 09       	sbc	r24, r1
    3164:	91 09       	sbc	r25, r1
    3166:	0e 94 29 29 	call	0x5252	; 0x5252 <__floatunsisf>
    316a:	0e 94 66 29 	call	0x52cc	; 0x52cc <lrint>
	// Set baud rate
	UBRRH = (uint8_t)(ubrr>>8);
    316e:	27 2f       	mov	r18, r23
    3170:	33 27       	eor	r19, r19
    3172:	20 bd       	out	0x20, r18	; 32
	UBRRL = (uint8_t)ubrr;
    3174:	69 b9       	out	0x09, r22	; 9
	// Enable receiver and transmitter
	UCSRB = (1<<RXEN)|(1<<TXEN);
    3176:	88 e1       	ldi	r24, 0x18	; 24
    3178:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8data, 1stop bit
	UCSRC = (1<<URSEL)|(3<<UCSZ0);
    317a:	86 e8       	ldi	r24, 0x86	; 134
    317c:	80 bd       	out	0x20, r24	; 32
    317e:	08 95       	ret

00003180 <usart_putchar>:
}

void usart_putchar(char data)
{
	// Wait for empty transmit buffer
	while ( !(UCSRA & (_BV(UDRE))) );
    3180:	5d 9b       	sbis	0x0b, 5	; 11
    3182:	fe cf       	rjmp	.-4      	; 0x3180 <usart_putchar>
	// Start transmission
	UDR = data;
    3184:	8c b9       	out	0x0c, r24	; 12
    3186:	08 95       	ret

00003188 <usart_getchar>:
}

char usart_getchar(void)
{
	// Wait for incoming data
	while ( !(UCSRA & (_BV(RXC))) );
    3188:	5f 9b       	sbis	0x0b, 7	; 11
    318a:	fe cf       	rjmp	.-4      	; 0x3188 <usart_getchar>
	// Return the data
	return UDR;
    318c:	8c b1       	in	r24, 0x0c	; 12
}
    318e:	08 95       	ret

00003190 <usart_dthit>:
}
//function to send a string through tx pin
unsigned char usart_dthit(void) {
	unsigned char b;
	b=0;
	if(UCSRA & (1<<RXC)) b=1;
    3190:	8b b1       	in	r24, 0x0b	; 11
	return b;
}
    3192:	88 1f       	adc	r24, r24
    3194:	88 27       	eor	r24, r24
    3196:	88 1f       	adc	r24, r24
    3198:	08 95       	ret

0000319a <__vector_1>:

unsigned int EEMEM temp_divider_hold=100, water_flow_divider_hold=330;  //should be keep 100 and 330
unsigned int temp_divider=0, water_flow_divider=0;

ISR(INT0_vect)
{
    319a:	1f 92       	push	r1
    319c:	0f 92       	push	r0
    319e:	0f b6       	in	r0, 0x3f	; 63
    31a0:	0f 92       	push	r0
    31a2:	11 24       	eor	r1, r1
    31a4:	8f 93       	push	r24
    31a6:	9f 93       	push	r25
    31a8:	af 93       	push	r26
    31aa:	bf 93       	push	r27
	i_water = i_water + 1;
    31ac:	80 91 8c 03 	lds	r24, 0x038C
    31b0:	90 91 8d 03 	lds	r25, 0x038D
    31b4:	a0 91 8e 03 	lds	r26, 0x038E
    31b8:	b0 91 8f 03 	lds	r27, 0x038F
    31bc:	01 96       	adiw	r24, 0x01	; 1
    31be:	a1 1d       	adc	r26, r1
    31c0:	b1 1d       	adc	r27, r1
    31c2:	80 93 8c 03 	sts	0x038C, r24
    31c6:	90 93 8d 03 	sts	0x038D, r25
    31ca:	a0 93 8e 03 	sts	0x038E, r26
    31ce:	b0 93 8f 03 	sts	0x038F, r27
}
    31d2:	bf 91       	pop	r27
    31d4:	af 91       	pop	r26
    31d6:	9f 91       	pop	r25
    31d8:	8f 91       	pop	r24
    31da:	0f 90       	pop	r0
    31dc:	0f be       	out	0x3f, r0	; 63
    31de:	0f 90       	pop	r0
    31e0:	1f 90       	pop	r1
    31e2:	18 95       	reti

000031e4 <__vector_7>:
ISR(TIMER1_COMPA_vect)
{
    31e4:	1f 92       	push	r1
    31e6:	0f 92       	push	r0
    31e8:	0f b6       	in	r0, 0x3f	; 63
    31ea:	0f 92       	push	r0
    31ec:	11 24       	eor	r1, r1
    31ee:	8f 93       	push	r24
    31f0:	9f 93       	push	r25
    31f2:	af 93       	push	r26
    31f4:	bf 93       	push	r27
	i_time = i_time + 1;
    31f6:	80 91 84 03 	lds	r24, 0x0384
    31fa:	90 91 85 03 	lds	r25, 0x0385
    31fe:	a0 91 86 03 	lds	r26, 0x0386
    3202:	b0 91 87 03 	lds	r27, 0x0387
    3206:	01 96       	adiw	r24, 0x01	; 1
    3208:	a1 1d       	adc	r26, r1
    320a:	b1 1d       	adc	r27, r1
    320c:	80 93 84 03 	sts	0x0384, r24
    3210:	90 93 85 03 	sts	0x0385, r25
    3214:	a0 93 86 03 	sts	0x0386, r26
    3218:	b0 93 87 03 	sts	0x0387, r27
}
    321c:	bf 91       	pop	r27
    321e:	af 91       	pop	r26
    3220:	9f 91       	pop	r25
    3222:	8f 91       	pop	r24
    3224:	0f 90       	pop	r0
    3226:	0f be       	out	0x3f, r0	; 63
    3228:	0f 90       	pop	r0
    322a:	1f 90       	pop	r1
    322c:	18 95       	reti

0000322e <main>:

int main(void)
{
    322e:	cf 93       	push	r28
    3230:	df 93       	push	r29
    3232:	cd b7       	in	r28, 0x3d	; 61
    3234:	de b7       	in	r29, 0x3e	; 62
    3236:	a1 97       	sbiw	r28, 0x21	; 33
    3238:	0f b6       	in	r0, 0x3f	; 63
    323a:	f8 94       	cli
    323c:	de bf       	out	0x3e, r29	; 62
    323e:	0f be       	out	0x3f, r0	; 63
    3240:	cd bf       	out	0x3d, r28	; 61
	#define back_color blue
	uint16_t TPval[2]={0};
    3242:	19 82       	std	Y+1, r1	; 0x01
    3244:	1a 82       	std	Y+2, r1	; 0x02
    3246:	1b 82       	std	Y+3, r1	; 0x03
    3248:	1c 82       	std	Y+4, r1	; 0x04
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
	uint32_t water_read=0, temp_read=0, time_read=0;
	uint8_t input_f=0, usart_data=0;
	
	PORTA=0x00;
    324a:	1b ba       	out	0x1b, r1	; 27
	PORTB=0x40;
    324c:	10 e4       	ldi	r17, 0x40	; 64
    324e:	18 bb       	out	0x18, r17	; 24
	PORTC=0x00;
    3250:	15 ba       	out	0x15, r1	; 21
	PORTD=0x00; //0x0C;
    3252:	12 ba       	out	0x12, r1	; 18
	
	DDRA=0xFE;
    3254:	8e ef       	ldi	r24, 0xFE	; 254
    3256:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xBF;
    3258:	8f eb       	ldi	r24, 0xBF	; 191
    325a:	87 bb       	out	0x17, r24	; 23
	DDRC=0xFF;
    325c:	8f ef       	ldi	r24, 0xFF	; 255
    325e:	84 bb       	out	0x14, r24	; 20
	DDRD=0xF0;
    3260:	80 ef       	ldi	r24, 0xF0	; 240
    3262:	81 bb       	out	0x11, r24	; 17
	usart_init(600);
    3264:	68 e5       	ldi	r22, 0x58	; 88
    3266:	72 e0       	ldi	r23, 0x02	; 2
    3268:	80 e0       	ldi	r24, 0x00	; 0
    326a:	90 e0       	ldi	r25, 0x00	; 0
    326c:	0e 94 93 18 	call	0x3126	; 0x3126 <usart_init>
#include <avr/io.h>
#include <util/delay.h>

void adc_init(unsigned char AD_PRSCL)
{
	ADCSRA=0x80 | AD_PRSCL;
    3270:	87 e8       	ldi	r24, 0x87	; 135
    3272:	86 b9       	out	0x06, r24	; 6
	adc_init(7);
	TFT_Init();
    3274:	0e 94 5c 12 	call	0x24b8	; 0x24b8 <TFT_Init>
#include "my_spi.h"
#include <util/delay.h>

void TP_init(void)
{
	SPI_MasterInit();
    3278:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <SPI_MasterInit>
	TP_init();
	//show_button();
	TCCR1A=0x00;
    327c:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=0x0C;		//Timer counter 1 initialization with CTC and interrupt mode with Compare match OCR1A 
    327e:	8c e0       	ldi	r24, 0x0C	; 12
    3280:	8e bd       	out	0x2e, r24	; 46
	OCR1AH=0x7A;
    3282:	8a e7       	ldi	r24, 0x7A	; 122
    3284:	8b bd       	out	0x2b, r24	; 43
	OCR1AL=0x12;
    3286:	82 e1       	ldi	r24, 0x12	; 18
    3288:	8a bd       	out	0x2a, r24	; 42

	GICR |= (1<<INT0);				// Enable INT2
    328a:	8b b7       	in	r24, 0x3b	; 59
    328c:	80 64       	ori	r24, 0x40	; 64
    328e:	8b bf       	out	0x3b, r24	; 59
	MCUCSR |= 0x00;					// Trigger INT2 settings
    3290:	84 b7       	in	r24, 0x34	; 52
    3292:	84 bf       	out	0x34, r24	; 52
	MCUCR |= (1<<ISC01)|(1<<ISC00);	//trigger int0 on rising edge
    3294:	85 b7       	in	r24, 0x35	; 53
    3296:	83 60       	ori	r24, 0x03	; 3
    3298:	85 bf       	out	0x35, r24	; 53
	GIFR = (1<<INTF0);				//Interrupt flag 2 is cleared by writing a logical one into INTF2
    329a:	1a bf       	out	0x3a, r17	; 58
	TIMSK=0x10;						//Timer/Counter1, Output Compare A Match Interrupt Enable
    329c:	80 e1       	ldi	r24, 0x10	; 16
    329e:	89 bf       	out	0x39, r24	; 57
	sei();							//Global Interrupt enable
    32a0:	78 94       	sei
int main(void)
{
	#define back_color blue
	uint16_t TPval[2]={0};
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
    32a2:	1d 86       	std	Y+13, r1	; 0x0d
    32a4:	1e 86       	std	Y+14, r1	; 0x0e
    32a6:	1f 86       	std	Y+15, r1	; 0x0f
    32a8:	18 8a       	std	Y+16, r1	; 0x10
    32aa:	1d 82       	std	Y+5, r1	; 0x05
    32ac:	1e 82       	std	Y+6, r1	; 0x06
    32ae:	1f 82       	std	Y+7, r1	; 0x07
    32b0:	18 86       	std	Y+8, r1	; 0x08
    32b2:	1d 8a       	std	Y+21, r1	; 0x15
    32b4:	1e 8a       	std	Y+22, r1	; 0x16
    32b6:	1f 8a       	std	Y+23, r1	; 0x17
    32b8:	18 8e       	std	Y+24, r1	; 0x18

int main(void)
{
	#define back_color blue
	uint16_t TPval[2]={0};
	uint16_t mxpos=13;
    32ba:	0f 2e       	mov	r0, r31
    32bc:	fd e0       	ldi	r31, 0x0D	; 13
    32be:	8f 2e       	mov	r8, r31
    32c0:	91 2c       	mov	r9, r1
    32c2:	f0 2d       	mov	r31, r0
btn_ok:
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
    32c4:	2d e0       	ldi	r18, 0x0D	; 13
    32c6:	28 a3       	std	Y+32, r18	; 0x20
    32c8:	19 a2       	std	Y+33, r1	; 0x21
		}
		
		
		if (!(PIND & (1<<PD3)))
		{
			Read_TPval(TPval);
    32ca:	ce 01       	movw	r24, r28
    32cc:	01 96       	adiw	r24, 0x01	; 1
    32ce:	1c 01       	movw	r2, r24
    32d0:	89 8b       	std	Y+17, r24	; 0x11
    32d2:	3a 8a       	std	Y+18, r3	; 0x12
	
	
	
start_pgm:
	
	temp_divider = eeprom_read_word(&temp_divider_hold);
    32d4:	82 e0       	ldi	r24, 0x02	; 2
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	0e 94 7c 2f 	call	0x5ef8	; 0x5ef8 <__eerd_word_m32>
    32dc:	90 93 7f 03 	sts	0x037F, r25
    32e0:	80 93 7e 03 	sts	0x037E, r24
	water_flow_divider = eeprom_read_word(&water_flow_divider_hold);
    32e4:	80 e0       	ldi	r24, 0x00	; 0
    32e6:	90 e0       	ldi	r25, 0x00	; 0
    32e8:	0e 94 7c 2f 	call	0x5ef8	; 0x5ef8 <__eerd_word_m32>
    32ec:	90 93 7d 03 	sts	0x037D, r25
    32f0:	80 93 7c 03 	sts	0x037C, r24

	//Welcome message and startup
	TFT_Fill(back_color);
    32f4:	8f e1       	ldi	r24, 0x1F	; 31
    32f6:	90 e0       	ldi	r25, 0x00	; 0
    32f8:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	//TFT_Text("Mark Wash & Dyeing Ltd.",23,30,8,yellow,back_color);
	TFT_Text("ASTEX",75,84,16,white,back_color);
    32fc:	0f 2e       	mov	r0, r31
    32fe:	ff e1       	ldi	r31, 0x1F	; 31
    3300:	ef 2e       	mov	r14, r31
    3302:	f1 2c       	mov	r15, r1
    3304:	f0 2d       	mov	r31, r0
    3306:	0f ef       	ldi	r16, 0xFF	; 255
    3308:	1f ef       	ldi	r17, 0xFF	; 255
    330a:	20 e1       	ldi	r18, 0x10	; 16
    330c:	44 e5       	ldi	r20, 0x54	; 84
    330e:	50 e0       	ldi	r21, 0x00	; 0
    3310:	6b e4       	ldi	r22, 0x4B	; 75
    3312:	70 e0       	ldi	r23, 0x00	; 0
    3314:	89 e7       	ldi	r24, 0x79	; 121
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,150,195,174,yellow);
    331c:	00 ee       	ldi	r16, 0xE0	; 224
    331e:	1f ef       	ldi	r17, 0xFF	; 255
    3320:	2e ea       	ldi	r18, 0xAE	; 174
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	43 ec       	ldi	r20, 0xC3	; 195
    3326:	50 e0       	ldi	r21, 0x00	; 0
    3328:	66 e9       	ldi	r22, 0x96	; 150
    332a:	70 e0       	ldi	r23, 0x00	; 0
    332c:	83 e2       	ldi	r24, 0x23	; 35
    332e:	90 e0       	ldi	r25, 0x00	; 0
    3330:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Start Task",45,155,16,blue,yellow);
    3334:	0f 2e       	mov	r0, r31
    3336:	f0 ee       	ldi	r31, 0xE0	; 224
    3338:	ef 2e       	mov	r14, r31
    333a:	ff 24       	eor	r15, r15
    333c:	fa 94       	dec	r15
    333e:	f0 2d       	mov	r31, r0
    3340:	0f e1       	ldi	r16, 0x1F	; 31
    3342:	10 e0       	ldi	r17, 0x00	; 0
    3344:	20 e1       	ldi	r18, 0x10	; 16
    3346:	4b e9       	ldi	r20, 0x9B	; 155
    3348:	50 e0       	ldi	r21, 0x00	; 0
    334a:	6d e2       	ldi	r22, 0x2D	; 45
    334c:	70 e0       	ldi	r23, 0x00	; 0
    334e:	8f e7       	ldi	r24, 0x7F	; 127
    3350:	90 e0       	ldi	r25, 0x00	; 0
    3352:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,274,109,292,yellow);
    3356:	00 ee       	ldi	r16, 0xE0	; 224
    3358:	1f ef       	ldi	r17, 0xFF	; 255
    335a:	24 e2       	ldi	r18, 0x24	; 36
    335c:	31 e0       	ldi	r19, 0x01	; 1
    335e:	4d e6       	ldi	r20, 0x6D	; 109
    3360:	50 e0       	ldi	r21, 0x00	; 0
    3362:	62 e1       	ldi	r22, 0x12	; 18
    3364:	71 e0       	ldi	r23, 0x01	; 1
    3366:	83 e2       	ldi	r24, 0x23	; 35
    3368:	90 e0       	ldi	r25, 0x00	; 0
    336a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("SETTINGS",40,280,8,blue,yellow);
    336e:	0f e1       	ldi	r16, 0x1F	; 31
    3370:	10 e0       	ldi	r17, 0x00	; 0
    3372:	28 e0       	ldi	r18, 0x08	; 8
    3374:	48 e1       	ldi	r20, 0x18	; 24
    3376:	51 e0       	ldi	r21, 0x01	; 1
    3378:	68 e2       	ldi	r22, 0x28	; 40
    337a:	70 e0       	ldi	r23, 0x00	; 0
    337c:	8a e8       	ldi	r24, 0x8A	; 138
    337e:	90 e0       	ldi	r25, 0x00	; 0
    3380:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Temperature:",96,5,8,white,blue);
    3384:	0f 2e       	mov	r0, r31
    3386:	ff e1       	ldi	r31, 0x1F	; 31
    3388:	ef 2e       	mov	r14, r31
    338a:	f1 2c       	mov	r15, r1
    338c:	f0 2d       	mov	r31, r0
    338e:	0f ef       	ldi	r16, 0xFF	; 255
    3390:	1f ef       	ldi	r17, 0xFF	; 255
    3392:	28 e0       	ldi	r18, 0x08	; 8
    3394:	45 e0       	ldi	r20, 0x05	; 5
    3396:	50 e0       	ldi	r21, 0x00	; 0
    3398:	60 e6       	ldi	r22, 0x60	; 96
    339a:	70 e0       	ldi	r23, 0x00	; 0
    339c:	83 e9       	ldi	r24, 0x93	; 147
    339e:	90 e0       	ldi	r25, 0x00	; 0
    33a0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Image(180,265,50,50,image_data_astex_logo);
    33a4:	04 e4       	ldi	r16, 0x44	; 68
    33a6:	1f e0       	ldi	r17, 0x0F	; 15
    33a8:	22 e3       	ldi	r18, 0x32	; 50
    33aa:	30 e0       	ldi	r19, 0x00	; 0
    33ac:	42 e3       	ldi	r20, 0x32	; 50
    33ae:	50 e0       	ldi	r21, 0x00	; 0
    33b0:	69 e0       	ldi	r22, 0x09	; 9
    33b2:	71 e0       	ldi	r23, 0x01	; 1
    33b4:	84 eb       	ldi	r24, 0xB4	; 180
    33b6:	90 e0       	ldi	r25, 0x00	; 0
    33b8:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <TFT_Image>
	TFT_Rectangle(179,264,230,315,white);
    33bc:	0f ef       	ldi	r16, 0xFF	; 255
    33be:	1f ef       	ldi	r17, 0xFF	; 255
    33c0:	2b e3       	ldi	r18, 0x3B	; 59
    33c2:	31 e0       	ldi	r19, 0x01	; 1
    33c4:	46 ee       	ldi	r20, 0xE6	; 230
    33c6:	50 e0       	ldi	r21, 0x00	; 0
    33c8:	68 e0       	ldi	r22, 0x08	; 8
    33ca:	71 e0       	ldi	r23, 0x01	; 1
    33cc:	83 eb       	ldi	r24, 0xB3	; 179
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>

	while (1)
	{
		if (compare_time != i_time)
    33d4:	40 91 80 03 	lds	r20, 0x0380
    33d8:	50 91 81 03 	lds	r21, 0x0381
    33dc:	60 91 82 03 	lds	r22, 0x0382
    33e0:	70 91 83 03 	lds	r23, 0x0383
    33e4:	80 91 84 03 	lds	r24, 0x0384
    33e8:	90 91 85 03 	lds	r25, 0x0385
    33ec:	a0 91 86 03 	lds	r26, 0x0386
    33f0:	b0 91 87 03 	lds	r27, 0x0387
    33f4:	48 17       	cp	r20, r24
    33f6:	59 07       	cpc	r21, r25
    33f8:	6a 07       	cpc	r22, r26
    33fa:	7b 07       	cpc	r23, r27
    33fc:	b1 f1       	breq	.+108    	; 0x346a <main+0x23c>
		{
			TFT_PutsInt((Read_ADC(0,0x00) * 100UL)/(uint32_t)temp_divider,4,200,5,8,white,back_color);
    33fe:	60 e0       	ldi	r22, 0x00	; 0
    3400:	80 e0       	ldi	r24, 0x00	; 0
    3402:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <Read_ADC>
    3406:	9c 01       	movw	r18, r24
    3408:	a4 e6       	ldi	r26, 0x64	; 100
    340a:	b0 e0       	ldi	r27, 0x00	; 0
    340c:	0e 94 99 2d 	call	0x5b32	; 0x5b32 <__umulhisi3>
    3410:	20 91 7e 03 	lds	r18, 0x037E
    3414:	30 91 7f 03 	lds	r19, 0x037F
    3418:	40 e0       	ldi	r20, 0x00	; 0
    341a:	50 e0       	ldi	r21, 0x00	; 0
    341c:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    3420:	ca 01       	movw	r24, r20
    3422:	b9 01       	movw	r22, r18
    3424:	0f 2e       	mov	r0, r31
    3426:	ff e1       	ldi	r31, 0x1F	; 31
    3428:	af 2e       	mov	r10, r31
    342a:	b1 2c       	mov	r11, r1
    342c:	f0 2d       	mov	r31, r0
    342e:	cc 24       	eor	r12, r12
    3430:	ca 94       	dec	r12
    3432:	dc 2c       	mov	r13, r12
    3434:	68 94       	set
    3436:	ee 24       	eor	r14, r14
    3438:	e3 f8       	bld	r14, 3
    343a:	05 e0       	ldi	r16, 0x05	; 5
    343c:	10 e0       	ldi	r17, 0x00	; 0
    343e:	28 ec       	ldi	r18, 0xC8	; 200
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	44 e0       	ldi	r20, 0x04	; 4
    3444:	50 e0       	ldi	r21, 0x00	; 0
    3446:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			compare_time = i_time;
    344a:	80 91 84 03 	lds	r24, 0x0384
    344e:	90 91 85 03 	lds	r25, 0x0385
    3452:	a0 91 86 03 	lds	r26, 0x0386
    3456:	b0 91 87 03 	lds	r27, 0x0387
    345a:	80 93 80 03 	sts	0x0380, r24
    345e:	90 93 81 03 	sts	0x0381, r25
    3462:	a0 93 82 03 	sts	0x0382, r26
    3466:	b0 93 83 03 	sts	0x0383, r27
		}
		if (usart_dthit())  //scan for keypad data via usart
    346a:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    346e:	88 23       	and	r24, r24
    3470:	41 f0       	breq	.+16     	; 0x3482 <main+0x254>
		{
			usart_data = usart_getchar();
    3472:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    3476:	8c 30       	cpi	r24, 0x0C	; 12
    3478:	e1 f1       	breq	.+120    	; 0x34f2 <main+0x2c4>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    347a:	8b 30       	cpi	r24, 0x0B	; 11
    347c:	11 f4       	brne	.+4      	; 0x3482 <main+0x254>
    347e:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <main+0x1ba4>
				usart_data = 0;
				goto settings_calibration;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    3482:	83 99       	sbic	0x10, 3	; 16
    3484:	a7 cf       	rjmp	.-178    	; 0x33d4 <main+0x1a6>
		{
			Read_TPval(TPval);
    3486:	c1 01       	movw	r24, r2
    3488:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    348c:	af e1       	ldi	r26, 0x1F	; 31
    348e:	be e4       	ldi	r27, 0x4E	; 78
    3490:	11 97       	sbiw	r26, 0x01	; 1
    3492:	f1 f7       	brne	.-4      	; 0x3490 <main+0x262>
    3494:	00 c0       	rjmp	.+0      	; 0x3496 <main+0x268>
    3496:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    3498:	c1 01       	movw	r24, r2
    349a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)  // button for start task
    349e:	89 81       	ldd	r24, Y+1	; 0x01
    34a0:	9a 81       	ldd	r25, Y+2	; 0x02
    34a2:	9c 01       	movw	r18, r24
    34a4:	29 57       	subi	r18, 0x79	; 121
    34a6:	31 09       	sbc	r19, r1
    34a8:	2d 31       	cpi	r18, 0x1D	; 29
    34aa:	31 05       	cpc	r19, r1
    34ac:	38 f4       	brcc	.+14     	; 0x34bc <main+0x28e>
    34ae:	2b 81       	ldd	r18, Y+3	; 0x03
    34b0:	3c 81       	ldd	r19, Y+4	; 0x04
    34b2:	24 53       	subi	r18, 0x34	; 52
    34b4:	31 09       	sbc	r19, r1
    34b6:	25 39       	cpi	r18, 0x95	; 149
    34b8:	31 05       	cpc	r19, r1
    34ba:	d8 f0       	brcs	.+54     	; 0x34f2 <main+0x2c4>
			{
				break;
			}
			else if (TPval[0]>35 && TPval[0]<56 && TPval[1]>40 && TPval[1]<120)  // button for settings
    34bc:	84 97       	sbiw	r24, 0x24	; 36
    34be:	44 97       	sbiw	r24, 0x14	; 20
    34c0:	40 f4       	brcc	.+16     	; 0x34d2 <main+0x2a4>
    34c2:	8b 81       	ldd	r24, Y+3	; 0x03
    34c4:	9c 81       	ldd	r25, Y+4	; 0x04
    34c6:	89 97       	sbiw	r24, 0x29	; 41
    34c8:	8f 34       	cpi	r24, 0x4F	; 79
    34ca:	91 05       	cpc	r25, r1
    34cc:	10 f4       	brcc	.+4      	; 0x34d2 <main+0x2a4>
    34ce:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <main+0x1ba4>
    34d2:	bf ef       	ldi	r27, 0xFF	; 255
    34d4:	20 e7       	ldi	r18, 0x70	; 112
    34d6:	82 e0       	ldi	r24, 0x02	; 2
    34d8:	b1 50       	subi	r27, 0x01	; 1
    34da:	20 40       	sbci	r18, 0x00	; 0
    34dc:	80 40       	sbci	r24, 0x00	; 0
    34de:	e1 f7       	brne	.-8      	; 0x34d8 <main+0x2aa>
    34e0:	00 c0       	rjmp	.+0      	; 0x34e2 <main+0x2b4>
    34e2:	00 00       	nop
    34e4:	77 cf       	rjmp	.-274    	; 0x33d4 <main+0x1a6>
    34e6:	4d 8a       	std	Y+21, r4	; 0x15
    34e8:	5e 8a       	std	Y+22, r5	; 0x16
    34ea:	6f 8a       	std	Y+23, r6	; 0x17
    34ec:	78 8e       	std	Y+24, r7	; 0x18
    34ee:	29 8c       	ldd	r2, Y+25	; 0x19
    34f0:	3a 8c       	ldd	r3, Y+26	; 0x1a
	}
	//End welcome message and startup
	
	//Start task input/selection system
selection:
	TFT_Fill(back_color);
    34f2:	8f e1       	ldi	r24, 0x1F	; 31
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Choose an option...",23,20,8,white,back_color);
    34fa:	0f 2e       	mov	r0, r31
    34fc:	ff e1       	ldi	r31, 0x1F	; 31
    34fe:	ef 2e       	mov	r14, r31
    3500:	f1 2c       	mov	r15, r1
    3502:	f0 2d       	mov	r31, r0
    3504:	0f ef       	ldi	r16, 0xFF	; 255
    3506:	1f ef       	ldi	r17, 0xFF	; 255
    3508:	28 e0       	ldi	r18, 0x08	; 8
    350a:	44 e1       	ldi	r20, 0x14	; 20
    350c:	50 e0       	ldi	r21, 0x00	; 0
    350e:	67 e1       	ldi	r22, 0x17	; 23
    3510:	70 e0       	ldi	r23, 0x00	; 0
    3512:	80 ea       	ldi	r24, 0xA0	; 160
    3514:	90 e0       	ldi	r25, 0x00	; 0
    3516:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,45,203,62,yellow);
    351a:	00 ee       	ldi	r16, 0xE0	; 224
    351c:	1f ef       	ldi	r17, 0xFF	; 255
    351e:	2e e3       	ldi	r18, 0x3E	; 62
    3520:	30 e0       	ldi	r19, 0x00	; 0
    3522:	4b ec       	ldi	r20, 0xCB	; 203
    3524:	50 e0       	ldi	r21, 0x00	; 0
    3526:	6d e2       	ldi	r22, 0x2D	; 45
    3528:	70 e0       	ldi	r23, 0x00	; 0
    352a:	8b e1       	ldi	r24, 0x1B	; 27
    352c:	90 e0       	ldi	r25, 0x00	; 0
    352e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("70Lit. _ 25'C _ 2min",35,50,8,black,yellow);
    3532:	0f 2e       	mov	r0, r31
    3534:	f0 ee       	ldi	r31, 0xE0	; 224
    3536:	ef 2e       	mov	r14, r31
    3538:	ff 24       	eor	r15, r15
    353a:	fa 94       	dec	r15
    353c:	f0 2d       	mov	r31, r0
    353e:	00 e0       	ldi	r16, 0x00	; 0
    3540:	10 e0       	ldi	r17, 0x00	; 0
    3542:	28 e0       	ldi	r18, 0x08	; 8
    3544:	42 e3       	ldi	r20, 0x32	; 50
    3546:	50 e0       	ldi	r21, 0x00	; 0
    3548:	63 e2       	ldi	r22, 0x23	; 35
    354a:	70 e0       	ldi	r23, 0x00	; 0
    354c:	84 eb       	ldi	r24, 0xB4	; 180
    354e:	90 e0       	ldi	r25, 0x00	; 0
    3550:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,80,203,97,yellow);
    3554:	00 ee       	ldi	r16, 0xE0	; 224
    3556:	1f ef       	ldi	r17, 0xFF	; 255
    3558:	21 e6       	ldi	r18, 0x61	; 97
    355a:	30 e0       	ldi	r19, 0x00	; 0
    355c:	4b ec       	ldi	r20, 0xCB	; 203
    355e:	50 e0       	ldi	r21, 0x00	; 0
    3560:	60 e5       	ldi	r22, 0x50	; 80
    3562:	70 e0       	ldi	r23, 0x00	; 0
    3564:	8b e1       	ldi	r24, 0x1B	; 27
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("70Lit. _ 50'C _ 2min",35,85,8,black,yellow);
    356c:	00 e0       	ldi	r16, 0x00	; 0
    356e:	10 e0       	ldi	r17, 0x00	; 0
    3570:	28 e0       	ldi	r18, 0x08	; 8
    3572:	45 e5       	ldi	r20, 0x55	; 85
    3574:	50 e0       	ldi	r21, 0x00	; 0
    3576:	63 e2       	ldi	r22, 0x23	; 35
    3578:	70 e0       	ldi	r23, 0x00	; 0
    357a:	89 ec       	ldi	r24, 0xC9	; 201
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,115,203,132,yellow);
    3582:	00 ee       	ldi	r16, 0xE0	; 224
    3584:	1f ef       	ldi	r17, 0xFF	; 255
    3586:	24 e8       	ldi	r18, 0x84	; 132
    3588:	30 e0       	ldi	r19, 0x00	; 0
    358a:	4b ec       	ldi	r20, 0xCB	; 203
    358c:	50 e0       	ldi	r21, 0x00	; 0
    358e:	63 e7       	ldi	r22, 0x73	; 115
    3590:	70 e0       	ldi	r23, 0x00	; 0
    3592:	8b e1       	ldi	r24, 0x1B	; 27
    3594:	90 e0       	ldi	r25, 0x00	; 0
    3596:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("50Lit. _ 50'C _ 2min",35,120,8,black,yellow);
    359a:	00 e0       	ldi	r16, 0x00	; 0
    359c:	10 e0       	ldi	r17, 0x00	; 0
    359e:	28 e0       	ldi	r18, 0x08	; 8
    35a0:	48 e7       	ldi	r20, 0x78	; 120
    35a2:	50 e0       	ldi	r21, 0x00	; 0
    35a4:	63 e2       	ldi	r22, 0x23	; 35
    35a6:	70 e0       	ldi	r23, 0x00	; 0
    35a8:	8e ed       	ldi	r24, 0xDE	; 222
    35aa:	90 e0       	ldi	r25, 0x00	; 0
    35ac:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,150,203,167,yellow);
    35b0:	00 ee       	ldi	r16, 0xE0	; 224
    35b2:	1f ef       	ldi	r17, 0xFF	; 255
    35b4:	27 ea       	ldi	r18, 0xA7	; 167
    35b6:	30 e0       	ldi	r19, 0x00	; 0
    35b8:	4b ec       	ldi	r20, 0xCB	; 203
    35ba:	50 e0       	ldi	r21, 0x00	; 0
    35bc:	66 e9       	ldi	r22, 0x96	; 150
    35be:	70 e0       	ldi	r23, 0x00	; 0
    35c0:	8b e1       	ldi	r24, 0x1B	; 27
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("60Lit. _ 50'C _ 2min",35,155,8,black,yellow);
    35c8:	00 e0       	ldi	r16, 0x00	; 0
    35ca:	10 e0       	ldi	r17, 0x00	; 0
    35cc:	28 e0       	ldi	r18, 0x08	; 8
    35ce:	4b e9       	ldi	r20, 0x9B	; 155
    35d0:	50 e0       	ldi	r21, 0x00	; 0
    35d2:	63 e2       	ldi	r22, 0x23	; 35
    35d4:	70 e0       	ldi	r23, 0x00	; 0
    35d6:	83 ef       	ldi	r24, 0xF3	; 243
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,188,203,228,red);
    35de:	00 e0       	ldi	r16, 0x00	; 0
    35e0:	18 ef       	ldi	r17, 0xF8	; 248
    35e2:	24 ee       	ldi	r18, 0xE4	; 228
    35e4:	30 e0       	ldi	r19, 0x00	; 0
    35e6:	4b ec       	ldi	r20, 0xCB	; 203
    35e8:	50 e0       	ldi	r21, 0x00	; 0
    35ea:	6c eb       	ldi	r22, 0xBC	; 188
    35ec:	70 e0       	ldi	r23, 0x00	; 0
    35ee:	8b e1       	ldi	r24, 0x1B	; 27
    35f0:	90 e0       	ldi	r25, 0x00	; 0
    35f2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Manual Input",31,199,16,white,red);
    35f6:	0f 2e       	mov	r0, r31
    35f8:	e1 2c       	mov	r14, r1
    35fa:	f8 ef       	ldi	r31, 0xF8	; 248
    35fc:	ff 2e       	mov	r15, r31
    35fe:	f0 2d       	mov	r31, r0
    3600:	0f ef       	ldi	r16, 0xFF	; 255
    3602:	1f ef       	ldi	r17, 0xFF	; 255
    3604:	20 e1       	ldi	r18, 0x10	; 16
    3606:	47 ec       	ldi	r20, 0xC7	; 199
    3608:	50 e0       	ldi	r21, 0x00	; 0
    360a:	6f e1       	ldi	r22, 0x1F	; 31
    360c:	70 e0       	ldi	r23, 0x00	; 0
    360e:	88 e0       	ldi	r24, 0x08	; 8
    3610:	91 e0       	ldi	r25, 0x01	; 1
    3612:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,260,203,277,yellow);
    3616:	00 ee       	ldi	r16, 0xE0	; 224
    3618:	1f ef       	ldi	r17, 0xFF	; 255
    361a:	25 e1       	ldi	r18, 0x15	; 21
    361c:	31 e0       	ldi	r19, 0x01	; 1
    361e:	4b ec       	ldi	r20, 0xCB	; 203
    3620:	50 e0       	ldi	r21, 0x00	; 0
    3622:	64 e0       	ldi	r22, 0x04	; 4
    3624:	71 e0       	ldi	r23, 0x01	; 1
    3626:	8b e1       	ldi	r24, 0x1B	; 27
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("<<  BACK  <<",35,265,8,black,yellow);
    362e:	0f 2e       	mov	r0, r31
    3630:	f0 ee       	ldi	r31, 0xE0	; 224
    3632:	ef 2e       	mov	r14, r31
    3634:	ff 24       	eor	r15, r15
    3636:	fa 94       	dec	r15
    3638:	f0 2d       	mov	r31, r0
    363a:	00 e0       	ldi	r16, 0x00	; 0
    363c:	10 e0       	ldi	r17, 0x00	; 0
    363e:	28 e0       	ldi	r18, 0x08	; 8
    3640:	49 e0       	ldi	r20, 0x09	; 9
    3642:	51 e0       	ldi	r21, 0x01	; 1
    3644:	63 e2       	ldi	r22, 0x23	; 35
    3646:	70 e0       	ldi	r23, 0x00	; 0
    3648:	85 e1       	ldi	r24, 0x15	; 21
    364a:	91 e0       	ldi	r25, 0x01	; 1
    364c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    3650:	83 9b       	sbis	0x10, 3	; 16
    3652:	fe cf       	rjmp	.-4      	; 0x3650 <main+0x422>
	while (1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    3654:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    3658:	88 23       	and	r24, r24
    365a:	a9 f0       	breq	.+42     	; 0x3686 <main+0x458>
		{
			usart_data = usart_getchar();
    365c:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 13)
    3660:	8d 30       	cpi	r24, 0x0D	; 13
    3662:	09 f4       	brne	.+2      	; 0x3666 <main+0x438>
    3664:	68 c4       	rjmp	.+2256   	; 0x3f36 <main+0xd08>
			{
				usart_data = 0;
				goto task_a;
			}
			else if (usart_data == 14)
    3666:	8e 30       	cpi	r24, 0x0E	; 14
    3668:	09 f4       	brne	.+2      	; 0x366c <main+0x43e>
    366a:	7e c4       	rjmp	.+2300   	; 0x3f68 <main+0xd3a>
			{
				usart_data = 0;
				goto task_b;
			}
			else if (usart_data == 15)
    366c:	8f 30       	cpi	r24, 0x0F	; 15
    366e:	09 f4       	brne	.+2      	; 0x3672 <main+0x444>
    3670:	94 c4       	rjmp	.+2344   	; 0x3f9a <main+0xd6c>
			{
				usart_data = 0;
				goto task_c;
			}
			else if (usart_data == 16)
    3672:	80 31       	cpi	r24, 0x10	; 16
    3674:	09 f4       	brne	.+2      	; 0x3678 <main+0x44a>
    3676:	a6 c4       	rjmp	.+2380   	; 0x3fc4 <main+0xd96>
			{
				usart_data = 0;
				goto task_d;
			}
			else if (usart_data == 12)
    3678:	8c 30       	cpi	r24, 0x0C	; 12
    367a:	11 f4       	brne	.+4      	; 0x3680 <main+0x452>
    367c:	0c 94 ad 28 	jmp	0x515a	; 0x515a <main+0x1f2c>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    3680:	8b 30       	cpi	r24, 0x0B	; 11
    3682:	09 f4       	brne	.+2      	; 0x3686 <main+0x458>
    3684:	27 ce       	rjmp	.-946    	; 0x32d4 <main+0xa6>
				goto start_pgm;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan for touch data
    3686:	83 99       	sbic	0x10, 3	; 16
    3688:	e5 cf       	rjmp	.-54     	; 0x3654 <main+0x426>
		{
			Read_TPval(TPval);
    368a:	c1 01       	movw	r24, r2
    368c:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    3690:	af e1       	ldi	r26, 0x1F	; 31
    3692:	be e4       	ldi	r27, 0x4E	; 78
    3694:	11 97       	sbiw	r26, 0x01	; 1
    3696:	f1 f7       	brne	.-4      	; 0x3694 <main+0x466>
    3698:	00 c0       	rjmp	.+0      	; 0x369a <main+0x46c>
    369a:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    369c:	c1 01       	movw	r24, r2
    369e:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
    36a2:	8b 81       	ldd	r24, Y+3	; 0x03
    36a4:	9c 81       	ldd	r25, Y+4	; 0x04
    36a6:	84 97       	sbiw	r24, 0x24	; 36
    36a8:	8f 3a       	cpi	r24, 0xAF	; 175
    36aa:	91 05       	cpc	r25, r1
    36ac:	30 f5       	brcc	.+76     	; 0x36fa <main+0x4cc>
			{
				if (TPval[0]>197 && TPval[0]<216)
    36ae:	89 81       	ldd	r24, Y+1	; 0x01
    36b0:	9a 81       	ldd	r25, Y+2	; 0x02
    36b2:	9c 01       	movw	r18, r24
    36b4:	26 5c       	subi	r18, 0xC6	; 198
    36b6:	31 09       	sbc	r19, r1
    36b8:	22 31       	cpi	r18, 0x12	; 18
    36ba:	31 05       	cpc	r19, r1
    36bc:	08 f4       	brcc	.+2      	; 0x36c0 <main+0x492>
    36be:	98 c4       	rjmp	.+2352   	; 0x3ff0 <main+0xdc2>
					water = 70;
					temp = 25;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
    36c0:	2a 5e       	subi	r18, 0xEA	; 234
    36c2:	3f 4f       	sbci	r19, 0xFF	; 255
    36c4:	2e 30       	cpi	r18, 0x0E	; 14
    36c6:	31 05       	cpc	r19, r1
    36c8:	08 f4       	brcc	.+2      	; 0x36cc <main+0x49e>
    36ca:	ab c4       	rjmp	.+2390   	; 0x4022 <main+0xdf4>
					water = 70;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
    36cc:	25 5e       	subi	r18, 0xE5	; 229
    36ce:	3f 4f       	sbci	r19, 0xFF	; 255
    36d0:	22 31       	cpi	r18, 0x12	; 18
    36d2:	31 05       	cpc	r19, r1
    36d4:	08 f4       	brcc	.+2      	; 0x36d8 <main+0x4aa>
    36d6:	be c4       	rjmp	.+2428   	; 0x4054 <main+0xe26>
					water = 50;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
    36d8:	2b 5e       	subi	r18, 0xEB	; 235
    36da:	3f 4f       	sbci	r19, 0xFF	; 255
    36dc:	20 31       	cpi	r18, 0x10	; 16
    36de:	31 05       	cpc	r19, r1
    36e0:	08 f4       	brcc	.+2      	; 0x36e4 <main+0x4b6>
    36e2:	cd c4       	rjmp	.+2458   	; 0x407e <main+0xe50>
					water = 60;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>83 && TPval[0]<116)  //button for manual input
    36e4:	24 5d       	subi	r18, 0xD4	; 212
    36e6:	3f 4f       	sbci	r19, 0xFF	; 255
    36e8:	20 32       	cpi	r18, 0x20	; 32
    36ea:	31 05       	cpc	r19, r1
    36ec:	10 f4       	brcc	.+4      	; 0x36f2 <main+0x4c4>
    36ee:	0c 94 b0 28 	jmp	0x5160	; 0x5160 <main+0x1f32>
				{
					break;
				}
				else if (TPval[0]>43 && TPval[0]<67)  //button for manual input
    36f2:	8c 97       	sbiw	r24, 0x2c	; 44
    36f4:	47 97       	sbiw	r24, 0x17	; 23
    36f6:	08 f4       	brcc	.+2      	; 0x36fa <main+0x4cc>
    36f8:	ed cd       	rjmp	.-1062   	; 0x32d4 <main+0xa6>
    36fa:	bf ef       	ldi	r27, 0xFF	; 255
    36fc:	20 e7       	ldi	r18, 0x70	; 112
    36fe:	82 e0       	ldi	r24, 0x02	; 2
    3700:	b1 50       	subi	r27, 0x01	; 1
    3702:	20 40       	sbci	r18, 0x00	; 0
    3704:	80 40       	sbci	r24, 0x00	; 0
    3706:	e1 f7       	brne	.-8      	; 0x3700 <main+0x4d2>
    3708:	00 c0       	rjmp	.+0      	; 0x370a <main+0x4dc>
    370a:	00 00       	nop
    370c:	a3 cf       	rjmp	.-186    	; 0x3654 <main+0x426>
							input_f = 0;
							goto selection;
						}
						else if (input_f == 4)
						{
							input_f = 1;
    370e:	33 24       	eor	r3, r3
    3710:	33 94       	inc	r3
    3712:	04 c0       	rjmp	.+8      	; 0x371c <main+0x4ee>
							goto button_operation;
						}
						else if (input_f == 6)
						{
							input_f = 3;
    3714:	0f 2e       	mov	r0, r31
    3716:	f3 e0       	ldi	r31, 0x03	; 3
    3718:	3f 2e       	mov	r3, r31
    371a:	f0 2d       	mov	r31, r0
		//for manual input show the button
		
	input_f = 1;

button_operation:
	TFT_Fill(back_color);
    371c:	8f e1       	ldi	r24, 0x1F	; 31
    371e:	90 e0       	ldi	r25, 0x00	; 0
    3720:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	show_button();
    3724:	0e 94 73 17 	call	0x2ee6	; 0x2ee6 <show_button>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    3728:	83 9b       	sbis	0x10, 3	; 16
    372a:	fe cf       	rjmp	.-4      	; 0x3728 <main+0x4fa>
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
    372c:	0f 2e       	mov	r0, r31
    372e:	f5 e0       	ldi	r31, 0x05	; 5
    3730:	2f 2e       	mov	r2, r31
    3732:	f0 2d       	mov	r31, r0
	TFT_Fill(back_color);
	show_button();
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
	while(1)
	{
		if (input_f == 1)
    3734:	91 e0       	ldi	r25, 0x01	; 1
    3736:	39 12       	cpse	r3, r25
    3738:	25 c0       	rjmp	.+74     	; 0x3784 <main+0x556>
		{
			TFT_Box(10,69,231,101,white);
    373a:	0f ef       	ldi	r16, 0xFF	; 255
    373c:	1f ef       	ldi	r17, 0xFF	; 255
    373e:	25 e6       	ldi	r18, 0x65	; 101
    3740:	30 e0       	ldi	r19, 0x00	; 0
    3742:	47 ee       	ldi	r20, 0xE7	; 231
    3744:	50 e0       	ldi	r21, 0x00	; 0
    3746:	65 e4       	ldi	r22, 0x45	; 69
    3748:	70 e0       	ldi	r23, 0x00	; 0
    374a:	8a e0       	ldi	r24, 0x0A	; 10
    374c:	90 e0       	ldi	r25, 0x00	; 0
    374e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Water ...",10,20,16,white,back_color);
    3752:	0f 2e       	mov	r0, r31
    3754:	ff e1       	ldi	r31, 0x1F	; 31
    3756:	ef 2e       	mov	r14, r31
    3758:	f1 2c       	mov	r15, r1
    375a:	f0 2d       	mov	r31, r0
    375c:	20 e1       	ldi	r18, 0x10	; 16
    375e:	44 e1       	ldi	r20, 0x14	; 20
    3760:	50 e0       	ldi	r21, 0x00	; 0
    3762:	6a e0       	ldi	r22, 0x0A	; 10
    3764:	70 e0       	ldi	r23, 0x00	; 0
    3766:	82 e2       	ldi	r24, 0x22	; 34
    3768:	91 e0       	ldi	r25, 0x01	; 1
    376a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Liter)  ",10,38,16,white,back_color);
    376e:	20 e1       	ldi	r18, 0x10	; 16
    3770:	46 e2       	ldi	r20, 0x26	; 38
    3772:	50 e0       	ldi	r21, 0x00	; 0
    3774:	6a e0       	ldi	r22, 0x0A	; 10
    3776:	70 e0       	ldi	r23, 0x00	; 0
    3778:	82 e3       	ldi	r24, 0x32	; 50
    377a:	91 e0       	ldi	r25, 0x01	; 1
    377c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 2;
    3780:	39 84       	ldd	r3, Y+9	; 0x09
    3782:	26 c1       	rjmp	.+588    	; 0x39d0 <main+0x7a2>
		}
		else if (input_f == 3)
    3784:	a3 e0       	ldi	r26, 0x03	; 3
    3786:	3a 12       	cpse	r3, r26
    3788:	33 c0       	rjmp	.+102    	; 0x37f0 <main+0x5c2>
		{
			TFT_Box(10,69,231,101,white);
    378a:	0f ef       	ldi	r16, 0xFF	; 255
    378c:	1f ef       	ldi	r17, 0xFF	; 255
    378e:	25 e6       	ldi	r18, 0x65	; 101
    3790:	30 e0       	ldi	r19, 0x00	; 0
    3792:	47 ee       	ldi	r20, 0xE7	; 231
    3794:	50 e0       	ldi	r21, 0x00	; 0
    3796:	65 e4       	ldi	r22, 0x45	; 69
    3798:	70 e0       	ldi	r23, 0x00	; 0
    379a:	8a e0       	ldi	r24, 0x0A	; 10
    379c:	90 e0       	ldi	r25, 0x00	; 0
    379e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    37a2:	0f e1       	ldi	r16, 0x1F	; 31
    37a4:	10 e0       	ldi	r17, 0x00	; 0
    37a6:	26 e3       	ldi	r18, 0x36	; 54
    37a8:	30 e0       	ldi	r19, 0x00	; 0
    37aa:	47 ee       	ldi	r20, 0xE7	; 231
    37ac:	50 e0       	ldi	r21, 0x00	; 0
    37ae:	64 e1       	ldi	r22, 0x14	; 20
    37b0:	70 e0       	ldi	r23, 0x00	; 0
    37b2:	8a e0       	ldi	r24, 0x0A	; 10
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Temp ... ",10,20,16,white,back_color);
    37ba:	0f 2e       	mov	r0, r31
    37bc:	ff e1       	ldi	r31, 0x1F	; 31
    37be:	ef 2e       	mov	r14, r31
    37c0:	f1 2c       	mov	r15, r1
    37c2:	f0 2d       	mov	r31, r0
    37c4:	0f ef       	ldi	r16, 0xFF	; 255
    37c6:	1f ef       	ldi	r17, 0xFF	; 255
    37c8:	20 e1       	ldi	r18, 0x10	; 16
    37ca:	44 e1       	ldi	r20, 0x14	; 20
    37cc:	50 e0       	ldi	r21, 0x00	; 0
    37ce:	6a e0       	ldi	r22, 0x0A	; 10
    37d0:	70 e0       	ldi	r23, 0x00	; 0
    37d2:	8c e3       	ldi	r24, 0x3C	; 60
    37d4:	91 e0       	ldi	r25, 0x01	; 1
    37d6:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Deg. C) ",10,38,16,white,back_color);
    37da:	20 e1       	ldi	r18, 0x10	; 16
    37dc:	46 e2       	ldi	r20, 0x26	; 38
    37de:	50 e0       	ldi	r21, 0x00	; 0
    37e0:	6a e0       	ldi	r22, 0x0A	; 10
    37e2:	70 e0       	ldi	r23, 0x00	; 0
    37e4:	8c e4       	ldi	r24, 0x4C	; 76
    37e6:	91 e0       	ldi	r25, 0x01	; 1
    37e8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 4;
    37ec:	3b 88       	ldd	r3, Y+19	; 0x13
    37ee:	f0 c0       	rjmp	.+480    	; 0x39d0 <main+0x7a2>
		}
		else if (input_f == 5)
    37f0:	b5 e0       	ldi	r27, 0x05	; 5
    37f2:	3b 12       	cpse	r3, r27
    37f4:	33 c0       	rjmp	.+102    	; 0x385c <main+0x62e>
		{
			TFT_Box(10,69,231,101,white);
    37f6:	0f ef       	ldi	r16, 0xFF	; 255
    37f8:	1f ef       	ldi	r17, 0xFF	; 255
    37fa:	25 e6       	ldi	r18, 0x65	; 101
    37fc:	30 e0       	ldi	r19, 0x00	; 0
    37fe:	47 ee       	ldi	r20, 0xE7	; 231
    3800:	50 e0       	ldi	r21, 0x00	; 0
    3802:	65 e4       	ldi	r22, 0x45	; 69
    3804:	70 e0       	ldi	r23, 0x00	; 0
    3806:	8a e0       	ldi	r24, 0x0A	; 10
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    380e:	0f e1       	ldi	r16, 0x1F	; 31
    3810:	10 e0       	ldi	r17, 0x00	; 0
    3812:	26 e3       	ldi	r18, 0x36	; 54
    3814:	30 e0       	ldi	r19, 0x00	; 0
    3816:	47 ee       	ldi	r20, 0xE7	; 231
    3818:	50 e0       	ldi	r21, 0x00	; 0
    381a:	64 e1       	ldi	r22, 0x14	; 20
    381c:	70 e0       	ldi	r23, 0x00	; 0
    381e:	8a e0       	ldi	r24, 0x0A	; 10
    3820:	90 e0       	ldi	r25, 0x00	; 0
    3822:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Time ... ",10,20,16,white,back_color);
    3826:	0f 2e       	mov	r0, r31
    3828:	ff e1       	ldi	r31, 0x1F	; 31
    382a:	ef 2e       	mov	r14, r31
    382c:	f1 2c       	mov	r15, r1
    382e:	f0 2d       	mov	r31, r0
    3830:	0f ef       	ldi	r16, 0xFF	; 255
    3832:	1f ef       	ldi	r17, 0xFF	; 255
    3834:	20 e1       	ldi	r18, 0x10	; 16
    3836:	44 e1       	ldi	r20, 0x14	; 20
    3838:	50 e0       	ldi	r21, 0x00	; 0
    383a:	6a e0       	ldi	r22, 0x0A	; 10
    383c:	70 e0       	ldi	r23, 0x00	; 0
    383e:	86 e5       	ldi	r24, 0x56	; 86
    3840:	91 e0       	ldi	r25, 0x01	; 1
    3842:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Minute)",10,38,16,white,back_color);
    3846:	20 e1       	ldi	r18, 0x10	; 16
    3848:	46 e2       	ldi	r20, 0x26	; 38
    384a:	50 e0       	ldi	r21, 0x00	; 0
    384c:	6a e0       	ldi	r22, 0x0A	; 10
    384e:	70 e0       	ldi	r23, 0x00	; 0
    3850:	86 e6       	ldi	r24, 0x66	; 102
    3852:	91 e0       	ldi	r25, 0x01	; 1
    3854:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 6;
    3858:	3c 88       	ldd	r3, Y+20	; 0x14
    385a:	ba c0       	rjmp	.+372    	; 0x39d0 <main+0x7a2>
		}
		else if (input_f == 7)  //this section is to update the calubration of temperature value
    385c:	27 e0       	ldi	r18, 0x07	; 7
    385e:	32 12       	cpse	r3, r18
    3860:	27 c0       	rjmp	.+78     	; 0x38b0 <main+0x682>
		{
			TFT_Box(10,69,231,101,white);
    3862:	0f ef       	ldi	r16, 0xFF	; 255
    3864:	1f ef       	ldi	r17, 0xFF	; 255
    3866:	25 e6       	ldi	r18, 0x65	; 101
    3868:	30 e0       	ldi	r19, 0x00	; 0
    386a:	47 ee       	ldi	r20, 0xE7	; 231
    386c:	50 e0       	ldi	r21, 0x00	; 0
    386e:	65 e4       	ldi	r22, 0x45	; 69
    3870:	70 e0       	ldi	r23, 0x00	; 0
    3872:	8a e0       	ldi	r24, 0x0A	; 10
    3874:	90 e0       	ldi	r25, 0x00	; 0
    3876:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			//TFT_Box(10,20,231,54,back_color);
			//TFT_Text("Thermal Calibration",45,140,8,white,back_color);
			TFT_Text("Thermal ADC value:",10,15,8,white,back_color);
    387a:	0f 2e       	mov	r0, r31
    387c:	ff e1       	ldi	r31, 0x1F	; 31
    387e:	ef 2e       	mov	r14, r31
    3880:	f1 2c       	mov	r15, r1
    3882:	f0 2d       	mov	r31, r0
    3884:	28 e0       	ldi	r18, 0x08	; 8
    3886:	4f e0       	ldi	r20, 0x0F	; 15
    3888:	50 e0       	ldi	r21, 0x00	; 0
    388a:	6a e0       	ldi	r22, 0x0A	; 10
    388c:	70 e0       	ldi	r23, 0x00	; 0
    388e:	8f e6       	ldi	r24, 0x6F	; 111
    3890:	91 e0       	ldi	r25, 0x01	; 1
    3892:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("Enter the real value...",10,38,8,white,back_color);
    3896:	28 e0       	ldi	r18, 0x08	; 8
    3898:	46 e2       	ldi	r20, 0x26	; 38
    389a:	50 e0       	ldi	r21, 0x00	; 0
    389c:	6a e0       	ldi	r22, 0x0A	; 10
    389e:	70 e0       	ldi	r23, 0x00	; 0
    38a0:	82 e8       	ldi	r24, 0x82	; 130
    38a2:	91 e0       	ldi	r25, 0x01	; 1
    38a4:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 8;
    38a8:	68 94       	set
    38aa:	33 24       	eor	r3, r3
    38ac:	33 f8       	bld	r3, 3
    38ae:	90 c0       	rjmp	.+288    	; 0x39d0 <main+0x7a2>
		}
		else if (input_f == 8)
    38b0:	88 e0       	ldi	r24, 0x08	; 8
    38b2:	38 12       	cpse	r3, r24
    38b4:	41 c0       	rjmp	.+130    	; 0x3938 <main+0x70a>
		{
			if (compare_time != i_time)
    38b6:	40 91 80 03 	lds	r20, 0x0380
    38ba:	50 91 81 03 	lds	r21, 0x0381
    38be:	60 91 82 03 	lds	r22, 0x0382
    38c2:	70 91 83 03 	lds	r23, 0x0383
    38c6:	80 91 84 03 	lds	r24, 0x0384
    38ca:	90 91 85 03 	lds	r25, 0x0385
    38ce:	a0 91 86 03 	lds	r26, 0x0386
    38d2:	b0 91 87 03 	lds	r27, 0x0387
    38d6:	48 17       	cp	r20, r24
    38d8:	59 07       	cpc	r21, r25
    38da:	6a 07       	cpc	r22, r26
    38dc:	7b 07       	cpc	r23, r27
    38de:	09 f4       	brne	.+2      	; 0x38e2 <main+0x6b4>
    38e0:	77 c0       	rjmp	.+238    	; 0x39d0 <main+0x7a2>
			{
				TFT_PutsInt(Read_ADC(0,0x00),4,162,15,8,white,back_color);
    38e2:	60 e0       	ldi	r22, 0x00	; 0
    38e4:	80 e0       	ldi	r24, 0x00	; 0
    38e6:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <Read_ADC>
    38ea:	bc 01       	movw	r22, r24
    38ec:	80 e0       	ldi	r24, 0x00	; 0
    38ee:	90 e0       	ldi	r25, 0x00	; 0
    38f0:	0f 2e       	mov	r0, r31
    38f2:	ff e1       	ldi	r31, 0x1F	; 31
    38f4:	af 2e       	mov	r10, r31
    38f6:	b1 2c       	mov	r11, r1
    38f8:	f0 2d       	mov	r31, r0
    38fa:	cc 24       	eor	r12, r12
    38fc:	ca 94       	dec	r12
    38fe:	dc 2c       	mov	r13, r12
    3900:	68 94       	set
    3902:	ee 24       	eor	r14, r14
    3904:	e3 f8       	bld	r14, 3
    3906:	0f e0       	ldi	r16, 0x0F	; 15
    3908:	10 e0       	ldi	r17, 0x00	; 0
    390a:	22 ea       	ldi	r18, 0xA2	; 162
    390c:	30 e0       	ldi	r19, 0x00	; 0
    390e:	44 e0       	ldi	r20, 0x04	; 4
    3910:	50 e0       	ldi	r21, 0x00	; 0
    3912:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
				compare_time = i_time;
    3916:	80 91 84 03 	lds	r24, 0x0384
    391a:	90 91 85 03 	lds	r25, 0x0385
    391e:	a0 91 86 03 	lds	r26, 0x0386
    3922:	b0 91 87 03 	lds	r27, 0x0387
    3926:	80 93 80 03 	sts	0x0380, r24
    392a:	90 93 81 03 	sts	0x0381, r25
    392e:	a0 93 82 03 	sts	0x0382, r26
    3932:	b0 93 83 03 	sts	0x0383, r27
    3936:	4c c0       	rjmp	.+152    	; 0x39d0 <main+0x7a2>
			}
		}
		else if (input_f == 9)  //this section is to update the calibration of water
    3938:	99 e0       	ldi	r25, 0x09	; 9
    393a:	39 12       	cpse	r3, r25
    393c:	49 c0       	rjmp	.+146    	; 0x39d0 <main+0x7a2>
		{
			TFT_Box(10,69,231,101,white);
    393e:	0f ef       	ldi	r16, 0xFF	; 255
    3940:	1f ef       	ldi	r17, 0xFF	; 255
    3942:	25 e6       	ldi	r18, 0x65	; 101
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	47 ee       	ldi	r20, 0xE7	; 231
    3948:	50 e0       	ldi	r21, 0x00	; 0
    394a:	65 e4       	ldi	r22, 0x45	; 69
    394c:	70 e0       	ldi	r23, 0x00	; 0
    394e:	8a e0       	ldi	r24, 0x0A	; 10
    3950:	90 e0       	ldi	r25, 0x00	; 0
    3952:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			//TFT_Box(10,20,231,54,back_color);
			//TFT_Text("Thermal Calibration",45,140,8,white,back_color);
			TFT_Text("Total pulse counted:",10,15,8,white,back_color);
    3956:	0f 2e       	mov	r0, r31
    3958:	ff e1       	ldi	r31, 0x1F	; 31
    395a:	ef 2e       	mov	r14, r31
    395c:	f1 2c       	mov	r15, r1
    395e:	f0 2d       	mov	r31, r0
    3960:	28 e0       	ldi	r18, 0x08	; 8
    3962:	4f e0       	ldi	r20, 0x0F	; 15
    3964:	50 e0       	ldi	r21, 0x00	; 0
    3966:	6a e0       	ldi	r22, 0x0A	; 10
    3968:	70 e0       	ldi	r23, 0x00	; 0
    396a:	8a e9       	ldi	r24, 0x9A	; 154
    396c:	91 e0       	ldi	r25, 0x01	; 1
    396e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_PutsInt(i_water_hold,-1,178,15,8,white,back_color);
    3972:	60 91 88 03 	lds	r22, 0x0388
    3976:	70 91 89 03 	lds	r23, 0x0389
    397a:	80 91 8a 03 	lds	r24, 0x038A
    397e:	90 91 8b 03 	lds	r25, 0x038B
    3982:	0f 2e       	mov	r0, r31
    3984:	ff e1       	ldi	r31, 0x1F	; 31
    3986:	af 2e       	mov	r10, r31
    3988:	b1 2c       	mov	r11, r1
    398a:	f0 2d       	mov	r31, r0
    398c:	cc 24       	eor	r12, r12
    398e:	ca 94       	dec	r12
    3990:	dc 2c       	mov	r13, r12
    3992:	68 94       	set
    3994:	ee 24       	eor	r14, r14
    3996:	e3 f8       	bld	r14, 3
    3998:	0f e0       	ldi	r16, 0x0F	; 15
    399a:	10 e0       	ldi	r17, 0x00	; 0
    399c:	22 eb       	ldi	r18, 0xB2	; 178
    399e:	30 e0       	ldi	r19, 0x00	; 0
    39a0:	4f ef       	ldi	r20, 0xFF	; 255
    39a2:	5f ef       	ldi	r21, 0xFF	; 255
    39a4:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_Text("Enter the real value...",10,38,8,white,back_color);
    39a8:	0f 2e       	mov	r0, r31
    39aa:	ff e1       	ldi	r31, 0x1F	; 31
    39ac:	ef 2e       	mov	r14, r31
    39ae:	f1 2c       	mov	r15, r1
    39b0:	f0 2d       	mov	r31, r0
    39b2:	0f ef       	ldi	r16, 0xFF	; 255
    39b4:	1f ef       	ldi	r17, 0xFF	; 255
    39b6:	28 e0       	ldi	r18, 0x08	; 8
    39b8:	46 e2       	ldi	r20, 0x26	; 38
    39ba:	50 e0       	ldi	r21, 0x00	; 0
    39bc:	6a e0       	ldi	r22, 0x0A	; 10
    39be:	70 e0       	ldi	r23, 0x00	; 0
    39c0:	82 e8       	ldi	r24, 0x82	; 130
    39c2:	91 e0       	ldi	r25, 0x01	; 1
    39c4:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 10;
    39c8:	0f 2e       	mov	r0, r31
    39ca:	fa e0       	ldi	r31, 0x0A	; 10
    39cc:	3f 2e       	mov	r3, r31
    39ce:	f0 2d       	mov	r31, r0
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    39d0:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    39d4:	88 23       	and	r24, r24
    39d6:	31 f1       	breq	.+76     	; 0x3a24 <main+0x7f6>
		{
			usart_data = usart_getchar();
    39d8:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 9)
    39dc:	89 30       	cpi	r24, 0x09	; 9
    39de:	09 f4       	brne	.+2      	; 0x39e2 <main+0x7b4>
    39e0:	42 c0       	rjmp	.+132    	; 0x3a66 <main+0x838>
			{
				usart_data = 0;
				goto btn_9;
			}
			else if (usart_data == 10)
    39e2:	8a 30       	cpi	r24, 0x0A	; 10
    39e4:	09 f4       	brne	.+2      	; 0x39e8 <main+0x7ba>
    39e6:	6d c0       	rjmp	.+218    	; 0x3ac2 <main+0x894>
			{
				usart_data = 0;
				goto btn_0;
			}
			else if (usart_data == 11)
    39e8:	8b 30       	cpi	r24, 0x0B	; 11
    39ea:	09 f4       	brne	.+2      	; 0x39ee <main+0x7c0>
    39ec:	93 c0       	rjmp	.+294    	; 0x3b14 <main+0x8e6>
			{
				usart_data = 0;
				goto btn_del;
			}
			else if (usart_data == 12)
    39ee:	8c 30       	cpi	r24, 0x0C	; 12
    39f0:	09 f4       	brne	.+2      	; 0x39f4 <main+0x7c6>
    39f2:	cd c0       	rjmp	.+410    	; 0x3b8e <main+0x960>
			{
				usart_data = 0;
				goto btn_ok;
			}
			else if (usart_data == 5)
    39f4:	85 30       	cpi	r24, 0x05	; 5
    39f6:	09 f4       	brne	.+2      	; 0x39fa <main+0x7cc>
    39f8:	4c c1       	rjmp	.+664    	; 0x3c92 <main+0xa64>
			{
				usart_data = 0;
				goto btn_5;
			}
			else if (usart_data == 6)
    39fa:	86 30       	cpi	r24, 0x06	; 6
    39fc:	09 f4       	brne	.+2      	; 0x3a00 <main+0x7d2>
    39fe:	77 c1       	rjmp	.+750    	; 0x3cee <main+0xac0>
			{
				usart_data = 0;
				goto btn_6;
			}
			else if (usart_data == 7)
    3a00:	87 30       	cpi	r24, 0x07	; 7
    3a02:	09 f4       	brne	.+2      	; 0x3a06 <main+0x7d8>
    3a04:	a2 c1       	rjmp	.+836    	; 0x3d4a <main+0xb1c>
			{
				usart_data = 0;
				goto btn_7;
			}
			else if (usart_data == 8)
    3a06:	88 30       	cpi	r24, 0x08	; 8
    3a08:	09 f4       	brne	.+2      	; 0x3a0c <main+0x7de>
    3a0a:	cb c1       	rjmp	.+918    	; 0x3da2 <main+0xb74>
			{
				usart_data = 0;
				goto btn_8;
			}
			else if (usart_data == 1)
    3a0c:	81 30       	cpi	r24, 0x01	; 1
    3a0e:	09 f4       	brne	.+2      	; 0x3a12 <main+0x7e4>
    3a10:	f5 c1       	rjmp	.+1002   	; 0x3dfc <main+0xbce>
			{
				usart_data = 0;
				goto btn_1;
			}
			else if (usart_data == 2)
    3a12:	82 30       	cpi	r24, 0x02	; 2
    3a14:	09 f4       	brne	.+2      	; 0x3a18 <main+0x7ea>
    3a16:	20 c2       	rjmp	.+1088   	; 0x3e58 <main+0xc2a>
			{
				usart_data = 0;
				goto btn_2;
			}
			else if (usart_data == 3)
    3a18:	83 30       	cpi	r24, 0x03	; 3
    3a1a:	09 f4       	brne	.+2      	; 0x3a1e <main+0x7f0>
    3a1c:	41 c2       	rjmp	.+1154   	; 0x3ea0 <main+0xc72>
			{
				usart_data = 0;
				goto btn_3;
			}
			else if (usart_data == 4)
    3a1e:	84 30       	cpi	r24, 0x04	; 4
    3a20:	09 f4       	brne	.+2      	; 0x3a24 <main+0x7f6>
    3a22:	60 c2       	rjmp	.+1216   	; 0x3ee4 <main+0xcb6>
			}
			else usart_data = 0;
		}
		
		
		if (!(PIND & (1<<PD3)))
    3a24:	83 99       	sbic	0x10, 3	; 16
    3a26:	86 ce       	rjmp	.-756    	; 0x3734 <main+0x506>
		{
			Read_TPval(TPval);
    3a28:	89 89       	ldd	r24, Y+17	; 0x11
    3a2a:	9a 89       	ldd	r25, Y+18	; 0x12
    3a2c:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    3a30:	af e1       	ldi	r26, 0x1F	; 31
    3a32:	be e4       	ldi	r27, 0x4E	; 78
    3a34:	11 97       	sbiw	r26, 0x01	; 1
    3a36:	f1 f7       	brne	.-4      	; 0x3a34 <main+0x806>
    3a38:	00 c0       	rjmp	.+0      	; 0x3a3a <main+0x80c>
    3a3a:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    3a3c:	89 89       	ldd	r24, Y+17	; 0x11
    3a3e:	9a 89       	ldd	r25, Y+18	; 0x12
    3a40:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>36 && TPval[0]<72)  // 9 0 DEL OK 
    3a44:	89 81       	ldd	r24, Y+1	; 0x01
    3a46:	9a 81       	ldd	r25, Y+2	; 0x02
    3a48:	9c 01       	movw	r18, r24
    3a4a:	25 52       	subi	r18, 0x25	; 37
    3a4c:	31 09       	sbc	r19, r1
    3a4e:	23 32       	cpi	r18, 0x23	; 35
    3a50:	31 05       	cpc	r19, r1
    3a52:	08 f0       	brcs	.+2      	; 0x3a56 <main+0x828>
    3a54:	0f c1       	rjmp	.+542    	; 0x3c74 <main+0xa46>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3a56:	8b 81       	ldd	r24, Y+3	; 0x03
    3a58:	9c 81       	ldd	r25, Y+4	; 0x04
    3a5a:	9c 01       	movw	r18, r24
    3a5c:	28 51       	subi	r18, 0x18	; 24
    3a5e:	31 09       	sbc	r19, r1
    3a60:	21 33       	cpi	r18, 0x31	; 49
    3a62:	31 05       	cpc	r19, r1
    3a64:	40 f5       	brcc	.+80     	; 0x3ab6 <main+0x888>
				{
btn_9:
					TFT_Text("9",mxpos,77,16,black,white);
    3a66:	ee 24       	eor	r14, r14
    3a68:	ea 94       	dec	r14
    3a6a:	fe 2c       	mov	r15, r14
    3a6c:	00 e0       	ldi	r16, 0x00	; 0
    3a6e:	10 e0       	ldi	r17, 0x00	; 0
    3a70:	20 e1       	ldi	r18, 0x10	; 16
    3a72:	4d e4       	ldi	r20, 0x4D	; 77
    3a74:	50 e0       	ldi	r21, 0x00	; 0
    3a76:	b4 01       	movw	r22, r8
    3a78:	80 e7       	ldi	r24, 0x70	; 112
    3a7a:	90 e0       	ldi	r25, 0x00	; 0
    3a7c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3a80:	be e0       	ldi	r27, 0x0E	; 14
    3a82:	8b 0e       	add	r8, r27
    3a84:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 9;
    3a86:	44 0c       	add	r4, r4
    3a88:	55 1c       	adc	r5, r5
    3a8a:	66 1c       	adc	r6, r6
    3a8c:	77 1c       	adc	r7, r7
    3a8e:	d3 01       	movw	r26, r6
    3a90:	c2 01       	movw	r24, r4
    3a92:	88 0f       	add	r24, r24
    3a94:	99 1f       	adc	r25, r25
    3a96:	aa 1f       	adc	r26, r26
    3a98:	bb 1f       	adc	r27, r27
    3a9a:	88 0f       	add	r24, r24
    3a9c:	99 1f       	adc	r25, r25
    3a9e:	aa 1f       	adc	r26, r26
    3aa0:	bb 1f       	adc	r27, r27
    3aa2:	48 0e       	add	r4, r24
    3aa4:	59 1e       	adc	r5, r25
    3aa6:	6a 1e       	adc	r6, r26
    3aa8:	7b 1e       	adc	r7, r27
    3aaa:	29 e0       	ldi	r18, 0x09	; 9
    3aac:	42 0e       	add	r4, r18
    3aae:	51 1c       	adc	r5, r1
    3ab0:	61 1c       	adc	r6, r1
    3ab2:	71 1c       	adc	r7, r1
    3ab4:	dc c0       	rjmp	.+440    	; 0x3c6e <main+0xa40>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3ab6:	9c 01       	movw	r18, r24
    3ab8:	2e 54       	subi	r18, 0x4E	; 78
    3aba:	31 09       	sbc	r19, r1
    3abc:	20 33       	cpi	r18, 0x30	; 48
    3abe:	31 05       	cpc	r19, r1
    3ac0:	18 f5       	brcc	.+70     	; 0x3b08 <main+0x8da>
				{
btn_0:
					TFT_Text("0",mxpos,77,16,black,white);
    3ac2:	ee 24       	eor	r14, r14
    3ac4:	ea 94       	dec	r14
    3ac6:	fe 2c       	mov	r15, r14
    3ac8:	00 e0       	ldi	r16, 0x00	; 0
    3aca:	10 e0       	ldi	r17, 0x00	; 0
    3acc:	20 e1       	ldi	r18, 0x10	; 16
    3ace:	4d e4       	ldi	r20, 0x4D	; 77
    3ad0:	50 e0       	ldi	r21, 0x00	; 0
    3ad2:	b4 01       	movw	r22, r8
    3ad4:	8b e5       	ldi	r24, 0x5B	; 91
    3ad6:	93 e0       	ldi	r25, 0x03	; 3
    3ad8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3adc:	8e e0       	ldi	r24, 0x0E	; 14
    3ade:	88 0e       	add	r8, r24
    3ae0:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10);
    3ae2:	44 0c       	add	r4, r4
    3ae4:	55 1c       	adc	r5, r5
    3ae6:	66 1c       	adc	r6, r6
    3ae8:	77 1c       	adc	r7, r7
    3aea:	d3 01       	movw	r26, r6
    3aec:	c2 01       	movw	r24, r4
    3aee:	88 0f       	add	r24, r24
    3af0:	99 1f       	adc	r25, r25
    3af2:	aa 1f       	adc	r26, r26
    3af4:	bb 1f       	adc	r27, r27
    3af6:	88 0f       	add	r24, r24
    3af8:	99 1f       	adc	r25, r25
    3afa:	aa 1f       	adc	r26, r26
    3afc:	bb 1f       	adc	r27, r27
    3afe:	48 0e       	add	r4, r24
    3b00:	59 1e       	adc	r5, r25
    3b02:	6a 1e       	adc	r6, r26
    3b04:	7b 1e       	adc	r7, r27
    3b06:	b3 c0       	rjmp	.+358    	; 0x3c6e <main+0xa40>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3b08:	9c 01       	movw	r18, r24
    3b0a:	22 58       	subi	r18, 0x82	; 130
    3b0c:	31 09       	sbc	r19, r1
    3b0e:	23 33       	cpi	r18, 0x33	; 51
    3b10:	31 05       	cpc	r19, r1
    3b12:	c0 f5       	brcc	.+112    	; 0x3b84 <main+0x956>
				{
btn_del:
					if (mxpos>13)
    3b14:	9e e0       	ldi	r25, 0x0E	; 14
    3b16:	89 16       	cp	r8, r25
    3b18:	91 04       	cpc	r9, r1
    3b1a:	d8 f0       	brcs	.+54     	; 0x3b52 <main+0x924>
					{
						mxpos-=14;
    3b1c:	ae e0       	ldi	r26, 0x0E	; 14
    3b1e:	8a 1a       	sub	r8, r26
    3b20:	91 08       	sbc	r9, r1
						TFT_Text(" ",mxpos,77,16,black,white);
    3b22:	ee 24       	eor	r14, r14
    3b24:	ea 94       	dec	r14
    3b26:	fe 2c       	mov	r15, r14
    3b28:	00 e0       	ldi	r16, 0x00	; 0
    3b2a:	10 e0       	ldi	r17, 0x00	; 0
    3b2c:	20 e1       	ldi	r18, 0x10	; 16
    3b2e:	4d e4       	ldi	r20, 0x4D	; 77
    3b30:	50 e0       	ldi	r21, 0x00	; 0
    3b32:	b4 01       	movw	r22, r8
    3b34:	82 e1       	ldi	r24, 0x12	; 18
    3b36:	93 e0       	ldi	r25, 0x03	; 3
    3b38:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
						kp_val = (kp_val / 10);
    3b3c:	c3 01       	movw	r24, r6
    3b3e:	b2 01       	movw	r22, r4
    3b40:	2a e0       	ldi	r18, 0x0A	; 10
    3b42:	30 e0       	ldi	r19, 0x00	; 0
    3b44:	40 e0       	ldi	r20, 0x00	; 0
    3b46:	50 e0       	ldi	r21, 0x00	; 0
    3b48:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    3b4c:	29 01       	movw	r4, r18
    3b4e:	3a 01       	movw	r6, r20
    3b50:	8e c0       	rjmp	.+284    	; 0x3c6e <main+0xa40>
					}
					else
					{
						if (input_f == 2)
    3b52:	b2 e0       	ldi	r27, 0x02	; 2
    3b54:	3b 16       	cp	r3, r27
    3b56:	09 f4       	brne	.+2      	; 0x3b5a <main+0x92c>
    3b58:	c6 cc       	rjmp	.-1652   	; 0x34e6 <main+0x2b8>
						{
							input_f = 0;
							goto selection;
						}
						else if (input_f == 4)
    3b5a:	24 e0       	ldi	r18, 0x04	; 4
    3b5c:	32 16       	cp	r3, r18
    3b5e:	09 f4       	brne	.+2      	; 0x3b62 <main+0x934>
    3b60:	d6 cd       	rjmp	.-1108   	; 0x370e <main+0x4e0>
						{
							input_f = 1;
							goto button_operation;
						}
						else if (input_f == 6)
    3b62:	86 e0       	ldi	r24, 0x06	; 6
    3b64:	38 16       	cp	r3, r24
    3b66:	09 f4       	brne	.+2      	; 0x3b6a <main+0x93c>
    3b68:	d5 cd       	rjmp	.-1110   	; 0x3714 <main+0x4e6>
						{
							input_f = 3;
							goto button_operation;
						}
						else if (input_f == 8 || input_f == 10)
    3b6a:	83 2d       	mov	r24, r3
    3b6c:	8d 7f       	andi	r24, 0xFD	; 253
    3b6e:	88 30       	cpi	r24, 0x08	; 8
    3b70:	09 f0       	breq	.+2      	; 0x3b74 <main+0x946>
    3b72:	7d c0       	rjmp	.+250    	; 0x3c6e <main+0xa40>
    3b74:	4d 8a       	std	Y+21, r4	; 0x15
    3b76:	5e 8a       	std	Y+22, r5	; 0x16
    3b78:	6f 8a       	std	Y+23, r6	; 0x17
    3b7a:	78 8e       	std	Y+24, r7	; 0x18
    3b7c:	29 8c       	ldd	r2, Y+25	; 0x19
    3b7e:	3a 8c       	ldd	r3, Y+26	; 0x1a
    3b80:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <main+0x1ba4>
							input_f = 0;
							goto settings_calibration;
						}
					}				
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3b84:	88 5b       	subi	r24, 0xB8	; 184
    3b86:	91 09       	sbc	r25, r1
    3b88:	c4 97       	sbiw	r24, 0x34	; 52
    3b8a:	08 f0       	brcs	.+2      	; 0x3b8e <main+0x960>
    3b8c:	70 c0       	rjmp	.+224    	; 0x3c6e <main+0xa40>
				{
btn_ok:
					if (input_f == 2)
    3b8e:	92 e0       	ldi	r25, 0x02	; 2
    3b90:	39 16       	cp	r3, r25
    3b92:	09 f4       	brne	.+2      	; 0x3b96 <main+0x968>
    3b94:	55 c0       	rjmp	.+170    	; 0x3c40 <main+0xa12>
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
					}
					else if (input_f == 4)
    3b96:	a4 e0       	ldi	r26, 0x04	; 4
    3b98:	3a 16       	cp	r3, r26
    3b9a:	09 f4       	brne	.+2      	; 0x3b9e <main+0x970>
    3b9c:	5d c0       	rjmp	.+186    	; 0x3c58 <main+0xa2a>
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
					}
					else if (input_f == 6)
    3b9e:	b6 e0       	ldi	r27, 0x06	; 6
    3ba0:	3b 16       	cp	r3, r27
    3ba2:	09 f4       	brne	.+2      	; 0x3ba6 <main+0x978>
    3ba4:	82 c2       	rjmp	.+1284   	; 0x40aa <main+0xe7c>
						kp_val = 0;
						mxpos = 13;
						input_f = 0;
						break;
					}
					else if (input_f == 8)
    3ba6:	28 e0       	ldi	r18, 0x08	; 8
    3ba8:	32 12       	cpse	r3, r18
    3baa:	25 c0       	rjmp	.+74     	; 0x3bf6 <main+0x9c8>
    3bac:	4d 8a       	std	Y+21, r4	; 0x15
    3bae:	5e 8a       	std	Y+22, r5	; 0x16
    3bb0:	6f 8a       	std	Y+23, r6	; 0x17
    3bb2:	78 8e       	std	Y+24, r7	; 0x18
    3bb4:	29 8c       	ldd	r2, Y+25	; 0x19
    3bb6:	3a 8c       	ldd	r3, Y+26	; 0x1a
					{
						eeprom_update_word(&temp_divider_hold,(Read_ADC(0,0x00) * 100UL) / (uint32_t)kp_val);
    3bb8:	60 e0       	ldi	r22, 0x00	; 0
    3bba:	80 e0       	ldi	r24, 0x00	; 0
    3bbc:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <Read_ADC>
    3bc0:	9c 01       	movw	r18, r24
    3bc2:	a4 e6       	ldi	r26, 0x64	; 100
    3bc4:	b0 e0       	ldi	r27, 0x00	; 0
    3bc6:	0e 94 99 2d 	call	0x5b32	; 0x5b32 <__umulhisi3>
    3bca:	2d 89       	ldd	r18, Y+21	; 0x15
    3bcc:	3e 89       	ldd	r19, Y+22	; 0x16
    3bce:	4f 89       	ldd	r20, Y+23	; 0x17
    3bd0:	58 8d       	ldd	r21, Y+24	; 0x18
    3bd2:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    3bd6:	b9 01       	movw	r22, r18
    3bd8:	82 e0       	ldi	r24, 0x02	; 2
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	0e 94 82 2f 	call	0x5f04	; 0x5f04 <__eeupd_word_m32>
						kp_val = 0;
    3be0:	1d 8a       	std	Y+21, r1	; 0x15
    3be2:	1e 8a       	std	Y+22, r1	; 0x16
    3be4:	1f 8a       	std	Y+23, r1	; 0x17
    3be6:	18 8e       	std	Y+24, r1	; 0x18
						mxpos = 13;
    3be8:	0f 2e       	mov	r0, r31
    3bea:	fd e0       	ldi	r31, 0x0D	; 13
    3bec:	8f 2e       	mov	r8, r31
    3bee:	f0 2d       	mov	r31, r0
    3bf0:	91 2c       	mov	r9, r1
						input_f = 0;
						goto settings_calibration;
    3bf2:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <main+0x1ba4>
					}
					else if (input_f == 10)
    3bf6:	8a e0       	ldi	r24, 0x0A	; 10
    3bf8:	38 12       	cpse	r3, r24
    3bfa:	39 c0       	rjmp	.+114    	; 0x3c6e <main+0xa40>
    3bfc:	29 8c       	ldd	r2, Y+25	; 0x19
    3bfe:	3a 8c       	ldd	r3, Y+26	; 0x1a
					{
						eeprom_update_word(&water_flow_divider_hold,(i_water_hold * 100UL) / (uint32_t)kp_val);
    3c00:	20 91 88 03 	lds	r18, 0x0388
    3c04:	30 91 89 03 	lds	r19, 0x0389
    3c08:	40 91 8a 03 	lds	r20, 0x038A
    3c0c:	50 91 8b 03 	lds	r21, 0x038B
    3c10:	a4 e6       	ldi	r26, 0x64	; 100
    3c12:	b0 e0       	ldi	r27, 0x00	; 0
    3c14:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    3c18:	a3 01       	movw	r20, r6
    3c1a:	92 01       	movw	r18, r4
    3c1c:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    3c20:	b9 01       	movw	r22, r18
    3c22:	80 e0       	ldi	r24, 0x00	; 0
    3c24:	90 e0       	ldi	r25, 0x00	; 0
    3c26:	0e 94 82 2f 	call	0x5f04	; 0x5f04 <__eeupd_word_m32>
						kp_val = 0;
    3c2a:	1d 8a       	std	Y+21, r1	; 0x15
    3c2c:	1e 8a       	std	Y+22, r1	; 0x16
    3c2e:	1f 8a       	std	Y+23, r1	; 0x17
    3c30:	18 8e       	std	Y+24, r1	; 0x18
						mxpos = 13;
    3c32:	0f 2e       	mov	r0, r31
    3c34:	fd e0       	ldi	r31, 0x0D	; 13
    3c36:	8f 2e       	mov	r8, r31
    3c38:	f0 2d       	mov	r31, r0
    3c3a:	91 2c       	mov	r9, r1
						input_f = 0;
						goto settings_calibration;
    3c3c:	0c 94 e9 26 	jmp	0x4dd2	; 0x4dd2 <main+0x1ba4>
    3c40:	4d 82       	std	Y+5, r4	; 0x05
    3c42:	5e 82       	std	Y+6, r5	; 0x06
    3c44:	6f 82       	std	Y+7, r6	; 0x07
    3c46:	78 86       	std	Y+8, r7	; 0x08
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
    3c48:	3b 8c       	ldd	r3, Y+27	; 0x1b
				{
btn_ok:
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
    3c4a:	41 2c       	mov	r4, r1
    3c4c:	51 2c       	mov	r5, r1
    3c4e:	61 2c       	mov	r6, r1
    3c50:	71 2c       	mov	r7, r1
						mxpos = 13;
    3c52:	88 a0       	ldd	r8, Y+32	; 0x20
    3c54:	99 a0       	ldd	r9, Y+33	; 0x21
    3c56:	0b c0       	rjmp	.+22     	; 0x3c6e <main+0xa40>
    3c58:	4d 86       	std	Y+13, r4	; 0x0d
    3c5a:	5e 86       	std	Y+14, r5	; 0x0e
    3c5c:	6f 86       	std	Y+15, r6	; 0x0f
    3c5e:	78 8a       	std	Y+16, r7	; 0x10
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
    3c60:	32 2c       	mov	r3, r2
						input_f = 3;
					}
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
    3c62:	41 2c       	mov	r4, r1
    3c64:	51 2c       	mov	r5, r1
    3c66:	61 2c       	mov	r6, r1
    3c68:	71 2c       	mov	r7, r1
						mxpos = 13;
    3c6a:	88 a0       	ldd	r8, Y+32	; 0x20
    3c6c:	99 a0       	ldd	r9, Y+33	; 0x21
						mxpos = 13;
						input_f = 0;
						goto settings_calibration;
					}
				}
				while (!(PIND & (1<<PD3)));
    3c6e:	83 9b       	sbis	0x10, 3	; 16
    3c70:	fe cf       	rjmp	.-4      	; 0x3c6e <main+0xa40>
    3c72:	57 c1       	rjmp	.+686    	; 0x3f22 <main+0xcf4>
			}
			else if (TPval[0]>75 && TPval[0]<112)  // 5 6 7 8 
    3c74:	9c 01       	movw	r18, r24
    3c76:	2c 54       	subi	r18, 0x4C	; 76
    3c78:	31 09       	sbc	r19, r1
    3c7a:	24 32       	cpi	r18, 0x24	; 36
    3c7c:	31 05       	cpc	r19, r1
    3c7e:	08 f0       	brcs	.+2      	; 0x3c82 <main+0xa54>
    3c80:	b0 c0       	rjmp	.+352    	; 0x3de2 <main+0xbb4>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3c82:	8b 81       	ldd	r24, Y+3	; 0x03
    3c84:	9c 81       	ldd	r25, Y+4	; 0x04
    3c86:	9c 01       	movw	r18, r24
    3c88:	28 51       	subi	r18, 0x18	; 24
    3c8a:	31 09       	sbc	r19, r1
    3c8c:	21 33       	cpi	r18, 0x31	; 49
    3c8e:	31 05       	cpc	r19, r1
    3c90:	40 f5       	brcc	.+80     	; 0x3ce2 <main+0xab4>
				{
btn_5:
					TFT_Text("5",mxpos,77,16,black,white);
    3c92:	ee 24       	eor	r14, r14
    3c94:	ea 94       	dec	r14
    3c96:	fe 2c       	mov	r15, r14
    3c98:	00 e0       	ldi	r16, 0x00	; 0
    3c9a:	10 e0       	ldi	r17, 0x00	; 0
    3c9c:	20 e1       	ldi	r18, 0x10	; 16
    3c9e:	4d e4       	ldi	r20, 0x4D	; 77
    3ca0:	50 e0       	ldi	r21, 0x00	; 0
    3ca2:	b4 01       	movw	r22, r8
    3ca4:	88 e6       	ldi	r24, 0x68	; 104
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3cac:	9e e0       	ldi	r25, 0x0E	; 14
    3cae:	89 0e       	add	r8, r25
    3cb0:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 5;
    3cb2:	44 0c       	add	r4, r4
    3cb4:	55 1c       	adc	r5, r5
    3cb6:	66 1c       	adc	r6, r6
    3cb8:	77 1c       	adc	r7, r7
    3cba:	d3 01       	movw	r26, r6
    3cbc:	c2 01       	movw	r24, r4
    3cbe:	88 0f       	add	r24, r24
    3cc0:	99 1f       	adc	r25, r25
    3cc2:	aa 1f       	adc	r26, r26
    3cc4:	bb 1f       	adc	r27, r27
    3cc6:	88 0f       	add	r24, r24
    3cc8:	99 1f       	adc	r25, r25
    3cca:	aa 1f       	adc	r26, r26
    3ccc:	bb 1f       	adc	r27, r27
    3cce:	48 0e       	add	r4, r24
    3cd0:	59 1e       	adc	r5, r25
    3cd2:	6a 1e       	adc	r6, r26
    3cd4:	7b 1e       	adc	r7, r27
    3cd6:	a5 e0       	ldi	r26, 0x05	; 5
    3cd8:	4a 0e       	add	r4, r26
    3cda:	51 1c       	adc	r5, r1
    3cdc:	61 1c       	adc	r6, r1
    3cde:	71 1c       	adc	r7, r1
    3ce0:	7d c0       	rjmp	.+250    	; 0x3ddc <main+0xbae>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3ce2:	9c 01       	movw	r18, r24
    3ce4:	2e 54       	subi	r18, 0x4E	; 78
    3ce6:	31 09       	sbc	r19, r1
    3ce8:	20 33       	cpi	r18, 0x30	; 48
    3cea:	31 05       	cpc	r19, r1
    3cec:	40 f5       	brcc	.+80     	; 0x3d3e <main+0xb10>
				{
btn_6:
					TFT_Text("6",mxpos,77,16,black,white);
    3cee:	ee 24       	eor	r14, r14
    3cf0:	ea 94       	dec	r14
    3cf2:	fe 2c       	mov	r15, r14
    3cf4:	00 e0       	ldi	r16, 0x00	; 0
    3cf6:	10 e0       	ldi	r17, 0x00	; 0
    3cf8:	20 e1       	ldi	r18, 0x10	; 16
    3cfa:	4d e4       	ldi	r20, 0x4D	; 77
    3cfc:	50 e0       	ldi	r21, 0x00	; 0
    3cfe:	b4 01       	movw	r22, r8
    3d00:	8a e6       	ldi	r24, 0x6A	; 106
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3d08:	be e0       	ldi	r27, 0x0E	; 14
    3d0a:	8b 0e       	add	r8, r27
    3d0c:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 6;
    3d0e:	44 0c       	add	r4, r4
    3d10:	55 1c       	adc	r5, r5
    3d12:	66 1c       	adc	r6, r6
    3d14:	77 1c       	adc	r7, r7
    3d16:	d3 01       	movw	r26, r6
    3d18:	c2 01       	movw	r24, r4
    3d1a:	88 0f       	add	r24, r24
    3d1c:	99 1f       	adc	r25, r25
    3d1e:	aa 1f       	adc	r26, r26
    3d20:	bb 1f       	adc	r27, r27
    3d22:	88 0f       	add	r24, r24
    3d24:	99 1f       	adc	r25, r25
    3d26:	aa 1f       	adc	r26, r26
    3d28:	bb 1f       	adc	r27, r27
    3d2a:	48 0e       	add	r4, r24
    3d2c:	59 1e       	adc	r5, r25
    3d2e:	6a 1e       	adc	r6, r26
    3d30:	7b 1e       	adc	r7, r27
    3d32:	26 e0       	ldi	r18, 0x06	; 6
    3d34:	42 0e       	add	r4, r18
    3d36:	51 1c       	adc	r5, r1
    3d38:	61 1c       	adc	r6, r1
    3d3a:	71 1c       	adc	r7, r1
    3d3c:	4f c0       	rjmp	.+158    	; 0x3ddc <main+0xbae>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3d3e:	9c 01       	movw	r18, r24
    3d40:	22 58       	subi	r18, 0x82	; 130
    3d42:	31 09       	sbc	r19, r1
    3d44:	23 33       	cpi	r18, 0x33	; 51
    3d46:	31 05       	cpc	r19, r1
    3d48:	40 f5       	brcc	.+80     	; 0x3d9a <main+0xb6c>
				{
btn_7:
					TFT_Text("7",mxpos,77,16,black,white);
    3d4a:	ee 24       	eor	r14, r14
    3d4c:	ea 94       	dec	r14
    3d4e:	fe 2c       	mov	r15, r14
    3d50:	00 e0       	ldi	r16, 0x00	; 0
    3d52:	10 e0       	ldi	r17, 0x00	; 0
    3d54:	20 e1       	ldi	r18, 0x10	; 16
    3d56:	4d e4       	ldi	r20, 0x4D	; 77
    3d58:	50 e0       	ldi	r21, 0x00	; 0
    3d5a:	b4 01       	movw	r22, r8
    3d5c:	8c e6       	ldi	r24, 0x6C	; 108
    3d5e:	90 e0       	ldi	r25, 0x00	; 0
    3d60:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3d64:	8e e0       	ldi	r24, 0x0E	; 14
    3d66:	88 0e       	add	r8, r24
    3d68:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 7;
    3d6a:	44 0c       	add	r4, r4
    3d6c:	55 1c       	adc	r5, r5
    3d6e:	66 1c       	adc	r6, r6
    3d70:	77 1c       	adc	r7, r7
    3d72:	d3 01       	movw	r26, r6
    3d74:	c2 01       	movw	r24, r4
    3d76:	88 0f       	add	r24, r24
    3d78:	99 1f       	adc	r25, r25
    3d7a:	aa 1f       	adc	r26, r26
    3d7c:	bb 1f       	adc	r27, r27
    3d7e:	88 0f       	add	r24, r24
    3d80:	99 1f       	adc	r25, r25
    3d82:	aa 1f       	adc	r26, r26
    3d84:	bb 1f       	adc	r27, r27
    3d86:	48 0e       	add	r4, r24
    3d88:	59 1e       	adc	r5, r25
    3d8a:	6a 1e       	adc	r6, r26
    3d8c:	7b 1e       	adc	r7, r27
    3d8e:	97 e0       	ldi	r25, 0x07	; 7
    3d90:	49 0e       	add	r4, r25
    3d92:	51 1c       	adc	r5, r1
    3d94:	61 1c       	adc	r6, r1
    3d96:	71 1c       	adc	r7, r1
    3d98:	21 c0       	rjmp	.+66     	; 0x3ddc <main+0xbae>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3d9a:	88 5b       	subi	r24, 0xB8	; 184
    3d9c:	91 09       	sbc	r25, r1
    3d9e:	c4 97       	sbiw	r24, 0x34	; 52
    3da0:	e8 f4       	brcc	.+58     	; 0x3ddc <main+0xbae>
				{
btn_8:
					TFT_Text("8",mxpos,77,16,black,white);
    3da2:	ee 24       	eor	r14, r14
    3da4:	ea 94       	dec	r14
    3da6:	fe 2c       	mov	r15, r14
    3da8:	00 e0       	ldi	r16, 0x00	; 0
    3daa:	10 e0       	ldi	r17, 0x00	; 0
    3dac:	20 e1       	ldi	r18, 0x10	; 16
    3dae:	4d e4       	ldi	r20, 0x4D	; 77
    3db0:	50 e0       	ldi	r21, 0x00	; 0
    3db2:	b4 01       	movw	r22, r8
    3db4:	8e e6       	ldi	r24, 0x6E	; 110
    3db6:	90 e0       	ldi	r25, 0x00	; 0
    3db8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3dbc:	ae e0       	ldi	r26, 0x0E	; 14
    3dbe:	8a 0e       	add	r8, r26
    3dc0:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 8;
    3dc2:	aa e0       	ldi	r26, 0x0A	; 10
    3dc4:	b0 e0       	ldi	r27, 0x00	; 0
    3dc6:	a3 01       	movw	r20, r6
    3dc8:	92 01       	movw	r18, r4
    3dca:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    3dce:	2b 01       	movw	r4, r22
    3dd0:	3c 01       	movw	r6, r24
    3dd2:	b8 e0       	ldi	r27, 0x08	; 8
    3dd4:	4b 0e       	add	r4, r27
    3dd6:	51 1c       	adc	r5, r1
    3dd8:	61 1c       	adc	r6, r1
    3dda:	71 1c       	adc	r7, r1
				}
				while (!(PIND & (1<<PD3)));
    3ddc:	83 9b       	sbis	0x10, 3	; 16
    3dde:	fe cf       	rjmp	.-4      	; 0x3ddc <main+0xbae>
    3de0:	a0 c0       	rjmp	.+320    	; 0x3f22 <main+0xcf4>
			}
			else if (TPval[0]>115 && TPval[0]<150)  // 1 2 3 4 
    3de2:	84 57       	subi	r24, 0x74	; 116
    3de4:	91 09       	sbc	r25, r1
    3de6:	82 97       	sbiw	r24, 0x22	; 34
    3de8:	08 f0       	brcs	.+2      	; 0x3dec <main+0xbbe>
    3dea:	9b c0       	rjmp	.+310    	; 0x3f22 <main+0xcf4>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3dec:	8b 81       	ldd	r24, Y+3	; 0x03
    3dee:	9c 81       	ldd	r25, Y+4	; 0x04
    3df0:	9c 01       	movw	r18, r24
    3df2:	28 51       	subi	r18, 0x18	; 24
    3df4:	31 09       	sbc	r19, r1
    3df6:	21 33       	cpi	r18, 0x31	; 49
    3df8:	31 05       	cpc	r19, r1
    3dfa:	40 f5       	brcc	.+80     	; 0x3e4c <main+0xc1e>
				{
btn_1:
					TFT_Text("1",mxpos,77,16,black,white);
    3dfc:	ee 24       	eor	r14, r14
    3dfe:	ea 94       	dec	r14
    3e00:	fe 2c       	mov	r15, r14
    3e02:	00 e0       	ldi	r16, 0x00	; 0
    3e04:	10 e0       	ldi	r17, 0x00	; 0
    3e06:	20 e1       	ldi	r18, 0x10	; 16
    3e08:	4d e4       	ldi	r20, 0x4D	; 77
    3e0a:	50 e0       	ldi	r21, 0x00	; 0
    3e0c:	b4 01       	movw	r22, r8
    3e0e:	80 e6       	ldi	r24, 0x60	; 96
    3e10:	90 e0       	ldi	r25, 0x00	; 0
    3e12:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3e16:	2e e0       	ldi	r18, 0x0E	; 14
    3e18:	82 0e       	add	r8, r18
    3e1a:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 1;
    3e1c:	44 0c       	add	r4, r4
    3e1e:	55 1c       	adc	r5, r5
    3e20:	66 1c       	adc	r6, r6
    3e22:	77 1c       	adc	r7, r7
    3e24:	d3 01       	movw	r26, r6
    3e26:	c2 01       	movw	r24, r4
    3e28:	88 0f       	add	r24, r24
    3e2a:	99 1f       	adc	r25, r25
    3e2c:	aa 1f       	adc	r26, r26
    3e2e:	bb 1f       	adc	r27, r27
    3e30:	88 0f       	add	r24, r24
    3e32:	99 1f       	adc	r25, r25
    3e34:	aa 1f       	adc	r26, r26
    3e36:	bb 1f       	adc	r27, r27
    3e38:	48 0e       	add	r4, r24
    3e3a:	59 1e       	adc	r5, r25
    3e3c:	6a 1e       	adc	r6, r26
    3e3e:	7b 1e       	adc	r7, r27
    3e40:	8f ef       	ldi	r24, 0xFF	; 255
    3e42:	48 1a       	sub	r4, r24
    3e44:	58 0a       	sbc	r5, r24
    3e46:	68 0a       	sbc	r6, r24
    3e48:	78 0a       	sbc	r7, r24
    3e4a:	69 c0       	rjmp	.+210    	; 0x3f1e <main+0xcf0>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3e4c:	9c 01       	movw	r18, r24
    3e4e:	2e 54       	subi	r18, 0x4E	; 78
    3e50:	31 09       	sbc	r19, r1
    3e52:	20 33       	cpi	r18, 0x30	; 48
    3e54:	31 05       	cpc	r19, r1
    3e56:	f0 f4       	brcc	.+60     	; 0x3e94 <main+0xc66>
				{
btn_2:
					TFT_Text("2",mxpos,77,16,black,white);
    3e58:	ee 24       	eor	r14, r14
    3e5a:	ea 94       	dec	r14
    3e5c:	fe 2c       	mov	r15, r14
    3e5e:	00 e0       	ldi	r16, 0x00	; 0
    3e60:	10 e0       	ldi	r17, 0x00	; 0
    3e62:	20 e1       	ldi	r18, 0x10	; 16
    3e64:	4d e4       	ldi	r20, 0x4D	; 77
    3e66:	50 e0       	ldi	r21, 0x00	; 0
    3e68:	b4 01       	movw	r22, r8
    3e6a:	82 e6       	ldi	r24, 0x62	; 98
    3e6c:	90 e0       	ldi	r25, 0x00	; 0
    3e6e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3e72:	9e e0       	ldi	r25, 0x0E	; 14
    3e74:	89 0e       	add	r8, r25
    3e76:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 2;
    3e78:	aa e0       	ldi	r26, 0x0A	; 10
    3e7a:	b0 e0       	ldi	r27, 0x00	; 0
    3e7c:	a3 01       	movw	r20, r6
    3e7e:	92 01       	movw	r18, r4
    3e80:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    3e84:	2b 01       	movw	r4, r22
    3e86:	3c 01       	movw	r6, r24
    3e88:	a2 e0       	ldi	r26, 0x02	; 2
    3e8a:	4a 0e       	add	r4, r26
    3e8c:	51 1c       	adc	r5, r1
    3e8e:	61 1c       	adc	r6, r1
    3e90:	71 1c       	adc	r7, r1
    3e92:	45 c0       	rjmp	.+138    	; 0x3f1e <main+0xcf0>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3e94:	9c 01       	movw	r18, r24
    3e96:	22 58       	subi	r18, 0x82	; 130
    3e98:	31 09       	sbc	r19, r1
    3e9a:	23 33       	cpi	r18, 0x33	; 51
    3e9c:	31 05       	cpc	r19, r1
    3e9e:	f0 f4       	brcc	.+60     	; 0x3edc <main+0xcae>
				{
btn_3:
					TFT_Text("3",mxpos,77,16,black,white);
    3ea0:	ee 24       	eor	r14, r14
    3ea2:	ea 94       	dec	r14
    3ea4:	fe 2c       	mov	r15, r14
    3ea6:	00 e0       	ldi	r16, 0x00	; 0
    3ea8:	10 e0       	ldi	r17, 0x00	; 0
    3eaa:	20 e1       	ldi	r18, 0x10	; 16
    3eac:	4d e4       	ldi	r20, 0x4D	; 77
    3eae:	50 e0       	ldi	r21, 0x00	; 0
    3eb0:	b4 01       	movw	r22, r8
    3eb2:	84 e6       	ldi	r24, 0x64	; 100
    3eb4:	90 e0       	ldi	r25, 0x00	; 0
    3eb6:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3eba:	be e0       	ldi	r27, 0x0E	; 14
    3ebc:	8b 0e       	add	r8, r27
    3ebe:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 3;
    3ec0:	aa e0       	ldi	r26, 0x0A	; 10
    3ec2:	b0 e0       	ldi	r27, 0x00	; 0
    3ec4:	a3 01       	movw	r20, r6
    3ec6:	92 01       	movw	r18, r4
    3ec8:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    3ecc:	2b 01       	movw	r4, r22
    3ece:	3c 01       	movw	r6, r24
    3ed0:	23 e0       	ldi	r18, 0x03	; 3
    3ed2:	42 0e       	add	r4, r18
    3ed4:	51 1c       	adc	r5, r1
    3ed6:	61 1c       	adc	r6, r1
    3ed8:	71 1c       	adc	r7, r1
    3eda:	21 c0       	rjmp	.+66     	; 0x3f1e <main+0xcf0>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3edc:	88 5b       	subi	r24, 0xB8	; 184
    3ede:	91 09       	sbc	r25, r1
    3ee0:	c4 97       	sbiw	r24, 0x34	; 52
    3ee2:	e8 f4       	brcc	.+58     	; 0x3f1e <main+0xcf0>
				{
btn_4:
					TFT_Text("4",mxpos,77,16,black,white);
    3ee4:	ee 24       	eor	r14, r14
    3ee6:	ea 94       	dec	r14
    3ee8:	fe 2c       	mov	r15, r14
    3eea:	00 e0       	ldi	r16, 0x00	; 0
    3eec:	10 e0       	ldi	r17, 0x00	; 0
    3eee:	20 e1       	ldi	r18, 0x10	; 16
    3ef0:	4d e4       	ldi	r20, 0x4D	; 77
    3ef2:	50 e0       	ldi	r21, 0x00	; 0
    3ef4:	b4 01       	movw	r22, r8
    3ef6:	86 e6       	ldi	r24, 0x66	; 102
    3ef8:	90 e0       	ldi	r25, 0x00	; 0
    3efa:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3efe:	8e e0       	ldi	r24, 0x0E	; 14
    3f00:	88 0e       	add	r8, r24
    3f02:	91 1c       	adc	r9, r1
					kp_val = (kp_val * 10) + 4;
    3f04:	aa e0       	ldi	r26, 0x0A	; 10
    3f06:	b0 e0       	ldi	r27, 0x00	; 0
    3f08:	a3 01       	movw	r20, r6
    3f0a:	92 01       	movw	r18, r4
    3f0c:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    3f10:	2b 01       	movw	r4, r22
    3f12:	3c 01       	movw	r6, r24
    3f14:	a4 e0       	ldi	r26, 0x04	; 4
    3f16:	4a 0e       	add	r4, r26
    3f18:	51 1c       	adc	r5, r1
    3f1a:	61 1c       	adc	r6, r1
    3f1c:	71 1c       	adc	r7, r1
				}
				while (!(PIND & (1<<PD3)));
    3f1e:	83 9b       	sbis	0x10, 3	; 16
    3f20:	fe cf       	rjmp	.-4      	; 0x3f1e <main+0xcf0>
    3f22:	bf ef       	ldi	r27, 0xFF	; 255
    3f24:	20 e7       	ldi	r18, 0x70	; 112
    3f26:	82 e0       	ldi	r24, 0x02	; 2
    3f28:	b1 50       	subi	r27, 0x01	; 1
    3f2a:	20 40       	sbci	r18, 0x00	; 0
    3f2c:	80 40       	sbci	r24, 0x00	; 0
    3f2e:	e1 f7       	brne	.-8      	; 0x3f28 <main+0xcfa>
    3f30:	00 c0       	rjmp	.+0      	; 0x3f32 <main+0xd04>
    3f32:	00 00       	nop
    3f34:	ff cb       	rjmp	.-2050   	; 0x3734 <main+0x506>
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
					time = 2;
    3f36:	82 e0       	ldi	r24, 0x02	; 2
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	a0 e0       	ldi	r26, 0x00	; 0
    3f3c:	b0 e0       	ldi	r27, 0x00	; 0
    3f3e:	89 87       	std	Y+9, r24	; 0x09
    3f40:	9a 87       	std	Y+10, r25	; 0x0a
    3f42:	ab 87       	std	Y+11, r26	; 0x0b
    3f44:	bc 87       	std	Y+12, r27	; 0x0c
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
    3f46:	89 e1       	ldi	r24, 0x19	; 25
    3f48:	90 e0       	ldi	r25, 0x00	; 0
    3f4a:	a0 e0       	ldi	r26, 0x00	; 0
    3f4c:	b0 e0       	ldi	r27, 0x00	; 0
    3f4e:	8d 87       	std	Y+13, r24	; 0x0d
    3f50:	9e 87       	std	Y+14, r25	; 0x0e
    3f52:	af 87       	std	Y+15, r26	; 0x0f
    3f54:	b8 8b       	std	Y+16, r27	; 0x10
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
    3f56:	86 e4       	ldi	r24, 0x46	; 70
    3f58:	90 e0       	ldi	r25, 0x00	; 0
    3f5a:	a0 e0       	ldi	r26, 0x00	; 0
    3f5c:	b0 e0       	ldi	r27, 0x00	; 0
    3f5e:	8d 83       	std	Y+5, r24	; 0x05
    3f60:	9e 83       	std	Y+6, r25	; 0x06
    3f62:	af 83       	std	Y+7, r26	; 0x07
    3f64:	b8 87       	std	Y+8, r27	; 0x08
    3f66:	b0 c0       	rjmp	.+352    	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
					time = 2;
    3f68:	82 e0       	ldi	r24, 0x02	; 2
    3f6a:	90 e0       	ldi	r25, 0x00	; 0
    3f6c:	a0 e0       	ldi	r26, 0x00	; 0
    3f6e:	b0 e0       	ldi	r27, 0x00	; 0
    3f70:	89 87       	std	Y+9, r24	; 0x09
    3f72:	9a 87       	std	Y+10, r25	; 0x0a
    3f74:	ab 87       	std	Y+11, r26	; 0x0b
    3f76:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
    3f78:	82 e3       	ldi	r24, 0x32	; 50
    3f7a:	90 e0       	ldi	r25, 0x00	; 0
    3f7c:	a0 e0       	ldi	r26, 0x00	; 0
    3f7e:	b0 e0       	ldi	r27, 0x00	; 0
    3f80:	8d 87       	std	Y+13, r24	; 0x0d
    3f82:	9e 87       	std	Y+14, r25	; 0x0e
    3f84:	af 87       	std	Y+15, r26	; 0x0f
    3f86:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
    3f88:	86 e4       	ldi	r24, 0x46	; 70
    3f8a:	90 e0       	ldi	r25, 0x00	; 0
    3f8c:	a0 e0       	ldi	r26, 0x00	; 0
    3f8e:	b0 e0       	ldi	r27, 0x00	; 0
    3f90:	8d 83       	std	Y+5, r24	; 0x05
    3f92:	9e 83       	std	Y+6, r25	; 0x06
    3f94:	af 83       	std	Y+7, r26	; 0x07
    3f96:	b8 87       	std	Y+8, r27	; 0x08
    3f98:	97 c0       	rjmp	.+302    	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
					time = 2;
    3f9a:	82 e0       	ldi	r24, 0x02	; 2
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	a0 e0       	ldi	r26, 0x00	; 0
    3fa0:	b0 e0       	ldi	r27, 0x00	; 0
    3fa2:	89 87       	std	Y+9, r24	; 0x09
    3fa4:	9a 87       	std	Y+10, r25	; 0x0a
    3fa6:	ab 87       	std	Y+11, r26	; 0x0b
    3fa8:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
    3faa:	82 e3       	ldi	r24, 0x32	; 50
    3fac:	90 e0       	ldi	r25, 0x00	; 0
    3fae:	a0 e0       	ldi	r26, 0x00	; 0
    3fb0:	b0 e0       	ldi	r27, 0x00	; 0
    3fb2:	8d 87       	std	Y+13, r24	; 0x0d
    3fb4:	9e 87       	std	Y+14, r25	; 0x0e
    3fb6:	af 87       	std	Y+15, r26	; 0x0f
    3fb8:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
    3fba:	8d 83       	std	Y+5, r24	; 0x05
    3fbc:	9e 83       	std	Y+6, r25	; 0x06
    3fbe:	af 83       	std	Y+7, r26	; 0x07
    3fc0:	b8 87       	std	Y+8, r27	; 0x08
    3fc2:	82 c0       	rjmp	.+260    	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
					time = 2;
    3fc4:	82 e0       	ldi	r24, 0x02	; 2
    3fc6:	90 e0       	ldi	r25, 0x00	; 0
    3fc8:	a0 e0       	ldi	r26, 0x00	; 0
    3fca:	b0 e0       	ldi	r27, 0x00	; 0
    3fcc:	89 87       	std	Y+9, r24	; 0x09
    3fce:	9a 87       	std	Y+10, r25	; 0x0a
    3fd0:	ab 87       	std	Y+11, r26	; 0x0b
    3fd2:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
    3fd4:	82 e3       	ldi	r24, 0x32	; 50
    3fd6:	90 e0       	ldi	r25, 0x00	; 0
    3fd8:	a0 e0       	ldi	r26, 0x00	; 0
    3fda:	b0 e0       	ldi	r27, 0x00	; 0
    3fdc:	8d 87       	std	Y+13, r24	; 0x0d
    3fde:	9e 87       	std	Y+14, r25	; 0x0e
    3fe0:	af 87       	std	Y+15, r26	; 0x0f
    3fe2:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
    3fe4:	9c e3       	ldi	r25, 0x3C	; 60
    3fe6:	9d 83       	std	Y+5, r25	; 0x05
    3fe8:	1e 82       	std	Y+6, r1	; 0x06
    3fea:	1f 82       	std	Y+7, r1	; 0x07
    3fec:	18 86       	std	Y+8, r1	; 0x08
    3fee:	6c c0       	rjmp	.+216    	; 0x40c8 <main+0xe9a>
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
					time = 2;
    3ff0:	82 e0       	ldi	r24, 0x02	; 2
    3ff2:	90 e0       	ldi	r25, 0x00	; 0
    3ff4:	a0 e0       	ldi	r26, 0x00	; 0
    3ff6:	b0 e0       	ldi	r27, 0x00	; 0
    3ff8:	89 87       	std	Y+9, r24	; 0x09
    3ffa:	9a 87       	std	Y+10, r25	; 0x0a
    3ffc:	ab 87       	std	Y+11, r26	; 0x0b
    3ffe:	bc 87       	std	Y+12, r27	; 0x0c
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
    4000:	89 e1       	ldi	r24, 0x19	; 25
    4002:	90 e0       	ldi	r25, 0x00	; 0
    4004:	a0 e0       	ldi	r26, 0x00	; 0
    4006:	b0 e0       	ldi	r27, 0x00	; 0
    4008:	8d 87       	std	Y+13, r24	; 0x0d
    400a:	9e 87       	std	Y+14, r25	; 0x0e
    400c:	af 87       	std	Y+15, r26	; 0x0f
    400e:	b8 8b       	std	Y+16, r27	; 0x10
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
    4010:	86 e4       	ldi	r24, 0x46	; 70
    4012:	90 e0       	ldi	r25, 0x00	; 0
    4014:	a0 e0       	ldi	r26, 0x00	; 0
    4016:	b0 e0       	ldi	r27, 0x00	; 0
    4018:	8d 83       	std	Y+5, r24	; 0x05
    401a:	9e 83       	std	Y+6, r25	; 0x06
    401c:	af 83       	std	Y+7, r26	; 0x07
    401e:	b8 87       	std	Y+8, r27	; 0x08
    4020:	53 c0       	rjmp	.+166    	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
					time = 2;
    4022:	82 e0       	ldi	r24, 0x02	; 2
    4024:	90 e0       	ldi	r25, 0x00	; 0
    4026:	a0 e0       	ldi	r26, 0x00	; 0
    4028:	b0 e0       	ldi	r27, 0x00	; 0
    402a:	89 87       	std	Y+9, r24	; 0x09
    402c:	9a 87       	std	Y+10, r25	; 0x0a
    402e:	ab 87       	std	Y+11, r26	; 0x0b
    4030:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
    4032:	82 e3       	ldi	r24, 0x32	; 50
    4034:	90 e0       	ldi	r25, 0x00	; 0
    4036:	a0 e0       	ldi	r26, 0x00	; 0
    4038:	b0 e0       	ldi	r27, 0x00	; 0
    403a:	8d 87       	std	Y+13, r24	; 0x0d
    403c:	9e 87       	std	Y+14, r25	; 0x0e
    403e:	af 87       	std	Y+15, r26	; 0x0f
    4040:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
    4042:	86 e4       	ldi	r24, 0x46	; 70
    4044:	90 e0       	ldi	r25, 0x00	; 0
    4046:	a0 e0       	ldi	r26, 0x00	; 0
    4048:	b0 e0       	ldi	r27, 0x00	; 0
    404a:	8d 83       	std	Y+5, r24	; 0x05
    404c:	9e 83       	std	Y+6, r25	; 0x06
    404e:	af 83       	std	Y+7, r26	; 0x07
    4050:	b8 87       	std	Y+8, r27	; 0x08
    4052:	3a c0       	rjmp	.+116    	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
					time = 2;
    4054:	82 e0       	ldi	r24, 0x02	; 2
    4056:	90 e0       	ldi	r25, 0x00	; 0
    4058:	a0 e0       	ldi	r26, 0x00	; 0
    405a:	b0 e0       	ldi	r27, 0x00	; 0
    405c:	89 87       	std	Y+9, r24	; 0x09
    405e:	9a 87       	std	Y+10, r25	; 0x0a
    4060:	ab 87       	std	Y+11, r26	; 0x0b
    4062:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
    4064:	82 e3       	ldi	r24, 0x32	; 50
    4066:	90 e0       	ldi	r25, 0x00	; 0
    4068:	a0 e0       	ldi	r26, 0x00	; 0
    406a:	b0 e0       	ldi	r27, 0x00	; 0
    406c:	8d 87       	std	Y+13, r24	; 0x0d
    406e:	9e 87       	std	Y+14, r25	; 0x0e
    4070:	af 87       	std	Y+15, r26	; 0x0f
    4072:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
    4074:	8d 83       	std	Y+5, r24	; 0x05
    4076:	9e 83       	std	Y+6, r25	; 0x06
    4078:	af 83       	std	Y+7, r26	; 0x07
    407a:	b8 87       	std	Y+8, r27	; 0x08
    407c:	25 c0       	rjmp	.+74     	; 0x40c8 <main+0xe9a>
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
					time = 2;
    407e:	82 e0       	ldi	r24, 0x02	; 2
    4080:	90 e0       	ldi	r25, 0x00	; 0
    4082:	a0 e0       	ldi	r26, 0x00	; 0
    4084:	b0 e0       	ldi	r27, 0x00	; 0
    4086:	89 87       	std	Y+9, r24	; 0x09
    4088:	9a 87       	std	Y+10, r25	; 0x0a
    408a:	ab 87       	std	Y+11, r26	; 0x0b
    408c:	bc 87       	std	Y+12, r27	; 0x0c
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
    408e:	82 e3       	ldi	r24, 0x32	; 50
    4090:	90 e0       	ldi	r25, 0x00	; 0
    4092:	a0 e0       	ldi	r26, 0x00	; 0
    4094:	b0 e0       	ldi	r27, 0x00	; 0
    4096:	8d 87       	std	Y+13, r24	; 0x0d
    4098:	9e 87       	std	Y+14, r25	; 0x0e
    409a:	af 87       	std	Y+15, r26	; 0x0f
    409c:	b8 8b       	std	Y+16, r27	; 0x10
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
    409e:	9c e3       	ldi	r25, 0x3C	; 60
    40a0:	9d 83       	std	Y+5, r25	; 0x05
    40a2:	1e 82       	std	Y+6, r1	; 0x06
    40a4:	1f 82       	std	Y+7, r1	; 0x07
    40a6:	18 86       	std	Y+8, r1	; 0x08
    40a8:	0f c0       	rjmp	.+30     	; 0x40c8 <main+0xe9a>
    40aa:	29 8c       	ldd	r2, Y+25	; 0x19
    40ac:	3a 8c       	ldd	r3, Y+26	; 0x1a
    40ae:	49 86       	std	Y+9, r4	; 0x09
    40b0:	5a 86       	std	Y+10, r5	; 0x0a
    40b2:	6b 86       	std	Y+11, r6	; 0x0b
    40b4:	7c 86       	std	Y+12, r7	; 0x0c
						input_f = 5;
					}
					else if (input_f == 6)
					{
						time = kp_val;
						kp_val = 0;
    40b6:	1d 8a       	std	Y+21, r1	; 0x15
    40b8:	1e 8a       	std	Y+22, r1	; 0x16
    40ba:	1f 8a       	std	Y+23, r1	; 0x17
    40bc:	18 8e       	std	Y+24, r1	; 0x18
						mxpos = 13;
    40be:	0f 2e       	mov	r0, r31
    40c0:	fd e0       	ldi	r31, 0x0D	; 13
    40c2:	8f 2e       	mov	r8, r31
    40c4:	f0 2d       	mov	r31, r0
    40c6:	91 2c       	mov	r9, r1
	
	//End task Input system
	
	//Start confirmation input
confirmation:
	TFT_Fill(back_color);
    40c8:	8f e1       	ldi	r24, 0x1F	; 31
    40ca:	90 e0       	ldi	r25, 0x00	; 0
    40cc:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Water :      Liter",20,50,8,white,back_color);
    40d0:	0f 2e       	mov	r0, r31
    40d2:	ff e1       	ldi	r31, 0x1F	; 31
    40d4:	ef 2e       	mov	r14, r31
    40d6:	f1 2c       	mov	r15, r1
    40d8:	f0 2d       	mov	r31, r0
    40da:	0f ef       	ldi	r16, 0xFF	; 255
    40dc:	1f ef       	ldi	r17, 0xFF	; 255
    40de:	28 e0       	ldi	r18, 0x08	; 8
    40e0:	42 e3       	ldi	r20, 0x32	; 50
    40e2:	50 e0       	ldi	r21, 0x00	; 0
    40e4:	64 e1       	ldi	r22, 0x14	; 20
    40e6:	70 e0       	ldi	r23, 0x00	; 0
    40e8:	8f ea       	ldi	r24, 0xAF	; 175
    40ea:	91 e0       	ldi	r25, 0x01	; 1
    40ec:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,-1,84,50,8,white,back_color);
    40f0:	ad 81       	ldd	r26, Y+5	; 0x05
    40f2:	ab 8b       	std	Y+19, r26	; 0x13
    40f4:	be 81       	ldd	r27, Y+6	; 0x06
    40f6:	bc 8b       	std	Y+20, r27	; 0x14
    40f8:	2f 81       	ldd	r18, Y+7	; 0x07
    40fa:	29 8f       	std	Y+25, r18	; 0x19
    40fc:	88 85       	ldd	r24, Y+8	; 0x08
    40fe:	8b 8f       	std	Y+27, r24	; 0x1b
    4100:	0f 2e       	mov	r0, r31
    4102:	ff e1       	ldi	r31, 0x1F	; 31
    4104:	af 2e       	mov	r10, r31
    4106:	b1 2c       	mov	r11, r1
    4108:	f0 2d       	mov	r31, r0
    410a:	cc 24       	eor	r12, r12
    410c:	ca 94       	dec	r12
    410e:	dc 2c       	mov	r13, r12
    4110:	68 94       	set
    4112:	ee 24       	eor	r14, r14
    4114:	e3 f8       	bld	r14, 3
    4116:	02 e3       	ldi	r16, 0x32	; 50
    4118:	10 e0       	ldi	r17, 0x00	; 0
    411a:	24 e5       	ldi	r18, 0x54	; 84
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	4f ef       	ldi	r20, 0xFF	; 255
    4120:	5f ef       	ldi	r21, 0xFF	; 255
    4122:	6d 81       	ldd	r22, Y+5	; 0x05
    4124:	7e 81       	ldd	r23, Y+6	; 0x06
    4126:	8f 81       	ldd	r24, Y+7	; 0x07
    4128:	98 85       	ldd	r25, Y+8	; 0x08
    412a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Temp. :      Deg. C",20,70,8,white,back_color);
    412e:	0f 2e       	mov	r0, r31
    4130:	ff e1       	ldi	r31, 0x1F	; 31
    4132:	ef 2e       	mov	r14, r31
    4134:	f1 2c       	mov	r15, r1
    4136:	f0 2d       	mov	r31, r0
    4138:	0f ef       	ldi	r16, 0xFF	; 255
    413a:	1f ef       	ldi	r17, 0xFF	; 255
    413c:	28 e0       	ldi	r18, 0x08	; 8
    413e:	46 e4       	ldi	r20, 0x46	; 70
    4140:	50 e0       	ldi	r21, 0x00	; 0
    4142:	64 e1       	ldi	r22, 0x14	; 20
    4144:	70 e0       	ldi	r23, 0x00	; 0
    4146:	82 ec       	ldi	r24, 0xC2	; 194
    4148:	91 e0       	ldi	r25, 0x01	; 1
    414a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,-1,84,70,8,white,back_color);
    414e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4150:	9c 8f       	std	Y+28, r25	; 0x1c
    4152:	ae 85       	ldd	r26, Y+14	; 0x0e
    4154:	ad 8f       	std	Y+29, r26	; 0x1d
    4156:	bf 85       	ldd	r27, Y+15	; 0x0f
    4158:	be 8f       	std	Y+30, r27	; 0x1e
    415a:	28 89       	ldd	r18, Y+16	; 0x10
    415c:	2f 8f       	std	Y+31, r18	; 0x1f
    415e:	68 94       	set
    4160:	ee 24       	eor	r14, r14
    4162:	e3 f8       	bld	r14, 3
    4164:	06 e4       	ldi	r16, 0x46	; 70
    4166:	10 e0       	ldi	r17, 0x00	; 0
    4168:	24 e5       	ldi	r18, 0x54	; 84
    416a:	30 e0       	ldi	r19, 0x00	; 0
    416c:	4f ef       	ldi	r20, 0xFF	; 255
    416e:	5f ef       	ldi	r21, 0xFF	; 255
    4170:	6d 85       	ldd	r22, Y+13	; 0x0d
    4172:	7e 85       	ldd	r23, Y+14	; 0x0e
    4174:	8f 85       	ldd	r24, Y+15	; 0x0f
    4176:	98 89       	ldd	r25, Y+16	; 0x10
    4178:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Time  :      minute",20,90,8,white,back_color);
    417c:	0f 2e       	mov	r0, r31
    417e:	ff e1       	ldi	r31, 0x1F	; 31
    4180:	ef 2e       	mov	r14, r31
    4182:	f1 2c       	mov	r15, r1
    4184:	f0 2d       	mov	r31, r0
    4186:	0f ef       	ldi	r16, 0xFF	; 255
    4188:	1f ef       	ldi	r17, 0xFF	; 255
    418a:	28 e0       	ldi	r18, 0x08	; 8
    418c:	4a e5       	ldi	r20, 0x5A	; 90
    418e:	50 e0       	ldi	r21, 0x00	; 0
    4190:	64 e1       	ldi	r22, 0x14	; 20
    4192:	70 e0       	ldi	r23, 0x00	; 0
    4194:	86 ed       	ldi	r24, 0xD6	; 214
    4196:	91 e0       	ldi	r25, 0x01	; 1
    4198:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,-1,84,90,8,white,back_color);
    419c:	79 84       	ldd	r7, Y+9	; 0x09
    419e:	6a 84       	ldd	r6, Y+10	; 0x0a
    41a0:	5b 84       	ldd	r5, Y+11	; 0x0b
    41a2:	4c 84       	ldd	r4, Y+12	; 0x0c
    41a4:	68 94       	set
    41a6:	ee 24       	eor	r14, r14
    41a8:	e3 f8       	bld	r14, 3
    41aa:	0a e5       	ldi	r16, 0x5A	; 90
    41ac:	10 e0       	ldi	r17, 0x00	; 0
    41ae:	24 e5       	ldi	r18, 0x54	; 84
    41b0:	30 e0       	ldi	r19, 0x00	; 0
    41b2:	4f ef       	ldi	r20, 0xFF	; 255
    41b4:	5f ef       	ldi	r21, 0xFF	; 255
    41b6:	69 85       	ldd	r22, Y+9	; 0x09
    41b8:	7a 85       	ldd	r23, Y+10	; 0x0a
    41ba:	8b 85       	ldd	r24, Y+11	; 0x0b
    41bc:	9c 85       	ldd	r25, Y+12	; 0x0c
    41be:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Box(50,140,190,180,white);
    41c2:	0f ef       	ldi	r16, 0xFF	; 255
    41c4:	1f ef       	ldi	r17, 0xFF	; 255
    41c6:	24 eb       	ldi	r18, 0xB4	; 180
    41c8:	30 e0       	ldi	r19, 0x00	; 0
    41ca:	4e eb       	ldi	r20, 0xBE	; 190
    41cc:	50 e0       	ldi	r21, 0x00	; 0
    41ce:	6c e8       	ldi	r22, 0x8C	; 140
    41d0:	70 e0       	ldi	r23, 0x00	; 0
    41d2:	82 e3       	ldi	r24, 0x32	; 50
    41d4:	90 e0       	ldi	r25, 0x00	; 0
    41d6:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Box(50,200,190,240,white);
    41da:	20 ef       	ldi	r18, 0xF0	; 240
    41dc:	30 e0       	ldi	r19, 0x00	; 0
    41de:	4e eb       	ldi	r20, 0xBE	; 190
    41e0:	50 e0       	ldi	r21, 0x00	; 0
    41e2:	68 ec       	ldi	r22, 0xC8	; 200
    41e4:	70 e0       	ldi	r23, 0x00	; 0
    41e6:	82 e3       	ldi	r24, 0x32	; 50
    41e8:	90 e0       	ldi	r25, 0x00	; 0
    41ea:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("CORRECT !",57,152,16,black,white);
    41ee:	ee 24       	eor	r14, r14
    41f0:	ea 94       	dec	r14
    41f2:	fe 2c       	mov	r15, r14
    41f4:	00 e0       	ldi	r16, 0x00	; 0
    41f6:	10 e0       	ldi	r17, 0x00	; 0
    41f8:	20 e1       	ldi	r18, 0x10	; 16
    41fa:	48 e9       	ldi	r20, 0x98	; 152
    41fc:	50 e0       	ldi	r21, 0x00	; 0
    41fe:	69 e3       	ldi	r22, 0x39	; 57
    4200:	70 e0       	ldi	r23, 0x00	; 0
    4202:	8a ee       	ldi	r24, 0xEA	; 234
    4204:	91 e0       	ldi	r25, 0x01	; 1
    4206:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("INCORRECT",57,212,16,red,white);
    420a:	00 e0       	ldi	r16, 0x00	; 0
    420c:	18 ef       	ldi	r17, 0xF8	; 248
    420e:	20 e1       	ldi	r18, 0x10	; 16
    4210:	44 ed       	ldi	r20, 0xD4	; 212
    4212:	50 e0       	ldi	r21, 0x00	; 0
    4214:	69 e3       	ldi	r22, 0x39	; 57
    4216:	70 e0       	ldi	r23, 0x00	; 0
    4218:	84 ef       	ldi	r24, 0xF4	; 244
    421a:	91 e0       	ldi	r25, 0x01	; 1
    421c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    4220:	83 9b       	sbis	0x10, 3	; 16
    4222:	fe cf       	rjmp	.-4      	; 0x4220 <main+0xff2>
    4224:	19 89       	ldd	r17, Y+17	; 0x11
    4226:	0a 89       	ldd	r16, Y+18	; 0x12
	while(1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    4228:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    422c:	88 23       	and	r24, r24
    422e:	39 f0       	breq	.+14     	; 0x423e <main+0x1010>
		{
			usart_data = usart_getchar();
    4230:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    4234:	8c 30       	cpi	r24, 0x0C	; 12
    4236:	89 f1       	breq	.+98     	; 0x429a <main+0x106c>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    4238:	8b 30       	cpi	r24, 0x0B	; 11
    423a:	09 f4       	brne	.+2      	; 0x423e <main+0x1010>
    423c:	5a c9       	rjmp	.-3404   	; 0x34f2 <main+0x2c4>
				goto selection;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))
    423e:	83 99       	sbic	0x10, 3	; 16
    4240:	f3 cf       	rjmp	.-26     	; 0x4228 <main+0xffa>
		{
			Read_TPval(TPval);
    4242:	81 2f       	mov	r24, r17
    4244:	90 2f       	mov	r25, r16
    4246:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    424a:	8f e1       	ldi	r24, 0x1F	; 31
    424c:	9e e4       	ldi	r25, 0x4E	; 78
    424e:	01 97       	sbiw	r24, 0x01	; 1
    4250:	f1 f7       	brne	.-4      	; 0x424e <main+0x1020>
    4252:	00 c0       	rjmp	.+0      	; 0x4254 <main+0x1026>
    4254:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4256:	81 2f       	mov	r24, r17
    4258:	90 2f       	mov	r25, r16
    425a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>60 && TPval[1]<195)
    425e:	2b 81       	ldd	r18, Y+3	; 0x03
    4260:	3c 81       	ldd	r19, Y+4	; 0x04
    4262:	2d 53       	subi	r18, 0x3D	; 61
    4264:	31 09       	sbc	r19, r1
    4266:	26 38       	cpi	r18, 0x86	; 134
    4268:	31 05       	cpc	r19, r1
    426a:	f0 f6       	brcc	.-68     	; 0x4228 <main+0xffa>
			{
				if (TPval[0]>120 && TPval[0]<150)  //Correct button
    426c:	29 81       	ldd	r18, Y+1	; 0x01
    426e:	3a 81       	ldd	r19, Y+2	; 0x02
    4270:	c9 01       	movw	r24, r18
    4272:	89 57       	subi	r24, 0x79	; 121
    4274:	91 09       	sbc	r25, r1
    4276:	4d 97       	sbiw	r24, 0x1d	; 29
    4278:	80 f0       	brcs	.+32     	; 0x429a <main+0x106c>
				{
					break;
				}
				else if (TPval[0]>75 && TPval[0]<105)  // Incorrect button
    427a:	2c 54       	subi	r18, 0x4C	; 76
    427c:	31 09       	sbc	r19, r1
    427e:	2d 31       	cpi	r18, 0x1D	; 29
    4280:	31 05       	cpc	r19, r1
    4282:	08 f4       	brcc	.+2      	; 0x4286 <main+0x1058>
    4284:	36 c9       	rjmp	.-3476   	; 0x34f2 <main+0x2c4>
    4286:	9f ef       	ldi	r25, 0xFF	; 255
    4288:	a0 e7       	ldi	r26, 0x70	; 112
    428a:	b2 e0       	ldi	r27, 0x02	; 2
    428c:	91 50       	subi	r25, 0x01	; 1
    428e:	a0 40       	sbci	r26, 0x00	; 0
    4290:	b0 40       	sbci	r27, 0x00	; 0
    4292:	e1 f7       	brne	.-8      	; 0x428c <main+0x105e>
    4294:	00 c0       	rjmp	.+0      	; 0x4296 <main+0x1068>
    4296:	00 00       	nop
    4298:	c7 cf       	rjmp	.-114    	; 0x4228 <main+0xffa>
		}
	}
	//End confirmation input
	
	//Start progress page
	TFT_Fill(back_color);
    429a:	8f e1       	ldi	r24, 0x1F	; 31
    429c:	90 e0       	ldi	r25, 0x00	; 0
    429e:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Progress monitor...",20,20,8,white,back_color);
    42a2:	0f 2e       	mov	r0, r31
    42a4:	ff e1       	ldi	r31, 0x1F	; 31
    42a6:	ef 2e       	mov	r14, r31
    42a8:	f1 2c       	mov	r15, r1
    42aa:	f0 2d       	mov	r31, r0
    42ac:	0f ef       	ldi	r16, 0xFF	; 255
    42ae:	1f ef       	ldi	r17, 0xFF	; 255
    42b0:	28 e0       	ldi	r18, 0x08	; 8
    42b2:	44 e1       	ldi	r20, 0x14	; 20
    42b4:	50 e0       	ldi	r21, 0x00	; 0
    42b6:	64 e1       	ldi	r22, 0x14	; 20
    42b8:	70 e0       	ldi	r23, 0x00	; 0
    42ba:	8e ef       	ldi	r24, 0xFE	; 254
    42bc:	91 e0       	ldi	r25, 0x01	; 1
    42be:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	TFT_Box(30,40,210,56,white);
    42c2:	28 e3       	ldi	r18, 0x38	; 56
    42c4:	30 e0       	ldi	r19, 0x00	; 0
    42c6:	42 ed       	ldi	r20, 0xD2	; 210
    42c8:	50 e0       	ldi	r21, 0x00	; 0
    42ca:	68 e2       	ldi	r22, 0x28	; 40
    42cc:	70 e0       	ldi	r23, 0x00	; 0
    42ce:	8e e1       	ldi	r24, 0x1E	; 30
    42d0:	90 e0       	ldi	r25, 0x00	; 0
    42d2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,56,210,120,white);
    42d6:	28 e7       	ldi	r18, 0x78	; 120
    42d8:	30 e0       	ldi	r19, 0x00	; 0
    42da:	42 ed       	ldi	r20, 0xD2	; 210
    42dc:	50 e0       	ldi	r21, 0x00	; 0
    42de:	68 e3       	ldi	r22, 0x38	; 56
    42e0:	70 e0       	ldi	r23, 0x00	; 0
    42e2:	8e e1       	ldi	r24, 0x1E	; 30
    42e4:	90 e0       	ldi	r25, 0x00	; 0
    42e6:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Water:",35,44,8,black,white);
    42ea:	ee 24       	eor	r14, r14
    42ec:	ea 94       	dec	r14
    42ee:	fe 2c       	mov	r15, r14
    42f0:	00 e0       	ldi	r16, 0x00	; 0
    42f2:	10 e0       	ldi	r17, 0x00	; 0
    42f4:	28 e0       	ldi	r18, 0x08	; 8
    42f6:	4c e2       	ldi	r20, 0x2C	; 44
    42f8:	50 e0       	ldi	r21, 0x00	; 0
    42fa:	63 e2       	ldi	r22, 0x23	; 35
    42fc:	70 e0       	ldi	r23, 0x00	; 0
    42fe:	82 e1       	ldi	r24, 0x12	; 18
    4300:	92 e0       	ldi	r25, 0x02	; 2
    4302:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Valve Off",35,60,8,white,back_color); // Idle, Loading, Complete//On
    4306:	0f 2e       	mov	r0, r31
    4308:	ff e1       	ldi	r31, 0x1F	; 31
    430a:	ef 2e       	mov	r14, r31
    430c:	f1 2c       	mov	r15, r1
    430e:	f0 2d       	mov	r31, r0
    4310:	0f ef       	ldi	r16, 0xFF	; 255
    4312:	1f ef       	ldi	r17, 0xFF	; 255
    4314:	28 e0       	ldi	r18, 0x08	; 8
    4316:	4c e3       	ldi	r20, 0x3C	; 60
    4318:	50 e0       	ldi	r21, 0x00	; 0
    431a:	63 e2       	ldi	r22, 0x23	; 35
    431c:	70 e0       	ldi	r23, 0x00	; 0
    431e:	89 e1       	ldi	r24, 0x19	; 25
    4320:	92 e0       	ldi	r25, 0x02	; 2
    4322:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("0   %     0   Liter",43,72,8,white,back_color);
    4326:	28 e0       	ldi	r18, 0x08	; 8
    4328:	48 e4       	ldi	r20, 0x48	; 72
    432a:	50 e0       	ldi	r21, 0x00	; 0
    432c:	6b e2       	ldi	r22, 0x2B	; 43
    432e:	70 e0       	ldi	r23, 0x00	; 0
    4330:	8e e2       	ldi	r24, 0x2E	; 46
    4332:	92 e0       	ldi	r25, 0x02	; 2
    4334:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     Liter",35,84,8,white,back_color);
    4338:	28 e0       	ldi	r18, 0x08	; 8
    433a:	44 e5       	ldi	r20, 0x54	; 84
    433c:	50 e0       	ldi	r21, 0x00	; 0
    433e:	63 e2       	ldi	r22, 0x23	; 35
    4340:	70 e0       	ldi	r23, 0x00	; 0
    4342:	82 e4       	ldi	r24, 0x42	; 66
    4344:	92 e0       	ldi	r25, 0x02	; 2
    4346:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,-1,123,84,8,white,back_color);
    434a:	0f 2e       	mov	r0, r31
    434c:	ff e1       	ldi	r31, 0x1F	; 31
    434e:	af 2e       	mov	r10, r31
    4350:	b1 2c       	mov	r11, r1
    4352:	f0 2d       	mov	r31, r0
    4354:	cc 24       	eor	r12, r12
    4356:	ca 94       	dec	r12
    4358:	dc 2c       	mov	r13, r12
    435a:	68 94       	set
    435c:	ee 24       	eor	r14, r14
    435e:	e3 f8       	bld	r14, 3
    4360:	04 e5       	ldi	r16, 0x54	; 84
    4362:	10 e0       	ldi	r17, 0x00	; 0
    4364:	2b e7       	ldi	r18, 0x7B	; 123
    4366:	30 e0       	ldi	r19, 0x00	; 0
    4368:	4f ef       	ldi	r20, 0xFF	; 255
    436a:	5f ef       	ldi	r21, 0xFF	; 255
    436c:	6b 89       	ldd	r22, Y+19	; 0x13
    436e:	7c 89       	ldd	r23, Y+20	; 0x14
    4370:	89 8d       	ldd	r24, Y+25	; 0x19
    4372:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4374:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Remaining:     Liter",35,102,8,white,back_color);
    4378:	0f 2e       	mov	r0, r31
    437a:	ff e1       	ldi	r31, 0x1F	; 31
    437c:	ef 2e       	mov	r14, r31
    437e:	f1 2c       	mov	r15, r1
    4380:	f0 2d       	mov	r31, r0
    4382:	0f ef       	ldi	r16, 0xFF	; 255
    4384:	1f ef       	ldi	r17, 0xFF	; 255
    4386:	28 e0       	ldi	r18, 0x08	; 8
    4388:	46 e6       	ldi	r20, 0x66	; 102
    438a:	50 e0       	ldi	r21, 0x00	; 0
    438c:	63 e2       	ldi	r22, 0x23	; 35
    438e:	70 e0       	ldi	r23, 0x00	; 0
    4390:	87 e5       	ldi	r24, 0x57	; 87
    4392:	92 e0       	ldi	r25, 0x02	; 2
    4394:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,4,123,102,8,white,back_color);
    4398:	68 94       	set
    439a:	ee 24       	eor	r14, r14
    439c:	e3 f8       	bld	r14, 3
    439e:	06 e6       	ldi	r16, 0x66	; 102
    43a0:	10 e0       	ldi	r17, 0x00	; 0
    43a2:	2b e7       	ldi	r18, 0x7B	; 123
    43a4:	30 e0       	ldi	r19, 0x00	; 0
    43a6:	44 e0       	ldi	r20, 0x04	; 4
    43a8:	50 e0       	ldi	r21, 0x00	; 0
    43aa:	6b 89       	ldd	r22, Y+19	; 0x13
    43ac:	7c 89       	ldd	r23, Y+20	; 0x14
    43ae:	89 8d       	ldd	r24, Y+25	; 0x19
    43b0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    43b2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	TFT_Box(30,128,210,144,white);
    43b6:	0f ef       	ldi	r16, 0xFF	; 255
    43b8:	1f ef       	ldi	r17, 0xFF	; 255
    43ba:	20 e9       	ldi	r18, 0x90	; 144
    43bc:	30 e0       	ldi	r19, 0x00	; 0
    43be:	42 ed       	ldi	r20, 0xD2	; 210
    43c0:	50 e0       	ldi	r21, 0x00	; 0
    43c2:	60 e8       	ldi	r22, 0x80	; 128
    43c4:	70 e0       	ldi	r23, 0x00	; 0
    43c6:	8e e1       	ldi	r24, 0x1E	; 30
    43c8:	90 e0       	ldi	r25, 0x00	; 0
    43ca:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,144,210,208,white);
    43ce:	20 ed       	ldi	r18, 0xD0	; 208
    43d0:	30 e0       	ldi	r19, 0x00	; 0
    43d2:	42 ed       	ldi	r20, 0xD2	; 210
    43d4:	50 e0       	ldi	r21, 0x00	; 0
    43d6:	60 e9       	ldi	r22, 0x90	; 144
    43d8:	70 e0       	ldi	r23, 0x00	; 0
    43da:	8e e1       	ldi	r24, 0x1E	; 30
    43dc:	90 e0       	ldi	r25, 0x00	; 0
    43de:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Temperature:",35,132,8,black,white);
    43e2:	ee 24       	eor	r14, r14
    43e4:	ea 94       	dec	r14
    43e6:	fe 2c       	mov	r15, r14
    43e8:	00 e0       	ldi	r16, 0x00	; 0
    43ea:	10 e0       	ldi	r17, 0x00	; 0
    43ec:	28 e0       	ldi	r18, 0x08	; 8
    43ee:	44 e8       	ldi	r20, 0x84	; 132
    43f0:	50 e0       	ldi	r21, 0x00	; 0
    43f2:	63 e2       	ldi	r22, 0x23	; 35
    43f4:	70 e0       	ldi	r23, 0x00	; 0
    43f6:	83 e9       	ldi	r24, 0x93	; 147
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Valve Off",35,148,8,white,back_color);  //NC, Rising, Complete
    43fe:	0f 2e       	mov	r0, r31
    4400:	ff e1       	ldi	r31, 0x1F	; 31
    4402:	ef 2e       	mov	r14, r31
    4404:	f1 2c       	mov	r15, r1
    4406:	f0 2d       	mov	r31, r0
    4408:	0f ef       	ldi	r16, 0xFF	; 255
    440a:	1f ef       	ldi	r17, 0xFF	; 255
    440c:	28 e0       	ldi	r18, 0x08	; 8
    440e:	44 e9       	ldi	r20, 0x94	; 148
    4410:	50 e0       	ldi	r21, 0x00	; 0
    4412:	63 e2       	ldi	r22, 0x23	; 35
    4414:	70 e0       	ldi	r23, 0x00	; 0
    4416:	89 e1       	ldi	r24, 0x19	; 25
    4418:	92 e0       	ldi	r25, 0x02	; 2
    441a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("0   %     N   Deg.C",43,160,8,white,back_color);
    441e:	28 e0       	ldi	r18, 0x08	; 8
    4420:	40 ea       	ldi	r20, 0xA0	; 160
    4422:	50 e0       	ldi	r21, 0x00	; 0
    4424:	6b e2       	ldi	r22, 0x2B	; 43
    4426:	70 e0       	ldi	r23, 0x00	; 0
    4428:	8c e6       	ldi	r24, 0x6C	; 108
    442a:	92 e0       	ldi	r25, 0x02	; 2
    442c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     Deg.C",35,172,8,white,back_color);
    4430:	28 e0       	ldi	r18, 0x08	; 8
    4432:	4c ea       	ldi	r20, 0xAC	; 172
    4434:	50 e0       	ldi	r21, 0x00	; 0
    4436:	63 e2       	ldi	r22, 0x23	; 35
    4438:	70 e0       	ldi	r23, 0x00	; 0
    443a:	80 e8       	ldi	r24, 0x80	; 128
    443c:	92 e0       	ldi	r25, 0x02	; 2
    443e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,-1,123,172,8,white,back_color);
    4442:	68 94       	set
    4444:	ee 24       	eor	r14, r14
    4446:	e3 f8       	bld	r14, 3
    4448:	0c ea       	ldi	r16, 0xAC	; 172
    444a:	10 e0       	ldi	r17, 0x00	; 0
    444c:	2b e7       	ldi	r18, 0x7B	; 123
    444e:	30 e0       	ldi	r19, 0x00	; 0
    4450:	4f ef       	ldi	r20, 0xFF	; 255
    4452:	5f ef       	ldi	r21, 0xFF	; 255
    4454:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4456:	7d 8d       	ldd	r23, Y+29	; 0x1d
    4458:	8e 8d       	ldd	r24, Y+30	; 0x1e
    445a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    445c:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Remaining:     Deg.C",35,188,8,white,back_color);
    4460:	0f 2e       	mov	r0, r31
    4462:	ff e1       	ldi	r31, 0x1F	; 31
    4464:	ef 2e       	mov	r14, r31
    4466:	f1 2c       	mov	r15, r1
    4468:	f0 2d       	mov	r31, r0
    446a:	0f ef       	ldi	r16, 0xFF	; 255
    446c:	1f ef       	ldi	r17, 0xFF	; 255
    446e:	28 e0       	ldi	r18, 0x08	; 8
    4470:	4c eb       	ldi	r20, 0xBC	; 188
    4472:	50 e0       	ldi	r21, 0x00	; 0
    4474:	63 e2       	ldi	r22, 0x23	; 35
    4476:	70 e0       	ldi	r23, 0x00	; 0
    4478:	85 e9       	ldi	r24, 0x95	; 149
    447a:	92 e0       	ldi	r25, 0x02	; 2
    447c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,3,123,188,8,white,back_color);
    4480:	68 94       	set
    4482:	ee 24       	eor	r14, r14
    4484:	e3 f8       	bld	r14, 3
    4486:	0c eb       	ldi	r16, 0xBC	; 188
    4488:	10 e0       	ldi	r17, 0x00	; 0
    448a:	2b e7       	ldi	r18, 0x7B	; 123
    448c:	30 e0       	ldi	r19, 0x00	; 0
    448e:	43 e0       	ldi	r20, 0x03	; 3
    4490:	50 e0       	ldi	r21, 0x00	; 0
    4492:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4494:	7d 8d       	ldd	r23, Y+29	; 0x1d
    4496:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4498:	9f 8d       	ldd	r25, Y+31	; 0x1f
    449a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	TFT_Box(30,216,210,232,white);
    449e:	0f ef       	ldi	r16, 0xFF	; 255
    44a0:	1f ef       	ldi	r17, 0xFF	; 255
    44a2:	28 ee       	ldi	r18, 0xE8	; 232
    44a4:	30 e0       	ldi	r19, 0x00	; 0
    44a6:	42 ed       	ldi	r20, 0xD2	; 210
    44a8:	50 e0       	ldi	r21, 0x00	; 0
    44aa:	68 ed       	ldi	r22, 0xD8	; 216
    44ac:	70 e0       	ldi	r23, 0x00	; 0
    44ae:	8e e1       	ldi	r24, 0x1E	; 30
    44b0:	90 e0       	ldi	r25, 0x00	; 0
    44b2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,232,210,296,white);
    44b6:	28 e2       	ldi	r18, 0x28	; 40
    44b8:	31 e0       	ldi	r19, 0x01	; 1
    44ba:	42 ed       	ldi	r20, 0xD2	; 210
    44bc:	50 e0       	ldi	r21, 0x00	; 0
    44be:	68 ee       	ldi	r22, 0xE8	; 232
    44c0:	70 e0       	ldi	r23, 0x00	; 0
    44c2:	8e e1       	ldi	r24, 0x1E	; 30
    44c4:	90 e0       	ldi	r25, 0x00	; 0
    44c6:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Time:",35,220,8,black,white);
    44ca:	ee 24       	eor	r14, r14
    44cc:	ea 94       	dec	r14
    44ce:	fe 2c       	mov	r15, r14
    44d0:	00 e0       	ldi	r16, 0x00	; 0
    44d2:	10 e0       	ldi	r17, 0x00	; 0
    44d4:	28 e0       	ldi	r18, 0x08	; 8
    44d6:	4c ed       	ldi	r20, 0xDC	; 220
    44d8:	50 e0       	ldi	r21, 0x00	; 0
    44da:	63 e2       	ldi	r22, 0x23	; 35
    44dc:	70 e0       	ldi	r23, 0x00	; 0
    44de:	8a ea       	ldi	r24, 0xAA	; 170
    44e0:	92 e0       	ldi	r25, 0x02	; 2
    44e2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Idle",35,236,8,white,back_color);   //Idle , Counting, Complete
    44e6:	0f 2e       	mov	r0, r31
    44e8:	ff e1       	ldi	r31, 0x1F	; 31
    44ea:	ef 2e       	mov	r14, r31
    44ec:	f1 2c       	mov	r15, r1
    44ee:	f0 2d       	mov	r31, r0
    44f0:	0f ef       	ldi	r16, 0xFF	; 255
    44f2:	1f ef       	ldi	r17, 0xFF	; 255
    44f4:	28 e0       	ldi	r18, 0x08	; 8
    44f6:	4c ee       	ldi	r20, 0xEC	; 236
    44f8:	50 e0       	ldi	r21, 0x00	; 0
    44fa:	63 e2       	ldi	r22, 0x23	; 35
    44fc:	70 e0       	ldi	r23, 0x00	; 0
    44fe:	80 eb       	ldi	r24, 0xB0	; 176
    4500:	92 e0       	ldi	r25, 0x02	; 2
    4502:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     min",35,248,8,white,back_color);
    4506:	28 e0       	ldi	r18, 0x08	; 8
    4508:	48 ef       	ldi	r20, 0xF8	; 248
    450a:	50 e0       	ldi	r21, 0x00	; 0
    450c:	63 e2       	ldi	r22, 0x23	; 35
    450e:	70 e0       	ldi	r23, 0x00	; 0
    4510:	80 ec       	ldi	r24, 0xC0	; 192
    4512:	92 e0       	ldi	r25, 0x02	; 2
    4514:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,-1,123,248,8,white,back_color);
    4518:	68 94       	set
    451a:	ee 24       	eor	r14, r14
    451c:	e3 f8       	bld	r14, 3
    451e:	08 ef       	ldi	r16, 0xF8	; 248
    4520:	10 e0       	ldi	r17, 0x00	; 0
    4522:	2b e7       	ldi	r18, 0x7B	; 123
    4524:	30 e0       	ldi	r19, 0x00	; 0
    4526:	4f ef       	ldi	r20, 0xFF	; 255
    4528:	5f ef       	ldi	r21, 0xFF	; 255
    452a:	67 2d       	mov	r22, r7
    452c:	76 2d       	mov	r23, r6
    452e:	85 2d       	mov	r24, r5
    4530:	94 2d       	mov	r25, r4
    4532:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Counted  : 0      min",35,260,8,white,back_color);
    4536:	0f 2e       	mov	r0, r31
    4538:	ff e1       	ldi	r31, 0x1F	; 31
    453a:	ef 2e       	mov	r14, r31
    453c:	f1 2c       	mov	r15, r1
    453e:	f0 2d       	mov	r31, r0
    4540:	0f ef       	ldi	r16, 0xFF	; 255
    4542:	1f ef       	ldi	r17, 0xFF	; 255
    4544:	28 e0       	ldi	r18, 0x08	; 8
    4546:	44 e0       	ldi	r20, 0x04	; 4
    4548:	51 e0       	ldi	r21, 0x01	; 1
    454a:	63 e2       	ldi	r22, 0x23	; 35
    454c:	70 e0       	ldi	r23, 0x00	; 0
    454e:	83 ed       	ldi	r24, 0xD3	; 211
    4550:	92 e0       	ldi	r25, 0x02	; 2
    4552:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Remaining:       min",35,276,8,white,back_color);
    4556:	28 e0       	ldi	r18, 0x08	; 8
    4558:	44 e1       	ldi	r20, 0x14	; 20
    455a:	51 e0       	ldi	r21, 0x01	; 1
    455c:	63 e2       	ldi	r22, 0x23	; 35
    455e:	70 e0       	ldi	r23, 0x00	; 0
    4560:	89 ee       	ldi	r24, 0xE9	; 233
    4562:	92 e0       	ldi	r25, 0x02	; 2
    4564:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,4,123,276,8,white,back_color);
    4568:	68 94       	set
    456a:	ee 24       	eor	r14, r14
    456c:	e3 f8       	bld	r14, 3
    456e:	04 e1       	ldi	r16, 0x14	; 20
    4570:	11 e0       	ldi	r17, 0x01	; 1
    4572:	2b e7       	ldi	r18, 0x7B	; 123
    4574:	30 e0       	ldi	r19, 0x00	; 0
    4576:	44 e0       	ldi	r20, 0x04	; 4
    4578:	50 e0       	ldi	r21, 0x00	; 0
    457a:	67 2d       	mov	r22, r7
    457c:	76 2d       	mov	r23, r6
    457e:	85 2d       	mov	r24, r5
    4580:	94 2d       	mov	r25, r4
    4582:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	//Applying one by one method to calculate water, temperature and time measurement
	
	i_water = 0;
    4586:	10 92 8c 03 	sts	0x038C, r1
    458a:	10 92 8d 03 	sts	0x038D, r1
    458e:	10 92 8e 03 	sts	0x038E, r1
    4592:	10 92 8f 03 	sts	0x038F, r1
	i_time = 0;
    4596:	10 92 84 03 	sts	0x0384, r1
    459a:	10 92 85 03 	sts	0x0385, r1
    459e:	10 92 86 03 	sts	0x0386, r1
    45a2:	10 92 87 03 	sts	0x0387, r1
    45a6:	3f c0       	rjmp	.+126    	; 0x4626 <main+0x13f8>
	while (1) //This while loop is for water valve open after 1 second
	{
		if (i_time > 0)
		{
			//PORTD |= (1<<0);  //This port pin is for water valve on
			usart_putchar(97);
    45a8:	81 e6       	ldi	r24, 0x61	; 97
    45aa:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    45ae:	2f ef       	ldi	r18, 0xFF	; 255
    45b0:	80 e7       	ldi	r24, 0x70	; 112
    45b2:	92 e0       	ldi	r25, 0x02	; 2
    45b4:	21 50       	subi	r18, 0x01	; 1
    45b6:	80 40       	sbci	r24, 0x00	; 0
    45b8:	90 40       	sbci	r25, 0x00	; 0
    45ba:	e1 f7       	brne	.-8      	; 0x45b4 <main+0x1386>
    45bc:	00 c0       	rjmp	.+0      	; 0x45be <main+0x1390>
    45be:	00 00       	nop
			_delay_ms(100);
			usart_putchar(97);
    45c0:	81 e6       	ldi	r24, 0x61	; 97
    45c2:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
			TFT_Text("On ",171,60,8,white,red);
    45c6:	0f 2e       	mov	r0, r31
    45c8:	e1 2c       	mov	r14, r1
    45ca:	f8 ef       	ldi	r31, 0xF8	; 248
    45cc:	ff 2e       	mov	r15, r31
    45ce:	f0 2d       	mov	r31, r0
    45d0:	0f ef       	ldi	r16, 0xFF	; 255
    45d2:	1f ef       	ldi	r17, 0xFF	; 255
    45d4:	28 e0       	ldi	r18, 0x08	; 8
    45d6:	4c e3       	ldi	r20, 0x3C	; 60
    45d8:	50 e0       	ldi	r21, 0x00	; 0
    45da:	6b ea       	ldi	r22, 0xAB	; 171
    45dc:	70 e0       	ldi	r23, 0x00	; 0
    45de:	8e ef       	ldi	r24, 0xFE	; 254
    45e0:	92 e0       	ldi	r25, 0x02	; 2
    45e2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	while (1) //This while loop is for water calculation
	{
		water_read = (i_water * 100UL)/(uint32_t)water_flow_divider; //This is the assumption to calculate water 1 liter = 2 rotation of propeller
    45e6:	20 91 8c 03 	lds	r18, 0x038C
    45ea:	30 91 8d 03 	lds	r19, 0x038D
    45ee:	40 91 8e 03 	lds	r20, 0x038E
    45f2:	50 91 8f 03 	lds	r21, 0x038F
    45f6:	a4 e6       	ldi	r26, 0x64	; 100
    45f8:	b0 e0       	ldi	r27, 0x00	; 0
    45fa:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    45fe:	20 91 7c 03 	lds	r18, 0x037C
    4602:	30 91 7d 03 	lds	r19, 0x037D
    4606:	40 e0       	ldi	r20, 0x00	; 0
    4608:	50 e0       	ldi	r21, 0x00	; 0
    460a:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    460e:	29 01       	movw	r4, r18
    4610:	3a 01       	movw	r6, r20
		if (water_read >= water)
    4612:	8d 81       	ldd	r24, Y+5	; 0x05
    4614:	9e 81       	ldd	r25, Y+6	; 0x06
    4616:	af 81       	ldd	r26, Y+7	; 0x07
    4618:	b8 85       	ldd	r27, Y+8	; 0x08
    461a:	28 17       	cp	r18, r24
    461c:	39 07       	cpc	r19, r25
    461e:	4a 07       	cpc	r20, r26
    4620:	5b 07       	cpc	r21, r27
    4622:	28 f1       	brcs	.+74     	; 0x466e <main+0x1440>
    4624:	c1 c5       	rjmp	.+2946   	; 0x51a8 <main+0x1f7a>
			_delay_ms(100);
			usart_putchar(97);
			TFT_Text("On ",171,60,8,white,red);
			break;
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4626:	aa 24       	eor	r10, r10
    4628:	aa 94       	dec	r10
    462a:	ba 2c       	mov	r11, r10
    462c:	0f 2e       	mov	r0, r31
    462e:	ff e1       	ldi	r31, 0x1F	; 31
    4630:	cf 2e       	mov	r12, r31
    4632:	d1 2c       	mov	r13, r1
    4634:	f0 2d       	mov	r31, r0
    4636:	68 94       	set
    4638:	ee 24       	eor	r14, r14
    463a:	e3 f8       	bld	r14, 3
    463c:	05 e0       	ldi	r16, 0x05	; 5
    463e:	10 e0       	ldi	r17, 0x00	; 0
    4640:	25 e0       	ldi	r18, 0x05	; 5
    4642:	30 e0       	ldi	r19, 0x00	; 0
    4644:	44 e0       	ldi	r20, 0x04	; 4
    4646:	50 e0       	ldi	r21, 0x00	; 0
    4648:	60 e0       	ldi	r22, 0x00	; 0
    464a:	70 e0       	ldi	r23, 0x00	; 0
    464c:	80 e0       	ldi	r24, 0x00	; 0
    464e:	90 e0       	ldi	r25, 0x00	; 0
    4650:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_water = 0;
	i_time = 0;
	while (1) //This while loop is for water valve open after 1 second
	{
		if (i_time > 0)
    4654:	80 91 84 03 	lds	r24, 0x0384
    4658:	90 91 85 03 	lds	r25, 0x0385
    465c:	a0 91 86 03 	lds	r26, 0x0386
    4660:	b0 91 87 03 	lds	r27, 0x0387
    4664:	89 2b       	or	r24, r25
    4666:	8a 2b       	or	r24, r26
    4668:	8b 2b       	or	r24, r27
    466a:	e9 f2       	breq	.-70     	; 0x4626 <main+0x13f8>
    466c:	9d cf       	rjmp	.-198    	; 0x45a8 <main+0x137a>
		if (water_read >= water)
		{
			break;
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    466e:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4672:	88 23       	and	r24, r24
    4674:	29 f0       	breq	.+10     	; 0x4680 <main+0x1452>
		{
			usart_data = usart_getchar();
    4676:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    467a:	8c 30       	cpi	r24, 0x0C	; 12
    467c:	e1 f4       	brne	.+56     	; 0x46b6 <main+0x1488>
    467e:	8c c0       	rjmp	.+280    	; 0x4798 <main+0x156a>
				break;
			}
			else usart_data = 0;
		}
		
		else if (!(PIND & (1<<PD3)))
    4680:	83 99       	sbic	0x10, 3	; 16
    4682:	19 c0       	rjmp	.+50     	; 0x46b6 <main+0x1488>
		{
			Read_TPval(TPval);
    4684:	c1 01       	movw	r24, r2
    4686:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    468a:	af e1       	ldi	r26, 0x1F	; 31
    468c:	be e4       	ldi	r27, 0x4E	; 78
    468e:	11 97       	sbiw	r26, 0x01	; 1
    4690:	f1 f7       	brne	.-4      	; 0x468e <main+0x1460>
    4692:	00 c0       	rjmp	.+0      	; 0x4694 <main+0x1466>
    4694:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4696:	c1 01       	movw	r24, r2
    4698:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>190 && TPval[0]<222 && TPval[1]>37 && TPval[1]<216)
    469c:	89 81       	ldd	r24, Y+1	; 0x01
    469e:	9a 81       	ldd	r25, Y+2	; 0x02
    46a0:	8f 5b       	subi	r24, 0xBF	; 191
    46a2:	91 09       	sbc	r25, r1
    46a4:	4f 97       	sbiw	r24, 0x1f	; 31
    46a6:	38 f4       	brcc	.+14     	; 0x46b6 <main+0x1488>
    46a8:	8b 81       	ldd	r24, Y+3	; 0x03
    46aa:	9c 81       	ldd	r25, Y+4	; 0x04
    46ac:	86 97       	sbiw	r24, 0x26	; 38
    46ae:	82 3b       	cpi	r24, 0xB2	; 178
    46b0:	91 05       	cpc	r25, r1
    46b2:	08 f4       	brcc	.+2      	; 0x46b6 <main+0x1488>
    46b4:	71 c0       	rjmp	.+226    	; 0x4798 <main+0x156a>
			{
				break;
			}
		}
		TFT_PutsInt((water_read*100)/water,-1,43,72,8,white,back_color);
    46b6:	a4 e6       	ldi	r26, 0x64	; 100
    46b8:	b0 e0       	ldi	r27, 0x00	; 0
    46ba:	a3 01       	movw	r20, r6
    46bc:	92 01       	movw	r18, r4
    46be:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    46c2:	2d 81       	ldd	r18, Y+5	; 0x05
    46c4:	3e 81       	ldd	r19, Y+6	; 0x06
    46c6:	4f 81       	ldd	r20, Y+7	; 0x07
    46c8:	58 85       	ldd	r21, Y+8	; 0x08
    46ca:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    46ce:	ca 01       	movw	r24, r20
    46d0:	b9 01       	movw	r22, r18
    46d2:	0f 2e       	mov	r0, r31
    46d4:	ff e1       	ldi	r31, 0x1F	; 31
    46d6:	af 2e       	mov	r10, r31
    46d8:	b1 2c       	mov	r11, r1
    46da:	f0 2d       	mov	r31, r0
    46dc:	cc 24       	eor	r12, r12
    46de:	ca 94       	dec	r12
    46e0:	dc 2c       	mov	r13, r12
    46e2:	68 94       	set
    46e4:	ee 24       	eor	r14, r14
    46e6:	e3 f8       	bld	r14, 3
    46e8:	08 e4       	ldi	r16, 0x48	; 72
    46ea:	10 e0       	ldi	r17, 0x00	; 0
    46ec:	2b e2       	ldi	r18, 0x2B	; 43
    46ee:	30 e0       	ldi	r19, 0x00	; 0
    46f0:	4f ef       	ldi	r20, 0xFF	; 255
    46f2:	5f ef       	ldi	r21, 0xFF	; 255
    46f4:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(water_read,-1,123,72,8,white,back_color);
    46f8:	2b e7       	ldi	r18, 0x7B	; 123
    46fa:	30 e0       	ldi	r19, 0x00	; 0
    46fc:	4f ef       	ldi	r20, 0xFF	; 255
    46fe:	5f ef       	ldi	r21, 0xFF	; 255
    4700:	c3 01       	movw	r24, r6
    4702:	b2 01       	movw	r22, r4
    4704:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
    4708:	6d 81       	ldd	r22, Y+5	; 0x05
    470a:	7e 81       	ldd	r23, Y+6	; 0x06
    470c:	8f 81       	ldd	r24, Y+7	; 0x07
    470e:	98 85       	ldd	r25, Y+8	; 0x08
    4710:	64 19       	sub	r22, r4
    4712:	75 09       	sbc	r23, r5
    4714:	86 09       	sbc	r24, r6
    4716:	97 09       	sbc	r25, r7
    4718:	06 e6       	ldi	r16, 0x66	; 102
    471a:	10 e0       	ldi	r17, 0x00	; 0
    471c:	2b e7       	ldi	r18, 0x7B	; 123
    471e:	30 e0       	ldi	r19, 0x00	; 0
    4720:	44 e0       	ldi	r20, 0x04	; 4
    4722:	50 e0       	ldi	r21, 0x00	; 0
    4724:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4728:	60 91 84 03 	lds	r22, 0x0384
    472c:	70 91 85 03 	lds	r23, 0x0385
    4730:	80 91 86 03 	lds	r24, 0x0386
    4734:	90 91 87 03 	lds	r25, 0x0387
    4738:	aa 24       	eor	r10, r10
    473a:	aa 94       	dec	r10
    473c:	ba 2c       	mov	r11, r10
    473e:	0f 2e       	mov	r0, r31
    4740:	ff e1       	ldi	r31, 0x1F	; 31
    4742:	cf 2e       	mov	r12, r31
    4744:	d1 2c       	mov	r13, r1
    4746:	f0 2d       	mov	r31, r0
    4748:	05 e0       	ldi	r16, 0x05	; 5
    474a:	10 e0       	ldi	r17, 0x00	; 0
    474c:	25 e0       	ldi	r18, 0x05	; 5
    474e:	30 e0       	ldi	r19, 0x00	; 0
    4750:	44 e0       	ldi	r20, 0x04	; 4
    4752:	50 e0       	ldi	r21, 0x00	; 0
    4754:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	while (1) //This while loop is for water calculation
	{
		water_read = (i_water * 100UL)/(uint32_t)water_flow_divider; //This is the assumption to calculate water 1 liter = 2 rotation of propeller
    4758:	20 91 8c 03 	lds	r18, 0x038C
    475c:	30 91 8d 03 	lds	r19, 0x038D
    4760:	40 91 8e 03 	lds	r20, 0x038E
    4764:	50 91 8f 03 	lds	r21, 0x038F
    4768:	a4 e6       	ldi	r26, 0x64	; 100
    476a:	b0 e0       	ldi	r27, 0x00	; 0
    476c:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    4770:	20 91 7c 03 	lds	r18, 0x037C
    4774:	30 91 7d 03 	lds	r19, 0x037D
    4778:	40 e0       	ldi	r20, 0x00	; 0
    477a:	50 e0       	ldi	r21, 0x00	; 0
    477c:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    4780:	29 01       	movw	r4, r18
    4782:	3a 01       	movw	r6, r20
		if (water_read >= water)
    4784:	8d 81       	ldd	r24, Y+5	; 0x05
    4786:	9e 81       	ldd	r25, Y+6	; 0x06
    4788:	af 81       	ldd	r26, Y+7	; 0x07
    478a:	b8 85       	ldd	r27, Y+8	; 0x08
    478c:	28 17       	cp	r18, r24
    478e:	39 07       	cpc	r19, r25
    4790:	4a 07       	cpc	r20, r26
    4792:	5b 07       	cpc	r21, r27
    4794:	08 f4       	brcc	.+2      	; 0x4798 <main+0x156a>
    4796:	6b cf       	rjmp	.-298    	; 0x466e <main+0x1440>
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	//PORTD &= ~(1<<0); //This port pin is for water valve off
	usart_putchar(98);
    4798:	82 e6       	ldi	r24, 0x62	; 98
    479a:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    479e:	9f ef       	ldi	r25, 0xFF	; 255
    47a0:	a0 e7       	ldi	r26, 0x70	; 112
    47a2:	b2 e0       	ldi	r27, 0x02	; 2
    47a4:	91 50       	subi	r25, 0x01	; 1
    47a6:	a0 40       	sbci	r26, 0x00	; 0
    47a8:	b0 40       	sbci	r27, 0x00	; 0
    47aa:	e1 f7       	brne	.-8      	; 0x47a4 <main+0x1576>
    47ac:	00 c0       	rjmp	.+0      	; 0x47ae <main+0x1580>
    47ae:	00 00       	nop
	_delay_ms(100);
	usart_putchar(98);
    47b0:	82 e6       	ldi	r24, 0x62	; 98
    47b2:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
	TFT_Text("Off",171,60,8,white,back_color);
    47b6:	0f 2e       	mov	r0, r31
    47b8:	ff e1       	ldi	r31, 0x1F	; 31
    47ba:	ef 2e       	mov	r14, r31
    47bc:	f1 2c       	mov	r15, r1
    47be:	f0 2d       	mov	r31, r0
    47c0:	0f ef       	ldi	r16, 0xFF	; 255
    47c2:	1f ef       	ldi	r17, 0xFF	; 255
    47c4:	28 e0       	ldi	r18, 0x08	; 8
    47c6:	4c e3       	ldi	r20, 0x3C	; 60
    47c8:	50 e0       	ldi	r21, 0x00	; 0
    47ca:	6b ea       	ldi	r22, 0xAB	; 171
    47cc:	70 e0       	ldi	r23, 0x00	; 0
    47ce:	8a e2       	ldi	r24, 0x2A	; 42
    47d0:	92 e0       	ldi	r25, 0x02	; 2
    47d2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	//Updating last status for water
	TFT_PutsInt(100,-1,43,72,8,white,back_color);
    47d6:	0f 2e       	mov	r0, r31
    47d8:	ff e1       	ldi	r31, 0x1F	; 31
    47da:	af 2e       	mov	r10, r31
    47dc:	b1 2c       	mov	r11, r1
    47de:	f0 2d       	mov	r31, r0
    47e0:	cc 24       	eor	r12, r12
    47e2:	ca 94       	dec	r12
    47e4:	dc 2c       	mov	r13, r12
    47e6:	68 94       	set
    47e8:	ee 24       	eor	r14, r14
    47ea:	e3 f8       	bld	r14, 3
    47ec:	08 e4       	ldi	r16, 0x48	; 72
    47ee:	10 e0       	ldi	r17, 0x00	; 0
    47f0:	2b e2       	ldi	r18, 0x2B	; 43
    47f2:	30 e0       	ldi	r19, 0x00	; 0
    47f4:	4f ef       	ldi	r20, 0xFF	; 255
    47f6:	5f ef       	ldi	r21, 0xFF	; 255
    47f8:	64 e6       	ldi	r22, 0x64	; 100
    47fa:	70 e0       	ldi	r23, 0x00	; 0
    47fc:	80 e0       	ldi	r24, 0x00	; 0
    47fe:	90 e0       	ldi	r25, 0x00	; 0
    4800:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(water,-1,123,72,8,white,back_color);
    4804:	2b e7       	ldi	r18, 0x7B	; 123
    4806:	30 e0       	ldi	r19, 0x00	; 0
    4808:	4f ef       	ldi	r20, 0xFF	; 255
    480a:	5f ef       	ldi	r21, 0xFF	; 255
    480c:	6b 89       	ldd	r22, Y+19	; 0x13
    480e:	7c 89       	ldd	r23, Y+20	; 0x14
    4810:	89 8d       	ldd	r24, Y+25	; 0x19
    4812:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4814:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,4,123,102,8,white,back_color);
    4818:	06 e6       	ldi	r16, 0x66	; 102
    481a:	10 e0       	ldi	r17, 0x00	; 0
    481c:	2b e7       	ldi	r18, 0x7B	; 123
    481e:	30 e0       	ldi	r19, 0x00	; 0
    4820:	44 e0       	ldi	r20, 0x04	; 4
    4822:	50 e0       	ldi	r21, 0x00	; 0
    4824:	60 e0       	ldi	r22, 0x00	; 0
    4826:	70 e0       	ldi	r23, 0x00	; 0
    4828:	80 e0       	ldi	r24, 0x00	; 0
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
    4830:	10 92 84 03 	sts	0x0384, r1
    4834:	10 92 85 03 	sts	0x0385, r1
    4838:	10 92 86 03 	sts	0x0386, r1
    483c:	10 92 87 03 	sts	0x0387, r1
    4840:	20 c0       	rjmp	.+64     	; 0x4882 <main+0x1654>
	while (1) //This while loop is for steam valve open after 1 second
	{
		if (i_time > 0)
		{
			//PORTD |= (1<<1);  //This port pin is for steam valve on
			usart_putchar(99);
    4842:	83 e6       	ldi	r24, 0x63	; 99
    4844:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    4848:	2f ef       	ldi	r18, 0xFF	; 255
    484a:	80 e7       	ldi	r24, 0x70	; 112
    484c:	92 e0       	ldi	r25, 0x02	; 2
    484e:	21 50       	subi	r18, 0x01	; 1
    4850:	80 40       	sbci	r24, 0x00	; 0
    4852:	90 40       	sbci	r25, 0x00	; 0
    4854:	e1 f7       	brne	.-8      	; 0x484e <main+0x1620>
    4856:	00 c0       	rjmp	.+0      	; 0x4858 <main+0x162a>
    4858:	00 00       	nop
			_delay_ms(100);
			usart_putchar(99);
    485a:	83 e6       	ldi	r24, 0x63	; 99
    485c:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
			TFT_Text("On ",171,148,8,white,red);
    4860:	0f 2e       	mov	r0, r31
    4862:	e1 2c       	mov	r14, r1
    4864:	f8 ef       	ldi	r31, 0xF8	; 248
    4866:	ff 2e       	mov	r15, r31
    4868:	f0 2d       	mov	r31, r0
    486a:	0f ef       	ldi	r16, 0xFF	; 255
    486c:	1f ef       	ldi	r17, 0xFF	; 255
    486e:	28 e0       	ldi	r18, 0x08	; 8
    4870:	44 e9       	ldi	r20, 0x94	; 148
    4872:	50 e0       	ldi	r21, 0x00	; 0
    4874:	6b ea       	ldi	r22, 0xAB	; 171
    4876:	70 e0       	ldi	r23, 0x00	; 0
    4878:	8e ef       	ldi	r24, 0xFE	; 254
    487a:	92 e0       	ldi	r25, 0x02	; 2
    487c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			break;
    4880:	24 c0       	rjmp	.+72     	; 0x48ca <main+0x169c>
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4882:	aa 24       	eor	r10, r10
    4884:	aa 94       	dec	r10
    4886:	ba 2c       	mov	r11, r10
    4888:	0f 2e       	mov	r0, r31
    488a:	ff e1       	ldi	r31, 0x1F	; 31
    488c:	cf 2e       	mov	r12, r31
    488e:	d1 2c       	mov	r13, r1
    4890:	f0 2d       	mov	r31, r0
    4892:	68 94       	set
    4894:	ee 24       	eor	r14, r14
    4896:	e3 f8       	bld	r14, 3
    4898:	05 e0       	ldi	r16, 0x05	; 5
    489a:	10 e0       	ldi	r17, 0x00	; 0
    489c:	25 e0       	ldi	r18, 0x05	; 5
    489e:	30 e0       	ldi	r19, 0x00	; 0
    48a0:	44 e0       	ldi	r20, 0x04	; 4
    48a2:	50 e0       	ldi	r21, 0x00	; 0
    48a4:	60 e0       	ldi	r22, 0x00	; 0
    48a6:	70 e0       	ldi	r23, 0x00	; 0
    48a8:	80 e0       	ldi	r24, 0x00	; 0
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,4,123,102,8,white,back_color);
	
	i_time = 0;
	while (1) //This while loop is for steam valve open after 1 second
	{
		if (i_time > 0)
    48b0:	80 91 84 03 	lds	r24, 0x0384
    48b4:	90 91 85 03 	lds	r25, 0x0385
    48b8:	a0 91 86 03 	lds	r26, 0x0386
    48bc:	b0 91 87 03 	lds	r27, 0x0387
    48c0:	89 2b       	or	r24, r25
    48c2:	8a 2b       	or	r24, r26
    48c4:	8b 2b       	or	r24, r27
    48c6:	e9 f2       	breq	.-70     	; 0x4882 <main+0x1654>
    48c8:	bc cf       	rjmp	.-136    	; 0x4842 <main+0x1614>
    48ca:	af e0       	ldi	r26, 0x0F	; 15
    48cc:	b7 e2       	ldi	r27, 0x27	; 39
    48ce:	11 97       	sbiw	r26, 0x01	; 1
    48d0:	f1 f7       	brne	.-4      	; 0x48ce <main+0x16a0>
    48d2:	00 c0       	rjmp	.+0      	; 0x48d4 <main+0x16a6>
    48d4:	00 00       	nop
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	while (1) //This while loop is for temperature calculation
	{
		_delay_ms(5);
		temp_read = (Read_ADC(0,0x00) * 100UL)/(uint32_t)temp_divider; //This is the divider to adjust the temperature now 4 for experiment
    48d6:	60 e0       	ldi	r22, 0x00	; 0
    48d8:	80 e0       	ldi	r24, 0x00	; 0
    48da:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <Read_ADC>
    48de:	9c 01       	movw	r18, r24
    48e0:	a4 e6       	ldi	r26, 0x64	; 100
    48e2:	b0 e0       	ldi	r27, 0x00	; 0
    48e4:	0e 94 99 2d 	call	0x5b32	; 0x5b32 <__umulhisi3>
    48e8:	20 91 7e 03 	lds	r18, 0x037E
    48ec:	30 91 7f 03 	lds	r19, 0x037F
    48f0:	40 e0       	ldi	r20, 0x00	; 0
    48f2:	50 e0       	ldi	r21, 0x00	; 0
    48f4:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    48f8:	29 01       	movw	r4, r18
    48fa:	3a 01       	movw	r6, r20
		if (temp_read >= temp)
    48fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    48fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    4900:	af 85       	ldd	r26, Y+15	; 0x0f
    4902:	b8 89       	ldd	r27, Y+16	; 0x10
    4904:	28 17       	cp	r18, r24
    4906:	39 07       	cpc	r19, r25
    4908:	4a 07       	cpc	r20, r26
    490a:	5b 07       	cpc	r21, r27
    490c:	08 f0       	brcs	.+2      	; 0x4910 <main+0x16e2>
    490e:	9f c0       	rjmp	.+318    	; 0x4a4e <main+0x1820>
		{
			break;
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    4910:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4914:	88 23       	and	r24, r24
    4916:	29 f0       	breq	.+10     	; 0x4922 <main+0x16f4>
		{
			usart_data = usart_getchar();
    4918:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    491c:	8c 30       	cpi	r24, 0x0C	; 12
    491e:	e1 f4       	brne	.+56     	; 0x4958 <main+0x172a>
    4920:	96 c0       	rjmp	.+300    	; 0x4a4e <main+0x1820>
				break;
			}
			else usart_data = 0;
		}
		
		else if (!(PIND & (1<<PD3)))  //scan for touch data
    4922:	83 99       	sbic	0x10, 3	; 16
    4924:	19 c0       	rjmp	.+50     	; 0x4958 <main+0x172a>
		{
			Read_TPval(TPval);
    4926:	c1 01       	movw	r24, r2
    4928:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    492c:	af e1       	ldi	r26, 0x1F	; 31
    492e:	be e4       	ldi	r27, 0x4E	; 78
    4930:	11 97       	sbiw	r26, 0x01	; 1
    4932:	f1 f7       	brne	.-4      	; 0x4930 <main+0x1702>
    4934:	00 c0       	rjmp	.+0      	; 0x4936 <main+0x1708>
    4936:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4938:	c1 01       	movw	r24, r2
    493a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>130 && TPval[0]<165 && TPval[1]>37 && TPval[1]<216)
    493e:	89 81       	ldd	r24, Y+1	; 0x01
    4940:	9a 81       	ldd	r25, Y+2	; 0x02
    4942:	83 58       	subi	r24, 0x83	; 131
    4944:	91 09       	sbc	r25, r1
    4946:	82 97       	sbiw	r24, 0x22	; 34
    4948:	38 f4       	brcc	.+14     	; 0x4958 <main+0x172a>
    494a:	8b 81       	ldd	r24, Y+3	; 0x03
    494c:	9c 81       	ldd	r25, Y+4	; 0x04
    494e:	86 97       	sbiw	r24, 0x26	; 38
    4950:	82 3b       	cpi	r24, 0xB2	; 178
    4952:	91 05       	cpc	r25, r1
    4954:	08 f4       	brcc	.+2      	; 0x4958 <main+0x172a>
    4956:	7b c0       	rjmp	.+246    	; 0x4a4e <main+0x1820>
			{
				break;
			}
		}
		if (compare_time != i_time)
    4958:	40 91 80 03 	lds	r20, 0x0380
    495c:	50 91 81 03 	lds	r21, 0x0381
    4960:	60 91 82 03 	lds	r22, 0x0382
    4964:	70 91 83 03 	lds	r23, 0x0383
    4968:	80 91 84 03 	lds	r24, 0x0384
    496c:	90 91 85 03 	lds	r25, 0x0385
    4970:	a0 91 86 03 	lds	r26, 0x0386
    4974:	b0 91 87 03 	lds	r27, 0x0387
    4978:	48 17       	cp	r20, r24
    497a:	59 07       	cpc	r21, r25
    497c:	6a 07       	cpc	r22, r26
    497e:	7b 07       	cpc	r23, r27
    4980:	09 f4       	brne	.+2      	; 0x4984 <main+0x1756>
    4982:	49 c0       	rjmp	.+146    	; 0x4a16 <main+0x17e8>
		{
			TFT_PutsInt((temp_read*100)/temp,3,43,160,8,white,back_color);
    4984:	a4 e6       	ldi	r26, 0x64	; 100
    4986:	b0 e0       	ldi	r27, 0x00	; 0
    4988:	a3 01       	movw	r20, r6
    498a:	92 01       	movw	r18, r4
    498c:	0e 94 a8 2d 	call	0x5b50	; 0x5b50 <__muluhisi3>
    4990:	2d 85       	ldd	r18, Y+13	; 0x0d
    4992:	3e 85       	ldd	r19, Y+14	; 0x0e
    4994:	4f 85       	ldd	r20, Y+15	; 0x0f
    4996:	58 89       	ldd	r21, Y+16	; 0x10
    4998:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    499c:	ca 01       	movw	r24, r20
    499e:	b9 01       	movw	r22, r18
    49a0:	0f 2e       	mov	r0, r31
    49a2:	ff e1       	ldi	r31, 0x1F	; 31
    49a4:	af 2e       	mov	r10, r31
    49a6:	b1 2c       	mov	r11, r1
    49a8:	f0 2d       	mov	r31, r0
    49aa:	cc 24       	eor	r12, r12
    49ac:	ca 94       	dec	r12
    49ae:	dc 2c       	mov	r13, r12
    49b0:	68 94       	set
    49b2:	ee 24       	eor	r14, r14
    49b4:	e3 f8       	bld	r14, 3
    49b6:	00 ea       	ldi	r16, 0xA0	; 160
    49b8:	10 e0       	ldi	r17, 0x00	; 0
    49ba:	2b e2       	ldi	r18, 0x2B	; 43
    49bc:	30 e0       	ldi	r19, 0x00	; 0
    49be:	43 e0       	ldi	r20, 0x03	; 3
    49c0:	50 e0       	ldi	r21, 0x00	; 0
    49c2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_PutsInt(temp_read,3,123,160,8,white,back_color);
    49c6:	2b e7       	ldi	r18, 0x7B	; 123
    49c8:	30 e0       	ldi	r19, 0x00	; 0
    49ca:	43 e0       	ldi	r20, 0x03	; 3
    49cc:	50 e0       	ldi	r21, 0x00	; 0
    49ce:	c3 01       	movw	r24, r6
    49d0:	b2 01       	movw	r22, r4
    49d2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_PutsInt(temp-temp_read,3,123,188,8,white,back_color);
    49d6:	6d 85       	ldd	r22, Y+13	; 0x0d
    49d8:	7e 85       	ldd	r23, Y+14	; 0x0e
    49da:	8f 85       	ldd	r24, Y+15	; 0x0f
    49dc:	98 89       	ldd	r25, Y+16	; 0x10
    49de:	64 19       	sub	r22, r4
    49e0:	75 09       	sbc	r23, r5
    49e2:	86 09       	sbc	r24, r6
    49e4:	97 09       	sbc	r25, r7
    49e6:	0c eb       	ldi	r16, 0xBC	; 188
    49e8:	10 e0       	ldi	r17, 0x00	; 0
    49ea:	2b e7       	ldi	r18, 0x7B	; 123
    49ec:	30 e0       	ldi	r19, 0x00	; 0
    49ee:	43 e0       	ldi	r20, 0x03	; 3
    49f0:	50 e0       	ldi	r21, 0x00	; 0
    49f2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			compare_time = i_time;
    49f6:	80 91 84 03 	lds	r24, 0x0384
    49fa:	90 91 85 03 	lds	r25, 0x0385
    49fe:	a0 91 86 03 	lds	r26, 0x0386
    4a02:	b0 91 87 03 	lds	r27, 0x0387
    4a06:	80 93 80 03 	sts	0x0380, r24
    4a0a:	90 93 81 03 	sts	0x0381, r25
    4a0e:	a0 93 82 03 	sts	0x0382, r26
    4a12:	b0 93 83 03 	sts	0x0383, r27
		}
		
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4a16:	60 91 84 03 	lds	r22, 0x0384
    4a1a:	70 91 85 03 	lds	r23, 0x0385
    4a1e:	80 91 86 03 	lds	r24, 0x0386
    4a22:	90 91 87 03 	lds	r25, 0x0387
    4a26:	aa 24       	eor	r10, r10
    4a28:	aa 94       	dec	r10
    4a2a:	ba 2c       	mov	r11, r10
    4a2c:	0f 2e       	mov	r0, r31
    4a2e:	ff e1       	ldi	r31, 0x1F	; 31
    4a30:	cf 2e       	mov	r12, r31
    4a32:	d1 2c       	mov	r13, r1
    4a34:	f0 2d       	mov	r31, r0
    4a36:	68 94       	set
    4a38:	ee 24       	eor	r14, r14
    4a3a:	e3 f8       	bld	r14, 3
    4a3c:	05 e0       	ldi	r16, 0x05	; 5
    4a3e:	10 e0       	ldi	r17, 0x00	; 0
    4a40:	25 e0       	ldi	r18, 0x05	; 5
    4a42:	30 e0       	ldi	r19, 0x00	; 0
    4a44:	44 e0       	ldi	r20, 0x04	; 4
    4a46:	50 e0       	ldi	r21, 0x00	; 0
    4a48:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4a4c:	3e cf       	rjmp	.-388    	; 0x48ca <main+0x169c>
	
	//PORTD &= ~(1<<1); //This port pin is for steam valve off
	usart_putchar(100);  //command for steam valve off
    4a4e:	84 e6       	ldi	r24, 0x64	; 100
    4a50:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    4a54:	bf ef       	ldi	r27, 0xFF	; 255
    4a56:	20 e7       	ldi	r18, 0x70	; 112
    4a58:	82 e0       	ldi	r24, 0x02	; 2
    4a5a:	b1 50       	subi	r27, 0x01	; 1
    4a5c:	20 40       	sbci	r18, 0x00	; 0
    4a5e:	80 40       	sbci	r24, 0x00	; 0
    4a60:	e1 f7       	brne	.-8      	; 0x4a5a <main+0x182c>
    4a62:	00 c0       	rjmp	.+0      	; 0x4a64 <main+0x1836>
    4a64:	00 00       	nop
	_delay_ms(100);
	usart_putchar(100);
    4a66:	84 e6       	ldi	r24, 0x64	; 100
    4a68:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
	TFT_Text("Off",171,148,8,white,back_color);
    4a6c:	0f 2e       	mov	r0, r31
    4a6e:	ff e1       	ldi	r31, 0x1F	; 31
    4a70:	ef 2e       	mov	r14, r31
    4a72:	f1 2c       	mov	r15, r1
    4a74:	f0 2d       	mov	r31, r0
    4a76:	0f ef       	ldi	r16, 0xFF	; 255
    4a78:	1f ef       	ldi	r17, 0xFF	; 255
    4a7a:	28 e0       	ldi	r18, 0x08	; 8
    4a7c:	44 e9       	ldi	r20, 0x94	; 148
    4a7e:	50 e0       	ldi	r21, 0x00	; 0
    4a80:	6b ea       	ldi	r22, 0xAB	; 171
    4a82:	70 e0       	ldi	r23, 0x00	; 0
    4a84:	8a e2       	ldi	r24, 0x2A	; 42
    4a86:	92 e0       	ldi	r25, 0x02	; 2
    4a88:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	// Updating last status for temperature
	TFT_PutsInt(100,3,43,160,8,white,back_color);
    4a8c:	0f 2e       	mov	r0, r31
    4a8e:	ff e1       	ldi	r31, 0x1F	; 31
    4a90:	af 2e       	mov	r10, r31
    4a92:	b1 2c       	mov	r11, r1
    4a94:	f0 2d       	mov	r31, r0
    4a96:	cc 24       	eor	r12, r12
    4a98:	ca 94       	dec	r12
    4a9a:	dc 2c       	mov	r13, r12
    4a9c:	68 94       	set
    4a9e:	ee 24       	eor	r14, r14
    4aa0:	e3 f8       	bld	r14, 3
    4aa2:	00 ea       	ldi	r16, 0xA0	; 160
    4aa4:	10 e0       	ldi	r17, 0x00	; 0
    4aa6:	2b e2       	ldi	r18, 0x2B	; 43
    4aa8:	30 e0       	ldi	r19, 0x00	; 0
    4aaa:	43 e0       	ldi	r20, 0x03	; 3
    4aac:	50 e0       	ldi	r21, 0x00	; 0
    4aae:	64 e6       	ldi	r22, 0x64	; 100
    4ab0:	70 e0       	ldi	r23, 0x00	; 0
    4ab2:	80 e0       	ldi	r24, 0x00	; 0
    4ab4:	90 e0       	ldi	r25, 0x00	; 0
    4ab6:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(temp,3,123,160,8,white,back_color);
    4aba:	2b e7       	ldi	r18, 0x7B	; 123
    4abc:	30 e0       	ldi	r19, 0x00	; 0
    4abe:	43 e0       	ldi	r20, 0x03	; 3
    4ac0:	50 e0       	ldi	r21, 0x00	; 0
    4ac2:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4ac4:	7d 8d       	ldd	r23, Y+29	; 0x1d
    4ac6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4ac8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4aca:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,3,123,188,8,white,back_color);	
    4ace:	0c eb       	ldi	r16, 0xBC	; 188
    4ad0:	10 e0       	ldi	r17, 0x00	; 0
    4ad2:	2b e7       	ldi	r18, 0x7B	; 123
    4ad4:	30 e0       	ldi	r19, 0x00	; 0
    4ad6:	43 e0       	ldi	r20, 0x03	; 3
    4ad8:	50 e0       	ldi	r21, 0x00	; 0
    4ada:	60 e0       	ldi	r22, 0x00	; 0
    4adc:	70 e0       	ldi	r23, 0x00	; 0
    4ade:	80 e0       	ldi	r24, 0x00	; 0
    4ae0:	90 e0       	ldi	r25, 0x00	; 0
    4ae2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
    4ae6:	10 92 84 03 	sts	0x0384, r1
    4aea:	10 92 85 03 	sts	0x0385, r1
    4aee:	10 92 86 03 	sts	0x0386, r1
    4af2:	10 92 87 03 	sts	0x0387, r1
	TFT_Text("Counting",123,236,8,white,red);
    4af6:	0f 2e       	mov	r0, r31
    4af8:	e1 2c       	mov	r14, r1
    4afa:	f8 ef       	ldi	r31, 0xF8	; 248
    4afc:	ff 2e       	mov	r15, r31
    4afe:	f0 2d       	mov	r31, r0
    4b00:	0f ef       	ldi	r16, 0xFF	; 255
    4b02:	1f ef       	ldi	r17, 0xFF	; 255
    4b04:	28 e0       	ldi	r18, 0x08	; 8
    4b06:	4c ee       	ldi	r20, 0xEC	; 236
    4b08:	50 e0       	ldi	r21, 0x00	; 0
    4b0a:	6b e7       	ldi	r22, 0x7B	; 123
    4b0c:	70 e0       	ldi	r23, 0x00	; 0
    4b0e:	82 e0       	ldi	r24, 0x02	; 2
    4b10:	93 e0       	ldi	r25, 0x03	; 3
    4b12:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    4b16:	60 91 84 03 	lds	r22, 0x0384
    4b1a:	70 91 85 03 	lds	r23, 0x0385
    4b1e:	80 91 86 03 	lds	r24, 0x0386
    4b22:	90 91 87 03 	lds	r25, 0x0387
    4b26:	2c e3       	ldi	r18, 0x3C	; 60
    4b28:	30 e0       	ldi	r19, 0x00	; 0
    4b2a:	40 e0       	ldi	r20, 0x00	; 0
    4b2c:	50 e0       	ldi	r21, 0x00	; 0
    4b2e:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    4b32:	29 01       	movw	r4, r18
    4b34:	3a 01       	movw	r6, r20
		if (time_read >= time)
    4b36:	89 85       	ldd	r24, Y+9	; 0x09
    4b38:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b3a:	ab 85       	ldd	r26, Y+11	; 0x0b
    4b3c:	bc 85       	ldd	r27, Y+12	; 0x0c
    4b3e:	28 17       	cp	r18, r24
    4b40:	39 07       	cpc	r19, r25
    4b42:	4a 07       	cpc	r20, r26
    4b44:	5b 07       	cpc	r21, r27
    4b46:	08 f4       	brcc	.+2      	; 0x4b4a <main+0x191c>
    4b48:	4d c0       	rjmp	.+154    	; 0x4be4 <main+0x19b6>
		{
skip_time:
			//PORTD |= (1<<6); //This port pin is for alarm on
			usart_putchar(101);
    4b4a:	85 e6       	ldi	r24, 0x65	; 101
    4b4c:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    4b50:	9f ef       	ldi	r25, 0xFF	; 255
    4b52:	a0 e7       	ldi	r26, 0x70	; 112
    4b54:	b2 e0       	ldi	r27, 0x02	; 2
    4b56:	91 50       	subi	r25, 0x01	; 1
    4b58:	a0 40       	sbci	r26, 0x00	; 0
    4b5a:	b0 40       	sbci	r27, 0x00	; 0
    4b5c:	e1 f7       	brne	.-8      	; 0x4b56 <main+0x1928>
    4b5e:	00 c0       	rjmp	.+0      	; 0x4b60 <main+0x1932>
    4b60:	00 00       	nop
			_delay_ms(100);
			usart_putchar(101);
    4b62:	85 e6       	ldi	r24, 0x65	; 101
    4b64:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
			TFT_Text("Idle    ",123,236,8,white,back_color);
    4b68:	0f 2e       	mov	r0, r31
    4b6a:	ff e1       	ldi	r31, 0x1F	; 31
    4b6c:	ef 2e       	mov	r14, r31
    4b6e:	f1 2c       	mov	r15, r1
    4b70:	f0 2d       	mov	r31, r0
    4b72:	0f ef       	ldi	r16, 0xFF	; 255
    4b74:	1f ef       	ldi	r17, 0xFF	; 255
    4b76:	28 e0       	ldi	r18, 0x08	; 8
    4b78:	4c ee       	ldi	r20, 0xEC	; 236
    4b7a:	50 e0       	ldi	r21, 0x00	; 0
    4b7c:	6b e7       	ldi	r22, 0x7B	; 123
    4b7e:	70 e0       	ldi	r23, 0x00	; 0
    4b80:	8b e0       	ldi	r24, 0x0B	; 11
    4b82:	93 e0       	ldi	r25, 0x03	; 3
    4b84:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	 //this section is to wait for alarm off command
	 i_time = 0;
    4b88:	10 92 84 03 	sts	0x0384, r1
    4b8c:	10 92 85 03 	sts	0x0385, r1
    4b90:	10 92 86 03 	sts	0x0386, r1
    4b94:	10 92 87 03 	sts	0x0387, r1
	TFT_Fill(back_color);
    4b98:	8f e1       	ldi	r24, 0x1F	; 31
    4b9a:	90 e0       	ldi	r25, 0x00	; 0
    4b9c:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
    4ba0:	20 e1       	ldi	r18, 0x10	; 16
    4ba2:	44 e5       	ldi	r20, 0x54	; 84
    4ba4:	50 e0       	ldi	r21, 0x00	; 0
    4ba6:	63 e3       	ldi	r22, 0x33	; 51
    4ba8:	70 e0       	ldi	r23, 0x00	; 0
    4baa:	84 e1       	ldi	r24, 0x14	; 20
    4bac:	93 e0       	ldi	r25, 0x03	; 3
    4bae:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,150,195,174,white);
    4bb2:	2e ea       	ldi	r18, 0xAE	; 174
    4bb4:	30 e0       	ldi	r19, 0x00	; 0
    4bb6:	43 ec       	ldi	r20, 0xC3	; 195
    4bb8:	50 e0       	ldi	r21, 0x00	; 0
    4bba:	66 e9       	ldi	r22, 0x96	; 150
    4bbc:	70 e0       	ldi	r23, 0x00	; 0
    4bbe:	83 e2       	ldi	r24, 0x23	; 35
    4bc0:	90 e0       	ldi	r25, 0x00	; 0
    4bc2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("ALARM OFF",53,155,16,red,white);	
    4bc6:	ee 24       	eor	r14, r14
    4bc8:	ea 94       	dec	r14
    4bca:	fe 2c       	mov	r15, r14
    4bcc:	00 e0       	ldi	r16, 0x00	; 0
    4bce:	18 ef       	ldi	r17, 0xF8	; 248
    4bd0:	20 e1       	ldi	r18, 0x10	; 16
    4bd2:	4b e9       	ldi	r20, 0x9B	; 155
    4bd4:	50 e0       	ldi	r21, 0x00	; 0
    4bd6:	65 e3       	ldi	r22, 0x35	; 53
    4bd8:	70 e0       	ldi	r23, 0x00	; 0
    4bda:	8e e1       	ldi	r24, 0x1E	; 30
    4bdc:	93 e0       	ldi	r25, 0x03	; 3
    4bde:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
    4be2:	9f c0       	rjmp	.+318    	; 0x4d22 <main+0x1af4>
			_delay_ms(100);
			usart_putchar(101);
			TFT_Text("Idle    ",123,236,8,white,back_color);
			break;
		}
		TFT_PutsInt(time_read,-1,123,260,8,white,back_color);
    4be4:	0f 2e       	mov	r0, r31
    4be6:	ff e1       	ldi	r31, 0x1F	; 31
    4be8:	af 2e       	mov	r10, r31
    4bea:	b1 2c       	mov	r11, r1
    4bec:	f0 2d       	mov	r31, r0
    4bee:	cc 24       	eor	r12, r12
    4bf0:	ca 94       	dec	r12
    4bf2:	dc 2c       	mov	r13, r12
    4bf4:	68 94       	set
    4bf6:	ee 24       	eor	r14, r14
    4bf8:	e3 f8       	bld	r14, 3
    4bfa:	04 e0       	ldi	r16, 0x04	; 4
    4bfc:	11 e0       	ldi	r17, 0x01	; 1
    4bfe:	2b e7       	ldi	r18, 0x7B	; 123
    4c00:	30 e0       	ldi	r19, 0x00	; 0
    4c02:	4f ef       	ldi	r20, 0xFF	; 255
    4c04:	5f ef       	ldi	r21, 0xFF	; 255
    4c06:	c3 01       	movw	r24, r6
    4c08:	b2 01       	movw	r22, r4
    4c0a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_Text(":",155,260,8,white,back_color);
    4c0e:	0f 2e       	mov	r0, r31
    4c10:	ff e1       	ldi	r31, 0x1F	; 31
    4c12:	ef 2e       	mov	r14, r31
    4c14:	f1 2c       	mov	r15, r1
    4c16:	f0 2d       	mov	r31, r0
    4c18:	0f ef       	ldi	r16, 0xFF	; 255
    4c1a:	1f ef       	ldi	r17, 0xFF	; 255
    4c1c:	28 e0       	ldi	r18, 0x08	; 8
    4c1e:	44 e0       	ldi	r20, 0x04	; 4
    4c20:	51 e0       	ldi	r21, 0x01	; 1
    4c22:	6b e9       	ldi	r22, 0x9B	; 155
    4c24:	70 e0       	ldi	r23, 0x00	; 0
    4c26:	8d ea       	ldi	r24, 0xAD	; 173
    4c28:	91 e0       	ldi	r25, 0x01	; 1
    4c2a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
		TFT_PutsInt(i_time % 60,2,163,260,8,white,back_color);
    4c2e:	60 91 84 03 	lds	r22, 0x0384
    4c32:	70 91 85 03 	lds	r23, 0x0385
    4c36:	80 91 86 03 	lds	r24, 0x0386
    4c3a:	90 91 87 03 	lds	r25, 0x0387
    4c3e:	2c e3       	ldi	r18, 0x3C	; 60
    4c40:	30 e0       	ldi	r19, 0x00	; 0
    4c42:	40 e0       	ldi	r20, 0x00	; 0
    4c44:	50 e0       	ldi	r21, 0x00	; 0
    4c46:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    4c4a:	68 94       	set
    4c4c:	ee 24       	eor	r14, r14
    4c4e:	e3 f8       	bld	r14, 3
    4c50:	04 e0       	ldi	r16, 0x04	; 4
    4c52:	11 e0       	ldi	r17, 0x01	; 1
    4c54:	23 ea       	ldi	r18, 0xA3	; 163
    4c56:	30 e0       	ldi	r19, 0x00	; 0
    4c58:	42 e0       	ldi	r20, 0x02	; 2
    4c5a:	50 e0       	ldi	r21, 0x00	; 0
    4c5c:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(time - time_read,4,123,276,8,white,back_color);
    4c60:	69 85       	ldd	r22, Y+9	; 0x09
    4c62:	7a 85       	ldd	r23, Y+10	; 0x0a
    4c64:	8b 85       	ldd	r24, Y+11	; 0x0b
    4c66:	9c 85       	ldd	r25, Y+12	; 0x0c
    4c68:	64 19       	sub	r22, r4
    4c6a:	75 09       	sbc	r23, r5
    4c6c:	86 09       	sbc	r24, r6
    4c6e:	97 09       	sbc	r25, r7
    4c70:	04 e1       	ldi	r16, 0x14	; 20
    4c72:	11 e0       	ldi	r17, 0x01	; 1
    4c74:	2b e7       	ldi	r18, 0x7B	; 123
    4c76:	30 e0       	ldi	r19, 0x00	; 0
    4c78:	44 e0       	ldi	r20, 0x04	; 4
    4c7a:	50 e0       	ldi	r21, 0x00	; 0
    4c7c:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		
		if (usart_dthit())  //scan for keypad data via usart
    4c80:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4c84:	88 23       	and	r24, r24
    4c86:	29 f0       	breq	.+10     	; 0x4c92 <main+0x1a64>
		{
			usart_data = usart_getchar();
    4c88:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    4c8c:	8c 30       	cpi	r24, 0x0C	; 12
    4c8e:	09 f4       	brne	.+2      	; 0x4c92 <main+0x1a64>
    4c90:	5c cf       	rjmp	.-328    	; 0x4b4a <main+0x191c>
				goto skip_time;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan touch pad data
    4c92:	83 99       	sbic	0x10, 3	; 16
    4c94:	10 c0       	rjmp	.+32     	; 0x4cb6 <main+0x1a88>
		{
			Read_TPval(TPval);
    4c96:	c1 01       	movw	r24, r2
    4c98:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>77 && TPval[0]<103 && TPval[1]>37 && TPval[1]<216)
    4c9c:	89 81       	ldd	r24, Y+1	; 0x01
    4c9e:	9a 81       	ldd	r25, Y+2	; 0x02
    4ca0:	8e 54       	subi	r24, 0x4E	; 78
    4ca2:	91 09       	sbc	r25, r1
    4ca4:	49 97       	sbiw	r24, 0x19	; 25
    4ca6:	38 f4       	brcc	.+14     	; 0x4cb6 <main+0x1a88>
    4ca8:	8b 81       	ldd	r24, Y+3	; 0x03
    4caa:	9c 81       	ldd	r25, Y+4	; 0x04
    4cac:	86 97       	sbiw	r24, 0x26	; 38
    4cae:	82 3b       	cpi	r24, 0xB2	; 178
    4cb0:	91 05       	cpc	r25, r1
    4cb2:	08 f4       	brcc	.+2      	; 0x4cb6 <main+0x1a88>
    4cb4:	4a cf       	rjmp	.-364    	; 0x4b4a <main+0x191c>
			{
				goto skip_time;
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4cb6:	60 91 84 03 	lds	r22, 0x0384
    4cba:	70 91 85 03 	lds	r23, 0x0385
    4cbe:	80 91 86 03 	lds	r24, 0x0386
    4cc2:	90 91 87 03 	lds	r25, 0x0387
    4cc6:	aa 24       	eor	r10, r10
    4cc8:	aa 94       	dec	r10
    4cca:	ba 2c       	mov	r11, r10
    4ccc:	0f 2e       	mov	r0, r31
    4cce:	ff e1       	ldi	r31, 0x1F	; 31
    4cd0:	cf 2e       	mov	r12, r31
    4cd2:	d1 2c       	mov	r13, r1
    4cd4:	f0 2d       	mov	r31, r0
    4cd6:	68 94       	set
    4cd8:	ee 24       	eor	r14, r14
    4cda:	e3 f8       	bld	r14, 3
    4cdc:	05 e0       	ldi	r16, 0x05	; 5
    4cde:	10 e0       	ldi	r17, 0x00	; 0
    4ce0:	25 e0       	ldi	r18, 0x05	; 5
    4ce2:	30 e0       	ldi	r19, 0x00	; 0
    4ce4:	44 e0       	ldi	r20, 0x04	; 4
    4ce6:	50 e0       	ldi	r21, 0x00	; 0
    4ce8:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
	TFT_Text("Counting",123,236,8,white,red);
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    4cec:	60 91 84 03 	lds	r22, 0x0384
    4cf0:	70 91 85 03 	lds	r23, 0x0385
    4cf4:	80 91 86 03 	lds	r24, 0x0386
    4cf8:	90 91 87 03 	lds	r25, 0x0387
    4cfc:	2c e3       	ldi	r18, 0x3C	; 60
    4cfe:	30 e0       	ldi	r19, 0x00	; 0
    4d00:	40 e0       	ldi	r20, 0x00	; 0
    4d02:	50 e0       	ldi	r21, 0x00	; 0
    4d04:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    4d08:	29 01       	movw	r4, r18
    4d0a:	3a 01       	movw	r6, r20
		if (time_read >= time)
    4d0c:	89 85       	ldd	r24, Y+9	; 0x09
    4d0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d10:	ab 85       	ldd	r26, Y+11	; 0x0b
    4d12:	bc 85       	ldd	r27, Y+12	; 0x0c
    4d14:	28 17       	cp	r18, r24
    4d16:	39 07       	cpc	r19, r25
    4d18:	4a 07       	cpc	r20, r26
    4d1a:	5b 07       	cpc	r21, r27
    4d1c:	08 f4       	brcc	.+2      	; 0x4d20 <main+0x1af2>
    4d1e:	62 cf       	rjmp	.-316    	; 0x4be4 <main+0x19b6>
    4d20:	14 cf       	rjmp	.-472    	; 0x4b4a <main+0x191c>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
	TFT_Box(35,150,195,174,white);
	TFT_Text("ALARM OFF",53,155,16,red,white);	
	while (1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    4d22:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4d26:	88 23       	and	r24, r24
    4d28:	21 f0       	breq	.+8      	; 0x4d32 <main+0x1b04>
		{
			usart_data = usart_getchar();
    4d2a:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)
    4d2e:	8c 30       	cpi	r24, 0x0C	; 12
    4d30:	d1 f0       	breq	.+52     	; 0x4d66 <main+0x1b38>
				goto alrm_off;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan for touch pad data
    4d32:	83 99       	sbic	0x10, 3	; 16
    4d34:	32 c0       	rjmp	.+100    	; 0x4d9a <main+0x1b6c>
		{
			Read_TPval(TPval);
    4d36:	c1 01       	movw	r24, r2
    4d38:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4d3c:	af e1       	ldi	r26, 0x1F	; 31
    4d3e:	be e4       	ldi	r27, 0x4E	; 78
    4d40:	11 97       	sbiw	r26, 0x01	; 1
    4d42:	f1 f7       	brne	.-4      	; 0x4d40 <main+0x1b12>
    4d44:	00 c0       	rjmp	.+0      	; 0x4d46 <main+0x1b18>
    4d46:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4d48:	c1 01       	movw	r24, r2
    4d4a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)
    4d4e:	89 81       	ldd	r24, Y+1	; 0x01
    4d50:	9a 81       	ldd	r25, Y+2	; 0x02
    4d52:	89 57       	subi	r24, 0x79	; 121
    4d54:	91 09       	sbc	r25, r1
    4d56:	4d 97       	sbiw	r24, 0x1d	; 29
    4d58:	b8 f4       	brcc	.+46     	; 0x4d88 <main+0x1b5a>
    4d5a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d5c:	9c 81       	ldd	r25, Y+4	; 0x04
    4d5e:	c4 97       	sbiw	r24, 0x34	; 52
    4d60:	85 39       	cpi	r24, 0x95	; 149
    4d62:	91 05       	cpc	r25, r1
    4d64:	88 f4       	brcc	.+34     	; 0x4d88 <main+0x1b5a>
			{
alrm_off:
				//PORTD &= ~(1<<6); //This port pin is programmed for alarm Off
				usart_putchar(102);
    4d66:	86 e6       	ldi	r24, 0x66	; 102
    4d68:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    4d6c:	bf ef       	ldi	r27, 0xFF	; 255
    4d6e:	20 e7       	ldi	r18, 0x70	; 112
    4d70:	82 e0       	ldi	r24, 0x02	; 2
    4d72:	b1 50       	subi	r27, 0x01	; 1
    4d74:	20 40       	sbci	r18, 0x00	; 0
    4d76:	80 40       	sbci	r24, 0x00	; 0
    4d78:	e1 f7       	brne	.-8      	; 0x4d72 <main+0x1b44>
    4d7a:	00 c0       	rjmp	.+0      	; 0x4d7c <main+0x1b4e>
    4d7c:	00 00       	nop
				_delay_ms(100);
				usart_putchar(102);
    4d7e:	86 e6       	ldi	r24, 0x66	; 102
    4d80:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
				goto start_pgm;
    4d84:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <main+0xa6>
    4d88:	9f ef       	ldi	r25, 0xFF	; 255
    4d8a:	a0 e7       	ldi	r26, 0x70	; 112
    4d8c:	b2 e0       	ldi	r27, 0x02	; 2
    4d8e:	91 50       	subi	r25, 0x01	; 1
    4d90:	a0 40       	sbci	r26, 0x00	; 0
    4d92:	b0 40       	sbci	r27, 0x00	; 0
    4d94:	e1 f7       	brne	.-8      	; 0x4d8e <main+0x1b60>
    4d96:	00 c0       	rjmp	.+0      	; 0x4d98 <main+0x1b6a>
    4d98:	00 00       	nop
			}
			_delay_ms(100);
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4d9a:	60 91 84 03 	lds	r22, 0x0384
    4d9e:	70 91 85 03 	lds	r23, 0x0385
    4da2:	80 91 86 03 	lds	r24, 0x0386
    4da6:	90 91 87 03 	lds	r25, 0x0387
    4daa:	aa 24       	eor	r10, r10
    4dac:	aa 94       	dec	r10
    4dae:	ba 2c       	mov	r11, r10
    4db0:	0f 2e       	mov	r0, r31
    4db2:	ff e1       	ldi	r31, 0x1F	; 31
    4db4:	cf 2e       	mov	r12, r31
    4db6:	d1 2c       	mov	r13, r1
    4db8:	f0 2d       	mov	r31, r0
    4dba:	68 94       	set
    4dbc:	ee 24       	eor	r14, r14
    4dbe:	e3 f8       	bld	r14, 3
    4dc0:	05 e0       	ldi	r16, 0x05	; 5
    4dc2:	10 e0       	ldi	r17, 0x00	; 0
    4dc4:	25 e0       	ldi	r18, 0x05	; 5
    4dc6:	30 e0       	ldi	r19, 0x00	; 0
    4dc8:	44 e0       	ldi	r20, 0x04	; 4
    4dca:	50 e0       	ldi	r21, 0x00	; 0
    4dcc:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4dd0:	a8 cf       	rjmp	.-176    	; 0x4d22 <main+0x1af4>
	**  Start settings and Calibration part  **
	*******************************************
	*/
settings_calibration:

	TFT_Fill(back_color);
    4dd2:	8f e1       	ldi	r24, 0x1F	; 31
    4dd4:	90 e0       	ldi	r25, 0x00	; 0
    4dd6:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("SETTINGS",64,70,16,white,back_color);
    4dda:	0f 2e       	mov	r0, r31
    4ddc:	ff e1       	ldi	r31, 0x1F	; 31
    4dde:	ef 2e       	mov	r14, r31
    4de0:	f1 2c       	mov	r15, r1
    4de2:	f0 2d       	mov	r31, r0
    4de4:	0f ef       	ldi	r16, 0xFF	; 255
    4de6:	1f ef       	ldi	r17, 0xFF	; 255
    4de8:	20 e1       	ldi	r18, 0x10	; 16
    4dea:	46 e4       	ldi	r20, 0x46	; 70
    4dec:	50 e0       	ldi	r21, 0x00	; 0
    4dee:	60 e4       	ldi	r22, 0x40	; 64
    4df0:	70 e0       	ldi	r23, 0x00	; 0
    4df2:	8a e8       	ldi	r24, 0x8A	; 138
    4df4:	90 e0       	ldi	r25, 0x00	; 0
    4df6:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,132,201,156,yellow);
    4dfa:	00 ee       	ldi	r16, 0xE0	; 224
    4dfc:	1f ef       	ldi	r17, 0xFF	; 255
    4dfe:	2c e9       	ldi	r18, 0x9C	; 156
    4e00:	30 e0       	ldi	r19, 0x00	; 0
    4e02:	49 ec       	ldi	r20, 0xC9	; 201
    4e04:	50 e0       	ldi	r21, 0x00	; 0
    4e06:	64 e8       	ldi	r22, 0x84	; 132
    4e08:	70 e0       	ldi	r23, 0x00	; 0
    4e0a:	88 e2       	ldi	r24, 0x28	; 40
    4e0c:	90 e0       	ldi	r25, 0x00	; 0
    4e0e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Thermal Calibration",45,140,8,blue,yellow);
    4e12:	0f 2e       	mov	r0, r31
    4e14:	f0 ee       	ldi	r31, 0xE0	; 224
    4e16:	ef 2e       	mov	r14, r31
    4e18:	ff 24       	eor	r15, r15
    4e1a:	fa 94       	dec	r15
    4e1c:	f0 2d       	mov	r31, r0
    4e1e:	0f e1       	ldi	r16, 0x1F	; 31
    4e20:	10 e0       	ldi	r17, 0x00	; 0
    4e22:	28 e0       	ldi	r18, 0x08	; 8
    4e24:	4c e8       	ldi	r20, 0x8C	; 140
    4e26:	50 e0       	ldi	r21, 0x00	; 0
    4e28:	6d e2       	ldi	r22, 0x2D	; 45
    4e2a:	70 e0       	ldi	r23, 0x00	; 0
    4e2c:	88 e2       	ldi	r24, 0x28	; 40
    4e2e:	93 e0       	ldi	r25, 0x03	; 3
    4e30:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,182,201,206,yellow);
    4e34:	00 ee       	ldi	r16, 0xE0	; 224
    4e36:	1f ef       	ldi	r17, 0xFF	; 255
    4e38:	2e ec       	ldi	r18, 0xCE	; 206
    4e3a:	30 e0       	ldi	r19, 0x00	; 0
    4e3c:	49 ec       	ldi	r20, 0xC9	; 201
    4e3e:	50 e0       	ldi	r21, 0x00	; 0
    4e40:	66 eb       	ldi	r22, 0xB6	; 182
    4e42:	70 e0       	ldi	r23, 0x00	; 0
    4e44:	88 e2       	ldi	r24, 0x28	; 40
    4e46:	90 e0       	ldi	r25, 0x00	; 0
    4e48:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Water Calibration",53,190,8,blue,yellow);
    4e4c:	0f e1       	ldi	r16, 0x1F	; 31
    4e4e:	10 e0       	ldi	r17, 0x00	; 0
    4e50:	28 e0       	ldi	r18, 0x08	; 8
    4e52:	4e eb       	ldi	r20, 0xBE	; 190
    4e54:	50 e0       	ldi	r21, 0x00	; 0
    4e56:	65 e3       	ldi	r22, 0x35	; 53
    4e58:	70 e0       	ldi	r23, 0x00	; 0
    4e5a:	8c e3       	ldi	r24, 0x3C	; 60
    4e5c:	93 e0       	ldi	r25, 0x03	; 3
    4e5e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,232,201,256,yellow);
    4e62:	00 ee       	ldi	r16, 0xE0	; 224
    4e64:	1f ef       	ldi	r17, 0xFF	; 255
    4e66:	20 e0       	ldi	r18, 0x00	; 0
    4e68:	31 e0       	ldi	r19, 0x01	; 1
    4e6a:	49 ec       	ldi	r20, 0xC9	; 201
    4e6c:	50 e0       	ldi	r21, 0x00	; 0
    4e6e:	68 ee       	ldi	r22, 0xE8	; 232
    4e70:	70 e0       	ldi	r23, 0x00	; 0
    4e72:	88 e2       	ldi	r24, 0x28	; 40
    4e74:	90 e0       	ldi	r25, 0x00	; 0
    4e76:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("<<  BACK  <<",45,240,8,blue,yellow);
    4e7a:	0f e1       	ldi	r16, 0x1F	; 31
    4e7c:	10 e0       	ldi	r17, 0x00	; 0
    4e7e:	28 e0       	ldi	r18, 0x08	; 8
    4e80:	40 ef       	ldi	r20, 0xF0	; 240
    4e82:	50 e0       	ldi	r21, 0x00	; 0
    4e84:	6d e2       	ldi	r22, 0x2D	; 45
    4e86:	70 e0       	ldi	r23, 0x00	; 0
    4e88:	85 e1       	ldi	r24, 0x15	; 21
    4e8a:	91 e0       	ldi	r25, 0x01	; 1
    4e8c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
				{
thermal_calib:
					input_f = 7;
    4e90:	07 e0       	ldi	r16, 0x07	; 7
    4e92:	10 2f       	mov	r17, r16
    4e94:	79 88       	ldd	r7, Y+17	; 0x11
    4e96:	6a 88       	ldd	r6, Y+18	; 0x12
	TFT_Text("<<  BACK  <<",45,240,8,blue,yellow);

	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    4e98:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4e9c:	88 23       	and	r24, r24
    4e9e:	69 f0       	breq	.+26     	; 0x4eba <main+0x1c8c>
		{
			usart_data = usart_getchar();
    4ea0:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
				{
thermal_calib:
					input_f = 7;
    4ea4:	41 2e       	mov	r4, r17
	{

		if (usart_dthit())  //scan for keypad data via usart
		{
			usart_data = usart_getchar();
			if (usart_data == 13)  // option a for thermal calibration
    4ea6:	8d 30       	cpi	r24, 0x0D	; 13
    4ea8:	09 f4       	brne	.+2      	; 0x4eac <main+0x1c7e>
    4eaa:	5c c1       	rjmp	.+696    	; 0x5164 <main+0x1f36>
			{
				usart_data = 0;
				goto thermal_calib;
			}
			else if (usart_data == 14)  // option b for water flow calibration
    4eac:	8e 30       	cpi	r24, 0x0E	; 14
    4eae:	d1 f1       	breq	.+116    	; 0x4f24 <main+0x1cf6>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11 || usart_data == 15)
    4eb0:	8b 7f       	andi	r24, 0xFB	; 251
    4eb2:	8b 30       	cpi	r24, 0x0B	; 11
    4eb4:	11 f4       	brne	.+4      	; 0x4eba <main+0x1c8c>
    4eb6:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <main+0xa6>
				usart_data = 0;
				goto start_pgm;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    4eba:	83 99       	sbic	0x10, 3	; 16
    4ebc:	ed cf       	rjmp	.-38     	; 0x4e98 <main+0x1c6a>
		{
			Read_TPval(TPval);
    4ebe:	87 2d       	mov	r24, r7
    4ec0:	96 2d       	mov	r25, r6
    4ec2:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4ec6:	8f e1       	ldi	r24, 0x1F	; 31
    4ec8:	9e e4       	ldi	r25, 0x4E	; 78
    4eca:	01 97       	sbiw	r24, 0x01	; 1
    4ecc:	f1 f7       	brne	.-4      	; 0x4eca <main+0x1c9c>
    4ece:	00 c0       	rjmp	.+0      	; 0x4ed0 <main+0x1ca2>
    4ed0:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4ed2:	87 2d       	mov	r24, r7
    4ed4:	96 2d       	mov	r25, r6
    4ed6:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    4eda:	2b 81       	ldd	r18, Y+3	; 0x03
    4edc:	3c 81       	ldd	r19, Y+4	; 0x04
    4ede:	2e 52       	subi	r18, 0x2E	; 46
    4ee0:	31 09       	sbc	r19, r1
    4ee2:	29 3a       	cpi	r18, 0xA9	; 169
    4ee4:	31 05       	cpc	r19, r1
    4ee6:	c0 f6       	brcc	.-80     	; 0x4e98 <main+0x1c6a>
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
    4ee8:	29 81       	ldd	r18, Y+1	; 0x01
    4eea:	3a 81       	ldd	r19, Y+2	; 0x02
				{
thermal_calib:
					input_f = 7;
    4eec:	40 2e       	mov	r4, r16
			Read_TPval(TPval);
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
    4eee:	c9 01       	movw	r24, r18
    4ef0:	83 58       	subi	r24, 0x83	; 131
    4ef2:	91 09       	sbc	r25, r1
    4ef4:	8d 31       	cpi	r24, 0x1D	; 29
    4ef6:	91 05       	cpc	r25, r1
    4ef8:	08 f4       	brcc	.+2      	; 0x4efc <main+0x1cce>
    4efa:	34 c1       	rjmp	.+616    	; 0x5164 <main+0x1f36>
				{
thermal_calib:
					input_f = 7;
					goto button_operation;
				}
				else if (TPval[0]>97 && TPval[0]<122)  // water calibration button
    4efc:	81 96       	adiw	r24, 0x21	; 33
    4efe:	48 97       	sbiw	r24, 0x18	; 24
    4f00:	88 f0       	brcs	.+34     	; 0x4f24 <main+0x1cf6>
				{
					break;
				}
				else if (TPval[0]>61 && TPval[0]<88)  // back button
    4f02:	2e 53       	subi	r18, 0x3E	; 62
    4f04:	31 09       	sbc	r19, r1
    4f06:	2a 31       	cpi	r18, 0x1A	; 26
    4f08:	31 05       	cpc	r19, r1
    4f0a:	10 f4       	brcc	.+4      	; 0x4f10 <main+0x1ce2>
    4f0c:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <main+0xa6>
    4f10:	9f ef       	ldi	r25, 0xFF	; 255
    4f12:	a0 e7       	ldi	r26, 0x70	; 112
    4f14:	b2 e0       	ldi	r27, 0x02	; 2
    4f16:	91 50       	subi	r25, 0x01	; 1
    4f18:	a0 40       	sbci	r26, 0x00	; 0
    4f1a:	b0 40       	sbci	r27, 0x00	; 0
    4f1c:	e1 f7       	brne	.-8      	; 0x4f16 <main+0x1ce8>
    4f1e:	00 c0       	rjmp	.+0      	; 0x4f20 <main+0x1cf2>
    4f20:	00 00       	nop
    4f22:	ba cf       	rjmp	.-140    	; 0x4e98 <main+0x1c6a>
			}
		}
		
	}
	
	TFT_Fill(back_color);
    4f24:	8f e1       	ldi	r24, 0x1F	; 31
    4f26:	90 e0       	ldi	r25, 0x00	; 0
    4f28:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Water Calibration",53,20,8,white,back_color);
    4f2c:	0f 2e       	mov	r0, r31
    4f2e:	ff e1       	ldi	r31, 0x1F	; 31
    4f30:	ef 2e       	mov	r14, r31
    4f32:	f1 2c       	mov	r15, r1
    4f34:	f0 2d       	mov	r31, r0
    4f36:	0f ef       	ldi	r16, 0xFF	; 255
    4f38:	1f ef       	ldi	r17, 0xFF	; 255
    4f3a:	28 e0       	ldi	r18, 0x08	; 8
    4f3c:	44 e1       	ldi	r20, 0x14	; 20
    4f3e:	50 e0       	ldi	r21, 0x00	; 0
    4f40:	65 e3       	ldi	r22, 0x35	; 53
    4f42:	70 e0       	ldi	r23, 0x00	; 0
    4f44:	8c e3       	ldi	r24, 0x3C	; 60
    4f46:	93 e0       	ldi	r25, 0x03	; 3
    4f48:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Pulse Count: 0",64,80,8,white,back_color);
    4f4c:	28 e0       	ldi	r18, 0x08	; 8
    4f4e:	40 e5       	ldi	r20, 0x50	; 80
    4f50:	50 e0       	ldi	r21, 0x00	; 0
    4f52:	60 e4       	ldi	r22, 0x40	; 64
    4f54:	70 e0       	ldi	r23, 0x00	; 0
    4f56:	8e e4       	ldi	r24, 0x4E	; 78
    4f58:	93 e0       	ldi	r25, 0x03	; 3
    4f5a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,132,201,156,yellow);
    4f5e:	00 ee       	ldi	r16, 0xE0	; 224
    4f60:	1f ef       	ldi	r17, 0xFF	; 255
    4f62:	2c e9       	ldi	r18, 0x9C	; 156
    4f64:	30 e0       	ldi	r19, 0x00	; 0
    4f66:	49 ec       	ldi	r20, 0xC9	; 201
    4f68:	50 e0       	ldi	r21, 0x00	; 0
    4f6a:	64 e8       	ldi	r22, 0x84	; 132
    4f6c:	70 e0       	ldi	r23, 0x00	; 0
    4f6e:	88 e2       	ldi	r24, 0x28	; 40
    4f70:	90 e0       	ldi	r25, 0x00	; 0
    4f72:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("    Load Water",45,140,8,blue,yellow);
    4f76:	0f 2e       	mov	r0, r31
    4f78:	f0 ee       	ldi	r31, 0xE0	; 224
    4f7a:	ef 2e       	mov	r14, r31
    4f7c:	ff 24       	eor	r15, r15
    4f7e:	fa 94       	dec	r15
    4f80:	f0 2d       	mov	r31, r0
    4f82:	0f e1       	ldi	r16, 0x1F	; 31
    4f84:	10 e0       	ldi	r17, 0x00	; 0
    4f86:	28 e0       	ldi	r18, 0x08	; 8
    4f88:	4c e8       	ldi	r20, 0x8C	; 140
    4f8a:	50 e0       	ldi	r21, 0x00	; 0
    4f8c:	6d e2       	ldi	r22, 0x2D	; 45
    4f8e:	70 e0       	ldi	r23, 0x00	; 0
    4f90:	8d e5       	ldi	r24, 0x5D	; 93
    4f92:	93 e0       	ldi	r25, 0x03	; 3
    4f94:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    4f98:	83 9b       	sbis	0x10, 3	; 16
    4f9a:	fe cf       	rjmp	.-4      	; 0x4f98 <main+0x1d6a>
    4f9c:	19 89       	ldd	r17, Y+17	; 0x11
    4f9e:	0a 89       	ldd	r16, Y+18	; 0x12
	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    4fa0:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    4fa4:	88 23       	and	r24, r24
    4fa6:	21 f0       	breq	.+8      	; 0x4fb0 <main+0x1d82>
		{
			usart_data = usart_getchar();
    4fa8:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)  // press Ok to load water
    4fac:	8c 30       	cpi	r24, 0x0C	; 12
    4fae:	41 f1       	breq	.+80     	; 0x5000 <main+0x1dd2>
				usart_data = 0;
				break;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    4fb0:	83 99       	sbic	0x10, 3	; 16
    4fb2:	f6 cf       	rjmp	.-20     	; 0x4fa0 <main+0x1d72>
		{
			Read_TPval(TPval);
    4fb4:	81 2f       	mov	r24, r17
    4fb6:	90 2f       	mov	r25, r16
    4fb8:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4fbc:	8f e1       	ldi	r24, 0x1F	; 31
    4fbe:	9e e4       	ldi	r25, 0x4E	; 78
    4fc0:	01 97       	sbiw	r24, 0x01	; 1
    4fc2:	f1 f7       	brne	.-4      	; 0x4fc0 <main+0x1d92>
    4fc4:	00 c0       	rjmp	.+0      	; 0x4fc6 <main+0x1d98>
    4fc6:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4fc8:	81 2f       	mov	r24, r17
    4fca:	90 2f       	mov	r25, r16
    4fcc:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    4fd0:	2b 81       	ldd	r18, Y+3	; 0x03
    4fd2:	3c 81       	ldd	r19, Y+4	; 0x04
    4fd4:	2e 52       	subi	r18, 0x2E	; 46
    4fd6:	31 09       	sbc	r19, r1
    4fd8:	29 3a       	cpi	r18, 0xA9	; 169
    4fda:	31 05       	cpc	r19, r1
    4fdc:	08 f7       	brcc	.-62     	; 0x4fa0 <main+0x1d72>
			{
				if (TPval[0]>130 && TPval[0]<160)  //load water
    4fde:	29 81       	ldd	r18, Y+1	; 0x01
    4fe0:	3a 81       	ldd	r19, Y+2	; 0x02
    4fe2:	23 58       	subi	r18, 0x83	; 131
    4fe4:	31 09       	sbc	r19, r1
    4fe6:	2d 31       	cpi	r18, 0x1D	; 29
    4fe8:	31 05       	cpc	r19, r1
    4fea:	50 f0       	brcs	.+20     	; 0x5000 <main+0x1dd2>
    4fec:	9f ef       	ldi	r25, 0xFF	; 255
    4fee:	a0 e7       	ldi	r26, 0x70	; 112
    4ff0:	b2 e0       	ldi	r27, 0x02	; 2
    4ff2:	91 50       	subi	r25, 0x01	; 1
    4ff4:	a0 40       	sbci	r26, 0x00	; 0
    4ff6:	b0 40       	sbci	r27, 0x00	; 0
    4ff8:	e1 f7       	brne	.-8      	; 0x4ff2 <main+0x1dc4>
    4ffa:	00 c0       	rjmp	.+0      	; 0x4ffc <main+0x1dce>
    4ffc:	00 00       	nop
    4ffe:	d0 cf       	rjmp	.-96     	; 0x4fa0 <main+0x1d72>
			}
		}
		
	}

	i_water = 0;
    5000:	10 92 8c 03 	sts	0x038C, r1
    5004:	10 92 8d 03 	sts	0x038D, r1
    5008:	10 92 8e 03 	sts	0x038E, r1
    500c:	10 92 8f 03 	sts	0x038F, r1
	i_water_hold =0;
    5010:	10 92 88 03 	sts	0x0388, r1
    5014:	10 92 89 03 	sts	0x0389, r1
    5018:	10 92 8a 03 	sts	0x038A, r1
    501c:	10 92 8b 03 	sts	0x038B, r1
	usart_putchar(97); //water valve on
    5020:	81 e6       	ldi	r24, 0x61	; 97
    5022:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    5026:	2f ef       	ldi	r18, 0xFF	; 255
    5028:	80 e7       	ldi	r24, 0x70	; 112
    502a:	92 e0       	ldi	r25, 0x02	; 2
    502c:	21 50       	subi	r18, 0x01	; 1
    502e:	80 40       	sbci	r24, 0x00	; 0
    5030:	90 40       	sbci	r25, 0x00	; 0
    5032:	e1 f7       	brne	.-8      	; 0x502c <main+0x1dfe>
    5034:	00 c0       	rjmp	.+0      	; 0x5036 <main+0x1e08>
    5036:	00 00       	nop
	_delay_ms(100);
	usart_putchar(97);
    5038:	81 e6       	ldi	r24, 0x61	; 97
    503a:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
	TFT_Box(40,132,201,156,yellow);
    503e:	00 ee       	ldi	r16, 0xE0	; 224
    5040:	1f ef       	ldi	r17, 0xFF	; 255
    5042:	2c e9       	ldi	r18, 0x9C	; 156
    5044:	30 e0       	ldi	r19, 0x00	; 0
    5046:	49 ec       	ldi	r20, 0xC9	; 201
    5048:	50 e0       	ldi	r21, 0x00	; 0
    504a:	64 e8       	ldi	r22, 0x84	; 132
    504c:	70 e0       	ldi	r23, 0x00	; 0
    504e:	88 e2       	ldi	r24, 0x28	; 40
    5050:	90 e0       	ldi	r25, 0x00	; 0
    5052:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("   Stop Loading",45,140,8,blue,yellow);
    5056:	0f 2e       	mov	r0, r31
    5058:	f0 ee       	ldi	r31, 0xE0	; 224
    505a:	ef 2e       	mov	r14, r31
    505c:	ff 24       	eor	r15, r15
    505e:	fa 94       	dec	r15
    5060:	f0 2d       	mov	r31, r0
    5062:	0f e1       	ldi	r16, 0x1F	; 31
    5064:	10 e0       	ldi	r17, 0x00	; 0
    5066:	28 e0       	ldi	r18, 0x08	; 8
    5068:	4c e8       	ldi	r20, 0x8C	; 140
    506a:	50 e0       	ldi	r21, 0x00	; 0
    506c:	6d e2       	ldi	r22, 0x2D	; 45
    506e:	70 e0       	ldi	r23, 0x00	; 0
    5070:	8c e6       	ldi	r24, 0x6C	; 108
    5072:	93 e0       	ldi	r25, 0x03	; 3
    5074:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    5078:	83 9b       	sbis	0x10, 3	; 16
    507a:	fe cf       	rjmp	.-4      	; 0x5078 <main+0x1e4a>
    507c:	79 88       	ldd	r7, Y+17	; 0x11
    507e:	6a 88       	ldd	r6, Y+18	; 0x12
	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    5080:	0e 94 c8 18 	call	0x3190	; 0x3190 <usart_dthit>
    5084:	88 23       	and	r24, r24
    5086:	21 f0       	breq	.+8      	; 0x5090 <main+0x1e62>
		{
			usart_data = usart_getchar();
    5088:	0e 94 c4 18 	call	0x3188	; 0x3188 <usart_getchar>
			if (usart_data == 12)  // press Ok to load water
    508c:	8c 30       	cpi	r24, 0x0C	; 12
    508e:	c1 f1       	breq	.+112    	; 0x5100 <main+0x1ed2>
				goto water_calib;
			}
			else usart_data = 0;
		}
		
		TFT_PutsInt(i_water,-1,168,80,8,white,back_color);
    5090:	60 91 8c 03 	lds	r22, 0x038C
    5094:	70 91 8d 03 	lds	r23, 0x038D
    5098:	80 91 8e 03 	lds	r24, 0x038E
    509c:	90 91 8f 03 	lds	r25, 0x038F
    50a0:	0f 2e       	mov	r0, r31
    50a2:	ff e1       	ldi	r31, 0x1F	; 31
    50a4:	af 2e       	mov	r10, r31
    50a6:	b1 2c       	mov	r11, r1
    50a8:	f0 2d       	mov	r31, r0
    50aa:	cc 24       	eor	r12, r12
    50ac:	ca 94       	dec	r12
    50ae:	dc 2c       	mov	r13, r12
    50b0:	68 94       	set
    50b2:	ee 24       	eor	r14, r14
    50b4:	e3 f8       	bld	r14, 3
    50b6:	00 e5       	ldi	r16, 0x50	; 80
    50b8:	10 e0       	ldi	r17, 0x00	; 0
    50ba:	28 ea       	ldi	r18, 0xA8	; 168
    50bc:	30 e0       	ldi	r19, 0x00	; 0
    50be:	4f ef       	ldi	r20, 0xFF	; 255
    50c0:	5f ef       	ldi	r21, 0xFF	; 255
    50c2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		
		if (!(PIND & (1<<PD3)))
    50c6:	83 99       	sbic	0x10, 3	; 16
    50c8:	db cf       	rjmp	.-74     	; 0x5080 <main+0x1e52>
		{
			Read_TPval(TPval);
    50ca:	87 2d       	mov	r24, r7
    50cc:	96 2d       	mov	r25, r6
    50ce:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    50d2:	af e1       	ldi	r26, 0x1F	; 31
    50d4:	be e4       	ldi	r27, 0x4E	; 78
    50d6:	11 97       	sbiw	r26, 0x01	; 1
    50d8:	f1 f7       	brne	.-4      	; 0x50d6 <main+0x1ea8>
    50da:	00 c0       	rjmp	.+0      	; 0x50dc <main+0x1eae>
    50dc:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    50de:	87 2d       	mov	r24, r7
    50e0:	96 2d       	mov	r25, r6
    50e2:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    50e6:	8b 81       	ldd	r24, Y+3	; 0x03
    50e8:	9c 81       	ldd	r25, Y+4	; 0x04
    50ea:	8e 97       	sbiw	r24, 0x2e	; 46
    50ec:	89 3a       	cpi	r24, 0xA9	; 169
    50ee:	91 05       	cpc	r25, r1
    50f0:	38 f6       	brcc	.-114    	; 0x5080 <main+0x1e52>
			{
				if (TPval[0]>130 && TPval[0]<160)  //load water
    50f2:	89 81       	ldd	r24, Y+1	; 0x01
    50f4:	9a 81       	ldd	r25, Y+2	; 0x02
    50f6:	83 58       	subi	r24, 0x83	; 131
    50f8:	91 09       	sbc	r25, r1
    50fa:	4d 97       	sbiw	r24, 0x1d	; 29
    50fc:	08 f0       	brcs	.+2      	; 0x5100 <main+0x1ed2>
    50fe:	4a c0       	rjmp	.+148    	; 0x5194 <main+0x1f66>
				{
water_calib:
					usart_putchar(98); //water valve off
    5100:	82 e6       	ldi	r24, 0x62	; 98
    5102:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    5106:	bf ef       	ldi	r27, 0xFF	; 255
    5108:	20 e7       	ldi	r18, 0x70	; 112
    510a:	82 e0       	ldi	r24, 0x02	; 2
    510c:	b1 50       	subi	r27, 0x01	; 1
    510e:	20 40       	sbci	r18, 0x00	; 0
    5110:	80 40       	sbci	r24, 0x00	; 0
    5112:	e1 f7       	brne	.-8      	; 0x510c <main+0x1ede>
    5114:	00 c0       	rjmp	.+0      	; 0x5116 <main+0x1ee8>
    5116:	00 00       	nop
					_delay_ms(100);
					usart_putchar(98);
    5118:	82 e6       	ldi	r24, 0x62	; 98
    511a:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    511e:	9f ef       	ldi	r25, 0xFF	; 255
    5120:	a4 e3       	ldi	r26, 0x34	; 52
    5122:	bc e0       	ldi	r27, 0x0C	; 12
    5124:	91 50       	subi	r25, 0x01	; 1
    5126:	a0 40       	sbci	r26, 0x00	; 0
    5128:	b0 40       	sbci	r27, 0x00	; 0
    512a:	e1 f7       	brne	.-8      	; 0x5124 <main+0x1ef6>
    512c:	00 c0       	rjmp	.+0      	; 0x512e <main+0x1f00>
    512e:	00 00       	nop
					_delay_ms(500);
					i_water_hold = i_water;
    5130:	80 91 8c 03 	lds	r24, 0x038C
    5134:	90 91 8d 03 	lds	r25, 0x038D
    5138:	a0 91 8e 03 	lds	r26, 0x038E
    513c:	b0 91 8f 03 	lds	r27, 0x038F
    5140:	80 93 88 03 	sts	0x0388, r24
    5144:	90 93 89 03 	sts	0x0389, r25
    5148:	a0 93 8a 03 	sts	0x038A, r26
    514c:	b0 93 8b 03 	sts	0x038B, r27
					input_f = 9;
    5150:	0f 2e       	mov	r0, r31
    5152:	f9 e0       	ldi	r31, 0x09	; 9
    5154:	4f 2e       	mov	r4, r31
    5156:	f0 2d       	mov	r31, r0
					goto button_operation;
    5158:	05 c0       	rjmp	.+10     	; 0x5164 <main+0x1f36>
			_delay_ms(100);
		}
	}
		//for manual input show the button
		
	input_f = 1;
    515a:	44 24       	eor	r4, r4
    515c:	43 94       	inc	r4
    515e:	02 c0       	rjmp	.+4      	; 0x5164 <main+0x1f36>
    5160:	44 24       	eor	r4, r4
    5162:	43 94       	inc	r4
		{
			TFT_Box(10,69,231,101,white);
			TFT_Box(10,20,231,54,back_color);
			TFT_Text("Input Time ... ",10,20,16,white,back_color);
			TFT_Text("(Minute)",10,38,16,white,back_color);
			input_f = 6;
    5164:	0f 2e       	mov	r0, r31
    5166:	f6 e0       	ldi	r31, 0x06	; 6
    5168:	5f 2e       	mov	r5, r31
    516a:	f0 2d       	mov	r31, r0
		{
			TFT_Box(10,69,231,101,white);
			TFT_Box(10,20,231,54,back_color);
			TFT_Text("Input Temp ... ",10,20,16,white,back_color);
			TFT_Text("(Deg. C) ",10,38,16,white,back_color);
			input_f = 4;
    516c:	68 94       	set
    516e:	66 24       	eor	r6, r6
    5170:	62 f8       	bld	r6, 2
		if (input_f == 1)
		{
			TFT_Box(10,69,231,101,white);
			TFT_Text("Input Water ...",10,20,16,white,back_color);
			TFT_Text("(Liter)  ",10,38,16,white,back_color);
			input_f = 2;
    5172:	68 94       	set
    5174:	77 24       	eor	r7, r7
    5176:	71 f8       	bld	r7, 1
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
    5178:	23 e0       	ldi	r18, 0x03	; 3
    517a:	2b 8f       	std	Y+27, r18	; 0x1b
    517c:	5c 8a       	std	Y+20, r5	; 0x14
    517e:	6b 8a       	std	Y+19, r6	; 0x13
    5180:	79 86       	std	Y+9, r7	; 0x09
    5182:	3a 8e       	std	Y+26, r3	; 0x1a
    5184:	29 8e       	std	Y+25, r2	; 0x19
    5186:	34 2c       	mov	r3, r4
    5188:	4d 88       	ldd	r4, Y+21	; 0x15
    518a:	5e 88       	ldd	r5, Y+22	; 0x16
    518c:	6f 88       	ldd	r6, Y+23	; 0x17
    518e:	78 8c       	ldd	r7, Y+24	; 0x18
    5190:	0c 94 8e 1b 	jmp	0x371c	; 0x371c <main+0x4ee>
    5194:	8f ef       	ldi	r24, 0xFF	; 255
    5196:	90 e7       	ldi	r25, 0x70	; 112
    5198:	a2 e0       	ldi	r26, 0x02	; 2
    519a:	81 50       	subi	r24, 0x01	; 1
    519c:	90 40       	sbci	r25, 0x00	; 0
    519e:	a0 40       	sbci	r26, 0x00	; 0
    51a0:	e1 f7       	brne	.-8      	; 0x519a <main+0x1f6c>
    51a2:	00 c0       	rjmp	.+0      	; 0x51a4 <main+0x1f76>
    51a4:	00 00       	nop
    51a6:	6c cf       	rjmp	.-296    	; 0x5080 <main+0x1e52>
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	//PORTD &= ~(1<<0); //This port pin is for water valve off
	usart_putchar(98);
    51a8:	82 e6       	ldi	r24, 0x62	; 98
    51aa:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
    51ae:	bf ef       	ldi	r27, 0xFF	; 255
    51b0:	20 e7       	ldi	r18, 0x70	; 112
    51b2:	82 e0       	ldi	r24, 0x02	; 2
    51b4:	b1 50       	subi	r27, 0x01	; 1
    51b6:	20 40       	sbci	r18, 0x00	; 0
    51b8:	80 40       	sbci	r24, 0x00	; 0
    51ba:	e1 f7       	brne	.-8      	; 0x51b4 <main+0x1f86>
    51bc:	00 c0       	rjmp	.+0      	; 0x51be <main+0x1f90>
    51be:	00 00       	nop
	_delay_ms(100);
	usart_putchar(98);
    51c0:	82 e6       	ldi	r24, 0x62	; 98
    51c2:	0e 94 c0 18 	call	0x3180	; 0x3180 <usart_putchar>
	TFT_Text("Off",171,60,8,white,back_color);
    51c6:	0f 2e       	mov	r0, r31
    51c8:	ff e1       	ldi	r31, 0x1F	; 31
    51ca:	ef 2e       	mov	r14, r31
    51cc:	f1 2c       	mov	r15, r1
    51ce:	f0 2d       	mov	r31, r0
    51d0:	0f ef       	ldi	r16, 0xFF	; 255
    51d2:	1f ef       	ldi	r17, 0xFF	; 255
    51d4:	28 e0       	ldi	r18, 0x08	; 8
    51d6:	4c e3       	ldi	r20, 0x3C	; 60
    51d8:	50 e0       	ldi	r21, 0x00	; 0
    51da:	6b ea       	ldi	r22, 0xAB	; 171
    51dc:	70 e0       	ldi	r23, 0x00	; 0
    51de:	8a e2       	ldi	r24, 0x2A	; 42
    51e0:	92 e0       	ldi	r25, 0x02	; 2
    51e2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	//Updating last status for water
	TFT_PutsInt(100,-1,43,72,8,white,back_color);
    51e6:	0f 2e       	mov	r0, r31
    51e8:	ff e1       	ldi	r31, 0x1F	; 31
    51ea:	af 2e       	mov	r10, r31
    51ec:	b1 2c       	mov	r11, r1
    51ee:	f0 2d       	mov	r31, r0
    51f0:	cc 24       	eor	r12, r12
    51f2:	ca 94       	dec	r12
    51f4:	dc 2c       	mov	r13, r12
    51f6:	68 94       	set
    51f8:	ee 24       	eor	r14, r14
    51fa:	e3 f8       	bld	r14, 3
    51fc:	08 e4       	ldi	r16, 0x48	; 72
    51fe:	10 e0       	ldi	r17, 0x00	; 0
    5200:	2b e2       	ldi	r18, 0x2B	; 43
    5202:	30 e0       	ldi	r19, 0x00	; 0
    5204:	4f ef       	ldi	r20, 0xFF	; 255
    5206:	5f ef       	ldi	r21, 0xFF	; 255
    5208:	64 e6       	ldi	r22, 0x64	; 100
    520a:	70 e0       	ldi	r23, 0x00	; 0
    520c:	80 e0       	ldi	r24, 0x00	; 0
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(water,-1,123,72,8,white,back_color);
    5214:	2b e7       	ldi	r18, 0x7B	; 123
    5216:	30 e0       	ldi	r19, 0x00	; 0
    5218:	4f ef       	ldi	r20, 0xFF	; 255
    521a:	5f ef       	ldi	r21, 0xFF	; 255
    521c:	6b 89       	ldd	r22, Y+19	; 0x13
    521e:	7c 89       	ldd	r23, Y+20	; 0x14
    5220:	89 8d       	ldd	r24, Y+25	; 0x19
    5222:	9b 8d       	ldd	r25, Y+27	; 0x1b
    5224:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,4,123,102,8,white,back_color);
    5228:	06 e6       	ldi	r16, 0x66	; 102
    522a:	10 e0       	ldi	r17, 0x00	; 0
    522c:	2b e7       	ldi	r18, 0x7B	; 123
    522e:	30 e0       	ldi	r19, 0x00	; 0
    5230:	44 e0       	ldi	r20, 0x04	; 4
    5232:	50 e0       	ldi	r21, 0x00	; 0
    5234:	60 e0       	ldi	r22, 0x00	; 0
    5236:	70 e0       	ldi	r23, 0x00	; 0
    5238:	80 e0       	ldi	r24, 0x00	; 0
    523a:	90 e0       	ldi	r25, 0x00	; 0
    523c:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
    5240:	10 92 84 03 	sts	0x0384, r1
    5244:	10 92 85 03 	sts	0x0385, r1
    5248:	10 92 86 03 	sts	0x0386, r1
    524c:	10 92 87 03 	sts	0x0387, r1
    5250:	18 cb       	rjmp	.-2512   	; 0x4882 <main+0x1654>

00005252 <__floatunsisf>:
    5252:	e8 94       	clt
    5254:	09 c0       	rjmp	.+18     	; 0x5268 <__floatsisf+0x12>

00005256 <__floatsisf>:
    5256:	97 fb       	bst	r25, 7
    5258:	3e f4       	brtc	.+14     	; 0x5268 <__floatsisf+0x12>
    525a:	90 95       	com	r25
    525c:	80 95       	com	r24
    525e:	70 95       	com	r23
    5260:	61 95       	neg	r22
    5262:	7f 4f       	sbci	r23, 0xFF	; 255
    5264:	8f 4f       	sbci	r24, 0xFF	; 255
    5266:	9f 4f       	sbci	r25, 0xFF	; 255
    5268:	99 23       	and	r25, r25
    526a:	a9 f0       	breq	.+42     	; 0x5296 <__floatsisf+0x40>
    526c:	f9 2f       	mov	r31, r25
    526e:	96 e9       	ldi	r25, 0x96	; 150
    5270:	bb 27       	eor	r27, r27
    5272:	93 95       	inc	r25
    5274:	f6 95       	lsr	r31
    5276:	87 95       	ror	r24
    5278:	77 95       	ror	r23
    527a:	67 95       	ror	r22
    527c:	b7 95       	ror	r27
    527e:	f1 11       	cpse	r31, r1
    5280:	f8 cf       	rjmp	.-16     	; 0x5272 <__floatsisf+0x1c>
    5282:	fa f4       	brpl	.+62     	; 0x52c2 <__floatsisf+0x6c>
    5284:	bb 0f       	add	r27, r27
    5286:	11 f4       	brne	.+4      	; 0x528c <__floatsisf+0x36>
    5288:	60 ff       	sbrs	r22, 0
    528a:	1b c0       	rjmp	.+54     	; 0x52c2 <__floatsisf+0x6c>
    528c:	6f 5f       	subi	r22, 0xFF	; 255
    528e:	7f 4f       	sbci	r23, 0xFF	; 255
    5290:	8f 4f       	sbci	r24, 0xFF	; 255
    5292:	9f 4f       	sbci	r25, 0xFF	; 255
    5294:	16 c0       	rjmp	.+44     	; 0x52c2 <__floatsisf+0x6c>
    5296:	88 23       	and	r24, r24
    5298:	11 f0       	breq	.+4      	; 0x529e <__floatsisf+0x48>
    529a:	96 e9       	ldi	r25, 0x96	; 150
    529c:	11 c0       	rjmp	.+34     	; 0x52c0 <__floatsisf+0x6a>
    529e:	77 23       	and	r23, r23
    52a0:	21 f0       	breq	.+8      	; 0x52aa <__floatsisf+0x54>
    52a2:	9e e8       	ldi	r25, 0x8E	; 142
    52a4:	87 2f       	mov	r24, r23
    52a6:	76 2f       	mov	r23, r22
    52a8:	05 c0       	rjmp	.+10     	; 0x52b4 <__floatsisf+0x5e>
    52aa:	66 23       	and	r22, r22
    52ac:	71 f0       	breq	.+28     	; 0x52ca <__floatsisf+0x74>
    52ae:	96 e8       	ldi	r25, 0x86	; 134
    52b0:	86 2f       	mov	r24, r22
    52b2:	70 e0       	ldi	r23, 0x00	; 0
    52b4:	60 e0       	ldi	r22, 0x00	; 0
    52b6:	2a f0       	brmi	.+10     	; 0x52c2 <__floatsisf+0x6c>
    52b8:	9a 95       	dec	r25
    52ba:	66 0f       	add	r22, r22
    52bc:	77 1f       	adc	r23, r23
    52be:	88 1f       	adc	r24, r24
    52c0:	da f7       	brpl	.-10     	; 0x52b8 <__floatsisf+0x62>
    52c2:	88 0f       	add	r24, r24
    52c4:	96 95       	lsr	r25
    52c6:	87 95       	ror	r24
    52c8:	97 f9       	bld	r25, 7
    52ca:	08 95       	ret

000052cc <lrint>:
    52cc:	41 d0       	rcall	.+130    	; 0x5350 <__fp_splitA>
    52ce:	a8 f1       	brcs	.+106    	; 0x533a <lrint+0x6e>
    52d0:	9e 57       	subi	r25, 0x7E	; 126
    52d2:	a8 f1       	brcs	.+106    	; 0x533e <lrint+0x72>
    52d4:	98 51       	subi	r25, 0x18	; 24
    52d6:	60 f0       	brcs	.+24     	; 0x52f0 <lrint+0x24>
    52d8:	39 f1       	breq	.+78     	; 0x5328 <lrint+0x5c>
    52da:	98 30       	cpi	r25, 0x08	; 8
    52dc:	70 f5       	brcc	.+92     	; 0x533a <lrint+0x6e>
    52de:	09 2e       	mov	r0, r25
    52e0:	99 27       	eor	r25, r25
    52e2:	66 0f       	add	r22, r22
    52e4:	77 1f       	adc	r23, r23
    52e6:	88 1f       	adc	r24, r24
    52e8:	99 1f       	adc	r25, r25
    52ea:	0a 94       	dec	r0
    52ec:	d1 f7       	brne	.-12     	; 0x52e2 <lrint+0x16>
    52ee:	1c c0       	rjmp	.+56     	; 0x5328 <lrint+0x5c>
    52f0:	bb 27       	eor	r27, r27
    52f2:	99 3f       	cpi	r25, 0xF9	; 249
    52f4:	4c f4       	brge	.+18     	; 0x5308 <lrint+0x3c>
    52f6:	b1 11       	cpse	r27, r1
    52f8:	b1 e0       	ldi	r27, 0x01	; 1
    52fa:	b6 2b       	or	r27, r22
    52fc:	67 2f       	mov	r22, r23
    52fe:	78 2f       	mov	r23, r24
    5300:	88 27       	eor	r24, r24
    5302:	98 5f       	subi	r25, 0xF8	; 248
    5304:	b1 f7       	brne	.-20     	; 0x52f2 <lrint+0x26>
    5306:	08 c0       	rjmp	.+16     	; 0x5318 <lrint+0x4c>
    5308:	86 95       	lsr	r24
    530a:	77 95       	ror	r23
    530c:	67 95       	ror	r22
    530e:	b7 95       	ror	r27
    5310:	08 f4       	brcc	.+2      	; 0x5314 <lrint+0x48>
    5312:	b1 60       	ori	r27, 0x01	; 1
    5314:	93 95       	inc	r25
    5316:	c1 f7       	brne	.-16     	; 0x5308 <lrint+0x3c>
    5318:	bb 0f       	add	r27, r27
    531a:	30 f4       	brcc	.+12     	; 0x5328 <lrint+0x5c>
    531c:	11 f4       	brne	.+4      	; 0x5322 <lrint+0x56>
    531e:	60 ff       	sbrs	r22, 0
    5320:	03 c0       	rjmp	.+6      	; 0x5328 <lrint+0x5c>
    5322:	6f 5f       	subi	r22, 0xFF	; 255
    5324:	7f 4f       	sbci	r23, 0xFF	; 255
    5326:	8f 4f       	sbci	r24, 0xFF	; 255
    5328:	3e f4       	brtc	.+14     	; 0x5338 <lrint+0x6c>
    532a:	90 95       	com	r25
    532c:	80 95       	com	r24
    532e:	70 95       	com	r23
    5330:	61 95       	neg	r22
    5332:	7f 4f       	sbci	r23, 0xFF	; 255
    5334:	8f 4f       	sbci	r24, 0xFF	; 255
    5336:	9f 4f       	sbci	r25, 0xFF	; 255
    5338:	08 95       	ret
    533a:	68 94       	set
    533c:	24 c0       	rjmp	.+72     	; 0x5386 <__fp_szero>
    533e:	22 c0       	rjmp	.+68     	; 0x5384 <__fp_zero>

00005340 <__fp_split3>:
    5340:	57 fd       	sbrc	r21, 7
    5342:	90 58       	subi	r25, 0x80	; 128
    5344:	44 0f       	add	r20, r20
    5346:	55 1f       	adc	r21, r21
    5348:	59 f0       	breq	.+22     	; 0x5360 <__fp_splitA+0x10>
    534a:	5f 3f       	cpi	r21, 0xFF	; 255
    534c:	71 f0       	breq	.+28     	; 0x536a <__fp_splitA+0x1a>
    534e:	47 95       	ror	r20

00005350 <__fp_splitA>:
    5350:	88 0f       	add	r24, r24
    5352:	97 fb       	bst	r25, 7
    5354:	99 1f       	adc	r25, r25
    5356:	61 f0       	breq	.+24     	; 0x5370 <__fp_splitA+0x20>
    5358:	9f 3f       	cpi	r25, 0xFF	; 255
    535a:	79 f0       	breq	.+30     	; 0x537a <__fp_splitA+0x2a>
    535c:	87 95       	ror	r24
    535e:	08 95       	ret
    5360:	12 16       	cp	r1, r18
    5362:	13 06       	cpc	r1, r19
    5364:	14 06       	cpc	r1, r20
    5366:	55 1f       	adc	r21, r21
    5368:	f2 cf       	rjmp	.-28     	; 0x534e <__fp_split3+0xe>
    536a:	46 95       	lsr	r20
    536c:	f1 df       	rcall	.-30     	; 0x5350 <__fp_splitA>
    536e:	08 c0       	rjmp	.+16     	; 0x5380 <__fp_splitA+0x30>
    5370:	16 16       	cp	r1, r22
    5372:	17 06       	cpc	r1, r23
    5374:	18 06       	cpc	r1, r24
    5376:	99 1f       	adc	r25, r25
    5378:	f1 cf       	rjmp	.-30     	; 0x535c <__fp_splitA+0xc>
    537a:	86 95       	lsr	r24
    537c:	71 05       	cpc	r23, r1
    537e:	61 05       	cpc	r22, r1
    5380:	08 94       	sec
    5382:	08 95       	ret

00005384 <__fp_zero>:
    5384:	e8 94       	clt

00005386 <__fp_szero>:
    5386:	bb 27       	eor	r27, r27
    5388:	66 27       	eor	r22, r22
    538a:	77 27       	eor	r23, r23
    538c:	cb 01       	movw	r24, r22
    538e:	97 f9       	bld	r25, 7
    5390:	08 95       	ret

00005392 <vfprintf>:
    5392:	a3 e1       	ldi	r26, 0x13	; 19
    5394:	b0 e0       	ldi	r27, 0x00	; 0
    5396:	ef ec       	ldi	r30, 0xCF	; 207
    5398:	f9 e2       	ldi	r31, 0x29	; 41
    539a:	0c 94 b3 2d 	jmp	0x5b66	; 0x5b66 <__prologue_saves__>
    539e:	7c 01       	movw	r14, r24
    53a0:	1b 01       	movw	r2, r22
    53a2:	6a 01       	movw	r12, r20
    53a4:	fc 01       	movw	r30, r24
    53a6:	17 82       	std	Z+7, r1	; 0x07
    53a8:	16 82       	std	Z+6, r1	; 0x06
    53aa:	83 81       	ldd	r24, Z+3	; 0x03
    53ac:	81 ff       	sbrs	r24, 1
    53ae:	66 c3       	rjmp	.+1740   	; 0x5a7c <vfprintf+0x6ea>
    53b0:	be 01       	movw	r22, r28
    53b2:	6f 5f       	subi	r22, 0xFF	; 255
    53b4:	7f 4f       	sbci	r23, 0xFF	; 255
    53b6:	4b 01       	movw	r8, r22
    53b8:	f7 01       	movw	r30, r14
    53ba:	93 81       	ldd	r25, Z+3	; 0x03
    53bc:	f1 01       	movw	r30, r2
    53be:	93 fd       	sbrc	r25, 3
    53c0:	85 91       	lpm	r24, Z+
    53c2:	93 ff       	sbrs	r25, 3
    53c4:	81 91       	ld	r24, Z+
    53c6:	1f 01       	movw	r2, r30
    53c8:	88 23       	and	r24, r24
    53ca:	09 f4       	brne	.+2      	; 0x53ce <vfprintf+0x3c>
    53cc:	53 c3       	rjmp	.+1702   	; 0x5a74 <vfprintf+0x6e2>
    53ce:	85 32       	cpi	r24, 0x25	; 37
    53d0:	39 f4       	brne	.+14     	; 0x53e0 <vfprintf+0x4e>
    53d2:	93 fd       	sbrc	r25, 3
    53d4:	85 91       	lpm	r24, Z+
    53d6:	93 ff       	sbrs	r25, 3
    53d8:	81 91       	ld	r24, Z+
    53da:	1f 01       	movw	r2, r30
    53dc:	85 32       	cpi	r24, 0x25	; 37
    53de:	39 f4       	brne	.+14     	; 0x53ee <vfprintf+0x5c>
    53e0:	b7 01       	movw	r22, r14
    53e2:	90 e0       	ldi	r25, 0x00	; 0
    53e4:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    53e8:	56 01       	movw	r10, r12
    53ea:	65 01       	movw	r12, r10
    53ec:	e5 cf       	rjmp	.-54     	; 0x53b8 <vfprintf+0x26>
    53ee:	10 e0       	ldi	r17, 0x00	; 0
    53f0:	51 2c       	mov	r5, r1
    53f2:	20 e0       	ldi	r18, 0x00	; 0
    53f4:	20 32       	cpi	r18, 0x20	; 32
    53f6:	a0 f4       	brcc	.+40     	; 0x5420 <vfprintf+0x8e>
    53f8:	8b 32       	cpi	r24, 0x2B	; 43
    53fa:	69 f0       	breq	.+26     	; 0x5416 <vfprintf+0x84>
    53fc:	30 f4       	brcc	.+12     	; 0x540a <vfprintf+0x78>
    53fe:	80 32       	cpi	r24, 0x20	; 32
    5400:	59 f0       	breq	.+22     	; 0x5418 <vfprintf+0x86>
    5402:	83 32       	cpi	r24, 0x23	; 35
    5404:	69 f4       	brne	.+26     	; 0x5420 <vfprintf+0x8e>
    5406:	20 61       	ori	r18, 0x10	; 16
    5408:	2c c0       	rjmp	.+88     	; 0x5462 <vfprintf+0xd0>
    540a:	8d 32       	cpi	r24, 0x2D	; 45
    540c:	39 f0       	breq	.+14     	; 0x541c <vfprintf+0x8a>
    540e:	80 33       	cpi	r24, 0x30	; 48
    5410:	39 f4       	brne	.+14     	; 0x5420 <vfprintf+0x8e>
    5412:	21 60       	ori	r18, 0x01	; 1
    5414:	26 c0       	rjmp	.+76     	; 0x5462 <vfprintf+0xd0>
    5416:	22 60       	ori	r18, 0x02	; 2
    5418:	24 60       	ori	r18, 0x04	; 4
    541a:	23 c0       	rjmp	.+70     	; 0x5462 <vfprintf+0xd0>
    541c:	28 60       	ori	r18, 0x08	; 8
    541e:	21 c0       	rjmp	.+66     	; 0x5462 <vfprintf+0xd0>
    5420:	27 fd       	sbrc	r18, 7
    5422:	27 c0       	rjmp	.+78     	; 0x5472 <vfprintf+0xe0>
    5424:	30 ed       	ldi	r19, 0xD0	; 208
    5426:	38 0f       	add	r19, r24
    5428:	3a 30       	cpi	r19, 0x0A	; 10
    542a:	78 f4       	brcc	.+30     	; 0x544a <vfprintf+0xb8>
    542c:	26 ff       	sbrs	r18, 6
    542e:	06 c0       	rjmp	.+12     	; 0x543c <vfprintf+0xaa>
    5430:	fa e0       	ldi	r31, 0x0A	; 10
    5432:	1f 9f       	mul	r17, r31
    5434:	30 0d       	add	r19, r0
    5436:	11 24       	eor	r1, r1
    5438:	13 2f       	mov	r17, r19
    543a:	13 c0       	rjmp	.+38     	; 0x5462 <vfprintf+0xd0>
    543c:	6a e0       	ldi	r22, 0x0A	; 10
    543e:	56 9e       	mul	r5, r22
    5440:	30 0d       	add	r19, r0
    5442:	11 24       	eor	r1, r1
    5444:	53 2e       	mov	r5, r19
    5446:	20 62       	ori	r18, 0x20	; 32
    5448:	0c c0       	rjmp	.+24     	; 0x5462 <vfprintf+0xd0>
    544a:	8e 32       	cpi	r24, 0x2E	; 46
    544c:	21 f4       	brne	.+8      	; 0x5456 <vfprintf+0xc4>
    544e:	26 fd       	sbrc	r18, 6
    5450:	11 c3       	rjmp	.+1570   	; 0x5a74 <vfprintf+0x6e2>
    5452:	20 64       	ori	r18, 0x40	; 64
    5454:	06 c0       	rjmp	.+12     	; 0x5462 <vfprintf+0xd0>
    5456:	8c 36       	cpi	r24, 0x6C	; 108
    5458:	11 f4       	brne	.+4      	; 0x545e <vfprintf+0xcc>
    545a:	20 68       	ori	r18, 0x80	; 128
    545c:	02 c0       	rjmp	.+4      	; 0x5462 <vfprintf+0xd0>
    545e:	88 36       	cpi	r24, 0x68	; 104
    5460:	41 f4       	brne	.+16     	; 0x5472 <vfprintf+0xe0>
    5462:	f1 01       	movw	r30, r2
    5464:	93 fd       	sbrc	r25, 3
    5466:	85 91       	lpm	r24, Z+
    5468:	93 ff       	sbrs	r25, 3
    546a:	81 91       	ld	r24, Z+
    546c:	1f 01       	movw	r2, r30
    546e:	81 11       	cpse	r24, r1
    5470:	c1 cf       	rjmp	.-126    	; 0x53f4 <vfprintf+0x62>
    5472:	9b eb       	ldi	r25, 0xBB	; 187
    5474:	98 0f       	add	r25, r24
    5476:	93 30       	cpi	r25, 0x03	; 3
    5478:	18 f4       	brcc	.+6      	; 0x5480 <vfprintf+0xee>
    547a:	20 61       	ori	r18, 0x10	; 16
    547c:	80 5e       	subi	r24, 0xE0	; 224
    547e:	06 c0       	rjmp	.+12     	; 0x548c <vfprintf+0xfa>
    5480:	9b e9       	ldi	r25, 0x9B	; 155
    5482:	98 0f       	add	r25, r24
    5484:	93 30       	cpi	r25, 0x03	; 3
    5486:	08 f0       	brcs	.+2      	; 0x548a <vfprintf+0xf8>
    5488:	aa c1       	rjmp	.+852    	; 0x57de <vfprintf+0x44c>
    548a:	2f 7e       	andi	r18, 0xEF	; 239
    548c:	26 ff       	sbrs	r18, 6
    548e:	16 e0       	ldi	r17, 0x06	; 6
    5490:	2f 73       	andi	r18, 0x3F	; 63
    5492:	72 2e       	mov	r7, r18
    5494:	85 36       	cpi	r24, 0x65	; 101
    5496:	21 f4       	brne	.+8      	; 0x54a0 <vfprintf+0x10e>
    5498:	f2 2f       	mov	r31, r18
    549a:	f0 64       	ori	r31, 0x40	; 64
    549c:	7f 2e       	mov	r7, r31
    549e:	08 c0       	rjmp	.+16     	; 0x54b0 <vfprintf+0x11e>
    54a0:	86 36       	cpi	r24, 0x66	; 102
    54a2:	21 f4       	brne	.+8      	; 0x54ac <vfprintf+0x11a>
    54a4:	62 2f       	mov	r22, r18
    54a6:	60 68       	ori	r22, 0x80	; 128
    54a8:	76 2e       	mov	r7, r22
    54aa:	02 c0       	rjmp	.+4      	; 0x54b0 <vfprintf+0x11e>
    54ac:	11 11       	cpse	r17, r1
    54ae:	11 50       	subi	r17, 0x01	; 1
    54b0:	77 fe       	sbrs	r7, 7
    54b2:	07 c0       	rjmp	.+14     	; 0x54c2 <vfprintf+0x130>
    54b4:	1c 33       	cpi	r17, 0x3C	; 60
    54b6:	48 f4       	brcc	.+18     	; 0x54ca <vfprintf+0x138>
    54b8:	44 24       	eor	r4, r4
    54ba:	43 94       	inc	r4
    54bc:	41 0e       	add	r4, r17
    54be:	27 e0       	ldi	r18, 0x07	; 7
    54c0:	0b c0       	rjmp	.+22     	; 0x54d8 <vfprintf+0x146>
    54c2:	18 30       	cpi	r17, 0x08	; 8
    54c4:	30 f4       	brcc	.+12     	; 0x54d2 <vfprintf+0x140>
    54c6:	21 2f       	mov	r18, r17
    54c8:	06 c0       	rjmp	.+12     	; 0x54d6 <vfprintf+0x144>
    54ca:	27 e0       	ldi	r18, 0x07	; 7
    54cc:	4c e3       	ldi	r20, 0x3C	; 60
    54ce:	44 2e       	mov	r4, r20
    54d0:	03 c0       	rjmp	.+6      	; 0x54d8 <vfprintf+0x146>
    54d2:	27 e0       	ldi	r18, 0x07	; 7
    54d4:	17 e0       	ldi	r17, 0x07	; 7
    54d6:	41 2c       	mov	r4, r1
    54d8:	56 01       	movw	r10, r12
    54da:	74 e0       	ldi	r23, 0x04	; 4
    54dc:	a7 0e       	add	r10, r23
    54de:	b1 1c       	adc	r11, r1
    54e0:	f6 01       	movw	r30, r12
    54e2:	60 81       	ld	r22, Z
    54e4:	71 81       	ldd	r23, Z+1	; 0x01
    54e6:	82 81       	ldd	r24, Z+2	; 0x02
    54e8:	93 81       	ldd	r25, Z+3	; 0x03
    54ea:	04 2d       	mov	r16, r4
    54ec:	a4 01       	movw	r20, r8
    54ee:	0e 94 fe 2d 	call	0x5bfc	; 0x5bfc <__ftoa_engine>
    54f2:	6c 01       	movw	r12, r24
    54f4:	09 81       	ldd	r16, Y+1	; 0x01
    54f6:	00 ff       	sbrs	r16, 0
    54f8:	02 c0       	rjmp	.+4      	; 0x54fe <vfprintf+0x16c>
    54fa:	03 ff       	sbrs	r16, 3
    54fc:	06 c0       	rjmp	.+12     	; 0x550a <vfprintf+0x178>
    54fe:	71 fc       	sbrc	r7, 1
    5500:	07 c0       	rjmp	.+14     	; 0x5510 <vfprintf+0x17e>
    5502:	72 fc       	sbrc	r7, 2
    5504:	08 c0       	rjmp	.+16     	; 0x5516 <vfprintf+0x184>
    5506:	61 2c       	mov	r6, r1
    5508:	08 c0       	rjmp	.+16     	; 0x551a <vfprintf+0x188>
    550a:	3d e2       	ldi	r19, 0x2D	; 45
    550c:	63 2e       	mov	r6, r19
    550e:	05 c0       	rjmp	.+10     	; 0x551a <vfprintf+0x188>
    5510:	2b e2       	ldi	r18, 0x2B	; 43
    5512:	62 2e       	mov	r6, r18
    5514:	02 c0       	rjmp	.+4      	; 0x551a <vfprintf+0x188>
    5516:	90 e2       	ldi	r25, 0x20	; 32
    5518:	69 2e       	mov	r6, r25
    551a:	80 2f       	mov	r24, r16
    551c:	8c 70       	andi	r24, 0x0C	; 12
    551e:	99 f1       	breq	.+102    	; 0x5586 <vfprintf+0x1f4>
    5520:	66 20       	and	r6, r6
    5522:	11 f0       	breq	.+4      	; 0x5528 <vfprintf+0x196>
    5524:	84 e0       	ldi	r24, 0x04	; 4
    5526:	01 c0       	rjmp	.+2      	; 0x552a <vfprintf+0x198>
    5528:	83 e0       	ldi	r24, 0x03	; 3
    552a:	85 15       	cp	r24, r5
    552c:	10 f0       	brcs	.+4      	; 0x5532 <vfprintf+0x1a0>
    552e:	51 2c       	mov	r5, r1
    5530:	0b c0       	rjmp	.+22     	; 0x5548 <vfprintf+0x1b6>
    5532:	58 1a       	sub	r5, r24
    5534:	73 fc       	sbrc	r7, 3
    5536:	08 c0       	rjmp	.+16     	; 0x5548 <vfprintf+0x1b6>
    5538:	b7 01       	movw	r22, r14
    553a:	80 e2       	ldi	r24, 0x20	; 32
    553c:	90 e0       	ldi	r25, 0x00	; 0
    553e:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5542:	5a 94       	dec	r5
    5544:	c9 f7       	brne	.-14     	; 0x5538 <vfprintf+0x1a6>
    5546:	f3 cf       	rjmp	.-26     	; 0x552e <vfprintf+0x19c>
    5548:	66 20       	and	r6, r6
    554a:	29 f0       	breq	.+10     	; 0x5556 <vfprintf+0x1c4>
    554c:	b7 01       	movw	r22, r14
    554e:	86 2d       	mov	r24, r6
    5550:	90 e0       	ldi	r25, 0x00	; 0
    5552:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5556:	03 fd       	sbrc	r16, 3
    5558:	03 c0       	rjmp	.+6      	; 0x5560 <vfprintf+0x1ce>
    555a:	00 ed       	ldi	r16, 0xD0	; 208
    555c:	12 e2       	ldi	r17, 0x22	; 34
    555e:	02 c0       	rjmp	.+4      	; 0x5564 <vfprintf+0x1d2>
    5560:	0c ec       	ldi	r16, 0xCC	; 204
    5562:	12 e2       	ldi	r17, 0x22	; 34
    5564:	f7 2d       	mov	r31, r7
    5566:	f0 71       	andi	r31, 0x10	; 16
    5568:	7f 2e       	mov	r7, r31
    556a:	f8 01       	movw	r30, r16
    556c:	84 91       	lpm	r24, Z
    556e:	88 23       	and	r24, r24
    5570:	09 f4       	brne	.+2      	; 0x5574 <vfprintf+0x1e2>
    5572:	76 c2       	rjmp	.+1260   	; 0x5a60 <vfprintf+0x6ce>
    5574:	71 10       	cpse	r7, r1
    5576:	80 52       	subi	r24, 0x20	; 32
    5578:	b7 01       	movw	r22, r14
    557a:	90 e0       	ldi	r25, 0x00	; 0
    557c:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5580:	0f 5f       	subi	r16, 0xFF	; 255
    5582:	1f 4f       	sbci	r17, 0xFF	; 255
    5584:	f2 cf       	rjmp	.-28     	; 0x556a <vfprintf+0x1d8>
    5586:	77 fe       	sbrs	r7, 7
    5588:	0f c0       	rjmp	.+30     	; 0x55a8 <vfprintf+0x216>
    558a:	4c 0c       	add	r4, r12
    558c:	04 ff       	sbrs	r16, 4
    558e:	04 c0       	rjmp	.+8      	; 0x5598 <vfprintf+0x206>
    5590:	8a 81       	ldd	r24, Y+2	; 0x02
    5592:	81 33       	cpi	r24, 0x31	; 49
    5594:	09 f4       	brne	.+2      	; 0x5598 <vfprintf+0x206>
    5596:	4a 94       	dec	r4
    5598:	14 14       	cp	r1, r4
    559a:	74 f5       	brge	.+92     	; 0x55f8 <vfprintf+0x266>
    559c:	f8 e0       	ldi	r31, 0x08	; 8
    559e:	f4 15       	cp	r31, r4
    55a0:	78 f5       	brcc	.+94     	; 0x5600 <vfprintf+0x26e>
    55a2:	88 e0       	ldi	r24, 0x08	; 8
    55a4:	48 2e       	mov	r4, r24
    55a6:	2c c0       	rjmp	.+88     	; 0x5600 <vfprintf+0x26e>
    55a8:	76 fc       	sbrc	r7, 6
    55aa:	2a c0       	rjmp	.+84     	; 0x5600 <vfprintf+0x26e>
    55ac:	81 2f       	mov	r24, r17
    55ae:	90 e0       	ldi	r25, 0x00	; 0
    55b0:	8c 15       	cp	r24, r12
    55b2:	9d 05       	cpc	r25, r13
    55b4:	9c f0       	brlt	.+38     	; 0x55dc <vfprintf+0x24a>
    55b6:	6c ef       	ldi	r22, 0xFC	; 252
    55b8:	c6 16       	cp	r12, r22
    55ba:	6f ef       	ldi	r22, 0xFF	; 255
    55bc:	d6 06       	cpc	r13, r22
    55be:	74 f0       	brlt	.+28     	; 0x55dc <vfprintf+0x24a>
    55c0:	77 2d       	mov	r23, r7
    55c2:	70 68       	ori	r23, 0x80	; 128
    55c4:	77 2e       	mov	r7, r23
    55c6:	0a c0       	rjmp	.+20     	; 0x55dc <vfprintf+0x24a>
    55c8:	e2 e0       	ldi	r30, 0x02	; 2
    55ca:	f0 e0       	ldi	r31, 0x00	; 0
    55cc:	ec 0f       	add	r30, r28
    55ce:	fd 1f       	adc	r31, r29
    55d0:	e1 0f       	add	r30, r17
    55d2:	f1 1d       	adc	r31, r1
    55d4:	80 81       	ld	r24, Z
    55d6:	80 33       	cpi	r24, 0x30	; 48
    55d8:	19 f4       	brne	.+6      	; 0x55e0 <vfprintf+0x24e>
    55da:	11 50       	subi	r17, 0x01	; 1
    55dc:	11 11       	cpse	r17, r1
    55de:	f4 cf       	rjmp	.-24     	; 0x55c8 <vfprintf+0x236>
    55e0:	77 fe       	sbrs	r7, 7
    55e2:	0e c0       	rjmp	.+28     	; 0x5600 <vfprintf+0x26e>
    55e4:	44 24       	eor	r4, r4
    55e6:	43 94       	inc	r4
    55e8:	41 0e       	add	r4, r17
    55ea:	81 2f       	mov	r24, r17
    55ec:	90 e0       	ldi	r25, 0x00	; 0
    55ee:	c8 16       	cp	r12, r24
    55f0:	d9 06       	cpc	r13, r25
    55f2:	2c f4       	brge	.+10     	; 0x55fe <vfprintf+0x26c>
    55f4:	1c 19       	sub	r17, r12
    55f6:	04 c0       	rjmp	.+8      	; 0x5600 <vfprintf+0x26e>
    55f8:	44 24       	eor	r4, r4
    55fa:	43 94       	inc	r4
    55fc:	01 c0       	rjmp	.+2      	; 0x5600 <vfprintf+0x26e>
    55fe:	10 e0       	ldi	r17, 0x00	; 0
    5600:	77 fe       	sbrs	r7, 7
    5602:	07 c0       	rjmp	.+14     	; 0x5612 <vfprintf+0x280>
    5604:	1c 14       	cp	r1, r12
    5606:	1d 04       	cpc	r1, r13
    5608:	3c f4       	brge	.+14     	; 0x5618 <vfprintf+0x286>
    560a:	96 01       	movw	r18, r12
    560c:	2f 5f       	subi	r18, 0xFF	; 255
    560e:	3f 4f       	sbci	r19, 0xFF	; 255
    5610:	05 c0       	rjmp	.+10     	; 0x561c <vfprintf+0x28a>
    5612:	25 e0       	ldi	r18, 0x05	; 5
    5614:	30 e0       	ldi	r19, 0x00	; 0
    5616:	02 c0       	rjmp	.+4      	; 0x561c <vfprintf+0x28a>
    5618:	21 e0       	ldi	r18, 0x01	; 1
    561a:	30 e0       	ldi	r19, 0x00	; 0
    561c:	66 20       	and	r6, r6
    561e:	11 f0       	breq	.+4      	; 0x5624 <vfprintf+0x292>
    5620:	2f 5f       	subi	r18, 0xFF	; 255
    5622:	3f 4f       	sbci	r19, 0xFF	; 255
    5624:	11 23       	and	r17, r17
    5626:	31 f0       	breq	.+12     	; 0x5634 <vfprintf+0x2a2>
    5628:	41 2f       	mov	r20, r17
    562a:	50 e0       	ldi	r21, 0x00	; 0
    562c:	4f 5f       	subi	r20, 0xFF	; 255
    562e:	5f 4f       	sbci	r21, 0xFF	; 255
    5630:	24 0f       	add	r18, r20
    5632:	35 1f       	adc	r19, r21
    5634:	45 2d       	mov	r20, r5
    5636:	50 e0       	ldi	r21, 0x00	; 0
    5638:	24 17       	cp	r18, r20
    563a:	35 07       	cpc	r19, r21
    563c:	14 f4       	brge	.+4      	; 0x5642 <vfprintf+0x2b0>
    563e:	52 1a       	sub	r5, r18
    5640:	01 c0       	rjmp	.+2      	; 0x5644 <vfprintf+0x2b2>
    5642:	51 2c       	mov	r5, r1
    5644:	87 2d       	mov	r24, r7
    5646:	89 70       	andi	r24, 0x09	; 9
    5648:	49 f4       	brne	.+18     	; 0x565c <vfprintf+0x2ca>
    564a:	55 20       	and	r5, r5
    564c:	39 f0       	breq	.+14     	; 0x565c <vfprintf+0x2ca>
    564e:	b7 01       	movw	r22, r14
    5650:	80 e2       	ldi	r24, 0x20	; 32
    5652:	90 e0       	ldi	r25, 0x00	; 0
    5654:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5658:	5a 94       	dec	r5
    565a:	f7 cf       	rjmp	.-18     	; 0x564a <vfprintf+0x2b8>
    565c:	66 20       	and	r6, r6
    565e:	29 f0       	breq	.+10     	; 0x566a <vfprintf+0x2d8>
    5660:	b7 01       	movw	r22, r14
    5662:	86 2d       	mov	r24, r6
    5664:	90 e0       	ldi	r25, 0x00	; 0
    5666:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    566a:	73 fc       	sbrc	r7, 3
    566c:	09 c0       	rjmp	.+18     	; 0x5680 <vfprintf+0x2ee>
    566e:	55 20       	and	r5, r5
    5670:	39 f0       	breq	.+14     	; 0x5680 <vfprintf+0x2ee>
    5672:	b7 01       	movw	r22, r14
    5674:	80 e3       	ldi	r24, 0x30	; 48
    5676:	90 e0       	ldi	r25, 0x00	; 0
    5678:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    567c:	5a 94       	dec	r5
    567e:	f7 cf       	rjmp	.-18     	; 0x566e <vfprintf+0x2dc>
    5680:	77 fe       	sbrs	r7, 7
    5682:	5f c0       	rjmp	.+190    	; 0x5742 <vfprintf+0x3b0>
    5684:	9c 2d       	mov	r25, r12
    5686:	8d 2d       	mov	r24, r13
    5688:	d7 fe       	sbrs	r13, 7
    568a:	02 c0       	rjmp	.+4      	; 0x5690 <vfprintf+0x2fe>
    568c:	90 e0       	ldi	r25, 0x00	; 0
    568e:	80 e0       	ldi	r24, 0x00	; 0
    5690:	69 2e       	mov	r6, r25
    5692:	78 2e       	mov	r7, r24
    5694:	40 e0       	ldi	r20, 0x00	; 0
    5696:	50 e0       	ldi	r21, 0x00	; 0
    5698:	c6 01       	movw	r24, r12
    569a:	84 19       	sub	r24, r4
    569c:	91 09       	sbc	r25, r1
    569e:	9d 87       	std	Y+13, r25	; 0x0d
    56a0:	8c 87       	std	Y+12, r24	; 0x0c
    56a2:	96 01       	movw	r18, r12
    56a4:	26 19       	sub	r18, r6
    56a6:	37 09       	sbc	r19, r7
    56a8:	28 0d       	add	r18, r8
    56aa:	39 1d       	adc	r19, r9
    56ac:	81 2f       	mov	r24, r17
    56ae:	90 e0       	ldi	r25, 0x00	; 0
    56b0:	ee 27       	eor	r30, r30
    56b2:	ff 27       	eor	r31, r31
    56b4:	e8 1b       	sub	r30, r24
    56b6:	f9 0b       	sbc	r31, r25
    56b8:	ff 87       	std	Y+15, r31	; 0x0f
    56ba:	ee 87       	std	Y+14, r30	; 0x0e
    56bc:	ff ef       	ldi	r31, 0xFF	; 255
    56be:	6f 16       	cp	r6, r31
    56c0:	7f 06       	cpc	r7, r31
    56c2:	69 f4       	brne	.+26     	; 0x56de <vfprintf+0x34c>
    56c4:	b7 01       	movw	r22, r14
    56c6:	8e e2       	ldi	r24, 0x2E	; 46
    56c8:	90 e0       	ldi	r25, 0x00	; 0
    56ca:	2b 8b       	std	Y+19, r18	; 0x13
    56cc:	3a 8b       	std	Y+18, r19	; 0x12
    56ce:	48 8b       	std	Y+16, r20	; 0x10
    56d0:	59 8b       	std	Y+17, r21	; 0x11
    56d2:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    56d6:	59 89       	ldd	r21, Y+17	; 0x11
    56d8:	48 89       	ldd	r20, Y+16	; 0x10
    56da:	3a 89       	ldd	r19, Y+18	; 0x12
    56dc:	2b 89       	ldd	r18, Y+19	; 0x13
    56de:	c6 14       	cp	r12, r6
    56e0:	d7 04       	cpc	r13, r7
    56e2:	54 f0       	brlt	.+20     	; 0x56f8 <vfprintf+0x366>
    56e4:	6c 85       	ldd	r22, Y+12	; 0x0c
    56e6:	7d 85       	ldd	r23, Y+13	; 0x0d
    56e8:	66 15       	cp	r22, r6
    56ea:	77 05       	cpc	r23, r7
    56ec:	2c f4       	brge	.+10     	; 0x56f8 <vfprintf+0x366>
    56ee:	f9 01       	movw	r30, r18
    56f0:	e4 0f       	add	r30, r20
    56f2:	f5 1f       	adc	r31, r21
    56f4:	81 81       	ldd	r24, Z+1	; 0x01
    56f6:	01 c0       	rjmp	.+2      	; 0x56fa <vfprintf+0x368>
    56f8:	80 e3       	ldi	r24, 0x30	; 48
    56fa:	71 e0       	ldi	r23, 0x01	; 1
    56fc:	67 1a       	sub	r6, r23
    56fe:	71 08       	sbc	r7, r1
    5700:	4f 5f       	subi	r20, 0xFF	; 255
    5702:	5f 4f       	sbci	r21, 0xFF	; 255
    5704:	ee 85       	ldd	r30, Y+14	; 0x0e
    5706:	ff 85       	ldd	r31, Y+15	; 0x0f
    5708:	6e 16       	cp	r6, r30
    570a:	7f 06       	cpc	r7, r31
    570c:	6c f0       	brlt	.+26     	; 0x5728 <vfprintf+0x396>
    570e:	b7 01       	movw	r22, r14
    5710:	90 e0       	ldi	r25, 0x00	; 0
    5712:	2b 8b       	std	Y+19, r18	; 0x13
    5714:	3a 8b       	std	Y+18, r19	; 0x12
    5716:	48 8b       	std	Y+16, r20	; 0x10
    5718:	59 8b       	std	Y+17, r21	; 0x11
    571a:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    571e:	2b 89       	ldd	r18, Y+19	; 0x13
    5720:	3a 89       	ldd	r19, Y+18	; 0x12
    5722:	48 89       	ldd	r20, Y+16	; 0x10
    5724:	59 89       	ldd	r21, Y+17	; 0x11
    5726:	ca cf       	rjmp	.-108    	; 0x56bc <vfprintf+0x32a>
    5728:	6c 14       	cp	r6, r12
    572a:	7d 04       	cpc	r7, r13
    572c:	39 f4       	brne	.+14     	; 0x573c <vfprintf+0x3aa>
    572e:	9a 81       	ldd	r25, Y+2	; 0x02
    5730:	96 33       	cpi	r25, 0x36	; 54
    5732:	18 f4       	brcc	.+6      	; 0x573a <vfprintf+0x3a8>
    5734:	95 33       	cpi	r25, 0x35	; 53
    5736:	11 f4       	brne	.+4      	; 0x573c <vfprintf+0x3aa>
    5738:	04 ff       	sbrs	r16, 4
    573a:	81 e3       	ldi	r24, 0x31	; 49
    573c:	b7 01       	movw	r22, r14
    573e:	90 e0       	ldi	r25, 0x00	; 0
    5740:	4b c0       	rjmp	.+150    	; 0x57d8 <vfprintf+0x446>
    5742:	8a 81       	ldd	r24, Y+2	; 0x02
    5744:	81 33       	cpi	r24, 0x31	; 49
    5746:	09 f0       	breq	.+2      	; 0x574a <vfprintf+0x3b8>
    5748:	0f 7e       	andi	r16, 0xEF	; 239
    574a:	b7 01       	movw	r22, r14
    574c:	90 e0       	ldi	r25, 0x00	; 0
    574e:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5752:	11 11       	cpse	r17, r1
    5754:	05 c0       	rjmp	.+10     	; 0x5760 <vfprintf+0x3ce>
    5756:	74 fe       	sbrs	r7, 4
    5758:	18 c0       	rjmp	.+48     	; 0x578a <vfprintf+0x3f8>
    575a:	85 e4       	ldi	r24, 0x45	; 69
    575c:	90 e0       	ldi	r25, 0x00	; 0
    575e:	17 c0       	rjmp	.+46     	; 0x578e <vfprintf+0x3fc>
    5760:	b7 01       	movw	r22, r14
    5762:	8e e2       	ldi	r24, 0x2E	; 46
    5764:	90 e0       	ldi	r25, 0x00	; 0
    5766:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    576a:	82 e0       	ldi	r24, 0x02	; 2
    576c:	66 24       	eor	r6, r6
    576e:	63 94       	inc	r6
    5770:	68 0e       	add	r6, r24
    5772:	f4 01       	movw	r30, r8
    5774:	e8 0f       	add	r30, r24
    5776:	f1 1d       	adc	r31, r1
    5778:	80 81       	ld	r24, Z
    577a:	b7 01       	movw	r22, r14
    577c:	90 e0       	ldi	r25, 0x00	; 0
    577e:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5782:	11 50       	subi	r17, 0x01	; 1
    5784:	41 f3       	breq	.-48     	; 0x5756 <vfprintf+0x3c4>
    5786:	86 2d       	mov	r24, r6
    5788:	f1 cf       	rjmp	.-30     	; 0x576c <vfprintf+0x3da>
    578a:	85 e6       	ldi	r24, 0x65	; 101
    578c:	90 e0       	ldi	r25, 0x00	; 0
    578e:	b7 01       	movw	r22, r14
    5790:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5794:	d7 fc       	sbrc	r13, 7
    5796:	05 c0       	rjmp	.+10     	; 0x57a2 <vfprintf+0x410>
    5798:	c1 14       	cp	r12, r1
    579a:	d1 04       	cpc	r13, r1
    579c:	39 f4       	brne	.+14     	; 0x57ac <vfprintf+0x41a>
    579e:	04 ff       	sbrs	r16, 4
    57a0:	05 c0       	rjmp	.+10     	; 0x57ac <vfprintf+0x41a>
    57a2:	d1 94       	neg	r13
    57a4:	c1 94       	neg	r12
    57a6:	d1 08       	sbc	r13, r1
    57a8:	8d e2       	ldi	r24, 0x2D	; 45
    57aa:	01 c0       	rjmp	.+2      	; 0x57ae <vfprintf+0x41c>
    57ac:	8b e2       	ldi	r24, 0x2B	; 43
    57ae:	b7 01       	movw	r22, r14
    57b0:	90 e0       	ldi	r25, 0x00	; 0
    57b2:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    57b6:	80 e3       	ldi	r24, 0x30	; 48
    57b8:	6a e0       	ldi	r22, 0x0A	; 10
    57ba:	c6 16       	cp	r12, r22
    57bc:	d1 04       	cpc	r13, r1
    57be:	2c f0       	brlt	.+10     	; 0x57ca <vfprintf+0x438>
    57c0:	8f 5f       	subi	r24, 0xFF	; 255
    57c2:	fa e0       	ldi	r31, 0x0A	; 10
    57c4:	cf 1a       	sub	r12, r31
    57c6:	d1 08       	sbc	r13, r1
    57c8:	f7 cf       	rjmp	.-18     	; 0x57b8 <vfprintf+0x426>
    57ca:	b7 01       	movw	r22, r14
    57cc:	90 e0       	ldi	r25, 0x00	; 0
    57ce:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    57d2:	b7 01       	movw	r22, r14
    57d4:	c6 01       	movw	r24, r12
    57d6:	c0 96       	adiw	r24, 0x30	; 48
    57d8:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    57dc:	41 c1       	rjmp	.+642    	; 0x5a60 <vfprintf+0x6ce>
    57de:	83 36       	cpi	r24, 0x63	; 99
    57e0:	31 f0       	breq	.+12     	; 0x57ee <vfprintf+0x45c>
    57e2:	83 37       	cpi	r24, 0x73	; 115
    57e4:	79 f0       	breq	.+30     	; 0x5804 <vfprintf+0x472>
    57e6:	83 35       	cpi	r24, 0x53	; 83
    57e8:	09 f0       	breq	.+2      	; 0x57ec <vfprintf+0x45a>
    57ea:	58 c0       	rjmp	.+176    	; 0x589c <vfprintf+0x50a>
    57ec:	21 c0       	rjmp	.+66     	; 0x5830 <vfprintf+0x49e>
    57ee:	56 01       	movw	r10, r12
    57f0:	72 e0       	ldi	r23, 0x02	; 2
    57f2:	a7 0e       	add	r10, r23
    57f4:	b1 1c       	adc	r11, r1
    57f6:	f6 01       	movw	r30, r12
    57f8:	80 81       	ld	r24, Z
    57fa:	89 83       	std	Y+1, r24	; 0x01
    57fc:	01 e0       	ldi	r16, 0x01	; 1
    57fe:	10 e0       	ldi	r17, 0x00	; 0
    5800:	64 01       	movw	r12, r8
    5802:	14 c0       	rjmp	.+40     	; 0x582c <vfprintf+0x49a>
    5804:	56 01       	movw	r10, r12
    5806:	f2 e0       	ldi	r31, 0x02	; 2
    5808:	af 0e       	add	r10, r31
    580a:	b1 1c       	adc	r11, r1
    580c:	f6 01       	movw	r30, r12
    580e:	c0 80       	ld	r12, Z
    5810:	d1 80       	ldd	r13, Z+1	; 0x01
    5812:	26 ff       	sbrs	r18, 6
    5814:	03 c0       	rjmp	.+6      	; 0x581c <vfprintf+0x48a>
    5816:	61 2f       	mov	r22, r17
    5818:	70 e0       	ldi	r23, 0x00	; 0
    581a:	02 c0       	rjmp	.+4      	; 0x5820 <vfprintf+0x48e>
    581c:	6f ef       	ldi	r22, 0xFF	; 255
    581e:	7f ef       	ldi	r23, 0xFF	; 255
    5820:	c6 01       	movw	r24, r12
    5822:	2b 8b       	std	Y+19, r18	; 0x13
    5824:	0e 94 e1 2e 	call	0x5dc2	; 0x5dc2 <strnlen>
    5828:	8c 01       	movw	r16, r24
    582a:	2b 89       	ldd	r18, Y+19	; 0x13
    582c:	2f 77       	andi	r18, 0x7F	; 127
    582e:	15 c0       	rjmp	.+42     	; 0x585a <vfprintf+0x4c8>
    5830:	56 01       	movw	r10, r12
    5832:	f2 e0       	ldi	r31, 0x02	; 2
    5834:	af 0e       	add	r10, r31
    5836:	b1 1c       	adc	r11, r1
    5838:	f6 01       	movw	r30, r12
    583a:	c0 80       	ld	r12, Z
    583c:	d1 80       	ldd	r13, Z+1	; 0x01
    583e:	26 ff       	sbrs	r18, 6
    5840:	03 c0       	rjmp	.+6      	; 0x5848 <vfprintf+0x4b6>
    5842:	61 2f       	mov	r22, r17
    5844:	70 e0       	ldi	r23, 0x00	; 0
    5846:	02 c0       	rjmp	.+4      	; 0x584c <vfprintf+0x4ba>
    5848:	6f ef       	ldi	r22, 0xFF	; 255
    584a:	7f ef       	ldi	r23, 0xFF	; 255
    584c:	c6 01       	movw	r24, r12
    584e:	2b 8b       	std	Y+19, r18	; 0x13
    5850:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <strnlen_P>
    5854:	8c 01       	movw	r16, r24
    5856:	2b 89       	ldd	r18, Y+19	; 0x13
    5858:	20 68       	ori	r18, 0x80	; 128
    585a:	72 2e       	mov	r7, r18
    585c:	23 fd       	sbrc	r18, 3
    585e:	1a c0       	rjmp	.+52     	; 0x5894 <vfprintf+0x502>
    5860:	85 2d       	mov	r24, r5
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	08 17       	cp	r16, r24
    5866:	19 07       	cpc	r17, r25
    5868:	a8 f4       	brcc	.+42     	; 0x5894 <vfprintf+0x502>
    586a:	b7 01       	movw	r22, r14
    586c:	80 e2       	ldi	r24, 0x20	; 32
    586e:	90 e0       	ldi	r25, 0x00	; 0
    5870:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5874:	5a 94       	dec	r5
    5876:	f4 cf       	rjmp	.-24     	; 0x5860 <vfprintf+0x4ce>
    5878:	f6 01       	movw	r30, r12
    587a:	77 fc       	sbrc	r7, 7
    587c:	85 91       	lpm	r24, Z+
    587e:	77 fe       	sbrs	r7, 7
    5880:	81 91       	ld	r24, Z+
    5882:	6f 01       	movw	r12, r30
    5884:	b7 01       	movw	r22, r14
    5886:	90 e0       	ldi	r25, 0x00	; 0
    5888:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    588c:	51 10       	cpse	r5, r1
    588e:	5a 94       	dec	r5
    5890:	01 50       	subi	r16, 0x01	; 1
    5892:	11 09       	sbc	r17, r1
    5894:	01 15       	cp	r16, r1
    5896:	11 05       	cpc	r17, r1
    5898:	79 f7       	brne	.-34     	; 0x5878 <vfprintf+0x4e6>
    589a:	e2 c0       	rjmp	.+452    	; 0x5a60 <vfprintf+0x6ce>
    589c:	84 36       	cpi	r24, 0x64	; 100
    589e:	11 f0       	breq	.+4      	; 0x58a4 <vfprintf+0x512>
    58a0:	89 36       	cpi	r24, 0x69	; 105
    58a2:	51 f5       	brne	.+84     	; 0x58f8 <vfprintf+0x566>
    58a4:	56 01       	movw	r10, r12
    58a6:	27 ff       	sbrs	r18, 7
    58a8:	09 c0       	rjmp	.+18     	; 0x58bc <vfprintf+0x52a>
    58aa:	f4 e0       	ldi	r31, 0x04	; 4
    58ac:	af 0e       	add	r10, r31
    58ae:	b1 1c       	adc	r11, r1
    58b0:	f6 01       	movw	r30, r12
    58b2:	60 81       	ld	r22, Z
    58b4:	71 81       	ldd	r23, Z+1	; 0x01
    58b6:	82 81       	ldd	r24, Z+2	; 0x02
    58b8:	93 81       	ldd	r25, Z+3	; 0x03
    58ba:	0a c0       	rjmp	.+20     	; 0x58d0 <vfprintf+0x53e>
    58bc:	f2 e0       	ldi	r31, 0x02	; 2
    58be:	af 0e       	add	r10, r31
    58c0:	b1 1c       	adc	r11, r1
    58c2:	f6 01       	movw	r30, r12
    58c4:	60 81       	ld	r22, Z
    58c6:	71 81       	ldd	r23, Z+1	; 0x01
    58c8:	88 27       	eor	r24, r24
    58ca:	77 fd       	sbrc	r23, 7
    58cc:	80 95       	com	r24
    58ce:	98 2f       	mov	r25, r24
    58d0:	02 2f       	mov	r16, r18
    58d2:	0f 76       	andi	r16, 0x6F	; 111
    58d4:	97 ff       	sbrs	r25, 7
    58d6:	08 c0       	rjmp	.+16     	; 0x58e8 <vfprintf+0x556>
    58d8:	90 95       	com	r25
    58da:	80 95       	com	r24
    58dc:	70 95       	com	r23
    58de:	61 95       	neg	r22
    58e0:	7f 4f       	sbci	r23, 0xFF	; 255
    58e2:	8f 4f       	sbci	r24, 0xFF	; 255
    58e4:	9f 4f       	sbci	r25, 0xFF	; 255
    58e6:	00 68       	ori	r16, 0x80	; 128
    58e8:	2a e0       	ldi	r18, 0x0A	; 10
    58ea:	30 e0       	ldi	r19, 0x00	; 0
    58ec:	a4 01       	movw	r20, r8
    58ee:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__ultoa_invert>
    58f2:	c8 2e       	mov	r12, r24
    58f4:	c8 18       	sub	r12, r8
    58f6:	3e c0       	rjmp	.+124    	; 0x5974 <vfprintf+0x5e2>
    58f8:	02 2f       	mov	r16, r18
    58fa:	85 37       	cpi	r24, 0x75	; 117
    58fc:	21 f4       	brne	.+8      	; 0x5906 <vfprintf+0x574>
    58fe:	0f 7e       	andi	r16, 0xEF	; 239
    5900:	2a e0       	ldi	r18, 0x0A	; 10
    5902:	30 e0       	ldi	r19, 0x00	; 0
    5904:	1d c0       	rjmp	.+58     	; 0x5940 <vfprintf+0x5ae>
    5906:	09 7f       	andi	r16, 0xF9	; 249
    5908:	8f 36       	cpi	r24, 0x6F	; 111
    590a:	91 f0       	breq	.+36     	; 0x5930 <vfprintf+0x59e>
    590c:	18 f4       	brcc	.+6      	; 0x5914 <vfprintf+0x582>
    590e:	88 35       	cpi	r24, 0x58	; 88
    5910:	59 f0       	breq	.+22     	; 0x5928 <vfprintf+0x596>
    5912:	b0 c0       	rjmp	.+352    	; 0x5a74 <vfprintf+0x6e2>
    5914:	80 37       	cpi	r24, 0x70	; 112
    5916:	19 f0       	breq	.+6      	; 0x591e <vfprintf+0x58c>
    5918:	88 37       	cpi	r24, 0x78	; 120
    591a:	11 f0       	breq	.+4      	; 0x5920 <vfprintf+0x58e>
    591c:	ab c0       	rjmp	.+342    	; 0x5a74 <vfprintf+0x6e2>
    591e:	00 61       	ori	r16, 0x10	; 16
    5920:	04 ff       	sbrs	r16, 4
    5922:	09 c0       	rjmp	.+18     	; 0x5936 <vfprintf+0x5a4>
    5924:	04 60       	ori	r16, 0x04	; 4
    5926:	07 c0       	rjmp	.+14     	; 0x5936 <vfprintf+0x5a4>
    5928:	24 ff       	sbrs	r18, 4
    592a:	08 c0       	rjmp	.+16     	; 0x593c <vfprintf+0x5aa>
    592c:	06 60       	ori	r16, 0x06	; 6
    592e:	06 c0       	rjmp	.+12     	; 0x593c <vfprintf+0x5aa>
    5930:	28 e0       	ldi	r18, 0x08	; 8
    5932:	30 e0       	ldi	r19, 0x00	; 0
    5934:	05 c0       	rjmp	.+10     	; 0x5940 <vfprintf+0x5ae>
    5936:	20 e1       	ldi	r18, 0x10	; 16
    5938:	30 e0       	ldi	r19, 0x00	; 0
    593a:	02 c0       	rjmp	.+4      	; 0x5940 <vfprintf+0x5ae>
    593c:	20 e1       	ldi	r18, 0x10	; 16
    593e:	32 e0       	ldi	r19, 0x02	; 2
    5940:	56 01       	movw	r10, r12
    5942:	07 ff       	sbrs	r16, 7
    5944:	09 c0       	rjmp	.+18     	; 0x5958 <vfprintf+0x5c6>
    5946:	f4 e0       	ldi	r31, 0x04	; 4
    5948:	af 0e       	add	r10, r31
    594a:	b1 1c       	adc	r11, r1
    594c:	f6 01       	movw	r30, r12
    594e:	60 81       	ld	r22, Z
    5950:	71 81       	ldd	r23, Z+1	; 0x01
    5952:	82 81       	ldd	r24, Z+2	; 0x02
    5954:	93 81       	ldd	r25, Z+3	; 0x03
    5956:	08 c0       	rjmp	.+16     	; 0x5968 <vfprintf+0x5d6>
    5958:	f2 e0       	ldi	r31, 0x02	; 2
    595a:	af 0e       	add	r10, r31
    595c:	b1 1c       	adc	r11, r1
    595e:	f6 01       	movw	r30, r12
    5960:	60 81       	ld	r22, Z
    5962:	71 81       	ldd	r23, Z+1	; 0x01
    5964:	80 e0       	ldi	r24, 0x00	; 0
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	a4 01       	movw	r20, r8
    596a:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__ultoa_invert>
    596e:	c8 2e       	mov	r12, r24
    5970:	c8 18       	sub	r12, r8
    5972:	0f 77       	andi	r16, 0x7F	; 127
    5974:	06 ff       	sbrs	r16, 6
    5976:	0b c0       	rjmp	.+22     	; 0x598e <vfprintf+0x5fc>
    5978:	20 2f       	mov	r18, r16
    597a:	2e 7f       	andi	r18, 0xFE	; 254
    597c:	c1 16       	cp	r12, r17
    597e:	50 f4       	brcc	.+20     	; 0x5994 <vfprintf+0x602>
    5980:	04 ff       	sbrs	r16, 4
    5982:	0a c0       	rjmp	.+20     	; 0x5998 <vfprintf+0x606>
    5984:	02 fd       	sbrc	r16, 2
    5986:	08 c0       	rjmp	.+16     	; 0x5998 <vfprintf+0x606>
    5988:	20 2f       	mov	r18, r16
    598a:	2e 7e       	andi	r18, 0xEE	; 238
    598c:	05 c0       	rjmp	.+10     	; 0x5998 <vfprintf+0x606>
    598e:	dc 2c       	mov	r13, r12
    5990:	20 2f       	mov	r18, r16
    5992:	03 c0       	rjmp	.+6      	; 0x599a <vfprintf+0x608>
    5994:	dc 2c       	mov	r13, r12
    5996:	01 c0       	rjmp	.+2      	; 0x599a <vfprintf+0x608>
    5998:	d1 2e       	mov	r13, r17
    599a:	24 ff       	sbrs	r18, 4
    599c:	0d c0       	rjmp	.+26     	; 0x59b8 <vfprintf+0x626>
    599e:	fe 01       	movw	r30, r28
    59a0:	ec 0d       	add	r30, r12
    59a2:	f1 1d       	adc	r31, r1
    59a4:	80 81       	ld	r24, Z
    59a6:	80 33       	cpi	r24, 0x30	; 48
    59a8:	11 f4       	brne	.+4      	; 0x59ae <vfprintf+0x61c>
    59aa:	29 7e       	andi	r18, 0xE9	; 233
    59ac:	09 c0       	rjmp	.+18     	; 0x59c0 <vfprintf+0x62e>
    59ae:	22 ff       	sbrs	r18, 2
    59b0:	06 c0       	rjmp	.+12     	; 0x59be <vfprintf+0x62c>
    59b2:	d3 94       	inc	r13
    59b4:	d3 94       	inc	r13
    59b6:	04 c0       	rjmp	.+8      	; 0x59c0 <vfprintf+0x62e>
    59b8:	82 2f       	mov	r24, r18
    59ba:	86 78       	andi	r24, 0x86	; 134
    59bc:	09 f0       	breq	.+2      	; 0x59c0 <vfprintf+0x62e>
    59be:	d3 94       	inc	r13
    59c0:	23 fd       	sbrc	r18, 3
    59c2:	13 c0       	rjmp	.+38     	; 0x59ea <vfprintf+0x658>
    59c4:	20 ff       	sbrs	r18, 0
    59c6:	06 c0       	rjmp	.+12     	; 0x59d4 <vfprintf+0x642>
    59c8:	1c 2d       	mov	r17, r12
    59ca:	d5 14       	cp	r13, r5
    59cc:	18 f4       	brcc	.+6      	; 0x59d4 <vfprintf+0x642>
    59ce:	15 0d       	add	r17, r5
    59d0:	1d 19       	sub	r17, r13
    59d2:	d5 2c       	mov	r13, r5
    59d4:	d5 14       	cp	r13, r5
    59d6:	68 f4       	brcc	.+26     	; 0x59f2 <vfprintf+0x660>
    59d8:	b7 01       	movw	r22, r14
    59da:	80 e2       	ldi	r24, 0x20	; 32
    59dc:	90 e0       	ldi	r25, 0x00	; 0
    59de:	2b 8b       	std	Y+19, r18	; 0x13
    59e0:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    59e4:	d3 94       	inc	r13
    59e6:	2b 89       	ldd	r18, Y+19	; 0x13
    59e8:	f5 cf       	rjmp	.-22     	; 0x59d4 <vfprintf+0x642>
    59ea:	d5 14       	cp	r13, r5
    59ec:	10 f4       	brcc	.+4      	; 0x59f2 <vfprintf+0x660>
    59ee:	5d 18       	sub	r5, r13
    59f0:	01 c0       	rjmp	.+2      	; 0x59f4 <vfprintf+0x662>
    59f2:	51 2c       	mov	r5, r1
    59f4:	24 ff       	sbrs	r18, 4
    59f6:	12 c0       	rjmp	.+36     	; 0x5a1c <vfprintf+0x68a>
    59f8:	b7 01       	movw	r22, r14
    59fa:	80 e3       	ldi	r24, 0x30	; 48
    59fc:	90 e0       	ldi	r25, 0x00	; 0
    59fe:	2b 8b       	std	Y+19, r18	; 0x13
    5a00:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5a04:	2b 89       	ldd	r18, Y+19	; 0x13
    5a06:	22 ff       	sbrs	r18, 2
    5a08:	17 c0       	rjmp	.+46     	; 0x5a38 <vfprintf+0x6a6>
    5a0a:	21 ff       	sbrs	r18, 1
    5a0c:	03 c0       	rjmp	.+6      	; 0x5a14 <vfprintf+0x682>
    5a0e:	88 e5       	ldi	r24, 0x58	; 88
    5a10:	90 e0       	ldi	r25, 0x00	; 0
    5a12:	02 c0       	rjmp	.+4      	; 0x5a18 <vfprintf+0x686>
    5a14:	88 e7       	ldi	r24, 0x78	; 120
    5a16:	90 e0       	ldi	r25, 0x00	; 0
    5a18:	b7 01       	movw	r22, r14
    5a1a:	0c c0       	rjmp	.+24     	; 0x5a34 <vfprintf+0x6a2>
    5a1c:	82 2f       	mov	r24, r18
    5a1e:	86 78       	andi	r24, 0x86	; 134
    5a20:	59 f0       	breq	.+22     	; 0x5a38 <vfprintf+0x6a6>
    5a22:	21 fd       	sbrc	r18, 1
    5a24:	02 c0       	rjmp	.+4      	; 0x5a2a <vfprintf+0x698>
    5a26:	80 e2       	ldi	r24, 0x20	; 32
    5a28:	01 c0       	rjmp	.+2      	; 0x5a2c <vfprintf+0x69a>
    5a2a:	8b e2       	ldi	r24, 0x2B	; 43
    5a2c:	27 fd       	sbrc	r18, 7
    5a2e:	8d e2       	ldi	r24, 0x2D	; 45
    5a30:	b7 01       	movw	r22, r14
    5a32:	90 e0       	ldi	r25, 0x00	; 0
    5a34:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5a38:	c1 16       	cp	r12, r17
    5a3a:	38 f4       	brcc	.+14     	; 0x5a4a <vfprintf+0x6b8>
    5a3c:	b7 01       	movw	r22, r14
    5a3e:	80 e3       	ldi	r24, 0x30	; 48
    5a40:	90 e0       	ldi	r25, 0x00	; 0
    5a42:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5a46:	11 50       	subi	r17, 0x01	; 1
    5a48:	f7 cf       	rjmp	.-18     	; 0x5a38 <vfprintf+0x6a6>
    5a4a:	ca 94       	dec	r12
    5a4c:	f4 01       	movw	r30, r8
    5a4e:	ec 0d       	add	r30, r12
    5a50:	f1 1d       	adc	r31, r1
    5a52:	80 81       	ld	r24, Z
    5a54:	b7 01       	movw	r22, r14
    5a56:	90 e0       	ldi	r25, 0x00	; 0
    5a58:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5a5c:	c1 10       	cpse	r12, r1
    5a5e:	f5 cf       	rjmp	.-22     	; 0x5a4a <vfprintf+0x6b8>
    5a60:	55 20       	and	r5, r5
    5a62:	09 f4       	brne	.+2      	; 0x5a66 <vfprintf+0x6d4>
    5a64:	c2 cc       	rjmp	.-1660   	; 0x53ea <vfprintf+0x58>
    5a66:	b7 01       	movw	r22, r14
    5a68:	80 e2       	ldi	r24, 0x20	; 32
    5a6a:	90 e0       	ldi	r25, 0x00	; 0
    5a6c:	0e 94 ec 2e 	call	0x5dd8	; 0x5dd8 <fputc>
    5a70:	5a 94       	dec	r5
    5a72:	f6 cf       	rjmp	.-20     	; 0x5a60 <vfprintf+0x6ce>
    5a74:	f7 01       	movw	r30, r14
    5a76:	86 81       	ldd	r24, Z+6	; 0x06
    5a78:	97 81       	ldd	r25, Z+7	; 0x07
    5a7a:	02 c0       	rjmp	.+4      	; 0x5a80 <vfprintf+0x6ee>
    5a7c:	8f ef       	ldi	r24, 0xFF	; 255
    5a7e:	9f ef       	ldi	r25, 0xFF	; 255
    5a80:	63 96       	adiw	r28, 0x13	; 19
    5a82:	e2 e1       	ldi	r30, 0x12	; 18
    5a84:	0c 94 cf 2d 	jmp	0x5b9e	; 0x5b9e <__epilogue_restores__>

00005a88 <__divmodhi4>:
    5a88:	97 fb       	bst	r25, 7
    5a8a:	07 2e       	mov	r0, r23
    5a8c:	16 f4       	brtc	.+4      	; 0x5a92 <__divmodhi4+0xa>
    5a8e:	00 94       	com	r0
    5a90:	07 d0       	rcall	.+14     	; 0x5aa0 <__divmodhi4_neg1>
    5a92:	77 fd       	sbrc	r23, 7
    5a94:	09 d0       	rcall	.+18     	; 0x5aa8 <__divmodhi4_neg2>
    5a96:	0e 94 ea 2d 	call	0x5bd4	; 0x5bd4 <__udivmodhi4>
    5a9a:	07 fc       	sbrc	r0, 7
    5a9c:	05 d0       	rcall	.+10     	; 0x5aa8 <__divmodhi4_neg2>
    5a9e:	3e f4       	brtc	.+14     	; 0x5aae <__divmodhi4_exit>

00005aa0 <__divmodhi4_neg1>:
    5aa0:	90 95       	com	r25
    5aa2:	81 95       	neg	r24
    5aa4:	9f 4f       	sbci	r25, 0xFF	; 255
    5aa6:	08 95       	ret

00005aa8 <__divmodhi4_neg2>:
    5aa8:	70 95       	com	r23
    5aaa:	61 95       	neg	r22
    5aac:	7f 4f       	sbci	r23, 0xFF	; 255

00005aae <__divmodhi4_exit>:
    5aae:	08 95       	ret

00005ab0 <__udivmodsi4>:
    5ab0:	a1 e2       	ldi	r26, 0x21	; 33
    5ab2:	1a 2e       	mov	r1, r26
    5ab4:	aa 1b       	sub	r26, r26
    5ab6:	bb 1b       	sub	r27, r27
    5ab8:	fd 01       	movw	r30, r26
    5aba:	0d c0       	rjmp	.+26     	; 0x5ad6 <__udivmodsi4_ep>

00005abc <__udivmodsi4_loop>:
    5abc:	aa 1f       	adc	r26, r26
    5abe:	bb 1f       	adc	r27, r27
    5ac0:	ee 1f       	adc	r30, r30
    5ac2:	ff 1f       	adc	r31, r31
    5ac4:	a2 17       	cp	r26, r18
    5ac6:	b3 07       	cpc	r27, r19
    5ac8:	e4 07       	cpc	r30, r20
    5aca:	f5 07       	cpc	r31, r21
    5acc:	20 f0       	brcs	.+8      	; 0x5ad6 <__udivmodsi4_ep>
    5ace:	a2 1b       	sub	r26, r18
    5ad0:	b3 0b       	sbc	r27, r19
    5ad2:	e4 0b       	sbc	r30, r20
    5ad4:	f5 0b       	sbc	r31, r21

00005ad6 <__udivmodsi4_ep>:
    5ad6:	66 1f       	adc	r22, r22
    5ad8:	77 1f       	adc	r23, r23
    5ada:	88 1f       	adc	r24, r24
    5adc:	99 1f       	adc	r25, r25
    5ade:	1a 94       	dec	r1
    5ae0:	69 f7       	brne	.-38     	; 0x5abc <__udivmodsi4_loop>
    5ae2:	60 95       	com	r22
    5ae4:	70 95       	com	r23
    5ae6:	80 95       	com	r24
    5ae8:	90 95       	com	r25
    5aea:	9b 01       	movw	r18, r22
    5aec:	ac 01       	movw	r20, r24
    5aee:	bd 01       	movw	r22, r26
    5af0:	cf 01       	movw	r24, r30
    5af2:	08 95       	ret

00005af4 <__divmodsi4>:
    5af4:	05 2e       	mov	r0, r21
    5af6:	97 fb       	bst	r25, 7
    5af8:	1e f4       	brtc	.+6      	; 0x5b00 <__divmodsi4+0xc>
    5afa:	00 94       	com	r0
    5afc:	0e 94 91 2d 	call	0x5b22	; 0x5b22 <__negsi2>
    5b00:	57 fd       	sbrc	r21, 7
    5b02:	07 d0       	rcall	.+14     	; 0x5b12 <__divmodsi4_neg2>
    5b04:	0e 94 58 2d 	call	0x5ab0	; 0x5ab0 <__udivmodsi4>
    5b08:	07 fc       	sbrc	r0, 7
    5b0a:	03 d0       	rcall	.+6      	; 0x5b12 <__divmodsi4_neg2>
    5b0c:	4e f4       	brtc	.+18     	; 0x5b20 <__divmodsi4_exit>
    5b0e:	0c 94 91 2d 	jmp	0x5b22	; 0x5b22 <__negsi2>

00005b12 <__divmodsi4_neg2>:
    5b12:	50 95       	com	r21
    5b14:	40 95       	com	r20
    5b16:	30 95       	com	r19
    5b18:	21 95       	neg	r18
    5b1a:	3f 4f       	sbci	r19, 0xFF	; 255
    5b1c:	4f 4f       	sbci	r20, 0xFF	; 255
    5b1e:	5f 4f       	sbci	r21, 0xFF	; 255

00005b20 <__divmodsi4_exit>:
    5b20:	08 95       	ret

00005b22 <__negsi2>:
    5b22:	90 95       	com	r25
    5b24:	80 95       	com	r24
    5b26:	70 95       	com	r23
    5b28:	61 95       	neg	r22
    5b2a:	7f 4f       	sbci	r23, 0xFF	; 255
    5b2c:	8f 4f       	sbci	r24, 0xFF	; 255
    5b2e:	9f 4f       	sbci	r25, 0xFF	; 255
    5b30:	08 95       	ret

00005b32 <__umulhisi3>:
    5b32:	a2 9f       	mul	r26, r18
    5b34:	b0 01       	movw	r22, r0
    5b36:	b3 9f       	mul	r27, r19
    5b38:	c0 01       	movw	r24, r0
    5b3a:	a3 9f       	mul	r26, r19
    5b3c:	70 0d       	add	r23, r0
    5b3e:	81 1d       	adc	r24, r1
    5b40:	11 24       	eor	r1, r1
    5b42:	91 1d       	adc	r25, r1
    5b44:	b2 9f       	mul	r27, r18
    5b46:	70 0d       	add	r23, r0
    5b48:	81 1d       	adc	r24, r1
    5b4a:	11 24       	eor	r1, r1
    5b4c:	91 1d       	adc	r25, r1
    5b4e:	08 95       	ret

00005b50 <__muluhisi3>:
    5b50:	0e 94 99 2d 	call	0x5b32	; 0x5b32 <__umulhisi3>
    5b54:	a5 9f       	mul	r26, r21
    5b56:	90 0d       	add	r25, r0
    5b58:	b4 9f       	mul	r27, r20
    5b5a:	90 0d       	add	r25, r0
    5b5c:	a4 9f       	mul	r26, r20
    5b5e:	80 0d       	add	r24, r0
    5b60:	91 1d       	adc	r25, r1
    5b62:	11 24       	eor	r1, r1
    5b64:	08 95       	ret

00005b66 <__prologue_saves__>:
    5b66:	2f 92       	push	r2
    5b68:	3f 92       	push	r3
    5b6a:	4f 92       	push	r4
    5b6c:	5f 92       	push	r5
    5b6e:	6f 92       	push	r6
    5b70:	7f 92       	push	r7
    5b72:	8f 92       	push	r8
    5b74:	9f 92       	push	r9
    5b76:	af 92       	push	r10
    5b78:	bf 92       	push	r11
    5b7a:	cf 92       	push	r12
    5b7c:	df 92       	push	r13
    5b7e:	ef 92       	push	r14
    5b80:	ff 92       	push	r15
    5b82:	0f 93       	push	r16
    5b84:	1f 93       	push	r17
    5b86:	cf 93       	push	r28
    5b88:	df 93       	push	r29
    5b8a:	cd b7       	in	r28, 0x3d	; 61
    5b8c:	de b7       	in	r29, 0x3e	; 62
    5b8e:	ca 1b       	sub	r28, r26
    5b90:	db 0b       	sbc	r29, r27
    5b92:	0f b6       	in	r0, 0x3f	; 63
    5b94:	f8 94       	cli
    5b96:	de bf       	out	0x3e, r29	; 62
    5b98:	0f be       	out	0x3f, r0	; 63
    5b9a:	cd bf       	out	0x3d, r28	; 61
    5b9c:	09 94       	ijmp

00005b9e <__epilogue_restores__>:
    5b9e:	2a 88       	ldd	r2, Y+18	; 0x12
    5ba0:	39 88       	ldd	r3, Y+17	; 0x11
    5ba2:	48 88       	ldd	r4, Y+16	; 0x10
    5ba4:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ba6:	6e 84       	ldd	r6, Y+14	; 0x0e
    5ba8:	7d 84       	ldd	r7, Y+13	; 0x0d
    5baa:	8c 84       	ldd	r8, Y+12	; 0x0c
    5bac:	9b 84       	ldd	r9, Y+11	; 0x0b
    5bae:	aa 84       	ldd	r10, Y+10	; 0x0a
    5bb0:	b9 84       	ldd	r11, Y+9	; 0x09
    5bb2:	c8 84       	ldd	r12, Y+8	; 0x08
    5bb4:	df 80       	ldd	r13, Y+7	; 0x07
    5bb6:	ee 80       	ldd	r14, Y+6	; 0x06
    5bb8:	fd 80       	ldd	r15, Y+5	; 0x05
    5bba:	0c 81       	ldd	r16, Y+4	; 0x04
    5bbc:	1b 81       	ldd	r17, Y+3	; 0x03
    5bbe:	aa 81       	ldd	r26, Y+2	; 0x02
    5bc0:	b9 81       	ldd	r27, Y+1	; 0x01
    5bc2:	ce 0f       	add	r28, r30
    5bc4:	d1 1d       	adc	r29, r1
    5bc6:	0f b6       	in	r0, 0x3f	; 63
    5bc8:	f8 94       	cli
    5bca:	de bf       	out	0x3e, r29	; 62
    5bcc:	0f be       	out	0x3f, r0	; 63
    5bce:	cd bf       	out	0x3d, r28	; 61
    5bd0:	ed 01       	movw	r28, r26
    5bd2:	08 95       	ret

00005bd4 <__udivmodhi4>:
    5bd4:	aa 1b       	sub	r26, r26
    5bd6:	bb 1b       	sub	r27, r27
    5bd8:	51 e1       	ldi	r21, 0x11	; 17
    5bda:	07 c0       	rjmp	.+14     	; 0x5bea <__udivmodhi4_ep>

00005bdc <__udivmodhi4_loop>:
    5bdc:	aa 1f       	adc	r26, r26
    5bde:	bb 1f       	adc	r27, r27
    5be0:	a6 17       	cp	r26, r22
    5be2:	b7 07       	cpc	r27, r23
    5be4:	10 f0       	brcs	.+4      	; 0x5bea <__udivmodhi4_ep>
    5be6:	a6 1b       	sub	r26, r22
    5be8:	b7 0b       	sbc	r27, r23

00005bea <__udivmodhi4_ep>:
    5bea:	88 1f       	adc	r24, r24
    5bec:	99 1f       	adc	r25, r25
    5bee:	5a 95       	dec	r21
    5bf0:	a9 f7       	brne	.-22     	; 0x5bdc <__udivmodhi4_loop>
    5bf2:	80 95       	com	r24
    5bf4:	90 95       	com	r25
    5bf6:	bc 01       	movw	r22, r24
    5bf8:	cd 01       	movw	r24, r26
    5bfa:	08 95       	ret

00005bfc <__ftoa_engine>:
    5bfc:	28 30       	cpi	r18, 0x08	; 8
    5bfe:	08 f0       	brcs	.+2      	; 0x5c02 <__ftoa_engine+0x6>
    5c00:	27 e0       	ldi	r18, 0x07	; 7
    5c02:	33 27       	eor	r19, r19
    5c04:	da 01       	movw	r26, r20
    5c06:	99 0f       	add	r25, r25
    5c08:	31 1d       	adc	r19, r1
    5c0a:	87 fd       	sbrc	r24, 7
    5c0c:	91 60       	ori	r25, 0x01	; 1
    5c0e:	00 96       	adiw	r24, 0x00	; 0
    5c10:	61 05       	cpc	r22, r1
    5c12:	71 05       	cpc	r23, r1
    5c14:	39 f4       	brne	.+14     	; 0x5c24 <__ftoa_engine+0x28>
    5c16:	32 60       	ori	r19, 0x02	; 2
    5c18:	2e 5f       	subi	r18, 0xFE	; 254
    5c1a:	3d 93       	st	X+, r19
    5c1c:	30 e3       	ldi	r19, 0x30	; 48
    5c1e:	2a 95       	dec	r18
    5c20:	e1 f7       	brne	.-8      	; 0x5c1a <__ftoa_engine+0x1e>
    5c22:	08 95       	ret
    5c24:	9f 3f       	cpi	r25, 0xFF	; 255
    5c26:	30 f0       	brcs	.+12     	; 0x5c34 <__ftoa_engine+0x38>
    5c28:	80 38       	cpi	r24, 0x80	; 128
    5c2a:	71 05       	cpc	r23, r1
    5c2c:	61 05       	cpc	r22, r1
    5c2e:	09 f0       	breq	.+2      	; 0x5c32 <__ftoa_engine+0x36>
    5c30:	3c 5f       	subi	r19, 0xFC	; 252
    5c32:	3c 5f       	subi	r19, 0xFC	; 252
    5c34:	3d 93       	st	X+, r19
    5c36:	91 30       	cpi	r25, 0x01	; 1
    5c38:	08 f0       	brcs	.+2      	; 0x5c3c <__ftoa_engine+0x40>
    5c3a:	80 68       	ori	r24, 0x80	; 128
    5c3c:	91 1d       	adc	r25, r1
    5c3e:	df 93       	push	r29
    5c40:	cf 93       	push	r28
    5c42:	1f 93       	push	r17
    5c44:	0f 93       	push	r16
    5c46:	ff 92       	push	r15
    5c48:	ef 92       	push	r14
    5c4a:	19 2f       	mov	r17, r25
    5c4c:	98 7f       	andi	r25, 0xF8	; 248
    5c4e:	96 95       	lsr	r25
    5c50:	e9 2f       	mov	r30, r25
    5c52:	96 95       	lsr	r25
    5c54:	96 95       	lsr	r25
    5c56:	e9 0f       	add	r30, r25
    5c58:	ff 27       	eor	r31, r31
    5c5a:	e2 5d       	subi	r30, 0xD2	; 210
    5c5c:	fc 4d       	sbci	r31, 0xDC	; 220
    5c5e:	99 27       	eor	r25, r25
    5c60:	33 27       	eor	r19, r19
    5c62:	ee 24       	eor	r14, r14
    5c64:	ff 24       	eor	r15, r15
    5c66:	a7 01       	movw	r20, r14
    5c68:	e7 01       	movw	r28, r14
    5c6a:	05 90       	lpm	r0, Z+
    5c6c:	08 94       	sec
    5c6e:	07 94       	ror	r0
    5c70:	28 f4       	brcc	.+10     	; 0x5c7c <__ftoa_engine+0x80>
    5c72:	36 0f       	add	r19, r22
    5c74:	e7 1e       	adc	r14, r23
    5c76:	f8 1e       	adc	r15, r24
    5c78:	49 1f       	adc	r20, r25
    5c7a:	51 1d       	adc	r21, r1
    5c7c:	66 0f       	add	r22, r22
    5c7e:	77 1f       	adc	r23, r23
    5c80:	88 1f       	adc	r24, r24
    5c82:	99 1f       	adc	r25, r25
    5c84:	06 94       	lsr	r0
    5c86:	a1 f7       	brne	.-24     	; 0x5c70 <__ftoa_engine+0x74>
    5c88:	05 90       	lpm	r0, Z+
    5c8a:	07 94       	ror	r0
    5c8c:	28 f4       	brcc	.+10     	; 0x5c98 <__ftoa_engine+0x9c>
    5c8e:	e7 0e       	add	r14, r23
    5c90:	f8 1e       	adc	r15, r24
    5c92:	49 1f       	adc	r20, r25
    5c94:	56 1f       	adc	r21, r22
    5c96:	c1 1d       	adc	r28, r1
    5c98:	77 0f       	add	r23, r23
    5c9a:	88 1f       	adc	r24, r24
    5c9c:	99 1f       	adc	r25, r25
    5c9e:	66 1f       	adc	r22, r22
    5ca0:	06 94       	lsr	r0
    5ca2:	a1 f7       	brne	.-24     	; 0x5c8c <__ftoa_engine+0x90>
    5ca4:	05 90       	lpm	r0, Z+
    5ca6:	07 94       	ror	r0
    5ca8:	28 f4       	brcc	.+10     	; 0x5cb4 <__ftoa_engine+0xb8>
    5caa:	f8 0e       	add	r15, r24
    5cac:	49 1f       	adc	r20, r25
    5cae:	56 1f       	adc	r21, r22
    5cb0:	c7 1f       	adc	r28, r23
    5cb2:	d1 1d       	adc	r29, r1
    5cb4:	88 0f       	add	r24, r24
    5cb6:	99 1f       	adc	r25, r25
    5cb8:	66 1f       	adc	r22, r22
    5cba:	77 1f       	adc	r23, r23
    5cbc:	06 94       	lsr	r0
    5cbe:	a1 f7       	brne	.-24     	; 0x5ca8 <__ftoa_engine+0xac>
    5cc0:	05 90       	lpm	r0, Z+
    5cc2:	07 94       	ror	r0
    5cc4:	20 f4       	brcc	.+8      	; 0x5cce <__ftoa_engine+0xd2>
    5cc6:	49 0f       	add	r20, r25
    5cc8:	56 1f       	adc	r21, r22
    5cca:	c7 1f       	adc	r28, r23
    5ccc:	d8 1f       	adc	r29, r24
    5cce:	99 0f       	add	r25, r25
    5cd0:	66 1f       	adc	r22, r22
    5cd2:	77 1f       	adc	r23, r23
    5cd4:	88 1f       	adc	r24, r24
    5cd6:	06 94       	lsr	r0
    5cd8:	a9 f7       	brne	.-22     	; 0x5cc4 <__ftoa_engine+0xc8>
    5cda:	84 91       	lpm	r24, Z
    5cdc:	10 95       	com	r17
    5cde:	17 70       	andi	r17, 0x07	; 7
    5ce0:	41 f0       	breq	.+16     	; 0x5cf2 <__ftoa_engine+0xf6>
    5ce2:	d6 95       	lsr	r29
    5ce4:	c7 95       	ror	r28
    5ce6:	57 95       	ror	r21
    5ce8:	47 95       	ror	r20
    5cea:	f7 94       	ror	r15
    5cec:	e7 94       	ror	r14
    5cee:	1a 95       	dec	r17
    5cf0:	c1 f7       	brne	.-16     	; 0x5ce2 <__ftoa_engine+0xe6>
    5cf2:	e4 ed       	ldi	r30, 0xD4	; 212
    5cf4:	f2 e2       	ldi	r31, 0x22	; 34
    5cf6:	68 94       	set
    5cf8:	15 90       	lpm	r1, Z+
    5cfa:	15 91       	lpm	r17, Z+
    5cfc:	35 91       	lpm	r19, Z+
    5cfe:	65 91       	lpm	r22, Z+
    5d00:	95 91       	lpm	r25, Z+
    5d02:	05 90       	lpm	r0, Z+
    5d04:	7f e2       	ldi	r23, 0x2F	; 47
    5d06:	73 95       	inc	r23
    5d08:	e1 18       	sub	r14, r1
    5d0a:	f1 0a       	sbc	r15, r17
    5d0c:	43 0b       	sbc	r20, r19
    5d0e:	56 0b       	sbc	r21, r22
    5d10:	c9 0b       	sbc	r28, r25
    5d12:	d0 09       	sbc	r29, r0
    5d14:	c0 f7       	brcc	.-16     	; 0x5d06 <__ftoa_engine+0x10a>
    5d16:	e1 0c       	add	r14, r1
    5d18:	f1 1e       	adc	r15, r17
    5d1a:	43 1f       	adc	r20, r19
    5d1c:	56 1f       	adc	r21, r22
    5d1e:	c9 1f       	adc	r28, r25
    5d20:	d0 1d       	adc	r29, r0
    5d22:	7e f4       	brtc	.+30     	; 0x5d42 <__ftoa_engine+0x146>
    5d24:	70 33       	cpi	r23, 0x30	; 48
    5d26:	11 f4       	brne	.+4      	; 0x5d2c <__ftoa_engine+0x130>
    5d28:	8a 95       	dec	r24
    5d2a:	e6 cf       	rjmp	.-52     	; 0x5cf8 <__ftoa_engine+0xfc>
    5d2c:	e8 94       	clt
    5d2e:	01 50       	subi	r16, 0x01	; 1
    5d30:	30 f0       	brcs	.+12     	; 0x5d3e <__ftoa_engine+0x142>
    5d32:	08 0f       	add	r16, r24
    5d34:	0a f4       	brpl	.+2      	; 0x5d38 <__ftoa_engine+0x13c>
    5d36:	00 27       	eor	r16, r16
    5d38:	02 17       	cp	r16, r18
    5d3a:	08 f4       	brcc	.+2      	; 0x5d3e <__ftoa_engine+0x142>
    5d3c:	20 2f       	mov	r18, r16
    5d3e:	23 95       	inc	r18
    5d40:	02 2f       	mov	r16, r18
    5d42:	7a 33       	cpi	r23, 0x3A	; 58
    5d44:	28 f0       	brcs	.+10     	; 0x5d50 <__ftoa_engine+0x154>
    5d46:	79 e3       	ldi	r23, 0x39	; 57
    5d48:	7d 93       	st	X+, r23
    5d4a:	2a 95       	dec	r18
    5d4c:	e9 f7       	brne	.-6      	; 0x5d48 <__ftoa_engine+0x14c>
    5d4e:	10 c0       	rjmp	.+32     	; 0x5d70 <__ftoa_engine+0x174>
    5d50:	7d 93       	st	X+, r23
    5d52:	2a 95       	dec	r18
    5d54:	89 f6       	brne	.-94     	; 0x5cf8 <__ftoa_engine+0xfc>
    5d56:	06 94       	lsr	r0
    5d58:	97 95       	ror	r25
    5d5a:	67 95       	ror	r22
    5d5c:	37 95       	ror	r19
    5d5e:	17 95       	ror	r17
    5d60:	17 94       	ror	r1
    5d62:	e1 18       	sub	r14, r1
    5d64:	f1 0a       	sbc	r15, r17
    5d66:	43 0b       	sbc	r20, r19
    5d68:	56 0b       	sbc	r21, r22
    5d6a:	c9 0b       	sbc	r28, r25
    5d6c:	d0 09       	sbc	r29, r0
    5d6e:	98 f0       	brcs	.+38     	; 0x5d96 <__ftoa_engine+0x19a>
    5d70:	23 95       	inc	r18
    5d72:	7e 91       	ld	r23, -X
    5d74:	73 95       	inc	r23
    5d76:	7a 33       	cpi	r23, 0x3A	; 58
    5d78:	08 f0       	brcs	.+2      	; 0x5d7c <__ftoa_engine+0x180>
    5d7a:	70 e3       	ldi	r23, 0x30	; 48
    5d7c:	7c 93       	st	X, r23
    5d7e:	20 13       	cpse	r18, r16
    5d80:	b8 f7       	brcc	.-18     	; 0x5d70 <__ftoa_engine+0x174>
    5d82:	7e 91       	ld	r23, -X
    5d84:	70 61       	ori	r23, 0x10	; 16
    5d86:	7d 93       	st	X+, r23
    5d88:	30 f0       	brcs	.+12     	; 0x5d96 <__ftoa_engine+0x19a>
    5d8a:	83 95       	inc	r24
    5d8c:	71 e3       	ldi	r23, 0x31	; 49
    5d8e:	7d 93       	st	X+, r23
    5d90:	70 e3       	ldi	r23, 0x30	; 48
    5d92:	2a 95       	dec	r18
    5d94:	e1 f7       	brne	.-8      	; 0x5d8e <__ftoa_engine+0x192>
    5d96:	11 24       	eor	r1, r1
    5d98:	ef 90       	pop	r14
    5d9a:	ff 90       	pop	r15
    5d9c:	0f 91       	pop	r16
    5d9e:	1f 91       	pop	r17
    5da0:	cf 91       	pop	r28
    5da2:	df 91       	pop	r29
    5da4:	99 27       	eor	r25, r25
    5da6:	87 fd       	sbrc	r24, 7
    5da8:	90 95       	com	r25
    5daa:	08 95       	ret

00005dac <strnlen_P>:
    5dac:	fc 01       	movw	r30, r24
    5dae:	05 90       	lpm	r0, Z+
    5db0:	61 50       	subi	r22, 0x01	; 1
    5db2:	70 40       	sbci	r23, 0x00	; 0
    5db4:	01 10       	cpse	r0, r1
    5db6:	d8 f7       	brcc	.-10     	; 0x5dae <strnlen_P+0x2>
    5db8:	80 95       	com	r24
    5dba:	90 95       	com	r25
    5dbc:	8e 0f       	add	r24, r30
    5dbe:	9f 1f       	adc	r25, r31
    5dc0:	08 95       	ret

00005dc2 <strnlen>:
    5dc2:	fc 01       	movw	r30, r24
    5dc4:	61 50       	subi	r22, 0x01	; 1
    5dc6:	70 40       	sbci	r23, 0x00	; 0
    5dc8:	01 90       	ld	r0, Z+
    5dca:	01 10       	cpse	r0, r1
    5dcc:	d8 f7       	brcc	.-10     	; 0x5dc4 <strnlen+0x2>
    5dce:	80 95       	com	r24
    5dd0:	90 95       	com	r25
    5dd2:	8e 0f       	add	r24, r30
    5dd4:	9f 1f       	adc	r25, r31
    5dd6:	08 95       	ret

00005dd8 <fputc>:
    5dd8:	0f 93       	push	r16
    5dda:	1f 93       	push	r17
    5ddc:	cf 93       	push	r28
    5dde:	df 93       	push	r29
    5de0:	18 2f       	mov	r17, r24
    5de2:	09 2f       	mov	r16, r25
    5de4:	eb 01       	movw	r28, r22
    5de6:	8b 81       	ldd	r24, Y+3	; 0x03
    5de8:	81 fd       	sbrc	r24, 1
    5dea:	03 c0       	rjmp	.+6      	; 0x5df2 <fputc+0x1a>
    5dec:	8f ef       	ldi	r24, 0xFF	; 255
    5dee:	9f ef       	ldi	r25, 0xFF	; 255
    5df0:	20 c0       	rjmp	.+64     	; 0x5e32 <fputc+0x5a>
    5df2:	82 ff       	sbrs	r24, 2
    5df4:	10 c0       	rjmp	.+32     	; 0x5e16 <fputc+0x3e>
    5df6:	4e 81       	ldd	r20, Y+6	; 0x06
    5df8:	5f 81       	ldd	r21, Y+7	; 0x07
    5dfa:	2c 81       	ldd	r18, Y+4	; 0x04
    5dfc:	3d 81       	ldd	r19, Y+5	; 0x05
    5dfe:	42 17       	cp	r20, r18
    5e00:	53 07       	cpc	r21, r19
    5e02:	7c f4       	brge	.+30     	; 0x5e22 <fputc+0x4a>
    5e04:	e8 81       	ld	r30, Y
    5e06:	f9 81       	ldd	r31, Y+1	; 0x01
    5e08:	9f 01       	movw	r18, r30
    5e0a:	2f 5f       	subi	r18, 0xFF	; 255
    5e0c:	3f 4f       	sbci	r19, 0xFF	; 255
    5e0e:	39 83       	std	Y+1, r19	; 0x01
    5e10:	28 83       	st	Y, r18
    5e12:	10 83       	st	Z, r17
    5e14:	06 c0       	rjmp	.+12     	; 0x5e22 <fputc+0x4a>
    5e16:	e8 85       	ldd	r30, Y+8	; 0x08
    5e18:	f9 85       	ldd	r31, Y+9	; 0x09
    5e1a:	81 2f       	mov	r24, r17
    5e1c:	09 95       	icall
    5e1e:	89 2b       	or	r24, r25
    5e20:	29 f7       	brne	.-54     	; 0x5dec <fputc+0x14>
    5e22:	2e 81       	ldd	r18, Y+6	; 0x06
    5e24:	3f 81       	ldd	r19, Y+7	; 0x07
    5e26:	2f 5f       	subi	r18, 0xFF	; 255
    5e28:	3f 4f       	sbci	r19, 0xFF	; 255
    5e2a:	3f 83       	std	Y+7, r19	; 0x07
    5e2c:	2e 83       	std	Y+6, r18	; 0x06
    5e2e:	81 2f       	mov	r24, r17
    5e30:	90 2f       	mov	r25, r16
    5e32:	df 91       	pop	r29
    5e34:	cf 91       	pop	r28
    5e36:	1f 91       	pop	r17
    5e38:	0f 91       	pop	r16
    5e3a:	08 95       	ret

00005e3c <__ultoa_invert>:
    5e3c:	fa 01       	movw	r30, r20
    5e3e:	aa 27       	eor	r26, r26
    5e40:	28 30       	cpi	r18, 0x08	; 8
    5e42:	51 f1       	breq	.+84     	; 0x5e98 <__ultoa_invert+0x5c>
    5e44:	20 31       	cpi	r18, 0x10	; 16
    5e46:	81 f1       	breq	.+96     	; 0x5ea8 <__ultoa_invert+0x6c>
    5e48:	e8 94       	clt
    5e4a:	6f 93       	push	r22
    5e4c:	6e 7f       	andi	r22, 0xFE	; 254
    5e4e:	6e 5f       	subi	r22, 0xFE	; 254
    5e50:	7f 4f       	sbci	r23, 0xFF	; 255
    5e52:	8f 4f       	sbci	r24, 0xFF	; 255
    5e54:	9f 4f       	sbci	r25, 0xFF	; 255
    5e56:	af 4f       	sbci	r26, 0xFF	; 255
    5e58:	b1 e0       	ldi	r27, 0x01	; 1
    5e5a:	3e d0       	rcall	.+124    	; 0x5ed8 <__ultoa_invert+0x9c>
    5e5c:	b4 e0       	ldi	r27, 0x04	; 4
    5e5e:	3c d0       	rcall	.+120    	; 0x5ed8 <__ultoa_invert+0x9c>
    5e60:	67 0f       	add	r22, r23
    5e62:	78 1f       	adc	r23, r24
    5e64:	89 1f       	adc	r24, r25
    5e66:	9a 1f       	adc	r25, r26
    5e68:	a1 1d       	adc	r26, r1
    5e6a:	68 0f       	add	r22, r24
    5e6c:	79 1f       	adc	r23, r25
    5e6e:	8a 1f       	adc	r24, r26
    5e70:	91 1d       	adc	r25, r1
    5e72:	a1 1d       	adc	r26, r1
    5e74:	6a 0f       	add	r22, r26
    5e76:	71 1d       	adc	r23, r1
    5e78:	81 1d       	adc	r24, r1
    5e7a:	91 1d       	adc	r25, r1
    5e7c:	a1 1d       	adc	r26, r1
    5e7e:	20 d0       	rcall	.+64     	; 0x5ec0 <__ultoa_invert+0x84>
    5e80:	09 f4       	brne	.+2      	; 0x5e84 <__ultoa_invert+0x48>
    5e82:	68 94       	set
    5e84:	3f 91       	pop	r19
    5e86:	2a e0       	ldi	r18, 0x0A	; 10
    5e88:	26 9f       	mul	r18, r22
    5e8a:	11 24       	eor	r1, r1
    5e8c:	30 19       	sub	r19, r0
    5e8e:	30 5d       	subi	r19, 0xD0	; 208
    5e90:	31 93       	st	Z+, r19
    5e92:	de f6       	brtc	.-74     	; 0x5e4a <__ultoa_invert+0xe>
    5e94:	cf 01       	movw	r24, r30
    5e96:	08 95       	ret
    5e98:	46 2f       	mov	r20, r22
    5e9a:	47 70       	andi	r20, 0x07	; 7
    5e9c:	40 5d       	subi	r20, 0xD0	; 208
    5e9e:	41 93       	st	Z+, r20
    5ea0:	b3 e0       	ldi	r27, 0x03	; 3
    5ea2:	0f d0       	rcall	.+30     	; 0x5ec2 <__ultoa_invert+0x86>
    5ea4:	c9 f7       	brne	.-14     	; 0x5e98 <__ultoa_invert+0x5c>
    5ea6:	f6 cf       	rjmp	.-20     	; 0x5e94 <__ultoa_invert+0x58>
    5ea8:	46 2f       	mov	r20, r22
    5eaa:	4f 70       	andi	r20, 0x0F	; 15
    5eac:	40 5d       	subi	r20, 0xD0	; 208
    5eae:	4a 33       	cpi	r20, 0x3A	; 58
    5eb0:	18 f0       	brcs	.+6      	; 0x5eb8 <__ultoa_invert+0x7c>
    5eb2:	49 5d       	subi	r20, 0xD9	; 217
    5eb4:	31 fd       	sbrc	r19, 1
    5eb6:	40 52       	subi	r20, 0x20	; 32
    5eb8:	41 93       	st	Z+, r20
    5eba:	02 d0       	rcall	.+4      	; 0x5ec0 <__ultoa_invert+0x84>
    5ebc:	a9 f7       	brne	.-22     	; 0x5ea8 <__ultoa_invert+0x6c>
    5ebe:	ea cf       	rjmp	.-44     	; 0x5e94 <__ultoa_invert+0x58>
    5ec0:	b4 e0       	ldi	r27, 0x04	; 4
    5ec2:	a6 95       	lsr	r26
    5ec4:	97 95       	ror	r25
    5ec6:	87 95       	ror	r24
    5ec8:	77 95       	ror	r23
    5eca:	67 95       	ror	r22
    5ecc:	ba 95       	dec	r27
    5ece:	c9 f7       	brne	.-14     	; 0x5ec2 <__ultoa_invert+0x86>
    5ed0:	00 97       	sbiw	r24, 0x00	; 0
    5ed2:	61 05       	cpc	r22, r1
    5ed4:	71 05       	cpc	r23, r1
    5ed6:	08 95       	ret
    5ed8:	9b 01       	movw	r18, r22
    5eda:	ac 01       	movw	r20, r24
    5edc:	0a 2e       	mov	r0, r26
    5ede:	06 94       	lsr	r0
    5ee0:	57 95       	ror	r21
    5ee2:	47 95       	ror	r20
    5ee4:	37 95       	ror	r19
    5ee6:	27 95       	ror	r18
    5ee8:	ba 95       	dec	r27
    5eea:	c9 f7       	brne	.-14     	; 0x5ede <__ultoa_invert+0xa2>
    5eec:	62 0f       	add	r22, r18
    5eee:	73 1f       	adc	r23, r19
    5ef0:	84 1f       	adc	r24, r20
    5ef2:	95 1f       	adc	r25, r21
    5ef4:	a0 1d       	adc	r26, r0
    5ef6:	08 95       	ret

00005ef8 <__eerd_word_m32>:
    5ef8:	a8 e1       	ldi	r26, 0x18	; 24
    5efa:	b0 e0       	ldi	r27, 0x00	; 0
    5efc:	42 e0       	ldi	r20, 0x02	; 2
    5efe:	50 e0       	ldi	r21, 0x00	; 0
    5f00:	0c 94 8a 2f 	jmp	0x5f14	; 0x5f14 <__eerd_blraw_m32>

00005f04 <__eeupd_word_m32>:
    5f04:	01 96       	adiw	r24, 0x01	; 1
    5f06:	27 2f       	mov	r18, r23
    5f08:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <__eeupd_r18_m32>
    5f0c:	0c 94 98 2f 	jmp	0x5f30	; 0x5f30 <__eeupd_byte_m32>

00005f10 <__eerd_block_m32>:
    5f10:	dc 01       	movw	r26, r24
    5f12:	cb 01       	movw	r24, r22

00005f14 <__eerd_blraw_m32>:
    5f14:	fc 01       	movw	r30, r24
    5f16:	e1 99       	sbic	0x1c, 1	; 28
    5f18:	fe cf       	rjmp	.-4      	; 0x5f16 <__eerd_blraw_m32+0x2>
    5f1a:	06 c0       	rjmp	.+12     	; 0x5f28 <__eerd_blraw_m32+0x14>
    5f1c:	ff bb       	out	0x1f, r31	; 31
    5f1e:	ee bb       	out	0x1e, r30	; 30
    5f20:	e0 9a       	sbi	0x1c, 0	; 28
    5f22:	31 96       	adiw	r30, 0x01	; 1
    5f24:	0d b2       	in	r0, 0x1d	; 29
    5f26:	0d 92       	st	X+, r0
    5f28:	41 50       	subi	r20, 0x01	; 1
    5f2a:	50 40       	sbci	r21, 0x00	; 0
    5f2c:	b8 f7       	brcc	.-18     	; 0x5f1c <__eerd_blraw_m32+0x8>
    5f2e:	08 95       	ret

00005f30 <__eeupd_byte_m32>:
    5f30:	26 2f       	mov	r18, r22

00005f32 <__eeupd_r18_m32>:
    5f32:	e1 99       	sbic	0x1c, 1	; 28
    5f34:	fe cf       	rjmp	.-4      	; 0x5f32 <__eeupd_r18_m32>
    5f36:	9f bb       	out	0x1f, r25	; 31
    5f38:	8e bb       	out	0x1e, r24	; 30
    5f3a:	e0 9a       	sbi	0x1c, 0	; 28
    5f3c:	01 97       	sbiw	r24, 0x01	; 1
    5f3e:	0d b2       	in	r0, 0x1d	; 29
    5f40:	02 16       	cp	r0, r18
    5f42:	31 f0       	breq	.+12     	; 0x5f50 <__eeupd_r18_m32+0x1e>
    5f44:	2d bb       	out	0x1d, r18	; 29
    5f46:	0f b6       	in	r0, 0x3f	; 63
    5f48:	f8 94       	cli
    5f4a:	e2 9a       	sbi	0x1c, 2	; 28
    5f4c:	e1 9a       	sbi	0x1c, 1	; 28
    5f4e:	0f be       	out	0x3f, r0	; 63
    5f50:	08 95       	ret

00005f52 <_exit>:
    5f52:	f8 94       	cli

00005f54 <__stop_program>:
    5f54:	ff cf       	rjmp	.-2      	; 0x5f54 <__stop_program>
