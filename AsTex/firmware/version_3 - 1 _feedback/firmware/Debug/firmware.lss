
firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000624c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000362  00800060  0000624c  00006300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  008003c2  008003c2  00006662  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00006662  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00006666  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000066c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000608a  00000000  00000000  0000681a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003d0  00000000  00000000  0000c8a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd1  00000000  00000000  0000cc74  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000658  00000000  00000000  0000d848  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000641  00000000  00000000  0000dea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000393c  00000000  00000000  0000e4e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00011e1d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e7 11 	jmp	0x23ce	; 0x23ce <__ctors_end>
       4:	0c 94 e5 18 	jmp	0x31ca	; 0x31ca <__vector_1>
       8:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
       c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      10:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      14:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      18:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      1c:	0c 94 0a 19 	jmp	0x3214	; 0x3214 <__vector_7>
      20:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      24:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      28:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      2c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      30:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      34:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      38:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      3c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      40:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      44:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      48:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      4c:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>
      50:	0c 94 04 12 	jmp	0x2408	; 0x2408 <__bad_interrupt>

00000054 <FONT_16x16>:
	...
      78:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      88:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      98:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b4:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c4:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d4:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e4:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f4:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     104:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     114:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     124:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     134:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     158:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     168:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     178:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     188:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     198:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1a8:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1b8:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1c8:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1e8:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     200:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     228:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     238:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     248:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     258:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     268:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     278:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     288:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     298:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2a8:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2b8:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2c8:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2d8:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2e8:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2f8:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     308:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     318:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     328:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     338:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     348:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     358:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     368:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     378:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     388:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     398:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3a8:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3b8:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3c8:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3d8:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3e8:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3f8:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     408:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     418:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     428:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     438:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     448:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     458:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     468:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     478:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     488:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     498:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4a8:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4b8:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4c8:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4d8:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4e8:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4f8:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     508:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     518:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     528:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     538:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     548:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     558:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     568:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     578:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     588:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     598:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5a8:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5b8:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5d8:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5e8:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5f8:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     608:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     618:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     628:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     638:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     648:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     658:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     668:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     678:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     688:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     698:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6a8:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6b8:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6c8:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6d8:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6e8:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6f8:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     708:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     718:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     728:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     738:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     748:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     758:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     768:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     778:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     788:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     798:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7a8:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7b8:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7c8:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7d8:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7e8:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7f8:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     808:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     818:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     850:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     880:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     898:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8a8:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c0:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8d8:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8e8:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     900:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     918:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     928:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     940:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     950:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     960:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     978:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     988:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     998:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9a8:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9b8:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9d8:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9e8:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a00:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a20:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a40:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a60:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a70:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a80:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a90:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa0:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac0:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     ad8:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     ae8:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b00:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b20:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b40:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b60:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b80:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b90:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba0:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bb8:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bc8:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bd8:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     be8:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bf8:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c08:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c18:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c34 <FONT_8x8>:
	...
     c3c:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     c4c:	6c 6c fe 6c fe 6c 6c 00 18 3e 60 3c 06 7c 18 00     ll.l.ll..>`<.|..
     c5c:	00 63 66 0c 18 33 63 00 1c 36 1c 3b 6e 66 3b 00     .cf..3c..6.;nf;.
     c6c:	30 30 60 00 00 00 00 00 0c 18 30 30 30 18 0c 00     00`.......000...
     c7c:	30 18 0c 0c 0c 18 30 00 00 66 3c ff 3c 66 00 00     0.....0..f<.<f..
     c8c:	00 30 30 fc 30 30 00 00 00 00 00 00 00 18 18 30     .00.00.........0
     c9c:	00 00 00 7e 00 00 00 00 00 00 00 00 00 18 18 00     ...~............
     cac:	03 06 0c 18 30 60 40 00 3e 63 63 6b 63 63 3e 00     ....0`@.>cckcc>.
     cbc:	18 38 58 18 18 18 7e 00 3c 66 06 1c 30 66 7e 00     .8X...~.<f..0f~.
     ccc:	3c 66 06 1c 06 66 3c 00 0e 1e 36 66 7f 06 0f 00     <f...f<...6f....
     cdc:	7e 60 7c 06 06 66 3c 00 1c 30 60 7c 66 66 3c 00     ~`|..f<..0`|ff<.
     cec:	7e 66 06 0c 18 18 18 00 3c 66 66 3c 66 66 3c 00     ~f......<ff<ff<.
     cfc:	3c 66 66 3e 06 0c 38 00 00 18 18 00 00 18 18 00     <ff>..8.........
     d0c:	00 18 18 00 00 18 18 30 0c 18 30 60 30 18 0c 00     .......0..0`0...
     d1c:	00 00 7e 00 00 7e 00 00 30 18 0c 06 0c 18 30 00     ..~..~..0.....0.
     d2c:	3c 66 06 0c 18 00 18 00 3e 63 6f 69 6f 60 3e 00     <f......>coio`>.
     d3c:	18 3c 66 66 7e 66 66 00 7e 33 33 3e 33 33 7e 00     .<ff~ff.~33>33~.
     d4c:	1e 33 60 60 60 33 1e 00 7c 36 33 33 33 36 7c 00     .3```3..|63336|.
     d5c:	7f 31 34 3c 34 31 7f 00 7f 31 34 3c 34 30 78 00     .14<41...14<40x.
     d6c:	1e 33 60 60 67 33 1f 00 66 66 66 7e 66 66 66 00     .3``g3..fff~fff.
     d7c:	3c 18 18 18 18 18 3c 00 0f 06 06 06 66 66 3c 00     <.....<.....ff<.
     d8c:	73 33 36 3c 36 33 73 00 78 30 30 30 31 33 7f 00     s36<63s.x00013..
     d9c:	63 77 7f 7f 6b 63 63 00 63 73 7b 6f 67 63 63 00     cw..kcc.cs{ogcc.
     dac:	3e 63 63 63 63 63 3e 00 7e 33 33 3e 30 30 78 00     >ccccc>.~33>00x.
     dbc:	3c 66 66 66 6e 3c 0e 00 7e 33 33 3e 36 33 73 00     <fffn<..~33>63s.
     dcc:	3c 66 30 18 0c 66 3c 00 7e 5a 18 18 18 18 3c 00     <f0..f<.~Z....<.
     ddc:	66 66 66 66 66 66 7e 00 66 66 66 66 66 3c 18 00     ffffff~.fffff<..
     dec:	63 63 63 6b 7f 77 63 00 63 63 36 1c 1c 36 63 00     ccck.wc.cc6..6c.
     dfc:	66 66 66 3c 18 18 3c 00 7f 63 46 0c 19 33 7f 00     fff<..<..cF..3..
     e0c:	3c 30 30 30 30 30 3c 00 60 30 18 0c 06 03 01 00     <00000<.`0......
     e1c:	3c 0c 0c 0c 0c 0c 3c 00 08 1c 36 63 00 00 00 00     <.....<...6c....
     e2c:	00 00 00 00 00 00 00 ff 18 18 0c 00 00 00 00 00     ................
     e3c:	00 00 3c 06 3e 66 3b 00 70 30 3e 33 33 33 6e 00     ..<.>f;.p0>333n.
     e4c:	00 00 3c 66 60 66 3c 00 0e 06 3e 66 66 66 3b 00     ..<f`f<...>fff;.
     e5c:	00 00 3c 66 7e 60 3c 00 1c 36 30 78 30 30 78 00     ..<f~`<..60x00x.
     e6c:	00 00 3b 66 66 3e 06 7c 70 30 36 3b 33 33 73 00     ..;ff>.|p06;33s.
     e7c:	18 00 38 18 18 18 3c 00 06 00 06 06 06 66 66 3c     ..8...<......ff<
     e8c:	70 30 33 36 3c 36 73 00 38 18 18 18 18 18 3c 00     p036<6s.8.....<.
     e9c:	00 00 66 7f 7f 6b 63 00 00 00 7c 66 66 66 66 00     ..f..kc...|ffff.
     eac:	00 00 3c 66 66 66 3c 00 00 00 6e 33 33 3e 30 78     ..<fff<...n33>0x
     ebc:	00 00 3b 66 66 3e 06 0f 00 00 6e 3b 33 30 78 00     ..;ff>....n;30x.
     ecc:	00 00 3e 60 3c 06 7c 00 08 18 3e 18 18 1a 0c 00     ..>`<.|...>.....
     edc:	00 00 66 66 66 66 3b 00 00 00 66 66 66 3c 18 00     ..ffff;...fff<..
     eec:	00 00 63 6b 7f 7f 36 00 00 00 63 36 1c 36 63 00     ..ck..6...c6.6c.
     efc:	00 00 66 66 66 3e 06 7c 00 00 7e 4c 18 32 7e 00     ..fff>.|..~L.2~.
     f0c:	0e 18 18 70 18 18 0e 00 0c 0c 0c 00 0c 0c 0c 00     ...p............
     f1c:	70 18 18 0e 18 18 70 00 3b 6e 00 00 00 00 00 00     p.....p.;n......
     f2c:	1c 36 36 1c 00 00 00 00 60 90 90 60 00 00 00 00     .66.....`..`....
     f3c:	22 77 7f 7f 3e 1c 08 00                             "w..>...

00000f44 <image_data_astex_logo>:
     f44:	fe ff df ff df ff ff ff ff ff ff ff df ff ff ff     ................
     f54:	ff f7 ff f7 ff ff df ff ff ff ff f7 ff ef ff ef     ................
     f64:	de ff 9e ff 7e ff 1d ff 97 fd 11 f4 0c d3 49 ba     ....~.........I.
     f74:	c6 a1 e7 a1 07 a2 69 b2 4d cb 72 f4 f8 fd 1d ff     ......i.M.r.....
     f84:	5f ff 9e ff ff ff ff e7 ff e7 ff f7 be ff bd ff     _...............
     f94:	df ff ff f7 ff f7 ff f7 ff ff ff ff ff ff df ff     ................
     fa4:	ff ff ff ff df ff ff ff ff ff ff ff ff ff ff ff     ................
     fb4:	ff ff ff ff df ff ff ff ff f7 ff f7 ff ff 9e ff     ................
     fc4:	9f ff 7f ff 9e ff d7 d5 51 ac cf a3 ef b3 51 cc     ........Q.....Q.
     fd4:	f3 ec 55 fd b7 fd d7 fd 96 fd 35 fd d4 ec 51 cc     ..U.......5...Q.
     fe4:	ae b3 8e a3 72 ac 18 d6 df ff be ff 9d ff ff ff     ....r...........
     ff4:	ff f7 ff f7 df ff ff ff fe ff fe ff fe ff ff ff     ................
    1004:	ff ff ff ff ff ff ff ff df ff ff ff ff f7 fe ff     ................
    1014:	ff ff ff ff ff ff ff ff df ff df ff ff ff ff f7     ................
    1024:	ff ff 9f ff 5b fe d1 e3 8f 9b 31 ac f8 dd 7d ff     ....[.....1...}.
    1034:	9e ff 7d ff 1c ff 9a fe b7 fd 56 fd b8 fd 9b fe     ..}.......V.....
    1044:	3d ff 7d ff 7d ff 5d ff d6 d5 ef 9b 4e 9b 71 dc     =.}.}.].....N.q.
    1054:	da fe 9d ff ff f7 ff e7 ff f7 de ff dd ff ff ff     ................
    1064:	ff ff ff ff ff ff ff ff ff ff ff ff df ff ff ff     ................
    1074:	fe f7 ff f7 ff f7 ff ff de ff ff ff ff f7 ff ff     ................
    1084:	bf ff be ff 5d ff b2 ac 6d a3 b2 ec 3d ff 3c ff     ....]...m...=.<.
    1094:	59 fe 92 ec 2c cb 08 b2 45 a9 a3 a8 a3 b0 a3 b0     Y...,...E.......
    10a4:	83 a8 c3 a0 66 a9 08 b2 4d d3 d3 fc fa fe 3c ff     ....f...M.....<.
    10b4:	fc fe 72 dc 4d 9b f3 bc 9e ff ff ff ff ff de ff     ..r.M...........
    10c4:	ff ff df ff bf f7 ff f7 ff ff fe ff ff ff ff ff     ................
    10d4:	ff ff ff ff ff ff ff ef ff f7 fe ff dd ff fe ff     ................
    10e4:	ff f7 ff ff 7f ff 15 ed 4c 9b 12 bd dc ff 9b ff     ........L.......
    10f4:	0f fc 07 da 82 b8 61 c0 21 c8 01 d0 21 d0 20 d0     ......a.!...!. .
    1104:	20 d0 20 c8 41 d0 61 d0 41 c8 41 c0 41 c0 20 c0      . .A.a.A.A.A. .
    1114:	82 b8 e7 e1 52 fc 5d ff bf ff b2 b4 0b a3 b5 fd     ....R.].........
    1124:	bd ff ff ff ff ff ff ff ff ff ff f7 ff ff fd ff     ................
    1134:	ff ff ff ff ff ff ff ff ff ff ff ff fe ff fe ff     ................
    1144:	ff ff ff ff df ff 5e ff 32 bc 6e ab ba fe 5b ff     ......^.2.n...[.
    1154:	90 ec c5 99 20 c8 20 d0 00 d8 00 e8 00 f0 00 f0     .... . .........
    1164:	00 e8 00 e8 00 e0 20 e8 00 e0 00 e0 00 e8 00 e8     ...... .........
    1174:	00 e8 00 e8 00 e0 42 e0 62 b8 a7 a9 14 ed 5c ff     ......B.b.....\.
    1184:	57 fe 0b b3 51 c4 bf ff df ff df ff ff ff ff ff     W...Q...........
    1194:	fe ff fe ff ff ff ff ff df ff ff ff ff ff de ff     ................
    11a4:	fd ff ff ff ff f7 bf ff 1c ff 0b b3 92 cc 7e ff     ..............~.
    11b4:	76 fd 86 d9 21 d0 22 d0 00 e0 00 e0 00 e8 00 e8     v...!.".........
    11c4:	00 e0 00 e8 00 e8 00 e0 00 e8 00 e0 00 e0 00 e8     ................
    11d4:	00 e8 00 e8 00 e8 00 e8 01 f0 00 d0 41 d0 41 d0     ............A.A.
    11e4:	40 c0 28 d2 38 fe 5d ff 11 c4 8f b3 7f ff df ff     @.(.8.].........
    11f4:	de ff fe ff de ff ff ff ff ff ff ff df ff df ff     ................
    1204:	df ff ff ff fe ff ff ff 9f ff fd fe ec aa 13 f5     ................
    1214:	5c ff 10 e4 83 a8 21 d8 00 f0 01 f0 00 e8 00 e0     \.....!.........
    1224:	00 d8 20 d8 20 d0 00 d8 00 d8 00 e0 00 e0 00 e8     .. . ...........
    1234:	00 e0 00 d8 00 e0 00 e0 00 d8 00 e0 01 e0 22 e0     ..............".
    1244:	00 e0 00 f0 00 f0 21 d0 a4 98 94 ec 1e ff 72 e4     ......!.......r.
    1254:	4c ab bd ff fe ff ff ff ff ff ff ff ff ff ff ff     L...............
    1264:	ff ff df ff df ff ff f7 ff f7 9e ff dc fe ec aa     ................
    1274:	95 e5 7c ff ca da 21 c8 21 d8 01 d0 01 e0 00 f0     ..|...!.!.......
    1284:	00 e0 00 e0 00 d8 20 d8 20 d8 00 d8 00 e0 00 e0     ...... . .......
    1294:	00 e0 00 e0 00 e0 00 d8 00 d8 20 d8 00 d8 00 d8     .......... .....
    12a4:	01 e0 00 e0 00 e0 00 e8 00 f0 00 e8 02 d8 64 b8     ..............d.
    12b4:	4e eb 1c ff 12 e5 6c 9b df ff ff ff ff ff de ff     N.....l.........
    12c4:	ff ff df ff ff ff ff ff fe ff ff f7 df ff 5e ff     ..............^.
    12d4:	0c b3 53 ed 9d ff aa b2 21 c0 00 f0 00 f0 41 d0     ..S.....!.....A.
    12e4:	41 c8 40 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     A.@.............
    12f4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1304:	00 d8 00 d8 00 e0 00 e0 00 e0 00 d8 01 d8 00 e8     ................
    1314:	00 f0 00 f0 62 c0 eb d2 5c ff d3 dc 8e a3 9f ff     ....b...\.......
    1324:	ff ff ff ff ff ff ff ff ff ff ff ef ff ef df ff     ................
    1334:	5f ff f2 cb d2 cc 7b ff ea ca 21 c0 41 e8 00 e8     _.....{...!.A...
    1344:	00 e0 00 e0 20 d8 40 d0 00 d8 00 e0 00 e0 00 e8     .... .@.........
    1354:	00 e8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1364:	00 e0 00 e0 00 d8 20 d8 00 e0 00 e0 00 e0 21 d8     ...... .......!.
    1374:	21 d0 00 e0 00 f0 00 f0 00 e0 83 b8 4d d3 3d ff     !...........M.=.
    1384:	10 cc d2 d4 de ff ff ef df ff ff ff df ff ff ef     ................
    1394:	ff f7 be ff f5 f4 4e b3 9e ff ef db 41 c8 00 f0     ......N.....A...
    13a4:	00 e8 20 d0 40 d8 00 e8 00 f0 00 e8 00 e0 00 e0     .. .@...........
    13b4:	00 e0 00 e0 00 e0 00 e0 00 d8 00 d8 00 d8 00 d8     ................
    13c4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 20 d8 20 d8     ............ . .
    13d4:	01 d8 00 e0 00 e0 20 d8 20 d8 00 e0 00 e8 00 d8     ...... . .......
    13e4:	63 b8 31 fc 1c ff 0b a3 38 ee df ff ff ff ff ff     c.1.....8.......
    13f4:	ff ff ff ff bf ff 5d ff 6c 93 1b ff d4 fc 43 b8     ......].l.....C.
    1404:	01 e0 00 e8 00 e8 40 e0 00 d8 00 e8 00 f0 00 e8     ......@.........
    1414:	00 e8 00 e8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1424:	00 e0 00 d8 00 d8 00 d8 00 e0 00 e0 00 e8 00 e8     ................
    1434:	20 d8 00 d8 00 e0 00 e0 00 e0 20 d8 20 d0 20 d0      ......... . . .
    1444:	00 e0 00 e8 00 e0 62 b0 75 fd 99 fe 2d 9b 3d ff     ......b.u...-.=.
    1454:	df ff df ff ff f7 9f ff 5f ff b2 b4 b4 bd 5b ff     ........_.....[.
    1464:	a3 d0 01 f0 01 e0 21 d0 00 e0 00 e8 00 e8 40 d8     ......!.......@.
    1474:	00 d0 01 e8 00 e8 00 e8 00 e0 00 e0 00 e0 00 e0     ................
    1484:	00 e0 00 e0 00 e0 00 e0 00 d8 20 d8 00 e0 00 e0     .......... .....
    1494:	00 e8 00 f0 00 d8 00 e0 00 e0 00 e0 01 d8 00 e0     ................
    14a4:	00 e0 20 d8 20 d8 00 e8 00 e8 21 d0 09 ba 3d ff     .. . .....!...=.
    14b4:	31 cc b2 fc ff ff df ff ff f7 9f ff 7b fe 6d 9b     1...........{.m.
    14c4:	dc ff ad db 00 d0 01 f8 01 e0 40 c8 00 e0 00 f8     ..........@.....
    14d4:	00 f0 20 d0 20 d0 00 d8 00 e0 00 e0 00 e0 00 e0     .. . ...........
    14e4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    14f4:	00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1504:	01 e0 01 e0 00 e0 00 e0 00 d8 00 e0 00 e0 21 d8     ..............!.
    1514:	42 b8 11 fc fc fe 4c a3 9e f7 ff ff ff ff 9f ff     B.....L.........
    1524:	72 d4 13 ed b9 fe c2 98 42 c8 01 e8 00 e8 00 e0     r.......B.......
    1534:	00 e0 00 f0 00 e8 01 e0 00 d8 00 d8 01 d8 01 d8     ................
    1544:	01 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1554:	00 e8 00 e8 00 e0 00 e0 20 d8 20 d0 00 e0 00 e0     ........ . .....
    1564:	00 e0 00 f0 00 f0 01 e8 01 d8 00 e0 00 e8 00 e0     ................
    1574:	41 d8 00 d0 00 e0 c3 d8 1c ff f3 a4 96 b5 df ff     A...............
    1584:	de ff bd ff ad 93 3c ff 0d f3 22 c8 21 d8 20 d8     ......<...".!. .
    1594:	20 d8 00 e0 01 e0 01 e0 00 e0 00 e0 00 e0 03 e8      ...............
    15a4:	03 d8 00 d8 20 d8 40 e0 00 d8 00 d8 21 e0 01 e0     .... .@.....!...
    15b4:	03 e8 03 e0 01 d8 20 d8 40 e0 20 e0 00 d8 40 d0     ...... .@. ...@.
    15c4:	60 c0 22 d8 02 e0 00 e0 60 d8 00 d0 02 e0 01 f0     `.".....`.......
    15d4:	00 f0 00 e0 01 e8 01 e8 00 e8 40 c0 71 f4 ff fe     ..........@.q...
    15e4:	2e bb 7e ff 9e ff 38 d6 92 ac 1c ff 03 d1 00 e0     ..~...8.........
    15f4:	00 e8 00 e8 00 e0 01 f0 00 e0 00 d8 20 d0 20 d8     ............ . .
    1604:	00 e8 00 f0 00 e8 20 e8 00 d8 00 e0 00 f8 00 f0     ...... .........
    1614:	00 d8 21 d8 01 d8 00 e8 00 f0 00 e0 00 d8 00 e0     ..!.............
    1624:	00 e0 00 e8 00 e0 00 d8 02 e0 00 e0 00 e0 00 e8     ................
    1634:	01 e8 02 e8 00 e0 00 d8 00 e0 00 e8 00 e8 20 d0     .............. .
    1644:	e8 b9 5f ff 8f c3 d8 fd 5d ff b3 ac 19 de 15 fd     .._.....].......
    1654:	20 c8 00 f8 00 f0 01 e0 01 e0 00 e8 00 e8 40 d8      .............@.
    1664:	40 d8 00 d8 00 e8 00 e8 00 e8 00 d8 21 d8 01 e0     @...........!...
    1674:	00 e0 00 e0 20 d0 60 d0 20 d8 00 e0 00 e8 20 f0     .... .`. ..... .
    1684:	00 e8 00 e0 00 e8 00 e8 00 f0 00 e0 21 e0 00 e0     ............!...
    1694:	00 f0 00 f0 00 e0 01 d8 01 d8 20 d8 00 d0 20 e0     .......... ... .
    16a4:	00 e0 02 d8 83 a8 d7 fd 14 ed 92 e4 5d ff af 9b     ............]...
    16b4:	7f ff 2e cb 41 c0 00 e0 01 d8 02 c0 42 c8 41 d8     ....A.......B.A.
    16c4:	00 d8 00 d8 01 e8 01 e8 20 d8 60 c8 40 d0 a6 f1     ........ .`.@...
    16d4:	29 ea 09 d2 49 ca 29 ca 49 e2 a5 f1 c1 f0 40 d8     )...I.).I.....@.
    16e4:	40 c8 20 d0 00 e0 00 f0 00 e0 42 d0 20 d0 00 d8     @. .......B. ...
    16f4:	00 e0 00 e0 00 d0 60 d8 40 d8 00 d8 01 d8 41 d8     ......`.@.....A.
    1704:	20 d0 20 d8 00 e0 02 e0 82 c0 8c fb b9 fe ae c3      . .............
    1714:	17 fe cf b3 7e ff e8 b1 22 c0 42 d8 22 b8 e9 d1     ....~...".B."...
    1724:	a7 c1 e3 c0 41 c8 22 d8 01 d8 02 d0 66 d9 45 b1     ....A.".....f.E.
    1734:	41 c0 a7 e9 08 d2 db fe bf ff 9e ff 51 fc 85 f9     A...........Q...
    1744:	a1 f0 60 c0 c2 a8 86 c9 42 c8 01 d0 42 c8 e4 b8     ..`.....B...B...
    1754:	03 99 60 b8 00 d8 00 d8 62 c0 e3 c8 40 d0 00 e0     ..`.....b...@...
    1764:	00 e0 01 d8 40 d8 00 d8 00 e8 00 e0 20 c8 e6 f1     ....@....... ...
    1774:	bc ff ce bb 91 f4 71 dc 9b fe a3 a8 42 d8 26 f9     ......q.....B.&.
    1784:	11 fc 6a ba 92 f4 f8 fd 52 fc 05 c1 87 c1 55 fd     ..j.....R.....U.
    1794:	93 fc 90 eb 08 fa 00 c8 a3 b0 19 fe ff ef ff ff     ................
    17a4:	eb ca 21 c8 61 d0 c7 d1 76 fd 52 f4 36 fd ab d2     ..!.a...v.R.6...
    17b4:	a3 a8 93 fc b9 fe 17 fe eb fa 62 c0 0d fb cc fa     ..........b.....
    17c4:	00 d8 00 e0 00 d8 20 d0 00 d8 00 e8 00 e8 00 e0     ...... .........
    17d4:	00 d0 c2 e8 dd ff 50 c4 0a cb 13 fd 76 fd 61 b0     ......P.....v.a.
    17e4:	00 d8 c2 e8 c7 d1 a7 91 6e b3 3d ff fc fe 4d bb     ........n.=...M.
    17f4:	33 dd 9c ff 59 fe 2a a2 40 d0 00 e0 21 c0 d8 fd     3...Y.*.@...!...
    1804:	ff f7 be ff cb da 41 c0 04 b9 bc fe dc fe 09 92     ......A.........
    1814:	d7 ed 5e ff 87 b1 47 f9 7e ff 9e ff 5d ff 8e db     ..^...G.~...]...
    1824:	4e fb 01 c8 00 e0 20 e0 20 d8 20 d8 00 d8 01 e8     N..... . . .....
    1834:	00 e0 00 e0 20 e0 00 d8 fb fe f4 d4 89 b2 14 fd     .... ...........
    1844:	d3 fc 81 b8 60 b8 4c fb 78 fe 34 f5 51 c4 9e ff     ....`.L.x.4.Q...
    1854:	9e ff 0f ac ed ab 9c ff bd ff fc fe 24 d1 00 d8     ............$...
    1864:	41 d0 d7 fd ff f7 bf ff aa e2 61 b8 eb d2 7e ff     A.........a...~.
    1874:	5e ff 8f bb 19 fe 7e ff 2d eb 00 e0 f0 bb ff ff     ^.....~.-.......
    1884:	ff ef 9d ff c2 98 41 c8 21 d8 00 d8 00 e0 00 e8     ......A.!.......
    1894:	20 e0 21 d0 01 d8 00 e8 00 e0 00 d8 18 fe 56 ed      .!...........V.
    18a4:	08 92 d7 fd 51 fc 82 a8 c7 b1 5c ff 9d ff 0e bc     ....Q.....\.....
    18b4:	27 82 9e ff 9e ff f0 bb 03 91 f2 fc 9e ff ff e7     '...............
    18c4:	d5 fc 62 c0 82 c0 b7 fd ff ef df ff aa da 61 c0     ..b...........a.
    18d4:	8a d2 7e ff 5e ff 6e c3 c8 a9 08 c2 a5 c9 60 c8     ..~.^.n.......`.
    18e4:	cc d2 fc fe ff e7 fe ff 90 e4 c2 a8 83 c0 64 e0     ..............d.
    18f4:	00 e8 00 e0 42 c8 c4 c0 42 d0 00 e8 00 e8 20 d0     ....B...B..... .
    1904:	76 f5 97 f5 09 92 f8 fd 10 fc a3 b0 46 a9 1d ff     v...........F...
    1914:	7d ff d2 dc ad cb 3d ff 3d ff f1 fb 25 d9 25 d9     }.....=.=...%.%.
    1924:	b6 fd df f7 57 fd 62 b8 41 b0 79 fe bf ff 9e ff     ....W.b.A.y.....
    1934:	eb ea 00 d0 42 c0 97 fd 5d ff 08 aa 63 b8 d0 fb     ....B...]...c...
    1944:	64 e1 e8 fa ac fa 46 a1 3d ff bd ff 5b ff 0b db     d.....F.=...[...
    1954:	46 c1 32 fc c5 d8 63 b8 4f fb 8f fb 41 d0 00 f0     F.2...c.O...A...
    1964:	00 e8 20 d0 76 f5 96 f5 08 9a d8 fd 32 fc 63 b0     .. .v.......2.c.
    1974:	62 c0 08 da 14 fd d3 fc 8f fb 32 fc 32 fc ab fa     b.........2.2...
    1984:	86 e9 2c fb ce fb f3 fc 46 d9 41 c0 82 c8 cf fb     ..,.....F.A.....
    1994:	b3 fc b2 fc e7 e9 00 e0 00 e0 e5 d0 51 fc cf fb     ............Q...
    19a4:	0d fb 87 f9 e3 d8 4b fb 00 f0 02 c8 2a d2 b3 fc     ......K.....*...
    19b4:	d3 fc 52 fc 67 c1 92 fc 10 fc 72 f4 d4 fc 4f fb     ..R.g.....r...O.
    19c4:	00 d0 00 f0 00 e8 00 d0 d6 f5 d6 f5 a9 b2 76 fd     ..............v.
    19d4:	f5 fc 83 b0 00 c8 40 d0 20 b0 c4 b0 a4 b8 63 c0     ......@. .....c.
    19e4:	62 c0 61 b8 a2 a8 c2 a8 82 b0 61 b8 40 d0 41 d0     b.a.......a.@.A.
    19f4:	21 c8 21 c8 41 c8 41 c0 61 c8 20 d0 21 e0 21 d0     !.!.A.A.a. .!.!.
    1a04:	41 b8 c3 a8 a3 b0 62 b8 42 c0 41 b8 00 e8 01 d0     A.....b.B.A.....
    1a14:	63 c0 63 b0 42 a8 62 b0 24 b9 50 fc 4f e4 6d bb     c.c.B.b.$.P.O.m.
    1a24:	b3 f4 4e fb 20 c0 60 e0 20 d8 00 c8 37 f6 75 dd     ..N. .`. ...7.u.
    1a34:	4b c3 f3 f4 98 fd c3 90 c2 b8 60 b8 82 b8 63 b0     K.........`...c.
    1a44:	62 a8 82 b0 81 b0 c1 a8 a1 a0 c2 a8 c3 b0 62 b0     b.............b.
    1a54:	81 b8 40 b0 62 c0 62 c0 62 c0 41 b0 61 b0 81 b8     ..@.b.b.b.A.a...
    1a64:	60 b0 61 b0 a3 b8 62 a8 a3 a0 c3 a8 83 b0 64 b8     `.a...b.......d.
    1a74:	80 b8 61 b0 42 b0 a3 b8 81 a8 c1 b0 a1 a8 a1 a0     ..a.B...........
    1a84:	c2 90 03 91 e2 90 c3 a0 c3 b0 82 b8 21 b0 83 c0     ............!...
    1a94:	3b ff f3 cc b1 ec 71 d4 3d ff 92 e4 50 fc ef fb     ;.....q.=...P...
    1aa4:	f0 fb f0 fb 10 fc 0f fc 2e fc 0f fc ef fb af fb     ................
    1ab4:	11 fc 32 fc 10 fc 10 fc 10 fc cf fb 11 fc 31 fc     ..2...........1.
    1ac4:	10 fc 2f fc 2f fc ef fb 31 fc 11 fc f0 fb ce fb     .././...1.......
    1ad4:	f0 fb f1 fb 4e fc 30 fc 31 fc cf fb 2f fc 2d fc     ....N.0.1.../.-.
    1ae4:	ed fb ce fb af fb 0f fc ee fb ee fb f0 fb 10 fc     ................
    1af4:	10 fc 10 fc 9d ff 10 bc 37 fe ce b3 7e ff b3 dc     ........7...~...
    1b04:	2c eb 2d fb 0d fb 2d fb 4d fb 2b fb 4b fb 2c fb     ,.-...-.M.+.K.,.
    1b14:	0d fb ed fa 0d fb 4e fb 4d fb 0c fb 4d fb 4d fb     ......N.M...M.M.
    1b24:	4e fb 4e fb 4d fb eb fa 2d fb 2d fb 2d fb cc fa     N.N.M...-.-.-...
    1b34:	2d fb 2c fb 2c fb 4c fb 4c fb 2d fb 0c fb 4d fb     -.,.,.L.L.-...M.
    1b44:	2c fb 2c fb 2d fb ec fa ec fa 0c fb 2c fb 2d fb     ,.,.-.......,.-.
    1b54:	4d fb 4d fb 0c eb 92 fc 7c ff 8e bb 1b ff ae a3     M.M.....|.......
    1b64:	9e ff 2d b3 62 c0 00 d8 21 d0 83 b0 a3 a8 81 b8     ..-.b...!.......
    1b74:	61 c0 41 b8 63 c0 23 c0 42 c8 41 c0 20 c0 81 c0     a.A.c.#.B.A. ...
    1b84:	41 b8 63 b8 42 c0 41 c0 41 c0 63 c0 43 c0 43 c0     A.c.B.A.A.c.C.C.
    1b94:	21 c0 61 b8 42 b8 42 b8 61 b8 60 b8 22 c8 42 c0     !.a.B.B.a.`.".B.
    1ba4:	62 c0 62 b8 42 c0 44 c0 44 c0 62 b0 a2 b0 a2 b0     b.b.B.D.D.b.....
    1bb4:	43 b8 23 c0 42 c0 81 b8 c2 a0 8e eb da fe 8e c3     C.#.B...........
    1bc4:	7e ff b2 b4 f5 dd 74 fd 42 b8 03 d0 66 d8 43 c8     ~.....t.B...f.C.
    1bd4:	62 c8 04 c9 05 a9 88 a9 46 b1 c3 a0 07 b2 ce c3     b.......F.......
    1be4:	e4 a8 25 b9 a3 a8 66 b9 6a da 05 b9 a3 b0 25 b9     ..%...f.j.....%.
    1bf4:	66 b9 ae f3 65 a9 8e eb ec da 25 a1 06 a9 06 b9     f...e.....%.....
    1c04:	07 b9 a4 a0 a7 c1 cc ea 27 b9 c5 98 a7 a1 4e db     ........'.....N.
    1c14:	c5 98 26 b1 05 a9 c7 c1 cc e2 a4 a0 a2 98 16 fe     ..&.............
    1c24:	b4 fc 72 ec be ff 17 ce 50 ac 1c ff a4 c8 47 f9     ..r.....P.....G.
    1c34:	33 fc 05 c1 c6 c9 91 fc 10 fc b0 fb b0 fb d0 fb     3...............
    1c44:	51 fc 30 fc ae fb cf fb af fb 0c fb 72 fc 45 c9     Q.0.........r.E.
    1c54:	a8 e1 11 fc 11 fc 4d fb a3 a0 92 fc 31 fc f0 fb     ......M.....1...
    1c64:	af fb d0 fb f0 fb d0 fb af f3 af fb d0 fb 11 fc     ................
    1c74:	d0 fb 51 fc 10 fc 2d fb 51 fc 2e fb 73 fc ab e2     ..Q...-.Q...s...
    1c84:	28 aa 5b ff 8e bb 38 fe fe ff df ff 8f a3 9c fe     (.[...8.........
    1c94:	2e fb e4 d0 8a fa c3 b8 49 d2 ef fb 07 e2 86 e9     ........I.......
    1ca4:	a7 f1 c8 e9 29 f2 29 ea e7 e1 6a fa c7 f1 66 e1     ....).)...j...f.
    1cb4:	a7 e9 e4 d8 a4 d8 29 fa e8 e9 a7 d9 82 b8 6a fa     ......).......j.
    1cc4:	e8 e1 69 ea 49 ea 29 f2 a9 e2 71 fc 52 fc 6a da     ..i.I.)...q.R.j.
    1cd4:	28 ea 48 f2 e8 e9 28 ea 07 ea c6 d9 28 ea e9 f1     (.H...(.....(...
    1ce4:	4a fa a7 c9 b2 e4 1b f7 cf 9b be ff ff ef bf ff     J...............
    1cf4:	52 d4 b5 e4 1d ff c3 98 60 d0 21 d0 05 d1 45 c9     R.......`.!...E.
    1d04:	40 c0 20 e0 20 d8 42 c0 01 c0 00 d8 40 c8 21 d0     @. . .B.....@.!.
    1d14:	21 d8 00 d0 21 d0 01 d8 21 d8 01 d0 21 d0 62 d0     !...!...!...!.b.
    1d24:	21 d0 21 d0 41 d0 41 c8 41 c8 20 c8 81 b0 44 d1     !.!.A.A.A. ...D.
    1d34:	46 d9 42 c0 62 c8 61 c8 40 c8 40 d0 60 d8 00 c8     F.B.b.a.@.@.`...
    1d44:	41 c8 42 c8 42 c0 25 b1 3d ff 72 ac b6 c5 ff ff     A.B.B.%.=.r.....
    1d54:	ff ef 9f ff dc fe 2d 9b be ff 10 dc 20 c0 00 f0     ......-..... ...
    1d64:	01 e8 02 d0 20 d8 00 e0 00 d8 42 d0 21 d8 00 e8     .... .....B.!...
    1d74:	41 d8 00 d0 00 e0 21 e8 01 e0 00 e0 00 e0 00 e0     A.....!.........
    1d84:	00 d8 00 d8 00 e0 00 e8 00 e0 00 d8 00 e0 20 e0     .............. .
    1d94:	61 c8 20 d0 00 e8 00 e0 01 d8 20 d0 20 d8 20 d8     a. ....... . . .
    1da4:	00 d8 20 e0 00 d8 41 d0 82 a8 92 fc dc fe 2e b3     .. ...A.........
    1db4:	bf ff ff ff df ff bf ff 9e ff f3 cc d2 c4 5d ff     ..............].
    1dc4:	66 c1 01 e0 00 f0 00 f0 00 e0 00 d8 20 d8 00 d8     f........... ...
    1dd4:	00 e0 00 e0 41 d8 00 d8 00 e0 00 d8 00 e0 00 e0     ....A...........
    1de4:	00 e8 00 e0 00 e0 00 e0 00 e8 00 f0 00 e8 00 e8     ................
    1df4:	20 e0 00 d8 20 d0 00 e0 00 e8 00 e8 00 e0 00 e8      ... ...........
    1e04:	00 e0 00 d8 20 d8 20 e8 00 e8 20 d0 49 ba 5d ff     .... . ... .I.].
    1e14:	f0 bb b4 fc df ff df ff ff ff ff ff df ff 7c ff     ..............|.
    1e24:	0a ab 79 fe 56 fd a3 a8 00 e0 00 f8 00 e8 01 d0     ..y.V...........
    1e34:	40 d8 20 e8 00 e8 01 e0 21 d8 00 d8 01 e0 00 e0     @. .....!.......
    1e44:	00 d8 00 e0 20 e0 00 e0 00 d8 00 e0 00 e8 00 e0     .... ...........
    1e54:	00 e8 00 d8 00 d8 21 d8 00 d8 00 e0 00 e0 00 e0     ......!.........
    1e64:	00 e8 00 e8 00 e0 01 d8 20 d8 00 e0 00 e8 62 c0     ........ .....b.
    1e74:	38 fe 58 e6 8d 93 5d ff bf ff df ff fd ff ff ef     8.X...].........
    1e84:	ff f7 de ff b5 f5 2b ab 7d ff 51 e4 81 b0 00 e0     ......+.}.Q.....
    1e94:	00 f0 01 e0 00 d0 20 d8 00 e0 01 e0 00 e0 00 e8     ...... .........
    1ea4:	00 e0 00 e0 20 e0 00 d8 20 d8 20 d8 20 d8 20 e0     .... ... . . . .
    1eb4:	00 d8 00 e0 00 e0 00 e0 00 d8 21 d8 00 e0 01 e0     ..........!.....
    1ec4:	20 d8 00 d8 00 e0 00 e0 01 e0 01 e8 00 e8 00 d8      ...............
    1ed4:	62 c0 b2 fc 3c ff 4b 93 99 f6 bf ff ff ff ff ff     b...<.K.........
    1ee4:	fe ff ff ff ff f7 ff f7 fe ff b2 c4 2f c4 3c ff     ............/.<.
    1ef4:	2c db 62 c0 00 e0 00 f0 00 e0 20 d8 21 e0 00 e0     ,.b....... .!...
    1f04:	00 f0 00 e8 00 e0 00 e0 00 d8 20 d8 00 d8 20 d8     .......... ... .
    1f14:	00 d8 00 d8 00 e0 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1f24:	01 d8 00 e0 00 e0 00 e8 00 e0 21 d0 21 e0 00 f0     ..........!.!...
    1f34:	00 f0 22 c0 f0 eb 5d ff ce bb b2 e4 9e ff ff ff     .."...].........
    1f44:	ff ff ff ff ff ff de ff ff ff ff f7 ff f7 be ff     ................
    1f54:	ee b3 91 e4 1d ff ac d2 82 b8 20 d8 00 e8 00 e8     .......... .....
    1f64:	00 e0 00 e0 00 e8 00 e8 00 e0 40 e0 20 d8 20 d8     ..........@. . .
    1f74:	00 d8 00 e0 00 d8 00 e0 00 e0 00 e0 00 e0 00 e0     ................
    1f84:	00 e8 00 e8 20 d0 21 e8 00 e8 00 e8 00 e0 00 d8     .... .!.........
    1f94:	00 e0 00 d8 42 c0 6e eb 3d ff 71 c4 ef bb 7e ff     ....B.n.=.q...~.
    1fa4:	bf ff ff f7 ff ff ff ff df ff ff ff ff ff ff ff     ................
    1fb4:	df ff df ff 9e ff 6d a3 d4 ec 1d ff 8e e3 61 a8     ......m.......a.
    1fc4:	41 e0 00 f0 00 f0 01 e0 00 e0 20 e0 20 d8 00 d0     A......... . ...
    1fd4:	00 d0 00 e0 00 e0 00 e0 01 e8 01 e8 00 e0 00 d8     ................
    1fe4:	00 d8 00 e0 00 e0 00 e0 40 d8 00 e0 00 f0 00 e0     ........@.......
    1ff4:	20 e0 00 e0 20 e0 62 b0 31 e4 7d ff b2 dc 4d bb      ... .b.1.}...M.
    2004:	9f ff ff ff ff f7 fe ff ff ff ff ff df ff bf ff     ................
    2014:	ff ff bf ff 9f ff df ff ff ff 9e ff 6d a3 b2 e4     ............m...
    2024:	3c ff d2 fc c2 b0 41 d0 00 d8 01 d8 00 e8 00 e0     <.....A.........
    2034:	00 e0 00 e0 00 e8 00 e8 00 e0 01 e8 01 e8 00 e0     ................
    2044:	00 e0 20 d8 20 e0 00 e0 00 e0 00 e0 00 e8 00 f0     .. . ...........
    2054:	00 e8 20 d8 80 d0 20 c8 a3 c0 15 fd 9e ff 91 b4     .. ... .........
    2064:	6e b3 5e ff bf ff ff e7 ff ef fd ff ff ff ff ff     n.^.............
    2074:	ff f7 ff ff df ff 9f ff df ff ff ff df f7 ff ff     ................
    2084:	bf ff 8e ab ae cb 3c ff 79 fe aa ba 81 a8 41 d8     ......<.y.....A.
    2094:	01 f0 00 e8 00 e0 00 e8 01 e8 00 e8 00 e0 00 e0     ................
    20a4:	01 e8 01 e0 01 e0 20 d8 00 d8 00 e0 00 e8 00 e8     ...... .........
    20b4:	00 f0 00 e8 20 e0 40 c8 60 a8 cb d2 fc fe 1d ff     .... .@.`.......
    20c4:	8e b3 ef b3 9f ff bf ff ff ff ff ff fe ff ff ff     ................
    20d4:	ff ff ff ff ff ef ff ff bf ff ff ff ff f7 ff ff     ................
    20e4:	ff ff ff ff df ff 9e ff 51 dc 0c b3 17 ee bd ff     ........Q.......
    20f4:	33 fd a6 d1 02 c8 01 c0 22 c8 02 d8 01 e0 01 e0     3.......".......
    2104:	00 d8 00 d8 00 e0 00 e0 00 d8 00 d0 00 d8 01 e0     ................
    2114:	01 e0 00 d8 03 d0 21 c8 40 b8 27 e2 34 fd 7e ff     ......!.@.'.4.~.
    2124:	18 de 2c 9b 92 ec 7e ff ff ff ff e7 ff ff be ff     ..,...~.........
    2134:	be ff ff ff ff ff ff ff ff f7 df ff df ff ff ff     ................
    2144:	fe f7 ff f7 ff ff ff ff ff ff df ff 9f ff d8 ed     ................
    2154:	6e a3 51 c4 3c ff 3c ff 14 fd 4c d3 66 a9 62 a8     n.Q.<.<...L.f.b.
    2164:	42 c0 21 c8 20 d0 20 d8 00 e0 00 e0 00 d8 41 d0     B.!. . .......A.
    2174:	41 d0 22 c8 42 c8 62 c0 46 a1 0c cb 75 fd fc fe     A.".B.b.F...u...
    2184:	9b fe d0 bb 8e 93 79 ee be ff bf ff ff ff ff f7     ......y.........
    2194:	de ff df ff df ff ff ff ff ff ff ff de ff ff ff     ................
    21a4:	ff ff ff ff fe ff fe ff ff f7 fe f7 ff ff ff ff     ................
    21b4:	ff f7 df ff 3e ff 72 fc ec aa 92 ac 3a f7 dd ff     ....>.r.....:...
    21c4:	7b ff 34 fd 2c fb e7 f1 44 e9 a1 e0 20 e0 00 e0     {.4.,...D... ...
    21d4:	41 d8 e3 e0 45 e1 e8 e9 6e fb d3 fc 9c ff bd ff     A...E...n.......
    21e4:	ba ee 32 b4 0d b3 f4 fc 3c ff df ff ff ef ff f7     ..2.....<.......
    21f4:	fd ff dd ff ff ff ff f7 ff ef ff ff ff ff ff ff     ................
    2204:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2214:	ff ff ff ff ff ff ff ff ff ff ff ff 7d ff 55 c5     ............}.U.
    2224:	6e b3 6e bb b3 ec 59 fe 5d ff 9d ff 9e ff 9e ff     n.n...Y.].......
    2234:	3d ff 7e ff 7d ff 9e ff 9e ff 7e ff 5d ff 59 fe     =.~.}.....~.].Y.
    2244:	b3 e4 2d bb 4e ab 76 d5 de ff ff ff ff ff ff ff     ..-.N.v.........
    2254:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2264:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    2274:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff df ff     ................
    2284:	df ff 9e ff 5d ff b7 fd 72 dc af c3 8e ab 30 b4     ....]...r.....0.
    2294:	d3 c4 75 d5 96 dd b7 dd b6 d5 76 d5 d3 c4 10 bc     ..u.......v.....
    22a4:	cf bb ae b3 92 e4 f8 fd 5e ff be ff ff ff ff ff     ........^.......
    22b4:	ff ff df ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    22c4:	ff ff ff ff ff ff ff ff                             ........

000022cc <__c.2161>:
    22cc:	6e 61 6e 00                                         nan.

000022d0 <__c.2159>:
    22d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
    22e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
    22f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
    2300:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
    2310:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
    2320:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
    2330:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
    2340:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
    2350:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
    2360:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
    2370:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
    2380:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
    2390:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
    23a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
    23b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
    23c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000023ce <__ctors_end>:
    23ce:	11 24       	eor	r1, r1
    23d0:	1f be       	out	0x3f, r1	; 63
    23d2:	cf e5       	ldi	r28, 0x5F	; 95
    23d4:	d8 e0       	ldi	r29, 0x08	; 8
    23d6:	de bf       	out	0x3e, r29	; 62
    23d8:	cd bf       	out	0x3d, r28	; 61

000023da <__do_copy_data>:
    23da:	13 e0       	ldi	r17, 0x03	; 3
    23dc:	a0 e6       	ldi	r26, 0x60	; 96
    23de:	b0 e0       	ldi	r27, 0x00	; 0
    23e0:	ec e4       	ldi	r30, 0x4C	; 76
    23e2:	f2 e6       	ldi	r31, 0x62	; 98
    23e4:	02 c0       	rjmp	.+4      	; 0x23ea <__do_copy_data+0x10>
    23e6:	05 90       	lpm	r0, Z+
    23e8:	0d 92       	st	X+, r0
    23ea:	a2 3c       	cpi	r26, 0xC2	; 194
    23ec:	b1 07       	cpc	r27, r17
    23ee:	d9 f7       	brne	.-10     	; 0x23e6 <__do_copy_data+0xc>

000023f0 <__do_clear_bss>:
    23f0:	23 e0       	ldi	r18, 0x03	; 3
    23f2:	a2 ec       	ldi	r26, 0xC2	; 194
    23f4:	b3 e0       	ldi	r27, 0x03	; 3
    23f6:	01 c0       	rjmp	.+2      	; 0x23fa <.do_clear_bss_start>

000023f8 <.do_clear_bss_loop>:
    23f8:	1d 92       	st	X+, r1

000023fa <.do_clear_bss_start>:
    23fa:	a7 3d       	cpi	r26, 0xD7	; 215
    23fc:	b2 07       	cpc	r27, r18
    23fe:	e1 f7       	brne	.-8      	; 0x23f8 <.do_clear_bss_loop>
    2400:	0e 94 30 19 	call	0x3260	; 0x3260 <main>
    2404:	0c 94 24 31 	jmp	0x6248	; 0x6248 <_exit>

00002408 <__bad_interrupt>:
    2408:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000240c <TFT_DP_DATA>:
#include <avr/pgmspace.h>

//display data write path define function
void TFT_DP_DATA(uint16_t Data)
{
	PORTC = (uint8_t) (Data & 0x00FF);
    240c:	85 bb       	out	0x15, r24	; 21
	PORTA = (uint8_t) ((Data & 0xFE00)>>8);
    240e:	9c 01       	movw	r18, r24
    2410:	22 27       	eor	r18, r18
    2412:	3e 7f       	andi	r19, 0xFE	; 254
    2414:	3b bb       	out	0x1b, r19	; 27
	if (Data & (1<<8)) PORTB |=(1<<0);
    2416:	90 ff       	sbrs	r25, 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <TFT_DP_DATA+0x12>
    241a:	c0 9a       	sbi	0x18, 0	; 24
    241c:	08 95       	ret
	else PORTB &=~(1<<0);
    241e:	c0 98       	cbi	0x18, 0	; 24
    2420:	08 95       	ret

00002422 <Write_Command>:



void Write_Command(uint16_t Wcommand)
{
	TFT_RD_1;
    2422:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RS_0;
    2424:	95 98       	cbi	0x12, 5	; 18
	TFT_DP_DATA(Wcommand);
    2426:	0e 94 06 12 	call	0x240c	; 0x240c <TFT_DP_DATA>
	TFT_WR_0;
    242a:	c1 98       	cbi	0x18, 1	; 24
	TFT_WR_1;
    242c:	c1 9a       	sbi	0x18, 1	; 24
    242e:	08 95       	ret

00002430 <Write_Data>:
}

void Write_Data(uint16_t Wdata)
{
		TFT_RD_1;
    2430:	c2 9a       	sbi	0x18, 2	; 24
		TFT_RS_1;
    2432:	95 9a       	sbi	0x12, 5	; 18
		TFT_DP_DATA(Wdata);
    2434:	0e 94 06 12 	call	0x240c	; 0x240c <TFT_DP_DATA>
		TFT_WR_0;
    2438:	c1 98       	cbi	0x18, 1	; 24
		TFT_WR_1;
    243a:	c1 9a       	sbi	0x18, 1	; 24
    243c:	08 95       	ret

0000243e <Write_Command_Data>:
}

void Write_Command_Data(uint16_t Wcommand, uint16_t Wdata)
{
    243e:	cf 93       	push	r28
    2440:	df 93       	push	r29
    2442:	eb 01       	movw	r28, r22
	Write_Command(Wcommand);
    2444:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
	Write_Data(Wdata);
    2448:	ce 01       	movw	r24, r28
    244a:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
}
    244e:	df 91       	pop	r29
    2450:	cf 91       	pop	r28
    2452:	08 95       	ret

00002454 <TFT_Set_Address>:

void TFT_Set_Address(uint16_t PX1, uint16_t PY1, uint16_t PX2, uint16_t PY2)
{
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	8c 01       	movw	r16, r24
    2462:	eb 01       	movw	r28, r22
    2464:	79 01       	movw	r14, r18
	Write_Command_Data(0x0044,(PX2 << 8) + PX1 );	//Column address start2
    2466:	e0 e0       	ldi	r30, 0x00	; 0
    2468:	f0 e0       	ldi	r31, 0x00	; 0
    246a:	f4 2f       	mov	r31, r20
    246c:	bf 01       	movw	r22, r30
    246e:	68 0f       	add	r22, r24
    2470:	79 1f       	adc	r23, r25
    2472:	84 e4       	ldi	r24, 0x44	; 68
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0045,PY1);					//Column address start1
    247a:	be 01       	movw	r22, r28
    247c:	85 e4       	ldi	r24, 0x45	; 69
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0046,PY2);					//Column address end2
    2484:	b7 01       	movw	r22, r14
    2486:	86 e4       	ldi	r24, 0x46	; 70
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004E,PX1);					//Column address end1
    248e:	b8 01       	movw	r22, r16
    2490:	8e e4       	ldi	r24, 0x4E	; 78
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004F,PY1);					//Row address start2
    2498:	be 01       	movw	r22, r28
    249a:	8f e4       	ldi	r24, 0x4F	; 79
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command(0x0022);
    24a2:	82 e2       	ldi	r24, 0x22	; 34
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
}
    24aa:	df 91       	pop	r29
    24ac:	cf 91       	pop	r28
    24ae:	1f 91       	pop	r17
    24b0:	0f 91       	pop	r16
    24b2:	ff 90       	pop	r15
    24b4:	ef 90       	pop	r14
    24b6:	08 95       	ret

000024b8 <TFT_Init>:

void TFT_Init(void)
{
	TFT_RD_1;
    24b8:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RST_1;
    24ba:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    24bc:	8f e0       	ldi	r24, 0x0F	; 15
    24be:	97 e2       	ldi	r25, 0x27	; 39
    24c0:	01 97       	sbiw	r24, 0x01	; 1
    24c2:	f1 f7       	brne	.-4      	; 0x24c0 <TFT_Init+0x8>
    24c4:	00 c0       	rjmp	.+0      	; 0x24c6 <TFT_Init+0xe>
    24c6:	00 00       	nop
	_delay_ms(5);
	TFT_RST_0;
    24c8:	c3 98       	cbi	0x18, 3	; 24
    24ca:	8f e2       	ldi	r24, 0x2F	; 47
    24cc:	95 e7       	ldi	r25, 0x75	; 117
    24ce:	01 97       	sbiw	r24, 0x01	; 1
    24d0:	f1 f7       	brne	.-4      	; 0x24ce <TFT_Init+0x16>
    24d2:	00 c0       	rjmp	.+0      	; 0x24d4 <TFT_Init+0x1c>
    24d4:	00 00       	nop
	_delay_ms(15);
	TFT_RST_1;
    24d6:	c3 9a       	sbi	0x18, 3	; 24
    24d8:	8f e2       	ldi	r24, 0x2F	; 47
    24da:	95 e7       	ldi	r25, 0x75	; 117
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	f1 f7       	brne	.-4      	; 0x24dc <TFT_Init+0x24>
    24e0:	00 c0       	rjmp	.+0      	; 0x24e2 <TFT_Init+0x2a>
    24e2:	00 00       	nop
	_delay_ms(15);
	TFT_CS_0;
    24e4:	94 98       	cbi	0x12, 4	; 18
	Write_Command_Data(0x0000,0x0001);
    24e6:	61 e0       	ldi	r22, 0x01	; 1
    24e8:	70 e0       	ldi	r23, 0x00	; 0
    24ea:	80 e0       	ldi	r24, 0x00	; 0
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0003,0xA8A4);
    24f2:	64 ea       	ldi	r22, 0xA4	; 164
    24f4:	78 ea       	ldi	r23, 0xA8	; 168
    24f6:	83 e0       	ldi	r24, 0x03	; 3
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000C,0x0000);
    24fe:	60 e0       	ldi	r22, 0x00	; 0
    2500:	70 e0       	ldi	r23, 0x00	; 0
    2502:	8c e0       	ldi	r24, 0x0C	; 12
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000D,0x800C);
    250a:	6c e0       	ldi	r22, 0x0C	; 12
    250c:	70 e8       	ldi	r23, 0x80	; 128
    250e:	8d e0       	ldi	r24, 0x0D	; 13
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000E,0x2B00);
    2516:	60 e0       	ldi	r22, 0x00	; 0
    2518:	7b e2       	ldi	r23, 0x2B	; 43
    251a:	8e e0       	ldi	r24, 0x0E	; 14
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x001E,0x00B7);
    2522:	67 eb       	ldi	r22, 0xB7	; 183
    2524:	70 e0       	ldi	r23, 0x00	; 0
    2526:	8e e1       	ldi	r24, 0x1E	; 30
    2528:	90 e0       	ldi	r25, 0x00	; 0
    252a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0001,0x2B3F);
    252e:	6f e3       	ldi	r22, 0x3F	; 63
    2530:	7b e2       	ldi	r23, 0x2B	; 43
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	90 e0       	ldi	r25, 0x00	; 0
    2536:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0002,0x0600);
    253a:	60 e0       	ldi	r22, 0x00	; 0
    253c:	76 e0       	ldi	r23, 0x06	; 6
    253e:	82 e0       	ldi	r24, 0x02	; 2
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0010,0x0000);
    2546:	60 e0       	ldi	r22, 0x00	; 0
    2548:	70 e0       	ldi	r23, 0x00	; 0
    254a:	80 e1       	ldi	r24, 0x10	; 16
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0011,0x6070);
    2552:	60 e7       	ldi	r22, 0x70	; 112
    2554:	70 e6       	ldi	r23, 0x60	; 96
    2556:	81 e1       	ldi	r24, 0x11	; 17
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0005,0x0000);
    255e:	60 e0       	ldi	r22, 0x00	; 0
    2560:	70 e0       	ldi	r23, 0x00	; 0
    2562:	85 e0       	ldi	r24, 0x05	; 5
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0006,0x0000);
    256a:	60 e0       	ldi	r22, 0x00	; 0
    256c:	70 e0       	ldi	r23, 0x00	; 0
    256e:	86 e0       	ldi	r24, 0x06	; 6
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0016,0xEF1C);
    2576:	6c e1       	ldi	r22, 0x1C	; 28
    2578:	7f ee       	ldi	r23, 0xEF	; 239
    257a:	86 e1       	ldi	r24, 0x16	; 22
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0017,0x0003);
    2582:	63 e0       	ldi	r22, 0x03	; 3
    2584:	70 e0       	ldi	r23, 0x00	; 0
    2586:	87 e1       	ldi	r24, 0x17	; 23
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0007,0x0233);
    258e:	63 e3       	ldi	r22, 0x33	; 51
    2590:	72 e0       	ldi	r23, 0x02	; 2
    2592:	87 e0       	ldi	r24, 0x07	; 7
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000B,0x0000);
    259a:	60 e0       	ldi	r22, 0x00	; 0
    259c:	70 e0       	ldi	r23, 0x00	; 0
    259e:	8b e0       	ldi	r24, 0x0B	; 11
    25a0:	90 e0       	ldi	r25, 0x00	; 0
    25a2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x000F,0x0000);
    25a6:	60 e0       	ldi	r22, 0x00	; 0
    25a8:	70 e0       	ldi	r23, 0x00	; 0
    25aa:	8f e0       	ldi	r24, 0x0F	; 15
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0041,0x0000);
    25b2:	60 e0       	ldi	r22, 0x00	; 0
    25b4:	70 e0       	ldi	r23, 0x00	; 0
    25b6:	81 e4       	ldi	r24, 0x41	; 65
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0042,0x0000);
    25be:	60 e0       	ldi	r22, 0x00	; 0
    25c0:	70 e0       	ldi	r23, 0x00	; 0
    25c2:	82 e4       	ldi	r24, 0x42	; 66
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0048,0x0000);
    25ca:	60 e0       	ldi	r22, 0x00	; 0
    25cc:	70 e0       	ldi	r23, 0x00	; 0
    25ce:	88 e4       	ldi	r24, 0x48	; 72
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0049,0x013F);
    25d6:	6f e3       	ldi	r22, 0x3F	; 63
    25d8:	71 e0       	ldi	r23, 0x01	; 1
    25da:	89 e4       	ldi	r24, 0x49	; 73
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004A,0x0000);
    25e2:	60 e0       	ldi	r22, 0x00	; 0
    25e4:	70 e0       	ldi	r23, 0x00	; 0
    25e6:	8a e4       	ldi	r24, 0x4A	; 74
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004B,0x0000);
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	70 e0       	ldi	r23, 0x00	; 0
    25f2:	8b e4       	ldi	r24, 0x4B	; 75
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0044,0xEF95);
    25fa:	65 e9       	ldi	r22, 0x95	; 149
    25fc:	7f ee       	ldi	r23, 0xEF	; 239
    25fe:	84 e4       	ldi	r24, 0x44	; 68
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0045,0x0000);
    2606:	60 e0       	ldi	r22, 0x00	; 0
    2608:	70 e0       	ldi	r23, 0x00	; 0
    260a:	85 e4       	ldi	r24, 0x45	; 69
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0046,0x013F);
    2612:	6f e3       	ldi	r22, 0x3F	; 63
    2614:	71 e0       	ldi	r23, 0x01	; 1
    2616:	86 e4       	ldi	r24, 0x46	; 70
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0030,0x0707);
    261e:	67 e0       	ldi	r22, 0x07	; 7
    2620:	77 e0       	ldi	r23, 0x07	; 7
    2622:	80 e3       	ldi	r24, 0x30	; 48
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0031,0x0204);
    262a:	64 e0       	ldi	r22, 0x04	; 4
    262c:	72 e0       	ldi	r23, 0x02	; 2
    262e:	81 e3       	ldi	r24, 0x31	; 49
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0032,0x0204);
    2636:	64 e0       	ldi	r22, 0x04	; 4
    2638:	72 e0       	ldi	r23, 0x02	; 2
    263a:	82 e3       	ldi	r24, 0x32	; 50
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0033,0x0502);
    2642:	62 e0       	ldi	r22, 0x02	; 2
    2644:	75 e0       	ldi	r23, 0x05	; 5
    2646:	83 e3       	ldi	r24, 0x33	; 51
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0034,0x0507);
    264e:	67 e0       	ldi	r22, 0x07	; 7
    2650:	75 e0       	ldi	r23, 0x05	; 5
    2652:	84 e3       	ldi	r24, 0x34	; 52
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0035,0x0204);
    265a:	64 e0       	ldi	r22, 0x04	; 4
    265c:	72 e0       	ldi	r23, 0x02	; 2
    265e:	85 e3       	ldi	r24, 0x35	; 53
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0036,0x0204);
    2666:	64 e0       	ldi	r22, 0x04	; 4
    2668:	72 e0       	ldi	r23, 0x02	; 2
    266a:	86 e3       	ldi	r24, 0x36	; 54
    266c:	90 e0       	ldi	r25, 0x00	; 0
    266e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0037,0x0502);
    2672:	62 e0       	ldi	r22, 0x02	; 2
    2674:	75 e0       	ldi	r23, 0x05	; 5
    2676:	87 e3       	ldi	r24, 0x37	; 55
    2678:	90 e0       	ldi	r25, 0x00	; 0
    267a:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x003A,0x0302);
    267e:	62 e0       	ldi	r22, 0x02	; 2
    2680:	73 e0       	ldi	r23, 0x03	; 3
    2682:	8a e3       	ldi	r24, 0x3A	; 58
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x003B,0x0302);
    268a:	62 e0       	ldi	r22, 0x02	; 2
    268c:	73 e0       	ldi	r23, 0x03	; 3
    268e:	8b e3       	ldi	r24, 0x3B	; 59
    2690:	90 e0       	ldi	r25, 0x00	; 0
    2692:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0023,0x0000);
    2696:	60 e0       	ldi	r22, 0x00	; 0
    2698:	70 e0       	ldi	r23, 0x00	; 0
    269a:	83 e2       	ldi	r24, 0x23	; 35
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0024,0x0000);
    26a2:	60 e0       	ldi	r22, 0x00	; 0
    26a4:	70 e0       	ldi	r23, 0x00	; 0
    26a6:	84 e2       	ldi	r24, 0x24	; 36
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x0025,0x8000);
    26ae:	60 e0       	ldi	r22, 0x00	; 0
    26b0:	70 e8       	ldi	r23, 0x80	; 128
    26b2:	85 e2       	ldi	r24, 0x25	; 37
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004f,0x0000);
    26ba:	60 e0       	ldi	r22, 0x00	; 0
    26bc:	70 e0       	ldi	r23, 0x00	; 0
    26be:	8f e4       	ldi	r24, 0x4F	; 79
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command_Data(0x004e,0x0000);
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	70 e0       	ldi	r23, 0x00	; 0
    26ca:	8e e4       	ldi	r24, 0x4E	; 78
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	0e 94 1f 12 	call	0x243e	; 0x243e <Write_Command_Data>
	Write_Command(0x0022);
    26d2:	82 e2       	ldi	r24, 0x22	; 34
    26d4:	90 e0       	ldi	r25, 0x00	; 0
    26d6:	0e 94 11 12 	call	0x2422	; 0x2422 <Write_Command>
	TFT_CS_1;
    26da:	94 9a       	sbi	0x12, 4	; 18
    26dc:	08 95       	ret

000026de <TFT_Fill>:
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    26de:	cf 93       	push	r28
    26e0:	df 93       	push	r29
    26e2:	ec 01       	movw	r28, r24
	unsigned int i,j;
	TFT_CS_0;
    26e4:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(0,0,239,319);
    26e6:	2f e3       	ldi	r18, 0x3F	; 63
    26e8:	31 e0       	ldi	r19, 0x01	; 1
    26ea:	4f ee       	ldi	r20, 0xEF	; 239
    26ec:	50 e0       	ldi	r21, 0x00	; 0
    26ee:	60 e0       	ldi	r22, 0x00	; 0
    26f0:	70 e0       	ldi	r23, 0x00	; 0
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    26fa:	ce 01       	movw	r24, r28
    26fc:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
    2700:	20 e4       	ldi	r18, 0x40	; 64
    2702:	31 e0       	ldi	r19, 0x01	; 1
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    2704:	50 ef       	ldi	r21, 0xF0	; 240
    2706:	40 e0       	ldi	r20, 0x00	; 0
    2708:	0a c0       	rjmp	.+20     	; 0x271e <TFT_Fill+0x40>
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
		{
			TFT_WR_0;
    270a:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    270c:	c1 9a       	sbi	0x18, 1	; 24
    270e:	01 97       	sbiw	r24, 0x01	; 1
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
    2710:	00 97       	sbiw	r24, 0x00	; 0
    2712:	d9 f7       	brne	.-10     	; 0x270a <TFT_Fill+0x2c>
    2714:	21 50       	subi	r18, 0x01	; 1
    2716:	31 09       	sbc	r19, r1
{
	unsigned int i,j;
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
    2718:	21 15       	cp	r18, r1
    271a:	31 05       	cpc	r19, r1
    271c:	19 f0       	breq	.+6      	; 0x2724 <TFT_Fill+0x46>
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    271e:	85 2f       	mov	r24, r21
    2720:	94 2f       	mov	r25, r20
    2722:	f3 cf       	rjmp	.-26     	; 0x270a <TFT_Fill+0x2c>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    2724:	94 9a       	sbi	0x12, 4	; 18
}
    2726:	df 91       	pop	r29
    2728:	cf 91       	pop	r28
    272a:	08 95       	ret

0000272c <TFT_Box>:

void TFT_Box(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    272c:	af 92       	push	r10
    272e:	bf 92       	push	r11
    2730:	cf 92       	push	r12
    2732:	df 92       	push	r13
    2734:	ef 92       	push	r14
    2736:	ff 92       	push	r15
    2738:	0f 93       	push	r16
    273a:	1f 93       	push	r17
    273c:	cf 93       	push	r28
    273e:	df 93       	push	r29
    2740:	6c 01       	movw	r12, r24
    2742:	7b 01       	movw	r14, r22
    2744:	ea 01       	movw	r28, r20
    2746:	59 01       	movw	r10, r18
	unsigned int  i,j;
	TFT_CS_0;
    2748:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x1,y1,x2,y2);
    274a:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    274e:	c8 01       	movw	r24, r16
    2750:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
	for(i = y1; i <= y2; i++)
    2754:	ae 14       	cp	r10, r14
    2756:	bf 04       	cpc	r11, r15
    2758:	a8 f0       	brcs	.+42     	; 0x2784 <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    275a:	9c 2d       	mov	r25, r12
    275c:	8d 2d       	mov	r24, r13
    275e:	0c c0       	rjmp	.+24     	; 0x2778 <TFT_Box+0x4c>
		{
			TFT_WR_0;
    2760:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    2762:	c1 9a       	sbi	0x18, 1	; 24
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
	{
		for(j = x1; j <= x2; j++)
    2764:	31 96       	adiw	r30, 0x01	; 1
    2766:	ce 17       	cp	r28, r30
    2768:	df 07       	cpc	r29, r31
    276a:	d0 f7       	brcc	.-12     	; 0x2760 <TFT_Box+0x34>
{
	unsigned int  i,j;
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
    276c:	2f ef       	ldi	r18, 0xFF	; 255
    276e:	e2 1a       	sub	r14, r18
    2770:	f2 0a       	sbc	r15, r18
    2772:	ae 14       	cp	r10, r14
    2774:	bf 04       	cpc	r11, r15
    2776:	30 f0       	brcs	.+12     	; 0x2784 <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    2778:	cc 15       	cp	r28, r12
    277a:	dd 05       	cpc	r29, r13
    277c:	b8 f3       	brcs	.-18     	; 0x276c <TFT_Box+0x40>
    277e:	e9 2f       	mov	r30, r25
    2780:	f8 2f       	mov	r31, r24
    2782:	ee cf       	rjmp	.-36     	; 0x2760 <TFT_Box+0x34>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    2784:	94 9a       	sbi	0x12, 4	; 18
}
    2786:	df 91       	pop	r29
    2788:	cf 91       	pop	r28
    278a:	1f 91       	pop	r17
    278c:	0f 91       	pop	r16
    278e:	ff 90       	pop	r15
    2790:	ef 90       	pop	r14
    2792:	df 90       	pop	r13
    2794:	cf 90       	pop	r12
    2796:	bf 90       	pop	r11
    2798:	af 90       	pop	r10
    279a:	08 95       	ret

0000279c <TFT_Dot>:

void TFT_Dot(unsigned int x,unsigned int y,unsigned int color)
{
    279c:	cf 93       	push	r28
    279e:	df 93       	push	r29
    27a0:	ea 01       	movw	r28, r20
	TFT_CS_0;
    27a2:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x,y,x,y);
    27a4:	9b 01       	movw	r18, r22
    27a6:	ac 01       	movw	r20, r24
    27a8:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
	Write_Data(color);
    27ac:	ce 01       	movw	r24, r28
    27ae:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
	TFT_CS_1;
    27b2:	94 9a       	sbi	0x12, 4	; 18
}
    27b4:	df 91       	pop	r29
    27b6:	cf 91       	pop	r28
    27b8:	08 95       	ret

000027ba <TFT_H_Line>:
	}
}


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
    27ba:	ef 92       	push	r14
    27bc:	ff 92       	push	r15
    27be:	0f 93       	push	r16
    27c0:	1f 93       	push	r17
    27c2:	cf 93       	push	r28
    27c4:	df 93       	push	r29
    27c6:	f8 2e       	mov	r15, r24
    27c8:	e6 2e       	mov	r14, r22
    27ca:	8a 01       	movw	r16, r20
    27cc:	e9 01       	movw	r28, r18
	char k;
	for(k = x1; k <= x2; k++)
    27ce:	68 17       	cp	r22, r24
    27d0:	48 f0       	brcs	.+18     	; 0x27e4 <TFT_H_Line+0x2a>
	{
		TFT_Dot(k,y_pos,color);
    27d2:	ae 01       	movw	r20, r28
    27d4:	b8 01       	movw	r22, r16
    27d6:	8f 2d       	mov	r24, r15
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
	char k;
	for(k = x1; k <= x2; k++)
    27de:	f3 94       	inc	r15
    27e0:	ef 14       	cp	r14, r15
    27e2:	b8 f7       	brcc	.-18     	; 0x27d2 <TFT_H_Line+0x18>
	{
		TFT_Dot(k,y_pos,color);
	}
}
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	1f 91       	pop	r17
    27ea:	0f 91       	pop	r16
    27ec:	ff 90       	pop	r15
    27ee:	ef 90       	pop	r14
    27f0:	08 95       	ret

000027f2 <TFT_V_Line>:

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
    27f2:	cf 92       	push	r12
    27f4:	df 92       	push	r13
    27f6:	ef 92       	push	r14
    27f8:	ff 92       	push	r15
    27fa:	0f 93       	push	r16
    27fc:	1f 93       	push	r17
    27fe:	cf 93       	push	r28
    2800:	df 93       	push	r29
    2802:	ec 01       	movw	r28, r24
    2804:	8b 01       	movw	r16, r22
    2806:	79 01       	movw	r14, r18
	unsigned int k;
	for(k = y1; k <= y2; k++)
    2808:	68 17       	cp	r22, r24
    280a:	79 07       	cpc	r23, r25
    280c:	58 f0       	brcs	.+22     	; 0x2824 <TFT_V_Line+0x32>
	{
		TFT_Dot(x_pos,k,color);
    280e:	c4 2e       	mov	r12, r20
    2810:	d1 2c       	mov	r13, r1
    2812:	a7 01       	movw	r20, r14
    2814:	be 01       	movw	r22, r28
    2816:	c6 01       	movw	r24, r12
    2818:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
}

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
	unsigned int k;
	for(k = y1; k <= y2; k++)
    281c:	21 96       	adiw	r28, 0x01	; 1
    281e:	0c 17       	cp	r16, r28
    2820:	1d 07       	cpc	r17, r29
    2822:	b8 f7       	brcc	.-18     	; 0x2812 <TFT_V_Line+0x20>
	{
		TFT_Dot(x_pos,k,color);
	}
}
    2824:	df 91       	pop	r29
    2826:	cf 91       	pop	r28
    2828:	1f 91       	pop	r17
    282a:	0f 91       	pop	r16
    282c:	ff 90       	pop	r15
    282e:	ef 90       	pop	r14
    2830:	df 90       	pop	r13
    2832:	cf 90       	pop	r12
    2834:	08 95       	ret

00002836 <TFT_Rectangle>:

void TFT_Rectangle(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    2836:	cf 92       	push	r12
    2838:	df 92       	push	r13
    283a:	ef 92       	push	r14
    283c:	ff 92       	push	r15
    283e:	0f 93       	push	r16
    2840:	1f 93       	push	r17
    2842:	cf 93       	push	r28
    2844:	df 93       	push	r29
    2846:	c8 2e       	mov	r12, r24
    2848:	eb 01       	movw	r28, r22
    284a:	d4 2e       	mov	r13, r20
    284c:	79 01       	movw	r14, r18
	TFT_H_Line(x1,x2,y1,color);
    284e:	98 01       	movw	r18, r16
    2850:	ab 01       	movw	r20, r22
    2852:	6d 2d       	mov	r22, r13
    2854:	0e 94 dd 13 	call	0x27ba	; 0x27ba <TFT_H_Line>
	TFT_H_Line(x1,x2,y2,color);
    2858:	98 01       	movw	r18, r16
    285a:	a7 01       	movw	r20, r14
    285c:	6d 2d       	mov	r22, r13
    285e:	8c 2d       	mov	r24, r12
    2860:	0e 94 dd 13 	call	0x27ba	; 0x27ba <TFT_H_Line>
	TFT_V_Line(y1,y2,x1,color);
    2864:	98 01       	movw	r18, r16
    2866:	4c 2d       	mov	r20, r12
    2868:	b7 01       	movw	r22, r14
    286a:	ce 01       	movw	r24, r28
    286c:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <TFT_V_Line>
	TFT_V_Line(y1,y2,x2,color);
    2870:	98 01       	movw	r18, r16
    2872:	4d 2d       	mov	r20, r13
    2874:	b7 01       	movw	r22, r14
    2876:	ce 01       	movw	r24, r28
    2878:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <TFT_V_Line>
}
    287c:	df 91       	pop	r29
    287e:	cf 91       	pop	r28
    2880:	1f 91       	pop	r17
    2882:	0f 91       	pop	r16
    2884:	ff 90       	pop	r15
    2886:	ef 90       	pop	r14
    2888:	df 90       	pop	r13
    288a:	cf 90       	pop	r12
    288c:	08 95       	ret

0000288e <TFT_Char>:
		}
	}
}

void TFT_Char(char C,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    288e:	2f 92       	push	r2
    2890:	3f 92       	push	r3
    2892:	4f 92       	push	r4
    2894:	5f 92       	push	r5
    2896:	6f 92       	push	r6
    2898:	7f 92       	push	r7
    289a:	8f 92       	push	r8
    289c:	9f 92       	push	r9
    289e:	af 92       	push	r10
    28a0:	bf 92       	push	r11
    28a2:	cf 92       	push	r12
    28a4:	df 92       	push	r13
    28a6:	ef 92       	push	r14
    28a8:	ff 92       	push	r15
    28aa:	0f 93       	push	r16
    28ac:	1f 93       	push	r17
    28ae:	cf 93       	push	r28
    28b0:	df 93       	push	r29
    28b2:	cd b7       	in	r28, 0x3d	; 61
    28b4:	de b7       	in	r29, 0x3e	; 62
    28b6:	ae 97       	sbiw	r28, 0x2e	; 46
    28b8:	0f b6       	in	r0, 0x3f	; 63
    28ba:	f8 94       	cli
    28bc:	de bf       	out	0x3e, r29	; 62
    28be:	0f be       	out	0x3f, r0	; 63
    28c0:	cd bf       	out	0x3d, r28	; 61
    28c2:	7a a7       	std	Y+42, r23	; 0x2a
    28c4:	69 a7       	std	Y+41, r22	; 0x29
    28c6:	5a 01       	movw	r10, r20
    28c8:	28 01       	movw	r4, r16
	unsigned int font16x16[16];
	unsigned int x_new;
	unsigned char k,i,print1,print2;  //edited breb LINE: char k,i,x_new,x_old,print1,print2;
	unsigned int print3,print4;

	if(DimFont == 8)
    28ca:	28 30       	cpi	r18, 0x08	; 8
    28cc:	09 f0       	breq	.+2      	; 0x28d0 <TFT_Char+0x42>
    28ce:	62 c0       	rjmp	.+196    	; 0x2994 <TFT_Char+0x106>
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
    28d0:	08 2f       	mov	r16, r24
    28d2:	10 e0       	ldi	r17, 0x00	; 0
    28d4:	00 0f       	add	r16, r16
    28d6:	11 1f       	adc	r17, r17
    28d8:	00 0f       	add	r16, r16
    28da:	11 1f       	adc	r17, r17
    28dc:	00 0f       	add	r16, r16
    28de:	11 1f       	adc	r17, r17
		PtrFont = PtrFont + Cptrfont;
    28e0:	0c 5c       	subi	r16, 0xCC	; 204
    28e2:	14 4f       	sbci	r17, 0xF4	; 244

		TFT_Set_Address(x,y,x,y);
    28e4:	9a 01       	movw	r18, r20
    28e6:	ab 01       	movw	r20, r22
    28e8:	b5 01       	movw	r22, r10
    28ea:	ca 01       	movw	r24, r20
    28ec:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    28f0:	ce 01       	movw	r24, r28
    28f2:	09 96       	adiw	r24, 0x09	; 9
    28f4:	de 01       	movw	r26, r28
    28f6:	11 96       	adiw	r26, 0x01	; 1
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
    28f8:	f8 01       	movw	r30, r16
    28fa:	24 91       	lpm	r18, Z
    28fc:	2d 93       	st	X+, r18
			PtrFont++;
    28fe:	0f 5f       	subi	r16, 0xFF	; 255
    2900:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
    2902:	a8 17       	cp	r26, r24
    2904:	b9 07       	cpc	r27, r25
    2906:	c1 f7       	brne	.-16     	; 0x28f8 <TFT_Char+0x6a>
    2908:	c5 01       	movw	r24, r10
    290a:	08 96       	adiw	r24, 0x08	; 8
    290c:	9c a7       	std	Y+44, r25	; 0x2c
    290e:	8b a7       	std	Y+43, r24	; 0x2b
    2910:	fe 01       	movw	r30, r28
    2912:	31 96       	adiw	r30, 0x01	; 1
    2914:	1f 01       	movw	r2, r30
    2916:	65 01       	movw	r12, r10
    2918:	89 a5       	ldd	r24, Y+41	; 0x29
    291a:	9a a5       	ldd	r25, Y+42	; 0x2a
    291c:	01 96       	adiw	r24, 0x01	; 1
    291e:	9e a7       	std	Y+46, r25	; 0x2e
    2920:	8d a7       	std	Y+45, r24	; 0x2d
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    2922:	61 2c       	mov	r6, r1
    2924:	32 c0       	rjmp	.+100    	; 0x298a <TFT_Char+0xfc>
    2926:	c8 01       	movw	r24, r16
    2928:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
			{
				print1 = (font8x8[i] & 0x80);
    292a:	f1 01       	movw	r30, r2
    292c:	20 81       	ld	r18, Z
				print2 = print1 >>7;
				if(print2 == 1)
    292e:	22 23       	and	r18, r18
    2930:	2c f4       	brge	.+10     	; 0x293c <TFT_Char+0xae>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    2932:	a2 01       	movw	r20, r4
    2934:	b6 01       	movw	r22, r12
    2936:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
    293a:	0a c0       	rjmp	.+20     	; 0x2950 <TFT_Char+0xc2>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    293c:	a7 01       	movw	r20, r14
    293e:	b6 01       	movw	r22, r12
    2940:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    2944:	95 01       	movw	r18, r10
    2946:	a8 01       	movw	r20, r16
    2948:	b5 01       	movw	r22, r10
    294a:	c8 01       	movw	r24, r16
    294c:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
				}
				font8x8[i] = font8x8[i] << 1;
    2950:	f4 01       	movw	r30, r8
    2952:	80 81       	ld	r24, Z
    2954:	88 0f       	add	r24, r24
    2956:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
    2958:	73 94       	inc	r7
    295a:	0f 5f       	subi	r16, 0xFF	; 255
    295c:	1f 4f       	sbci	r17, 0xFF	; 255
    295e:	f8 e0       	ldi	r31, 0x08	; 8
    2960:	7f 12       	cpse	r7, r31
    2962:	e1 cf       	rjmp	.-62     	; 0x2926 <TFT_Char+0x98>
					TFT_Set_Address(x_new,y,x_new,y);
				}
				font8x8[i] = font8x8[i] << 1;
			}

			y_new++;
    2964:	8f ef       	ldi	r24, 0xFF	; 255
    2966:	c8 1a       	sub	r12, r24
    2968:	d8 0a       	sbc	r13, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    296a:	96 01       	movw	r18, r12
    296c:	49 a5       	ldd	r20, Y+41	; 0x29
    296e:	5a a5       	ldd	r21, Y+42	; 0x2a
    2970:	b6 01       	movw	r22, r12
    2972:	ca 01       	movw	r24, r20
    2974:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    2978:	9f ef       	ldi	r25, 0xFF	; 255
    297a:	29 1a       	sub	r2, r25
    297c:	39 0a       	sbc	r3, r25
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
    297e:	eb a5       	ldd	r30, Y+43	; 0x2b
    2980:	fc a5       	ldd	r31, Y+44	; 0x2c
    2982:	ce 16       	cp	r12, r30
    2984:	df 06       	cpc	r13, r31
    2986:	09 f4       	brne	.+2      	; 0x298a <TFT_Char+0xfc>
    2988:	73 c0       	rjmp	.+230    	; 0x2a70 <TFT_Char+0x1e2>
    298a:	0d a5       	ldd	r16, Y+45	; 0x2d
    298c:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    298e:	76 2c       	mov	r7, r6
    2990:	41 01       	movw	r8, r2
    2992:	c9 cf       	rjmp	.-110    	; 0x2926 <TFT_Char+0x98>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

	else if(DimFont == 16)
    2994:	20 31       	cpi	r18, 0x10	; 16
    2996:	09 f0       	breq	.+2      	; 0x299a <TFT_Char+0x10c>
    2998:	6b c0       	rjmp	.+214    	; 0x2a70 <TFT_Char+0x1e2>
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
    299a:	f0 e2       	ldi	r31, 0x20	; 32
    299c:	8f 9f       	mul	r24, r31
    299e:	80 01       	movw	r16, r0
    29a0:	11 24       	eor	r1, r1
		PtrFont = PtrFont + Cptrfont;
    29a2:	0c 5a       	subi	r16, 0xAC	; 172
    29a4:	13 40       	sbci	r17, 0x03	; 3

		TFT_Set_Address(x,y,x,y);
    29a6:	9a 01       	movw	r18, r20
    29a8:	49 a5       	ldd	r20, Y+41	; 0x29
    29aa:	5a a5       	ldd	r21, Y+42	; 0x2a
    29ac:	b5 01       	movw	r22, r10
    29ae:	ca 01       	movw	r24, r20
    29b0:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    29b4:	98 01       	movw	r18, r16
    29b6:	20 5e       	subi	r18, 0xE0	; 224
    29b8:	3f 4f       	sbci	r19, 0xFF	; 255
    29ba:	de 01       	movw	r26, r28
    29bc:	19 96       	adiw	r26, 0x09	; 9
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    29be:	f8 01       	movw	r30, r16
    29c0:	84 91       	lpm	r24, Z
    29c2:	31 96       	adiw	r30, 0x01	; 1
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    29c4:	e4 91       	lpm	r30, Z
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    29c6:	90 e0       	ldi	r25, 0x00	; 0
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
    29c8:	98 2f       	mov	r25, r24
    29ca:	88 27       	eor	r24, r24
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    29cc:	8e 0f       	add	r24, r30
    29ce:	91 1d       	adc	r25, r1
    29d0:	8d 93       	st	X+, r24
    29d2:	9d 93       	st	X+, r25
    29d4:	0e 5f       	subi	r16, 0xFE	; 254
    29d6:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
    29d8:	20 17       	cp	r18, r16
    29da:	31 07       	cpc	r19, r17
    29dc:	81 f7       	brne	.-32     	; 0x29be <TFT_Char+0x130>
    29de:	c5 01       	movw	r24, r10
    29e0:	40 96       	adiw	r24, 0x10	; 16
    29e2:	9c a7       	std	Y+44, r25	; 0x2c
    29e4:	8b a7       	std	Y+43, r24	; 0x2b
    29e6:	fe 01       	movw	r30, r28
    29e8:	39 96       	adiw	r30, 0x09	; 9
    29ea:	3f 01       	movw	r6, r30
    29ec:	45 01       	movw	r8, r10
    29ee:	89 a5       	ldd	r24, Y+41	; 0x29
    29f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    29f2:	01 96       	adiw	r24, 0x01	; 1
    29f4:	9e a7       	std	Y+46, r25	; 0x2e
    29f6:	8d a7       	std	Y+45, r24	; 0x2d
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    29f8:	21 2c       	mov	r2, r1
    29fa:	35 c0       	rjmp	.+106    	; 0x2a66 <TFT_Char+0x1d8>
    29fc:	c8 01       	movw	r24, r16
    29fe:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
			{
				print3 = (font16x16[i] & 0x8000);
    2a00:	f3 01       	movw	r30, r6
    2a02:	20 81       	ld	r18, Z
    2a04:	31 81       	ldd	r19, Z+1	; 0x01
				print4 = print3 >>15;

				if(print4 == 1)
    2a06:	33 23       	and	r19, r19
    2a08:	2c f4       	brge	.+10     	; 0x2a14 <TFT_Char+0x186>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    2a0a:	a2 01       	movw	r20, r4
    2a0c:	b4 01       	movw	r22, r8
    2a0e:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
    2a12:	0a c0       	rjmp	.+20     	; 0x2a28 <TFT_Char+0x19a>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    2a14:	a7 01       	movw	r20, r14
    2a16:	b4 01       	movw	r22, r8
    2a18:	0e 94 ce 13 	call	0x279c	; 0x279c <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    2a1c:	95 01       	movw	r18, r10
    2a1e:	a8 01       	movw	r20, r16
    2a20:	b5 01       	movw	r22, r10
    2a22:	c8 01       	movw	r24, r16
    2a24:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
				}

				font16x16[i] = font16x16[i] << 1;
    2a28:	f6 01       	movw	r30, r12
    2a2a:	80 81       	ld	r24, Z
    2a2c:	91 81       	ldd	r25, Z+1	; 0x01
    2a2e:	88 0f       	add	r24, r24
    2a30:	99 1f       	adc	r25, r25
    2a32:	91 83       	std	Z+1, r25	; 0x01
    2a34:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
    2a36:	33 94       	inc	r3
    2a38:	0f 5f       	subi	r16, 0xFF	; 255
    2a3a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a3c:	f0 e1       	ldi	r31, 0x10	; 16
    2a3e:	3f 12       	cpse	r3, r31
    2a40:	dd cf       	rjmp	.-70     	; 0x29fc <TFT_Char+0x16e>
				}

				font16x16[i] = font16x16[i] << 1;
			}

			y_new++;
    2a42:	8f ef       	ldi	r24, 0xFF	; 255
    2a44:	88 1a       	sub	r8, r24
    2a46:	98 0a       	sbc	r9, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    2a48:	94 01       	movw	r18, r8
    2a4a:	49 a5       	ldd	r20, Y+41	; 0x29
    2a4c:	5a a5       	ldd	r21, Y+42	; 0x2a
    2a4e:	b4 01       	movw	r22, r8
    2a50:	ca 01       	movw	r24, r20
    2a52:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
    2a56:	92 e0       	ldi	r25, 0x02	; 2
    2a58:	69 0e       	add	r6, r25
    2a5a:	71 1c       	adc	r7, r1
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
    2a5c:	eb a5       	ldd	r30, Y+43	; 0x2b
    2a5e:	fc a5       	ldd	r31, Y+44	; 0x2c
    2a60:	8e 16       	cp	r8, r30
    2a62:	9f 06       	cpc	r9, r31
    2a64:	29 f0       	breq	.+10     	; 0x2a70 <TFT_Char+0x1e2>
    2a66:	0d a5       	ldd	r16, Y+45	; 0x2d
    2a68:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    2a6a:	32 2c       	mov	r3, r2
    2a6c:	63 01       	movw	r12, r6
    2a6e:	c6 cf       	rjmp	.-116    	; 0x29fc <TFT_Char+0x16e>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

}
    2a70:	ae 96       	adiw	r28, 0x2e	; 46
    2a72:	0f b6       	in	r0, 0x3f	; 63
    2a74:	f8 94       	cli
    2a76:	de bf       	out	0x3e, r29	; 62
    2a78:	0f be       	out	0x3f, r0	; 63
    2a7a:	cd bf       	out	0x3d, r28	; 61
    2a7c:	df 91       	pop	r29
    2a7e:	cf 91       	pop	r28
    2a80:	1f 91       	pop	r17
    2a82:	0f 91       	pop	r16
    2a84:	ff 90       	pop	r15
    2a86:	ef 90       	pop	r14
    2a88:	df 90       	pop	r13
    2a8a:	cf 90       	pop	r12
    2a8c:	bf 90       	pop	r11
    2a8e:	af 90       	pop	r10
    2a90:	9f 90       	pop	r9
    2a92:	8f 90       	pop	r8
    2a94:	7f 90       	pop	r7
    2a96:	6f 90       	pop	r6
    2a98:	5f 90       	pop	r5
    2a9a:	4f 90       	pop	r4
    2a9c:	3f 90       	pop	r3
    2a9e:	2f 90       	pop	r2
    2aa0:	08 95       	ret

00002aa2 <TFT_Text>:

void TFT_Text(const char* S,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    2aa2:	2f 92       	push	r2
    2aa4:	3f 92       	push	r3
    2aa6:	4f 92       	push	r4
    2aa8:	5f 92       	push	r5
    2aaa:	6f 92       	push	r6
    2aac:	7f 92       	push	r7
    2aae:	8f 92       	push	r8
    2ab0:	9f 92       	push	r9
    2ab2:	af 92       	push	r10
    2ab4:	bf 92       	push	r11
    2ab6:	cf 92       	push	r12
    2ab8:	df 92       	push	r13
    2aba:	ef 92       	push	r14
    2abc:	ff 92       	push	r15
    2abe:	0f 93       	push	r16
    2ac0:	1f 93       	push	r17
    2ac2:	cf 93       	push	r28
    2ac4:	df 93       	push	r29
    2ac6:	cd b7       	in	r28, 0x3d	; 61
    2ac8:	de b7       	in	r29, 0x3e	; 62
    2aca:	6a 97       	sbiw	r28, 0x1a	; 26
    2acc:	0f b6       	in	r0, 0x3f	; 63
    2ace:	f8 94       	cli
    2ad0:	de bf       	out	0x3e, r29	; 62
    2ad2:	0f be       	out	0x3f, r0	; 63
    2ad4:	cd bf       	out	0x3d, r28	; 61
    2ad6:	6b 01       	movw	r12, r22
    2ad8:	1a 01       	movw	r2, r20
    2ada:	28 01       	movw	r4, r16
    2adc:	47 01       	movw	r8, r14
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);
    2ade:	fc 01       	movw	r30, r24
    2ae0:	01 90       	ld	r0, Z+
    2ae2:	00 20       	and	r0, r0
    2ae4:	e9 f7       	brne	.-6      	; 0x2ae0 <TFT_Text+0x3e>
    2ae6:	af 01       	movw	r20, r30
    2ae8:	48 1b       	sub	r20, r24
    2aea:	59 0b       	sbc	r21, r25

	for(k = 0; k <= (lenght - 1); k++)
    2aec:	ba 01       	movw	r22, r20
    2aee:	62 50       	subi	r22, 0x02	; 2
    2af0:	71 09       	sbc	r23, r1
    2af2:	5b 01       	movw	r10, r22
    2af4:	77 23       	and	r23, r23
    2af6:	0c f4       	brge	.+2      	; 0x2afa <TFT_Text+0x58>
    2af8:	4c c0       	rjmp	.+152    	; 0x2b92 <TFT_Text+0xf0>
    2afa:	dc 01       	movw	r26, r24
    2afc:	fe 01       	movw	r30, r28
    2afe:	31 96       	adiw	r30, 0x01	; 1
    2b00:	40 e0       	ldi	r20, 0x00	; 0
    2b02:	50 e0       	ldi	r21, 0x00	; 0
	{
		buffer[k] = S[k];
    2b04:	8d 91       	ld	r24, X+
    2b06:	81 93       	st	Z+, r24
{
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);

	for(k = 0; k <= (lenght - 1); k++)
    2b08:	4f 5f       	subi	r20, 0xFF	; 255
    2b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b0c:	a4 16       	cp	r10, r20
    2b0e:	b5 06       	cpc	r11, r21
    2b10:	cc f7       	brge	.-14     	; 0x2b04 <TFT_Text+0x62>
    2b12:	3c c0       	rjmp	.+120    	; 0x2b8c <TFT_Text+0xea>
    2b14:	ce 01       	movw	r24, r28
    2b16:	01 96       	adiw	r24, 0x01	; 1
    2b18:	9a 8f       	std	Y+26, r25	; 0x1a
    2b1a:	89 8f       	std	Y+25, r24	; 0x19
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    2b1c:	61 2c       	mov	r6, r1
    2b1e:	71 2c       	mov	r7, r1
	{
		for(k = 0; k <= (lenght - 1); k++)
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    2b20:	74 01       	movw	r14, r8
    2b22:	82 01       	movw	r16, r4
    2b24:	28 e0       	ldi	r18, 0x08	; 8
    2b26:	a1 01       	movw	r20, r2
    2b28:	b6 01       	movw	r22, r12
    2b2a:	e9 8d       	ldd	r30, Y+25	; 0x19
    2b2c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2b2e:	81 91       	ld	r24, Z+
    2b30:	fa 8f       	std	Y+26, r31	; 0x1a
    2b32:	e9 8f       	std	Y+25, r30	; 0x19
    2b34:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
			x = x + 8;
    2b38:	f8 e0       	ldi	r31, 0x08	; 8
    2b3a:	cf 0e       	add	r12, r31
    2b3c:	d1 1c       	adc	r13, r1
		buffer[k] = S[k];
	}

	if(DimFont == 8)
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b3e:	6f ef       	ldi	r22, 0xFF	; 255
    2b40:	66 1a       	sub	r6, r22
    2b42:	76 0a       	sbc	r7, r22
    2b44:	a6 14       	cp	r10, r6
    2b46:	b7 04       	cpc	r11, r7
    2b48:	5c f7       	brge	.-42     	; 0x2b20 <TFT_Text+0x7e>
    2b4a:	25 c0       	rjmp	.+74     	; 0x2b96 <TFT_Text+0xf4>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 8;
		}
	}
	else if(DimFont == 16)
    2b4c:	20 31       	cpi	r18, 0x10	; 16
    2b4e:	19 f5       	brne	.+70     	; 0x2b96 <TFT_Text+0xf4>
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b50:	bb 20       	and	r11, r11
    2b52:	0c f1       	brlt	.+66     	; 0x2b96 <TFT_Text+0xf4>
    2b54:	ce 01       	movw	r24, r28
    2b56:	01 96       	adiw	r24, 0x01	; 1
    2b58:	9a 8f       	std	Y+26, r25	; 0x1a
    2b5a:	89 8f       	std	Y+25, r24	; 0x19
    2b5c:	61 2c       	mov	r6, r1
    2b5e:	71 2c       	mov	r7, r1
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    2b60:	74 01       	movw	r14, r8
    2b62:	82 01       	movw	r16, r4
    2b64:	20 e1       	ldi	r18, 0x10	; 16
    2b66:	a1 01       	movw	r20, r2
    2b68:	b6 01       	movw	r22, r12
    2b6a:	e9 8d       	ldd	r30, Y+25	; 0x19
    2b6c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2b6e:	81 91       	ld	r24, Z+
    2b70:	fa 8f       	std	Y+26, r31	; 0x1a
    2b72:	e9 8f       	std	Y+25, r30	; 0x19
    2b74:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
			x = x + 14;  //default is 16 but 14 is to minimize the space
    2b78:	fe e0       	ldi	r31, 0x0E	; 14
    2b7a:	cf 0e       	add	r12, r31
    2b7c:	d1 1c       	adc	r13, r1
			x = x + 8;
		}
	}
	else if(DimFont == 16)
	{
		for(k = 0; k <= (lenght - 1); k++)
    2b7e:	6f ef       	ldi	r22, 0xFF	; 255
    2b80:	66 1a       	sub	r6, r22
    2b82:	76 0a       	sbc	r7, r22
    2b84:	a6 14       	cp	r10, r6
    2b86:	b7 04       	cpc	r11, r7
    2b88:	5c f7       	brge	.-42     	; 0x2b60 <TFT_Text+0xbe>
    2b8a:	05 c0       	rjmp	.+10     	; 0x2b96 <TFT_Text+0xf4>
	for(k = 0; k <= (lenght - 1); k++)
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    2b8c:	28 30       	cpi	r18, 0x08	; 8
    2b8e:	f1 f6       	brne	.-68     	; 0x2b4c <TFT_Text+0xaa>
    2b90:	c1 cf       	rjmp	.-126    	; 0x2b14 <TFT_Text+0x72>
    2b92:	28 30       	cpi	r18, 0x08	; 8
    2b94:	d9 f6       	brne	.-74     	; 0x2b4c <TFT_Text+0xaa>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 14;  //default is 16 but 14 is to minimize the space
		}
	}
}
    2b96:	6a 96       	adiw	r28, 0x1a	; 26
    2b98:	0f b6       	in	r0, 0x3f	; 63
    2b9a:	f8 94       	cli
    2b9c:	de bf       	out	0x3e, r29	; 62
    2b9e:	0f be       	out	0x3f, r0	; 63
    2ba0:	cd bf       	out	0x3d, r28	; 61
    2ba2:	df 91       	pop	r29
    2ba4:	cf 91       	pop	r28
    2ba6:	1f 91       	pop	r17
    2ba8:	0f 91       	pop	r16
    2baa:	ff 90       	pop	r15
    2bac:	ef 90       	pop	r14
    2bae:	df 90       	pop	r13
    2bb0:	cf 90       	pop	r12
    2bb2:	bf 90       	pop	r11
    2bb4:	af 90       	pop	r10
    2bb6:	9f 90       	pop	r9
    2bb8:	8f 90       	pop	r8
    2bba:	7f 90       	pop	r7
    2bbc:	6f 90       	pop	r6
    2bbe:	5f 90       	pop	r5
    2bc0:	4f 90       	pop	r4
    2bc2:	3f 90       	pop	r3
    2bc4:	2f 90       	pop	r2
    2bc6:	08 95       	ret

00002bc8 <TFT_PutsInt>:

void TFT_PutsInt(int32_t val,signed int field_length,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    2bc8:	2f 92       	push	r2
    2bca:	3f 92       	push	r3
    2bcc:	4f 92       	push	r4
    2bce:	5f 92       	push	r5
    2bd0:	6f 92       	push	r6
    2bd2:	7f 92       	push	r7
    2bd4:	8f 92       	push	r8
    2bd6:	9f 92       	push	r9
    2bd8:	af 92       	push	r10
    2bda:	bf 92       	push	r11
    2bdc:	cf 92       	push	r12
    2bde:	df 92       	push	r13
    2be0:	ef 92       	push	r14
    2be2:	ff 92       	push	r15
    2be4:	0f 93       	push	r16
    2be6:	1f 93       	push	r17
    2be8:	cf 93       	push	r28
    2bea:	df 93       	push	r29
    2bec:	cd b7       	in	r28, 0x3d	; 61
    2bee:	de b7       	in	r29, 0x3e	; 62
    2bf0:	2b 97       	sbiw	r28, 0x0b	; 11
    2bf2:	0f b6       	in	r0, 0x3f	; 63
    2bf4:	f8 94       	cli
    2bf6:	de bf       	out	0x3e, r29	; 62
    2bf8:	0f be       	out	0x3f, r0	; 63
    2bfa:	cd bf       	out	0x3d, r28	; 61
    2bfc:	3a 01       	movw	r6, r20
    2bfe:	49 01       	movw	r8, r18
    2c00:	18 01       	movw	r2, r16
    2c02:	eb 86       	std	Y+11, r14	; 0x0b
    2c04:	26 01       	movw	r4, r12
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
    2c06:	fe 01       	movw	r30, r28
    2c08:	31 96       	adiw	r30, 0x01	; 1
    2c0a:	2a e0       	ldi	r18, 0x0A	; 10
    2c0c:	df 01       	movw	r26, r30
    2c0e:	1d 92       	st	X+, r1
    2c10:	2a 95       	dec	r18
    2c12:	e9 f7       	brne	.-6      	; 0x2c0e <TFT_PutsInt+0x46>
	int i=9,j=0;
	while(val)
    2c14:	61 15       	cp	r22, r1
    2c16:	71 05       	cpc	r23, r1
    2c18:	81 05       	cpc	r24, r1
    2c1a:	91 05       	cpc	r25, r1
    2c1c:	c9 f0       	breq	.+50     	; 0x2c50 <TFT_PutsInt+0x88>
    2c1e:	6e 01       	movw	r12, r28
    2c20:	bb e0       	ldi	r27, 0x0B	; 11
    2c22:	cb 0e       	add	r12, r27
    2c24:	d1 1c       	adc	r13, r1
	{
		str[i]=val%10;
    2c26:	1a e0       	ldi	r17, 0x0A	; 10
    2c28:	e1 2e       	mov	r14, r17
    2c2a:	f1 2c       	mov	r15, r1
    2c2c:	00 e0       	ldi	r16, 0x00	; 0
    2c2e:	10 e0       	ldi	r17, 0x00	; 0
    2c30:	a8 01       	movw	r20, r16
    2c32:	97 01       	movw	r18, r14
    2c34:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <__divmodsi4>
    2c38:	f6 01       	movw	r30, r12
    2c3a:	62 93       	st	-Z, r22
    2c3c:	6f 01       	movw	r12, r30
		val=val/10;
    2c3e:	62 2f       	mov	r22, r18
    2c40:	73 2f       	mov	r23, r19
    2c42:	84 2f       	mov	r24, r20
    2c44:	95 2f       	mov	r25, r21
{
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
	int i=9,j=0;
	while(val)
    2c46:	61 15       	cp	r22, r1
    2c48:	71 05       	cpc	r23, r1
    2c4a:	81 05       	cpc	r24, r1
    2c4c:	91 05       	cpc	r25, r1
    2c4e:	81 f7       	brne	.-32     	; 0x2c30 <TFT_PutsInt+0x68>
	{
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
    2c50:	ff ef       	ldi	r31, 0xFF	; 255
    2c52:	6f 16       	cp	r6, r31
    2c54:	7f 06       	cpc	r7, r31
    2c56:	71 f4       	brne	.+28     	; 0x2c74 <TFT_PutsInt+0xac>
	while(str[j]==0) j++;
    2c58:	29 81       	ldd	r18, Y+1	; 0x01
    2c5a:	21 11       	cpse	r18, r1
    2c5c:	11 c0       	rjmp	.+34     	; 0x2c80 <TFT_PutsInt+0xb8>
    2c5e:	fe 01       	movw	r30, r28
    2c60:	32 96       	adiw	r30, 0x02	; 2
    2c62:	c1 2c       	mov	r12, r1
    2c64:	d1 2c       	mov	r13, r1
    2c66:	2f ef       	ldi	r18, 0xFF	; 255
    2c68:	c2 1a       	sub	r12, r18
    2c6a:	d2 0a       	sbc	r13, r18
    2c6c:	21 91       	ld	r18, Z+
    2c6e:	22 23       	and	r18, r18
    2c70:	d1 f3       	breq	.-12     	; 0x2c66 <TFT_PutsInt+0x9e>
    2c72:	08 c0       	rjmp	.+16     	; 0x2c84 <TFT_PutsInt+0xbc>
	else
	j=10-field_length;
    2c74:	2a e0       	ldi	r18, 0x0A	; 10
    2c76:	30 e0       	ldi	r19, 0x00	; 0
    2c78:	69 01       	movw	r12, r18
    2c7a:	c6 18       	sub	r12, r6
    2c7c:	d7 08       	sbc	r13, r7
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <TFT_PutsInt+0xbc>
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
	while(str[j]==0) j++;
    2c80:	c1 2c       	mov	r12, r1
    2c82:	d1 2c       	mov	r13, r1
	else
	j=10-field_length;

	if(val<0)
    2c84:	99 23       	and	r25, r25
    2c86:	ac f4       	brge	.+42     	; 0x2cb2 <TFT_PutsInt+0xea>
	{
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
    2c88:	75 01       	movw	r14, r10
    2c8a:	82 01       	movw	r16, r4
    2c8c:	2b 85       	ldd	r18, Y+11	; 0x0b
    2c8e:	a1 01       	movw	r20, r2
    2c90:	b4 01       	movw	r22, r8
    2c92:	8d e2       	ldi	r24, 0x2D	; 45
    2c94:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
		if(DimFont == 8) x+=8;
    2c98:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c9a:	88 30       	cpi	r24, 0x08	; 8
    2c9c:	21 f4       	brne	.+8      	; 0x2ca6 <TFT_PutsInt+0xde>
    2c9e:	98 e0       	ldi	r25, 0x08	; 8
    2ca0:	89 0e       	add	r8, r25
    2ca2:	91 1c       	adc	r9, r1
    2ca4:	06 c0       	rjmp	.+12     	; 0x2cb2 <TFT_PutsInt+0xea>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    2ca6:	ab 85       	ldd	r26, Y+11	; 0x0b
    2ca8:	a0 31       	cpi	r26, 0x10	; 16
    2caa:	19 f4       	brne	.+6      	; 0x2cb2 <TFT_PutsInt+0xea>
    2cac:	be e0       	ldi	r27, 0x0E	; 14
    2cae:	8b 0e       	add	r8, r27
    2cb0:	91 1c       	adc	r9, r1
	}

	for(i=j;i<10;i++)
    2cb2:	ea e0       	ldi	r30, 0x0A	; 10
    2cb4:	ce 16       	cp	r12, r30
    2cb6:	d1 04       	cpc	r13, r1
    2cb8:	2c f5       	brge	.+74     	; 0x2d04 <TFT_PutsInt+0x13c>
    2cba:	81 e0       	ldi	r24, 0x01	; 1
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	8c 0f       	add	r24, r28
    2cc0:	9d 1f       	adc	r25, r29
    2cc2:	c8 0e       	add	r12, r24
    2cc4:	d9 1e       	adc	r13, r25
    2cc6:	3e 01       	movw	r6, r28
    2cc8:	9b e0       	ldi	r25, 0x0B	; 11
    2cca:	69 0e       	add	r6, r25
    2ccc:	71 1c       	adc	r7, r1
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
    2cce:	d6 01       	movw	r26, r12
    2cd0:	8d 91       	ld	r24, X+
    2cd2:	6d 01       	movw	r12, r26
    2cd4:	75 01       	movw	r14, r10
    2cd6:	82 01       	movw	r16, r4
    2cd8:	2b 85       	ldd	r18, Y+11	; 0x0b
    2cda:	a1 01       	movw	r20, r2
    2cdc:	b4 01       	movw	r22, r8
    2cde:	80 5d       	subi	r24, 0xD0	; 208
    2ce0:	0e 94 47 14 	call	0x288e	; 0x288e <TFT_Char>
		if(DimFont == 8) x+=8;
    2ce4:	bb 85       	ldd	r27, Y+11	; 0x0b
    2ce6:	b8 30       	cpi	r27, 0x08	; 8
    2ce8:	21 f4       	brne	.+8      	; 0x2cf2 <TFT_PutsInt+0x12a>
    2cea:	e8 e0       	ldi	r30, 0x08	; 8
    2cec:	8e 0e       	add	r8, r30
    2cee:	91 1c       	adc	r9, r1
    2cf0:	06 c0       	rjmp	.+12     	; 0x2cfe <TFT_PutsInt+0x136>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    2cf2:	fb 85       	ldd	r31, Y+11	; 0x0b
    2cf4:	f0 31       	cpi	r31, 0x10	; 16
    2cf6:	19 f4       	brne	.+6      	; 0x2cfe <TFT_PutsInt+0x136>
    2cf8:	2e e0       	ldi	r18, 0x0E	; 14
    2cfa:	82 0e       	add	r8, r18
    2cfc:	91 1c       	adc	r9, r1
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}

	for(i=j;i<10;i++)
    2cfe:	c6 14       	cp	r12, r6
    2d00:	d7 04       	cpc	r13, r7
    2d02:	29 f7       	brne	.-54     	; 0x2cce <TFT_PutsInt+0x106>
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}
}
    2d04:	2b 96       	adiw	r28, 0x0b	; 11
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	df 91       	pop	r29
    2d12:	cf 91       	pop	r28
    2d14:	1f 91       	pop	r17
    2d16:	0f 91       	pop	r16
    2d18:	ff 90       	pop	r15
    2d1a:	ef 90       	pop	r14
    2d1c:	df 90       	pop	r13
    2d1e:	cf 90       	pop	r12
    2d20:	bf 90       	pop	r11
    2d22:	af 90       	pop	r10
    2d24:	9f 90       	pop	r9
    2d26:	8f 90       	pop	r8
    2d28:	7f 90       	pop	r7
    2d2a:	6f 90       	pop	r6
    2d2c:	5f 90       	pop	r5
    2d2e:	4f 90       	pop	r4
    2d30:	3f 90       	pop	r3
    2d32:	2f 90       	pop	r2
    2d34:	08 95       	ret

00002d36 <TFT_Image>:


void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
    2d36:	2f 92       	push	r2
    2d38:	3f 92       	push	r3
    2d3a:	4f 92       	push	r4
    2d3c:	5f 92       	push	r5
    2d3e:	6f 92       	push	r6
    2d40:	7f 92       	push	r7
    2d42:	8f 92       	push	r8
    2d44:	9f 92       	push	r9
    2d46:	af 92       	push	r10
    2d48:	bf 92       	push	r11
    2d4a:	cf 92       	push	r12
    2d4c:	df 92       	push	r13
    2d4e:	ef 92       	push	r14
    2d50:	ff 92       	push	r15
    2d52:	0f 93       	push	r16
    2d54:	1f 93       	push	r17
    2d56:	cf 93       	push	r28
    2d58:	df 93       	push	r29
    2d5a:	4c 01       	movw	r8, r24
    2d5c:	6b 01       	movw	r12, r22
	unsigned int x, y;

	TFT_CS_0;
    2d5e:	94 98       	cbi	0x12, 4	; 18
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
    2d60:	3b 01       	movw	r6, r22
    2d62:	62 0e       	add	r6, r18
    2d64:	73 1e       	adc	r7, r19
    2d66:	66 15       	cp	r22, r6
    2d68:	77 05       	cpc	r23, r7
    2d6a:	50 f5       	brcc	.+84     	; 0x2dc0 <TFT_Image+0x8a>
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2d6c:	5c 01       	movw	r10, r24
    2d6e:	a4 0e       	add	r10, r20
    2d70:	b5 1e       	adc	r11, r21
    2d72:	2a 01       	movw	r4, r20
    2d74:	44 0c       	add	r4, r4
    2d76:	55 1c       	adc	r5, r5
    2d78:	28 2e       	mov	r2, r24
    2d7a:	39 2c       	mov	r3, r9
    2d7c:	1a c0       	rjmp	.+52     	; 0x2db2 <TFT_Image+0x7c>

			TFT_Set_Address(x, y, x, y);
    2d7e:	96 01       	movw	r18, r12
    2d80:	ae 01       	movw	r20, r28
    2d82:	b6 01       	movw	r22, r12
    2d84:	ce 01       	movw	r24, r28
    2d86:	0e 94 2a 12 	call	0x2454	; 0x2454 <TFT_Set_Address>
			picture++;
    2d8a:	82 e0       	ldi	r24, 0x02	; 2
    2d8c:	e8 0e       	add	r14, r24
    2d8e:	f1 1c       	adc	r15, r1
			Write_Data(pgm_read_word(picture));
    2d90:	f7 01       	movw	r30, r14
    2d92:	85 91       	lpm	r24, Z+
    2d94:	94 91       	lpm	r25, Z
    2d96:	0e 94 18 12 	call	0x2430	; 0x2430 <Write_Data>
void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
	unsigned int x, y;

	TFT_CS_0;
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2d9a:	21 96       	adiw	r28, 0x01	; 1
    2d9c:	ca 15       	cp	r28, r10
    2d9e:	db 05       	cpc	r29, r11
    2da0:	70 f3       	brcs	.-36     	; 0x2d7e <TFT_Image+0x48>
    2da2:	04 0d       	add	r16, r4
    2da4:	15 1d       	adc	r17, r5

void TFT_Image(unsigned int pos_x,unsigned int pos_y,unsigned int dim_x,unsigned int dim_y,const unsigned int *picture){
	unsigned int x, y;

	TFT_CS_0;
	for(y = pos_y; y < (pos_y + dim_y); y++ ) {
    2da6:	8f ef       	ldi	r24, 0xFF	; 255
    2da8:	c8 1a       	sub	r12, r24
    2daa:	d8 0a       	sbc	r13, r24
    2dac:	c6 14       	cp	r12, r6
    2dae:	d7 04       	cpc	r13, r7
    2db0:	38 f4       	brcc	.+14     	; 0x2dc0 <TFT_Image+0x8a>
		for(x = pos_x; x < (pos_x + dim_x); x++ ) {
    2db2:	8a 14       	cp	r8, r10
    2db4:	9b 04       	cpc	r9, r11
    2db6:	b8 f7       	brcc	.-18     	; 0x2da6 <TFT_Image+0x70>
    2db8:	c2 2d       	mov	r28, r2
    2dba:	d3 2d       	mov	r29, r3
    2dbc:	78 01       	movw	r14, r16
    2dbe:	df cf       	rjmp	.-66     	; 0x2d7e <TFT_Image+0x48>
			TFT_Set_Address(x, y, x, y);
			picture++;
			Write_Data(pgm_read_word(picture));
		}
	}
	TFT_CS_1;
    2dc0:	94 9a       	sbi	0x12, 4	; 18
}
    2dc2:	df 91       	pop	r29
    2dc4:	cf 91       	pop	r28
    2dc6:	1f 91       	pop	r17
    2dc8:	0f 91       	pop	r16
    2dca:	ff 90       	pop	r15
    2dcc:	ef 90       	pop	r14
    2dce:	df 90       	pop	r13
    2dd0:	cf 90       	pop	r12
    2dd2:	bf 90       	pop	r11
    2dd4:	af 90       	pop	r10
    2dd6:	9f 90       	pop	r9
    2dd8:	8f 90       	pop	r8
    2dda:	7f 90       	pop	r7
    2ddc:	6f 90       	pop	r6
    2dde:	5f 90       	pop	r5
    2de0:	4f 90       	pop	r4
    2de2:	3f 90       	pop	r3
    2de4:	2f 90       	pop	r2
    2de6:	08 95       	ret

00002de8 <SPI_MasterInit>:
//clock rate: 125Khz

void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	DDR_SPI |= (1<<DD_MOSI)|(1<<DD_SCK);
    2de8:	87 b3       	in	r24, 0x17	; 23
    2dea:	80 6a       	ori	r24, 0xA0	; 160
    2dec:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/64=125kHz */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR1);  
    2dee:	82 e5       	ldi	r24, 0x52	; 82
    2df0:	8d b9       	out	0x0d, r24	; 13
    2df2:	08 95       	ret

00002df4 <SPI_MasterTransmit_Receive>:
}

unsigned char SPI_MasterTransmit_Receive(char cData)
{
	/* Start transmission */
	SPDR = cData;
    2df4:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
    2df6:	77 9b       	sbis	0x0e, 7	; 14
    2df8:	fe cf       	rjmp	.-4      	; 0x2df6 <SPI_MasterTransmit_Receive+0x2>
	cData=SPDR;
    2dfa:	8f b1       	in	r24, 0x0f	; 15
	return cData;
}
    2dfc:	08 95       	ret

00002dfe <TPReadX>:
{
	SPI_MasterInit();
}

uint16_t TPReadX(void)
{
    2dfe:	cf 93       	push	r28
    2e00:	df 93       	push	r29
	uint16_t x=0;
	TP_CS_0;
    2e02:	c4 98       	cbi	0x18, 4	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2e04:	2a e1       	ldi	r18, 0x1A	; 26
    2e06:	2a 95       	dec	r18
    2e08:	f1 f7       	brne	.-4      	; 0x2e06 <TPReadX+0x8>
    2e0a:	00 c0       	rjmp	.+0      	; 0x2e0c <TPReadX+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0x90);
    2e0c:	80 e9       	ldi	r24, 0x90	; 144
    2e0e:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e12:	3a e1       	ldi	r19, 0x1A	; 26
    2e14:	3a 95       	dec	r19
    2e16:	f1 f7       	brne	.-4      	; 0x2e14 <TPReadX+0x16>
    2e18:	00 c0       	rjmp	.+0      	; 0x2e1a <TPReadX+0x1c>
	_delay_us(10);
	x=SPI_MasterTransmit_Receive(0x00);
    2e1a:	80 e0       	ldi	r24, 0x00	; 0
    2e1c:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e20:	c8 2f       	mov	r28, r24
    2e22:	d0 e0       	ldi	r29, 0x00	; 0
	x<<=8;
    2e24:	dc 2f       	mov	r29, r28
    2e26:	cc 27       	eor	r28, r28
	x+=SPI_MasterTransmit_Receive(0x00);
    2e28:	80 e0       	ldi	r24, 0x00	; 0
    2e2a:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e2e:	9e 01       	movw	r18, r28
    2e30:	28 0f       	add	r18, r24
    2e32:	31 1d       	adc	r19, r1
    2e34:	c9 01       	movw	r24, r18
	TP_CS_1;
    2e36:	c4 9a       	sbi	0x18, 4	; 24
	x=x>>7;
	x  = x & 0x0FFF;
	return x;
}
    2e38:	88 0f       	add	r24, r24
    2e3a:	89 2f       	mov	r24, r25
    2e3c:	88 1f       	adc	r24, r24
    2e3e:	99 0b       	sbc	r25, r25
    2e40:	91 95       	neg	r25
    2e42:	df 91       	pop	r29
    2e44:	cf 91       	pop	r28
    2e46:	08 95       	ret

00002e48 <TPReadY>:

uint16_t TPReadY(void)
{
    2e48:	cf 93       	push	r28
    2e4a:	df 93       	push	r29
	uint16_t y=0;
	TP_CS_0;
    2e4c:	c4 98       	cbi	0x18, 4	; 24
    2e4e:	8a e1       	ldi	r24, 0x1A	; 26
    2e50:	8a 95       	dec	r24
    2e52:	f1 f7       	brne	.-4      	; 0x2e50 <TPReadY+0x8>
    2e54:	00 c0       	rjmp	.+0      	; 0x2e56 <TPReadY+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0xd0);
    2e56:	80 ed       	ldi	r24, 0xD0	; 208
    2e58:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e5c:	8a e1       	ldi	r24, 0x1A	; 26
    2e5e:	8a 95       	dec	r24
    2e60:	f1 f7       	brne	.-4      	; 0x2e5e <TPReadY+0x16>
    2e62:	00 c0       	rjmp	.+0      	; 0x2e64 <TPReadY+0x1c>
	_delay_us(10);
	y=SPI_MasterTransmit_Receive(0x00);
    2e64:	80 e0       	ldi	r24, 0x00	; 0
    2e66:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e6a:	c8 2f       	mov	r28, r24
    2e6c:	d0 e0       	ldi	r29, 0x00	; 0
	y<<=8;
    2e6e:	dc 2f       	mov	r29, r28
    2e70:	cc 27       	eor	r28, r28
	y+=SPI_MasterTransmit_Receive(0x00);
    2e72:	80 e0       	ldi	r24, 0x00	; 0
    2e74:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <SPI_MasterTransmit_Receive>
    2e78:	c8 0f       	add	r28, r24
    2e7a:	d1 1d       	adc	r29, r1
	TP_CS_1;
    2e7c:	c4 9a       	sbi	0x18, 4	; 24
	y = y>>7;
    2e7e:	ce 01       	movw	r24, r28
    2e80:	88 0f       	add	r24, r24
    2e82:	89 2f       	mov	r24, r25
    2e84:	88 1f       	adc	r24, r24
    2e86:	99 0b       	sbc	r25, r25
    2e88:	91 95       	neg	r25
	y = y & 0x00FF;
	return y;
}
    2e8a:	99 27       	eor	r25, r25
    2e8c:	df 91       	pop	r29
    2e8e:	cf 91       	pop	r28
    2e90:	08 95       	ret

00002e92 <Read_TPval>:

uint16_t Read_TPval(unsigned int *tpxyval)
{
    2e92:	cf 93       	push	r28
    2e94:	df 93       	push	r29
    2e96:	ec 01       	movw	r28, r24
	tpxyval[0]=TPReadX();
    2e98:	0e 94 ff 16 	call	0x2dfe	; 0x2dfe <TPReadX>
    2e9c:	99 83       	std	Y+1, r25	; 0x01
    2e9e:	88 83       	st	Y, r24
	tpxyval[1]=TPReadY();
    2ea0:	0e 94 24 17 	call	0x2e48	; 0x2e48 <TPReadY>
    2ea4:	9b 83       	std	Y+3, r25	; 0x03
    2ea6:	8a 83       	std	Y+2, r24	; 0x02
	return 1;
}
    2ea8:	81 e0       	ldi	r24, 0x01	; 1
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	df 91       	pop	r29
    2eae:	cf 91       	pop	r28
    2eb0:	08 95       	ret

00002eb2 <TCK_Init>:
#include <avr/io.h>
#include <util/delay.h>

void TCK_Init(void)
{
	MAX_CS_1;
    2eb2:	96 9a       	sbi	0x12, 6	; 18
	MAX_SCK_1;//0
    2eb4:	97 9a       	sbi	0x12, 7	; 18
    2eb6:	08 95       	ret

00002eb8 <Read_TCK>:
}

uint16_t Read_TCK(void)
{
	uint16_t num=0;
	MAX_CS_0;
    2eb8:	96 98       	cbi	0x12, 6	; 18
    2eba:	32 e0       	ldi	r19, 0x02	; 2
    2ebc:	3a 95       	dec	r19
    2ebe:	f1 f7       	brne	.-4      	; 0x2ebc <Read_TCK+0x4>
    2ec0:	00 c0       	rjmp	.+0      	; 0x2ec2 <Read_TCK+0xa>
    2ec2:	20 e1       	ldi	r18, 0x10	; 16
	MAX_SCK_1;//0
}

uint16_t Read_TCK(void)
{
	uint16_t num=0;
    2ec4:	80 e0       	ldi	r24, 0x00	; 0
    2ec6:	90 e0       	ldi	r25, 0x00	; 0
	MAX_CS_0;
	_delay_us(1);
	for(char count=0;count<16;count++)
	{
		MAX_SCK_1;
    2ec8:	97 9a       	sbi	0x12, 7	; 18
    2eca:	35 e0       	ldi	r19, 0x05	; 5
    2ecc:	3a 95       	dec	r19
    2ece:	f1 f7       	brne	.-4      	; 0x2ecc <Read_TCK+0x14>
    2ed0:	00 00       	nop
		_delay_us(2);
		num = num<<1;
    2ed2:	88 0f       	add	r24, r24
    2ed4:	99 1f       	adc	r25, r25
		MAX_SCK_0;
    2ed6:	97 98       	cbi	0x12, 7	; 18
    2ed8:	35 e0       	ldi	r19, 0x05	; 5
    2eda:	3a 95       	dec	r19
    2edc:	f1 f7       	brne	.-4      	; 0x2eda <Read_TCK+0x22>
    2ede:	00 00       	nop
		_delay_us(2);
		if(MAX_SO) num++;
    2ee0:	c8 99       	sbic	0x19, 0	; 25
    2ee2:	01 96       	adiw	r24, 0x01	; 1
    2ee4:	21 50       	subi	r18, 0x01	; 1
uint16_t Read_TCK(void)
{
	uint16_t num=0;
	MAX_CS_0;
	_delay_us(1);
	for(char count=0;count<16;count++)
    2ee6:	81 f7       	brne	.-32     	; 0x2ec8 <Read_TCK+0x10>
		num = num<<1;
		MAX_SCK_0;
		_delay_us(2);
		if(MAX_SO) num++;
	}
	MAX_SCK_1;
    2ee8:	97 9a       	sbi	0x12, 7	; 18
	MAX_CS_1;
    2eea:	96 9a       	sbi	0x12, 6	; 18
	return num;
}
    2eec:	08 95       	ret

00002eee <Read_temperature>:

int16_t Read_temperature(void)
{
	int16_t temp= Read_TCK();
    2eee:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <Read_TCK>
	if (temp & 0b0000000000000100)
    2ef2:	82 fd       	sbrc	r24, 2
    2ef4:	0d c0       	rjmp	.+26     	; 0x2f10 <Read_temperature+0x22>
	{
		return 1111;
	}
	else
	{
		return (((temp & 0b0111111111111000)>>5));
    2ef6:	88 7f       	andi	r24, 0xF8	; 248
    2ef8:	9f 77       	andi	r25, 0x7F	; 127
    2efa:	95 95       	asr	r25
    2efc:	87 95       	ror	r24
    2efe:	95 95       	asr	r25
    2f00:	87 95       	ror	r24
    2f02:	95 95       	asr	r25
    2f04:	87 95       	ror	r24
    2f06:	95 95       	asr	r25
    2f08:	87 95       	ror	r24
    2f0a:	95 95       	asr	r25
    2f0c:	87 95       	ror	r24
    2f0e:	08 95       	ret
int16_t Read_temperature(void)
{
	int16_t temp= Read_TCK();
	if (temp & 0b0000000000000100)
	{
		return 1111;
    2f10:	87 e5       	ldi	r24, 0x57	; 87
    2f12:	94 e0       	ldi	r25, 0x04	; 4
	}
	else
	{
		return (((temp & 0b0111111111111000)>>5));
	}
}
    2f14:	08 95       	ret

00002f16 <show_button>:

#define text_color black
#define bg_color white

void show_button()
{
    2f16:	ef 92       	push	r14
    2f18:	ff 92       	push	r15
    2f1a:	0f 93       	push	r16
    2f1c:	1f 93       	push	r17
	TFT_Text("3",141,93,16,text_color,bg_color);
	TFT_Box(181,76,231,126,bg_color);
	TFT_Text("/",198,93,16,text_color,bg_color);
	/////////////////////////////////////////////
	*/
	TFT_Box(10,133,60,183,bg_color);
    2f1e:	0f ef       	ldi	r16, 0xFF	; 255
    2f20:	1f ef       	ldi	r17, 0xFF	; 255
    2f22:	27 eb       	ldi	r18, 0xB7	; 183
    2f24:	30 e0       	ldi	r19, 0x00	; 0
    2f26:	4c e3       	ldi	r20, 0x3C	; 60
    2f28:	50 e0       	ldi	r21, 0x00	; 0
    2f2a:	65 e8       	ldi	r22, 0x85	; 133
    2f2c:	70 e0       	ldi	r23, 0x00	; 0
    2f2e:	8a e0       	ldi	r24, 0x0A	; 10
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("1",27,150,16,text_color,bg_color);
    2f36:	ee 24       	eor	r14, r14
    2f38:	ea 94       	dec	r14
    2f3a:	fe 2c       	mov	r15, r14
    2f3c:	00 e0       	ldi	r16, 0x00	; 0
    2f3e:	10 e0       	ldi	r17, 0x00	; 0
    2f40:	20 e1       	ldi	r18, 0x10	; 16
    2f42:	46 e9       	ldi	r20, 0x96	; 150
    2f44:	50 e0       	ldi	r21, 0x00	; 0
    2f46:	6b e1       	ldi	r22, 0x1B	; 27
    2f48:	70 e0       	ldi	r23, 0x00	; 0
    2f4a:	80 e6       	ldi	r24, 0x60	; 96
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,133,117,183,bg_color);
    2f52:	0f ef       	ldi	r16, 0xFF	; 255
    2f54:	1f ef       	ldi	r17, 0xFF	; 255
    2f56:	27 eb       	ldi	r18, 0xB7	; 183
    2f58:	30 e0       	ldi	r19, 0x00	; 0
    2f5a:	45 e7       	ldi	r20, 0x75	; 117
    2f5c:	50 e0       	ldi	r21, 0x00	; 0
    2f5e:	65 e8       	ldi	r22, 0x85	; 133
    2f60:	70 e0       	ldi	r23, 0x00	; 0
    2f62:	83 e4       	ldi	r24, 0x43	; 67
    2f64:	90 e0       	ldi	r25, 0x00	; 0
    2f66:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("2",84,150,16,text_color,bg_color);
    2f6a:	00 e0       	ldi	r16, 0x00	; 0
    2f6c:	10 e0       	ldi	r17, 0x00	; 0
    2f6e:	20 e1       	ldi	r18, 0x10	; 16
    2f70:	46 e9       	ldi	r20, 0x96	; 150
    2f72:	50 e0       	ldi	r21, 0x00	; 0
    2f74:	64 e5       	ldi	r22, 0x54	; 84
    2f76:	70 e0       	ldi	r23, 0x00	; 0
    2f78:	82 e6       	ldi	r24, 0x62	; 98
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,133,174,183,bg_color);
    2f80:	0f ef       	ldi	r16, 0xFF	; 255
    2f82:	1f ef       	ldi	r17, 0xFF	; 255
    2f84:	27 eb       	ldi	r18, 0xB7	; 183
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	4e ea       	ldi	r20, 0xAE	; 174
    2f8a:	50 e0       	ldi	r21, 0x00	; 0
    2f8c:	65 e8       	ldi	r22, 0x85	; 133
    2f8e:	70 e0       	ldi	r23, 0x00	; 0
    2f90:	8c e7       	ldi	r24, 0x7C	; 124
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("3",141,150,16,text_color,bg_color);
    2f98:	00 e0       	ldi	r16, 0x00	; 0
    2f9a:	10 e0       	ldi	r17, 0x00	; 0
    2f9c:	20 e1       	ldi	r18, 0x10	; 16
    2f9e:	46 e9       	ldi	r20, 0x96	; 150
    2fa0:	50 e0       	ldi	r21, 0x00	; 0
    2fa2:	6d e8       	ldi	r22, 0x8D	; 141
    2fa4:	70 e0       	ldi	r23, 0x00	; 0
    2fa6:	84 e6       	ldi	r24, 0x64	; 100
    2fa8:	90 e0       	ldi	r25, 0x00	; 0
    2faa:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,133,231,183,bg_color);
    2fae:	0f ef       	ldi	r16, 0xFF	; 255
    2fb0:	1f ef       	ldi	r17, 0xFF	; 255
    2fb2:	27 eb       	ldi	r18, 0xB7	; 183
    2fb4:	30 e0       	ldi	r19, 0x00	; 0
    2fb6:	47 ee       	ldi	r20, 0xE7	; 231
    2fb8:	50 e0       	ldi	r21, 0x00	; 0
    2fba:	65 e8       	ldi	r22, 0x85	; 133
    2fbc:	70 e0       	ldi	r23, 0x00	; 0
    2fbe:	85 eb       	ldi	r24, 0xB5	; 181
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("4",198,150,16,text_color,bg_color);
    2fc6:	00 e0       	ldi	r16, 0x00	; 0
    2fc8:	10 e0       	ldi	r17, 0x00	; 0
    2fca:	20 e1       	ldi	r18, 0x10	; 16
    2fcc:	46 e9       	ldi	r20, 0x96	; 150
    2fce:	50 e0       	ldi	r21, 0x00	; 0
    2fd0:	66 ec       	ldi	r22, 0xC6	; 198
    2fd2:	70 e0       	ldi	r23, 0x00	; 0
    2fd4:	86 e6       	ldi	r24, 0x66	; 102
    2fd6:	90 e0       	ldi	r25, 0x00	; 0
    2fd8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,190,60,240,bg_color);
    2fdc:	0f ef       	ldi	r16, 0xFF	; 255
    2fde:	1f ef       	ldi	r17, 0xFF	; 255
    2fe0:	20 ef       	ldi	r18, 0xF0	; 240
    2fe2:	30 e0       	ldi	r19, 0x00	; 0
    2fe4:	4c e3       	ldi	r20, 0x3C	; 60
    2fe6:	50 e0       	ldi	r21, 0x00	; 0
    2fe8:	6e eb       	ldi	r22, 0xBE	; 190
    2fea:	70 e0       	ldi	r23, 0x00	; 0
    2fec:	8a e0       	ldi	r24, 0x0A	; 10
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("5",27,207,16,text_color,bg_color);
    2ff4:	00 e0       	ldi	r16, 0x00	; 0
    2ff6:	10 e0       	ldi	r17, 0x00	; 0
    2ff8:	20 e1       	ldi	r18, 0x10	; 16
    2ffa:	4f ec       	ldi	r20, 0xCF	; 207
    2ffc:	50 e0       	ldi	r21, 0x00	; 0
    2ffe:	6b e1       	ldi	r22, 0x1B	; 27
    3000:	70 e0       	ldi	r23, 0x00	; 0
    3002:	88 e6       	ldi	r24, 0x68	; 104
    3004:	90 e0       	ldi	r25, 0x00	; 0
    3006:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,190,117,240,bg_color);
    300a:	0f ef       	ldi	r16, 0xFF	; 255
    300c:	1f ef       	ldi	r17, 0xFF	; 255
    300e:	20 ef       	ldi	r18, 0xF0	; 240
    3010:	30 e0       	ldi	r19, 0x00	; 0
    3012:	45 e7       	ldi	r20, 0x75	; 117
    3014:	50 e0       	ldi	r21, 0x00	; 0
    3016:	6e eb       	ldi	r22, 0xBE	; 190
    3018:	70 e0       	ldi	r23, 0x00	; 0
    301a:	83 e4       	ldi	r24, 0x43	; 67
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("6",84,207,16,text_color,bg_color);
    3022:	00 e0       	ldi	r16, 0x00	; 0
    3024:	10 e0       	ldi	r17, 0x00	; 0
    3026:	20 e1       	ldi	r18, 0x10	; 16
    3028:	4f ec       	ldi	r20, 0xCF	; 207
    302a:	50 e0       	ldi	r21, 0x00	; 0
    302c:	64 e5       	ldi	r22, 0x54	; 84
    302e:	70 e0       	ldi	r23, 0x00	; 0
    3030:	8a e6       	ldi	r24, 0x6A	; 106
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,190,174,240,bg_color);
    3038:	0f ef       	ldi	r16, 0xFF	; 255
    303a:	1f ef       	ldi	r17, 0xFF	; 255
    303c:	20 ef       	ldi	r18, 0xF0	; 240
    303e:	30 e0       	ldi	r19, 0x00	; 0
    3040:	4e ea       	ldi	r20, 0xAE	; 174
    3042:	50 e0       	ldi	r21, 0x00	; 0
    3044:	6e eb       	ldi	r22, 0xBE	; 190
    3046:	70 e0       	ldi	r23, 0x00	; 0
    3048:	8c e7       	ldi	r24, 0x7C	; 124
    304a:	90 e0       	ldi	r25, 0x00	; 0
    304c:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("7",141,207,16,text_color,bg_color);
    3050:	00 e0       	ldi	r16, 0x00	; 0
    3052:	10 e0       	ldi	r17, 0x00	; 0
    3054:	20 e1       	ldi	r18, 0x10	; 16
    3056:	4f ec       	ldi	r20, 0xCF	; 207
    3058:	50 e0       	ldi	r21, 0x00	; 0
    305a:	6d e8       	ldi	r22, 0x8D	; 141
    305c:	70 e0       	ldi	r23, 0x00	; 0
    305e:	8c e6       	ldi	r24, 0x6C	; 108
    3060:	90 e0       	ldi	r25, 0x00	; 0
    3062:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,190,231,240,bg_color);
    3066:	0f ef       	ldi	r16, 0xFF	; 255
    3068:	1f ef       	ldi	r17, 0xFF	; 255
    306a:	20 ef       	ldi	r18, 0xF0	; 240
    306c:	30 e0       	ldi	r19, 0x00	; 0
    306e:	47 ee       	ldi	r20, 0xE7	; 231
    3070:	50 e0       	ldi	r21, 0x00	; 0
    3072:	6e eb       	ldi	r22, 0xBE	; 190
    3074:	70 e0       	ldi	r23, 0x00	; 0
    3076:	85 eb       	ldi	r24, 0xB5	; 181
    3078:	90 e0       	ldi	r25, 0x00	; 0
    307a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("8",198,207,16,text_color,bg_color);
    307e:	00 e0       	ldi	r16, 0x00	; 0
    3080:	10 e0       	ldi	r17, 0x00	; 0
    3082:	20 e1       	ldi	r18, 0x10	; 16
    3084:	4f ec       	ldi	r20, 0xCF	; 207
    3086:	50 e0       	ldi	r21, 0x00	; 0
    3088:	66 ec       	ldi	r22, 0xC6	; 198
    308a:	70 e0       	ldi	r23, 0x00	; 0
    308c:	8e e6       	ldi	r24, 0x6E	; 110
    308e:	90 e0       	ldi	r25, 0x00	; 0
    3090:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,247,60,297,bg_color);
    3094:	0f ef       	ldi	r16, 0xFF	; 255
    3096:	1f ef       	ldi	r17, 0xFF	; 255
    3098:	29 e2       	ldi	r18, 0x29	; 41
    309a:	31 e0       	ldi	r19, 0x01	; 1
    309c:	4c e3       	ldi	r20, 0x3C	; 60
    309e:	50 e0       	ldi	r21, 0x00	; 0
    30a0:	67 ef       	ldi	r22, 0xF7	; 247
    30a2:	70 e0       	ldi	r23, 0x00	; 0
    30a4:	8a e0       	ldi	r24, 0x0A	; 10
    30a6:	90 e0       	ldi	r25, 0x00	; 0
    30a8:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("9",27,264,16,text_color,bg_color);
    30ac:	00 e0       	ldi	r16, 0x00	; 0
    30ae:	10 e0       	ldi	r17, 0x00	; 0
    30b0:	20 e1       	ldi	r18, 0x10	; 16
    30b2:	48 e0       	ldi	r20, 0x08	; 8
    30b4:	51 e0       	ldi	r21, 0x01	; 1
    30b6:	6b e1       	ldi	r22, 0x1B	; 27
    30b8:	70 e0       	ldi	r23, 0x00	; 0
    30ba:	80 e7       	ldi	r24, 0x70	; 112
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(67,247,117,297,bg_color);
    30c2:	0f ef       	ldi	r16, 0xFF	; 255
    30c4:	1f ef       	ldi	r17, 0xFF	; 255
    30c6:	29 e2       	ldi	r18, 0x29	; 41
    30c8:	31 e0       	ldi	r19, 0x01	; 1
    30ca:	45 e7       	ldi	r20, 0x75	; 117
    30cc:	50 e0       	ldi	r21, 0x00	; 0
    30ce:	67 ef       	ldi	r22, 0xF7	; 247
    30d0:	70 e0       	ldi	r23, 0x00	; 0
    30d2:	83 e4       	ldi	r24, 0x43	; 67
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("0",84,264,16,text_color,bg_color);
    30da:	00 e0       	ldi	r16, 0x00	; 0
    30dc:	10 e0       	ldi	r17, 0x00	; 0
    30de:	20 e1       	ldi	r18, 0x10	; 16
    30e0:	48 e0       	ldi	r20, 0x08	; 8
    30e2:	51 e0       	ldi	r21, 0x01	; 1
    30e4:	64 e5       	ldi	r22, 0x54	; 84
    30e6:	70 e0       	ldi	r23, 0x00	; 0
    30e8:	8b e5       	ldi	r24, 0x5B	; 91
    30ea:	93 e0       	ldi	r25, 0x03	; 3
    30ec:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(124,247,174,297,bg_color);
    30f0:	0f ef       	ldi	r16, 0xFF	; 255
    30f2:	1f ef       	ldi	r17, 0xFF	; 255
    30f4:	29 e2       	ldi	r18, 0x29	; 41
    30f6:	31 e0       	ldi	r19, 0x01	; 1
    30f8:	4e ea       	ldi	r20, 0xAE	; 174
    30fa:	50 e0       	ldi	r21, 0x00	; 0
    30fc:	67 ef       	ldi	r22, 0xF7	; 247
    30fe:	70 e0       	ldi	r23, 0x00	; 0
    3100:	8c e7       	ldi	r24, 0x7C	; 124
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("DEL",128,264,16,text_color,bg_color);
    3108:	00 e0       	ldi	r16, 0x00	; 0
    310a:	10 e0       	ldi	r17, 0x00	; 0
    310c:	20 e1       	ldi	r18, 0x10	; 16
    310e:	48 e0       	ldi	r20, 0x08	; 8
    3110:	51 e0       	ldi	r21, 0x01	; 1
    3112:	60 e8       	ldi	r22, 0x80	; 128
    3114:	70 e0       	ldi	r23, 0x00	; 0
    3116:	82 e7       	ldi	r24, 0x72	; 114
    3118:	90 e0       	ldi	r25, 0x00	; 0
    311a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(181,247,231,297,bg_color);
    311e:	0f ef       	ldi	r16, 0xFF	; 255
    3120:	1f ef       	ldi	r17, 0xFF	; 255
    3122:	29 e2       	ldi	r18, 0x29	; 41
    3124:	31 e0       	ldi	r19, 0x01	; 1
    3126:	47 ee       	ldi	r20, 0xE7	; 231
    3128:	50 e0       	ldi	r21, 0x00	; 0
    312a:	67 ef       	ldi	r22, 0xF7	; 247
    312c:	70 e0       	ldi	r23, 0x00	; 0
    312e:	85 eb       	ldi	r24, 0xB5	; 181
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("OK",191,264,16,text_color,bg_color);
    3136:	00 e0       	ldi	r16, 0x00	; 0
    3138:	10 e0       	ldi	r17, 0x00	; 0
    313a:	20 e1       	ldi	r18, 0x10	; 16
    313c:	48 e0       	ldi	r20, 0x08	; 8
    313e:	51 e0       	ldi	r21, 0x01	; 1
    3140:	6f eb       	ldi	r22, 0xBF	; 191
    3142:	70 e0       	ldi	r23, 0x00	; 0
    3144:	86 e7       	ldi	r24, 0x76	; 118
    3146:	90 e0       	ldi	r25, 0x00	; 0
    3148:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	/*********************************************/
	//_________End Button Creatoin_______________//
	/*********************************************/
}
    314c:	1f 91       	pop	r17
    314e:	0f 91       	pop	r16
    3150:	ff 90       	pop	r15
    3152:	ef 90       	pop	r14
    3154:	08 95       	ret

00003156 <usart_init>:
#include <string.h>

void usart_init(uint32_t baud)
{
	// Calculation for baud rate value into ubrr value
	uint16_t ubrr = lrint(( F_CPU / (16L * baud) ) - 1);
    3156:	dc 01       	movw	r26, r24
    3158:	cb 01       	movw	r24, r22
    315a:	88 0f       	add	r24, r24
    315c:	99 1f       	adc	r25, r25
    315e:	aa 1f       	adc	r26, r26
    3160:	bb 1f       	adc	r27, r27
    3162:	88 0f       	add	r24, r24
    3164:	99 1f       	adc	r25, r25
    3166:	aa 1f       	adc	r26, r26
    3168:	bb 1f       	adc	r27, r27
    316a:	9c 01       	movw	r18, r24
    316c:	ad 01       	movw	r20, r26
    316e:	22 0f       	add	r18, r18
    3170:	33 1f       	adc	r19, r19
    3172:	44 1f       	adc	r20, r20
    3174:	55 1f       	adc	r21, r21
    3176:	22 0f       	add	r18, r18
    3178:	33 1f       	adc	r19, r19
    317a:	44 1f       	adc	r20, r20
    317c:	55 1f       	adc	r21, r21
    317e:	60 e0       	ldi	r22, 0x00	; 0
    3180:	72 e1       	ldi	r23, 0x12	; 18
    3182:	8a e7       	ldi	r24, 0x7A	; 122
    3184:	90 e0       	ldi	r25, 0x00	; 0
    3186:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    318a:	ca 01       	movw	r24, r20
    318c:	b9 01       	movw	r22, r18
    318e:	61 50       	subi	r22, 0x01	; 1
    3190:	71 09       	sbc	r23, r1
    3192:	81 09       	sbc	r24, r1
    3194:	91 09       	sbc	r25, r1
    3196:	0e 94 c5 2a 	call	0x558a	; 0x558a <__floatunsisf>
    319a:	0e 94 02 2b 	call	0x5604	; 0x5604 <lrint>
	// Set baud rate
	UBRRH = (uint8_t)(ubrr>>8);
    319e:	27 2f       	mov	r18, r23
    31a0:	33 27       	eor	r19, r19
    31a2:	20 bd       	out	0x20, r18	; 32
	UBRRL = (uint8_t)ubrr;
    31a4:	69 b9       	out	0x09, r22	; 9
	// Enable receiver and transmitter
	UCSRB = (1<<RXEN)|(1<<TXEN);
    31a6:	88 e1       	ldi	r24, 0x18	; 24
    31a8:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8data, 1stop bit
	UCSRC = (1<<URSEL)|(3<<UCSZ0);
    31aa:	86 e8       	ldi	r24, 0x86	; 134
    31ac:	80 bd       	out	0x20, r24	; 32
    31ae:	08 95       	ret

000031b0 <usart_putchar>:
}

void usart_putchar(char data)
{
	// Wait for empty transmit buffer
	while ( !(UCSRA & (_BV(UDRE))) );
    31b0:	5d 9b       	sbis	0x0b, 5	; 11
    31b2:	fe cf       	rjmp	.-4      	; 0x31b0 <usart_putchar>
	// Start transmission
	UDR = data;
    31b4:	8c b9       	out	0x0c, r24	; 12
    31b6:	08 95       	ret

000031b8 <usart_getchar>:
}

char usart_getchar(void)
{
	// Wait for incoming data
	while ( !(UCSRA & (_BV(RXC))) );
    31b8:	5f 9b       	sbis	0x0b, 7	; 11
    31ba:	fe cf       	rjmp	.-4      	; 0x31b8 <usart_getchar>
	// Return the data
	return UDR;
    31bc:	8c b1       	in	r24, 0x0c	; 12
}
    31be:	08 95       	ret

000031c0 <usart_dthit>:
}
//function to send a string through tx pin
unsigned char usart_dthit(void) {
	unsigned char b;
	b=0;
	if(UCSRA & (1<<RXC)) b=1;
    31c0:	8b b1       	in	r24, 0x0b	; 11
	return b;
}
    31c2:	88 1f       	adc	r24, r24
    31c4:	88 27       	eor	r24, r24
    31c6:	88 1f       	adc	r24, r24
    31c8:	08 95       	ret

000031ca <__vector_1>:
unsigned int EEMEM temp_divider_hold=100, water_flow_divider_hold=330;  //should be keep 100 and 330
unsigned int temp_divider=0, water_flow_divider=0;
char data_send_count = 0;

ISR(INT0_vect)
{
    31ca:	1f 92       	push	r1
    31cc:	0f 92       	push	r0
    31ce:	0f b6       	in	r0, 0x3f	; 63
    31d0:	0f 92       	push	r0
    31d2:	11 24       	eor	r1, r1
    31d4:	8f 93       	push	r24
    31d6:	9f 93       	push	r25
    31d8:	af 93       	push	r26
    31da:	bf 93       	push	r27
	i_water = i_water + 1;
    31dc:	80 91 d3 03 	lds	r24, 0x03D3
    31e0:	90 91 d4 03 	lds	r25, 0x03D4
    31e4:	a0 91 d5 03 	lds	r26, 0x03D5
    31e8:	b0 91 d6 03 	lds	r27, 0x03D6
    31ec:	01 96       	adiw	r24, 0x01	; 1
    31ee:	a1 1d       	adc	r26, r1
    31f0:	b1 1d       	adc	r27, r1
    31f2:	80 93 d3 03 	sts	0x03D3, r24
    31f6:	90 93 d4 03 	sts	0x03D4, r25
    31fa:	a0 93 d5 03 	sts	0x03D5, r26
    31fe:	b0 93 d6 03 	sts	0x03D6, r27
}
    3202:	bf 91       	pop	r27
    3204:	af 91       	pop	r26
    3206:	9f 91       	pop	r25
    3208:	8f 91       	pop	r24
    320a:	0f 90       	pop	r0
    320c:	0f be       	out	0x3f, r0	; 63
    320e:	0f 90       	pop	r0
    3210:	1f 90       	pop	r1
    3212:	18 95       	reti

00003214 <__vector_7>:
ISR(TIMER1_COMPA_vect)
{
    3214:	1f 92       	push	r1
    3216:	0f 92       	push	r0
    3218:	0f b6       	in	r0, 0x3f	; 63
    321a:	0f 92       	push	r0
    321c:	11 24       	eor	r1, r1
    321e:	8f 93       	push	r24
    3220:	9f 93       	push	r25
    3222:	af 93       	push	r26
    3224:	bf 93       	push	r27
	i_time = i_time + 1;
    3226:	80 91 cb 03 	lds	r24, 0x03CB
    322a:	90 91 cc 03 	lds	r25, 0x03CC
    322e:	a0 91 cd 03 	lds	r26, 0x03CD
    3232:	b0 91 ce 03 	lds	r27, 0x03CE
    3236:	01 96       	adiw	r24, 0x01	; 1
    3238:	a1 1d       	adc	r26, r1
    323a:	b1 1d       	adc	r27, r1
    323c:	80 93 cb 03 	sts	0x03CB, r24
    3240:	90 93 cc 03 	sts	0x03CC, r25
    3244:	a0 93 cd 03 	sts	0x03CD, r26
    3248:	b0 93 ce 03 	sts	0x03CE, r27
	wdt_reset();
    324c:	a8 95       	wdr
}
    324e:	bf 91       	pop	r27
    3250:	af 91       	pop	r26
    3252:	9f 91       	pop	r25
    3254:	8f 91       	pop	r24
    3256:	0f 90       	pop	r0
    3258:	0f be       	out	0x3f, r0	; 63
    325a:	0f 90       	pop	r0
    325c:	1f 90       	pop	r1
    325e:	18 95       	reti

00003260 <main>:

int main(void)
{
    3260:	cf 93       	push	r28
    3262:	df 93       	push	r29
    3264:	cd b7       	in	r28, 0x3d	; 61
    3266:	de b7       	in	r29, 0x3e	; 62
    3268:	aa 97       	sbiw	r28, 0x2a	; 42
    326a:	0f b6       	in	r0, 0x3f	; 63
    326c:	f8 94       	cli
    326e:	de bf       	out	0x3e, r29	; 62
    3270:	0f be       	out	0x3f, r0	; 63
    3272:	cd bf       	out	0x3d, r28	; 61
	#define back_color blue
	uint16_t TPval[2]={0};
    3274:	19 82       	std	Y+1, r1	; 0x01
    3276:	1a 82       	std	Y+2, r1	; 0x02
    3278:	1b 82       	std	Y+3, r1	; 0x03
    327a:	1c 82       	std	Y+4, r1	; 0x04
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
	uint32_t water_read=0, temp_read=0, time_read=0;
	uint8_t input_f=0, usart_data=0;
	
	PORTA=0x01;
    327c:	81 e0       	ldi	r24, 0x01	; 1
    327e:	8b bb       	out	0x1b, r24	; 27
	PORTB=0x40;
    3280:	10 e4       	ldi	r17, 0x40	; 64
    3282:	18 bb       	out	0x18, r17	; 24
	PORTC=0x00;
    3284:	15 ba       	out	0x15, r1	; 21
	PORTD=0x00; //0x0C;
    3286:	12 ba       	out	0x12, r1	; 18
	
	DDRA=0xFE;
    3288:	8e ef       	ldi	r24, 0xFE	; 254
    328a:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xBF;
    328c:	8f eb       	ldi	r24, 0xBF	; 191
    328e:	87 bb       	out	0x17, r24	; 23
	DDRC=0xFF;
    3290:	8f ef       	ldi	r24, 0xFF	; 255
    3292:	84 bb       	out	0x14, r24	; 20
	DDRD=0xF0;
    3294:	80 ef       	ldi	r24, 0xF0	; 240
    3296:	81 bb       	out	0x11, r24	; 17
	usart_init(600);
    3298:	68 e5       	ldi	r22, 0x58	; 88
    329a:	72 e0       	ldi	r23, 0x02	; 2
    329c:	80 e0       	ldi	r24, 0x00	; 0
    329e:	90 e0       	ldi	r25, 0x00	; 0
    32a0:	0e 94 ab 18 	call	0x3156	; 0x3156 <usart_init>
	//adc_init(7);
	TCK_Init();
    32a4:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <TCK_Init>
	TFT_Init();
    32a8:	0e 94 5c 12 	call	0x24b8	; 0x24b8 <TFT_Init>
#include "my_spi.h"
#include <util/delay.h>

void TP_init(void)
{
	SPI_MasterInit();
    32ac:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <SPI_MasterInit>
	TP_init();
	//show_button();
	TCCR1A=0x00;
    32b0:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=0x0C;		//Timer counter 1 initialization with CTC and interrupt mode with Compare match OCR1A 
    32b2:	8c e0       	ldi	r24, 0x0C	; 12
    32b4:	8e bd       	out	0x2e, r24	; 46
	OCR1AH=0x7A;
    32b6:	8a e7       	ldi	r24, 0x7A	; 122
    32b8:	8b bd       	out	0x2b, r24	; 43
	OCR1AL=0x12;
    32ba:	82 e1       	ldi	r24, 0x12	; 18
    32bc:	8a bd       	out	0x2a, r24	; 42

	GICR |= (1<<INT0);				// Enable INT2
    32be:	8b b7       	in	r24, 0x3b	; 59
    32c0:	80 64       	ori	r24, 0x40	; 64
    32c2:	8b bf       	out	0x3b, r24	; 59
	MCUCSR |= 0x00;					// Trigger INT2 settings
    32c4:	84 b7       	in	r24, 0x34	; 52
    32c6:	84 bf       	out	0x34, r24	; 52
	MCUCR |= (1<<ISC01)|(1<<ISC00);	//trigger int0 on rising edge
    32c8:	85 b7       	in	r24, 0x35	; 53
    32ca:	83 60       	ori	r24, 0x03	; 3
    32cc:	85 bf       	out	0x35, r24	; 53
	GIFR = (1<<INTF0);				//Interrupt flag 2 is cleared by writing a logical one into INTF2
    32ce:	1a bf       	out	0x3a, r17	; 58
	TIMSK=0x10;						//Timer/Counter1, Output Compare A Match Interrupt Enable
    32d0:	80 e1       	ldi	r24, 0x10	; 16
    32d2:	89 bf       	out	0x39, r24	; 57
	sei();							//Global Interrupt enable
    32d4:	78 94       	sei
	
	
	wdt_enable(WDTO_2S); //wd on,2s
    32d6:	2f e0       	ldi	r18, 0x0F	; 15
    32d8:	88 e1       	ldi	r24, 0x18	; 24
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	0f b6       	in	r0, 0x3f	; 63
    32de:	f8 94       	cli
    32e0:	a8 95       	wdr
    32e2:	81 bd       	out	0x21, r24	; 33
    32e4:	0f be       	out	0x3f, r0	; 63
    32e6:	21 bd       	out	0x21, r18	; 33
int main(void)
{
	#define back_color blue
	uint16_t TPval[2]={0};
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
    32e8:	1f 86       	std	Y+15, r1	; 0x0f
    32ea:	18 8a       	std	Y+16, r1	; 0x10
    32ec:	19 8a       	std	Y+17, r1	; 0x11
    32ee:	1a 8a       	std	Y+18, r1	; 0x12
    32f0:	1b 86       	std	Y+11, r1	; 0x0b
    32f2:	1c 86       	std	Y+12, r1	; 0x0c
    32f4:	1d 86       	std	Y+13, r1	; 0x0d
    32f6:	1e 86       	std	Y+14, r1	; 0x0e
    32f8:	41 2c       	mov	r4, r1
    32fa:	51 2c       	mov	r5, r1
    32fc:	32 01       	movw	r6, r4

int main(void)
{
	#define back_color blue
	uint16_t TPval[2]={0};
	uint16_t mxpos=13;
    32fe:	0f 2e       	mov	r0, r31
    3300:	fd e0       	ldi	r31, 0x0D	; 13
    3302:	2f 2e       	mov	r2, r31
    3304:	31 2c       	mov	r3, r1
    3306:	f0 2d       	mov	r31, r0
btn_ok:
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
    3308:	2d e0       	ldi	r18, 0x0D	; 13
    330a:	29 a7       	std	Y+41, r18	; 0x29
    330c:	1a a6       	std	Y+42, r1	; 0x2a
		}
		
		
		if (!(PIND & (1<<PD3)))
		{
			Read_TPval(TPval);
    330e:	ce 01       	movw	r24, r28
    3310:	01 96       	adiw	r24, 0x01	; 1
    3312:	9e 83       	std	Y+6, r25	; 0x06
    3314:	8d 83       	std	Y+5, r24	; 0x05
    3316:	9d 81       	ldd	r25, Y+5	; 0x05
    3318:	9f 8b       	std	Y+23, r25	; 0x17
    331a:	ae 81       	ldd	r26, Y+6	; 0x06
    331c:	a8 8f       	std	Y+24, r26	; 0x18
	
	i_time = 0;
	TFT_Text("Counting",123,236,8,white,red);
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    331e:	4f 82       	std	Y+7, r4	; 0x07
    3320:	58 86       	std	Y+8, r5	; 0x08
    3322:	69 86       	std	Y+9, r6	; 0x09
    3324:	7a 86       	std	Y+10, r7	; 0x0a
	
	
	
start_pgm:
	
	temp_divider = eeprom_read_word(&temp_divider_hold);
    3326:	82 e0       	ldi	r24, 0x02	; 2
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	0e 94 f7 30 	call	0x61ee	; 0x61ee <__eerd_word_m32>
    332e:	90 93 c6 03 	sts	0x03C6, r25
    3332:	80 93 c5 03 	sts	0x03C5, r24
	water_flow_divider = eeprom_read_word(&water_flow_divider_hold);
    3336:	80 e0       	ldi	r24, 0x00	; 0
    3338:	90 e0       	ldi	r25, 0x00	; 0
    333a:	0e 94 f7 30 	call	0x61ee	; 0x61ee <__eerd_word_m32>
    333e:	90 93 c4 03 	sts	0x03C4, r25
    3342:	80 93 c3 03 	sts	0x03C3, r24

	//Welcome message and startup
	TFT_Fill(back_color);
    3346:	8f e1       	ldi	r24, 0x1F	; 31
    3348:	90 e0       	ldi	r25, 0x00	; 0
    334a:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	//TFT_Text("Mark Wash & Dyeing Ltd.",23,30,8,yellow,back_color);
	TFT_Text("ASTEX",75,84,16,white,back_color);
    334e:	0f 2e       	mov	r0, r31
    3350:	ff e1       	ldi	r31, 0x1F	; 31
    3352:	ef 2e       	mov	r14, r31
    3354:	f1 2c       	mov	r15, r1
    3356:	f0 2d       	mov	r31, r0
    3358:	0f ef       	ldi	r16, 0xFF	; 255
    335a:	1f ef       	ldi	r17, 0xFF	; 255
    335c:	20 e1       	ldi	r18, 0x10	; 16
    335e:	44 e5       	ldi	r20, 0x54	; 84
    3360:	50 e0       	ldi	r21, 0x00	; 0
    3362:	6b e4       	ldi	r22, 0x4B	; 75
    3364:	70 e0       	ldi	r23, 0x00	; 0
    3366:	89 e7       	ldi	r24, 0x79	; 121
    3368:	90 e0       	ldi	r25, 0x00	; 0
    336a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,150,195,174,yellow);
    336e:	00 ee       	ldi	r16, 0xE0	; 224
    3370:	1f ef       	ldi	r17, 0xFF	; 255
    3372:	2e ea       	ldi	r18, 0xAE	; 174
    3374:	30 e0       	ldi	r19, 0x00	; 0
    3376:	43 ec       	ldi	r20, 0xC3	; 195
    3378:	50 e0       	ldi	r21, 0x00	; 0
    337a:	66 e9       	ldi	r22, 0x96	; 150
    337c:	70 e0       	ldi	r23, 0x00	; 0
    337e:	83 e2       	ldi	r24, 0x23	; 35
    3380:	90 e0       	ldi	r25, 0x00	; 0
    3382:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Start Task",45,155,16,blue,yellow);
    3386:	0f 2e       	mov	r0, r31
    3388:	f0 ee       	ldi	r31, 0xE0	; 224
    338a:	ef 2e       	mov	r14, r31
    338c:	ff 24       	eor	r15, r15
    338e:	fa 94       	dec	r15
    3390:	f0 2d       	mov	r31, r0
    3392:	0f e1       	ldi	r16, 0x1F	; 31
    3394:	10 e0       	ldi	r17, 0x00	; 0
    3396:	20 e1       	ldi	r18, 0x10	; 16
    3398:	4b e9       	ldi	r20, 0x9B	; 155
    339a:	50 e0       	ldi	r21, 0x00	; 0
    339c:	6d e2       	ldi	r22, 0x2D	; 45
    339e:	70 e0       	ldi	r23, 0x00	; 0
    33a0:	8f e7       	ldi	r24, 0x7F	; 127
    33a2:	90 e0       	ldi	r25, 0x00	; 0
    33a4:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,274,109,292,yellow);
    33a8:	00 ee       	ldi	r16, 0xE0	; 224
    33aa:	1f ef       	ldi	r17, 0xFF	; 255
    33ac:	24 e2       	ldi	r18, 0x24	; 36
    33ae:	31 e0       	ldi	r19, 0x01	; 1
    33b0:	4d e6       	ldi	r20, 0x6D	; 109
    33b2:	50 e0       	ldi	r21, 0x00	; 0
    33b4:	62 e1       	ldi	r22, 0x12	; 18
    33b6:	71 e0       	ldi	r23, 0x01	; 1
    33b8:	83 e2       	ldi	r24, 0x23	; 35
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("SETTINGS",40,280,8,blue,yellow);
    33c0:	0f e1       	ldi	r16, 0x1F	; 31
    33c2:	10 e0       	ldi	r17, 0x00	; 0
    33c4:	28 e0       	ldi	r18, 0x08	; 8
    33c6:	48 e1       	ldi	r20, 0x18	; 24
    33c8:	51 e0       	ldi	r21, 0x01	; 1
    33ca:	68 e2       	ldi	r22, 0x28	; 40
    33cc:	70 e0       	ldi	r23, 0x00	; 0
    33ce:	8a e8       	ldi	r24, 0x8A	; 138
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Temperature:",96,5,8,white,blue);
    33d6:	0f 2e       	mov	r0, r31
    33d8:	ff e1       	ldi	r31, 0x1F	; 31
    33da:	ef 2e       	mov	r14, r31
    33dc:	f1 2c       	mov	r15, r1
    33de:	f0 2d       	mov	r31, r0
    33e0:	0f ef       	ldi	r16, 0xFF	; 255
    33e2:	1f ef       	ldi	r17, 0xFF	; 255
    33e4:	28 e0       	ldi	r18, 0x08	; 8
    33e6:	45 e0       	ldi	r20, 0x05	; 5
    33e8:	50 e0       	ldi	r21, 0x00	; 0
    33ea:	60 e6       	ldi	r22, 0x60	; 96
    33ec:	70 e0       	ldi	r23, 0x00	; 0
    33ee:	83 e9       	ldi	r24, 0x93	; 147
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Image(180,265,50,50,image_data_astex_logo);
    33f6:	04 e4       	ldi	r16, 0x44	; 68
    33f8:	1f e0       	ldi	r17, 0x0F	; 15
    33fa:	22 e3       	ldi	r18, 0x32	; 50
    33fc:	30 e0       	ldi	r19, 0x00	; 0
    33fe:	42 e3       	ldi	r20, 0x32	; 50
    3400:	50 e0       	ldi	r21, 0x00	; 0
    3402:	69 e0       	ldi	r22, 0x09	; 9
    3404:	71 e0       	ldi	r23, 0x01	; 1
    3406:	84 eb       	ldi	r24, 0xB4	; 180
    3408:	90 e0       	ldi	r25, 0x00	; 0
    340a:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <TFT_Image>
	TFT_Rectangle(179,264,230,315,white);
    340e:	0f ef       	ldi	r16, 0xFF	; 255
    3410:	1f ef       	ldi	r17, 0xFF	; 255
    3412:	2b e3       	ldi	r18, 0x3B	; 59
    3414:	31 e0       	ldi	r19, 0x01	; 1
    3416:	46 ee       	ldi	r20, 0xE6	; 230
    3418:	50 e0       	ldi	r21, 0x00	; 0
    341a:	68 e0       	ldi	r22, 0x08	; 8
    341c:	71 e0       	ldi	r23, 0x01	; 1
    341e:	83 eb       	ldi	r24, 0xB3	; 179
    3420:	90 e0       	ldi	r25, 0x00	; 0
    3422:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	
	usart_putchar(98);
    3426:	82 e6       	ldi	r24, 0x62	; 98
    3428:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    342c:	bf ef       	ldi	r27, 0xFF	; 255
    342e:	20 e7       	ldi	r18, 0x70	; 112
    3430:	82 e0       	ldi	r24, 0x02	; 2
    3432:	b1 50       	subi	r27, 0x01	; 1
    3434:	20 40       	sbci	r18, 0x00	; 0
    3436:	80 40       	sbci	r24, 0x00	; 0
    3438:	e1 f7       	brne	.-8      	; 0x3432 <main+0x1d2>
    343a:	00 c0       	rjmp	.+0      	; 0x343c <main+0x1dc>
    343c:	00 00       	nop
	_delay_ms(100);
	usart_putchar(98);
    343e:	82 e6       	ldi	r24, 0x62	; 98
    3440:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
	usart_putchar(100);
    3444:	84 e6       	ldi	r24, 0x64	; 100
    3446:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
	usart_putchar(102);
    344a:	86 e6       	ldi	r24, 0x66	; 102
    344c:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>

	while (1)
	{
		if (compare_time != i_time)
    3450:	40 91 c7 03 	lds	r20, 0x03C7
    3454:	50 91 c8 03 	lds	r21, 0x03C8
    3458:	60 91 c9 03 	lds	r22, 0x03C9
    345c:	70 91 ca 03 	lds	r23, 0x03CA
    3460:	80 91 cb 03 	lds	r24, 0x03CB
    3464:	90 91 cc 03 	lds	r25, 0x03CC
    3468:	a0 91 cd 03 	lds	r26, 0x03CD
    346c:	b0 91 ce 03 	lds	r27, 0x03CE
    3470:	48 17       	cp	r20, r24
    3472:	59 07       	cpc	r21, r25
    3474:	6a 07       	cpc	r22, r26
    3476:	7b 07       	cpc	r23, r27
    3478:	a1 f1       	breq	.+104    	; 0x34e2 <main+0x282>
		{
			TFT_PutsInt((Read_temperature() * 100UL)/(uint32_t)temp_divider,4,200,5,8,white,back_color);
    347a:	0e 94 77 17 	call	0x2eee	; 0x2eee <Read_temperature>
    347e:	24 e6       	ldi	r18, 0x64	; 100
    3480:	30 e0       	ldi	r19, 0x00	; 0
    3482:	dc 01       	movw	r26, r24
    3484:	0e 94 21 2f 	call	0x5e42	; 0x5e42 <__usmulhisi3>
    3488:	20 91 c5 03 	lds	r18, 0x03C5
    348c:	30 91 c6 03 	lds	r19, 0x03C6
    3490:	40 e0       	ldi	r20, 0x00	; 0
    3492:	50 e0       	ldi	r21, 0x00	; 0
    3494:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    3498:	ca 01       	movw	r24, r20
    349a:	b9 01       	movw	r22, r18
    349c:	0f 2e       	mov	r0, r31
    349e:	ff e1       	ldi	r31, 0x1F	; 31
    34a0:	af 2e       	mov	r10, r31
    34a2:	b1 2c       	mov	r11, r1
    34a4:	f0 2d       	mov	r31, r0
    34a6:	cc 24       	eor	r12, r12
    34a8:	ca 94       	dec	r12
    34aa:	dc 2c       	mov	r13, r12
    34ac:	68 94       	set
    34ae:	ee 24       	eor	r14, r14
    34b0:	e3 f8       	bld	r14, 3
    34b2:	05 e0       	ldi	r16, 0x05	; 5
    34b4:	10 e0       	ldi	r17, 0x00	; 0
    34b6:	28 ec       	ldi	r18, 0xC8	; 200
    34b8:	30 e0       	ldi	r19, 0x00	; 0
    34ba:	44 e0       	ldi	r20, 0x04	; 4
    34bc:	50 e0       	ldi	r21, 0x00	; 0
    34be:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			compare_time = i_time;
    34c2:	80 91 cb 03 	lds	r24, 0x03CB
    34c6:	90 91 cc 03 	lds	r25, 0x03CC
    34ca:	a0 91 cd 03 	lds	r26, 0x03CD
    34ce:	b0 91 ce 03 	lds	r27, 0x03CE
    34d2:	80 93 c7 03 	sts	0x03C7, r24
    34d6:	90 93 c8 03 	sts	0x03C8, r25
    34da:	a0 93 c9 03 	sts	0x03C9, r26
    34de:	b0 93 ca 03 	sts	0x03CA, r27
		}
		if (usart_dthit())  //scan for keypad data via usart
    34e2:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    34e6:	88 23       	and	r24, r24
    34e8:	41 f0       	breq	.+16     	; 0x34fa <main+0x29a>
		{
			usart_data = usart_getchar();
    34ea:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    34ee:	8c 30       	cpi	r24, 0x0C	; 12
    34f0:	e1 f1       	breq	.+120    	; 0x356a <main+0x30a>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    34f2:	8b 30       	cpi	r24, 0x0B	; 11
    34f4:	11 f4       	brne	.+4      	; 0x34fa <main+0x29a>
    34f6:	0c 94 9f 28 	jmp	0x513e	; 0x513e <main+0x1ede>
				usart_data = 0;
				goto settings_calibration;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    34fa:	83 99       	sbic	0x10, 3	; 16
    34fc:	a9 cf       	rjmp	.-174    	; 0x3450 <main+0x1f0>
		{
			Read_TPval(TPval);
    34fe:	ce 01       	movw	r24, r28
    3500:	01 96       	adiw	r24, 0x01	; 1
    3502:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    3506:	af e1       	ldi	r26, 0x1F	; 31
    3508:	be e4       	ldi	r27, 0x4E	; 78
    350a:	11 97       	sbiw	r26, 0x01	; 1
    350c:	f1 f7       	brne	.-4      	; 0x350a <main+0x2aa>
    350e:	00 c0       	rjmp	.+0      	; 0x3510 <main+0x2b0>
    3510:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    3512:	ce 01       	movw	r24, r28
    3514:	01 96       	adiw	r24, 0x01	; 1
    3516:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)  // button for start task
    351a:	89 81       	ldd	r24, Y+1	; 0x01
    351c:	9a 81       	ldd	r25, Y+2	; 0x02
    351e:	9c 01       	movw	r18, r24
    3520:	29 57       	subi	r18, 0x79	; 121
    3522:	31 09       	sbc	r19, r1
    3524:	2d 31       	cpi	r18, 0x1D	; 29
    3526:	31 05       	cpc	r19, r1
    3528:	38 f4       	brcc	.+14     	; 0x3538 <main+0x2d8>
    352a:	2b 81       	ldd	r18, Y+3	; 0x03
    352c:	3c 81       	ldd	r19, Y+4	; 0x04
    352e:	24 53       	subi	r18, 0x34	; 52
    3530:	31 09       	sbc	r19, r1
    3532:	25 39       	cpi	r18, 0x95	; 149
    3534:	31 05       	cpc	r19, r1
    3536:	c8 f0       	brcs	.+50     	; 0x356a <main+0x30a>
			{
				break;
			}
			else if (TPval[0]>35 && TPval[0]<56 && TPval[1]>40 && TPval[1]<120)  // button for settings
    3538:	84 97       	sbiw	r24, 0x24	; 36
    353a:	44 97       	sbiw	r24, 0x14	; 20
    353c:	40 f4       	brcc	.+16     	; 0x354e <main+0x2ee>
    353e:	8b 81       	ldd	r24, Y+3	; 0x03
    3540:	9c 81       	ldd	r25, Y+4	; 0x04
    3542:	89 97       	sbiw	r24, 0x29	; 41
    3544:	8f 34       	cpi	r24, 0x4F	; 79
    3546:	91 05       	cpc	r25, r1
    3548:	10 f4       	brcc	.+4      	; 0x354e <main+0x2ee>
    354a:	0c 94 9f 28 	jmp	0x513e	; 0x513e <main+0x1ede>
    354e:	bf ef       	ldi	r27, 0xFF	; 255
    3550:	20 e7       	ldi	r18, 0x70	; 112
    3552:	82 e0       	ldi	r24, 0x02	; 2
    3554:	b1 50       	subi	r27, 0x01	; 1
    3556:	20 40       	sbci	r18, 0x00	; 0
    3558:	80 40       	sbci	r24, 0x00	; 0
    355a:	e1 f7       	brne	.-8      	; 0x3554 <main+0x2f4>
    355c:	00 c0       	rjmp	.+0      	; 0x355e <main+0x2fe>
    355e:	00 00       	nop
    3560:	77 cf       	rjmp	.-274    	; 0x3450 <main+0x1f0>
    3562:	4f 82       	std	Y+7, r4	; 0x07
    3564:	58 86       	std	Y+8, r5	; 0x08
    3566:	69 86       	std	Y+9, r6	; 0x09
    3568:	7a 86       	std	Y+10, r7	; 0x0a
	}
	//End welcome message and startup
	
	//Start task input/selection system
selection:
	TFT_Fill(back_color);
    356a:	8f e1       	ldi	r24, 0x1F	; 31
    356c:	90 e0       	ldi	r25, 0x00	; 0
    356e:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Choose an option...",23,20,8,white,back_color);
    3572:	0f 2e       	mov	r0, r31
    3574:	ff e1       	ldi	r31, 0x1F	; 31
    3576:	ef 2e       	mov	r14, r31
    3578:	f1 2c       	mov	r15, r1
    357a:	f0 2d       	mov	r31, r0
    357c:	0f ef       	ldi	r16, 0xFF	; 255
    357e:	1f ef       	ldi	r17, 0xFF	; 255
    3580:	28 e0       	ldi	r18, 0x08	; 8
    3582:	44 e1       	ldi	r20, 0x14	; 20
    3584:	50 e0       	ldi	r21, 0x00	; 0
    3586:	67 e1       	ldi	r22, 0x17	; 23
    3588:	70 e0       	ldi	r23, 0x00	; 0
    358a:	80 ea       	ldi	r24, 0xA0	; 160
    358c:	90 e0       	ldi	r25, 0x00	; 0
    358e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,45,203,62,yellow);
    3592:	00 ee       	ldi	r16, 0xE0	; 224
    3594:	1f ef       	ldi	r17, 0xFF	; 255
    3596:	2e e3       	ldi	r18, 0x3E	; 62
    3598:	30 e0       	ldi	r19, 0x00	; 0
    359a:	4b ec       	ldi	r20, 0xCB	; 203
    359c:	50 e0       	ldi	r21, 0x00	; 0
    359e:	6d e2       	ldi	r22, 0x2D	; 45
    35a0:	70 e0       	ldi	r23, 0x00	; 0
    35a2:	8b e1       	ldi	r24, 0x1B	; 27
    35a4:	90 e0       	ldi	r25, 0x00	; 0
    35a6:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("70Lit. _ 25'C _ 2min",35,50,8,black,yellow);
    35aa:	0f 2e       	mov	r0, r31
    35ac:	f0 ee       	ldi	r31, 0xE0	; 224
    35ae:	ef 2e       	mov	r14, r31
    35b0:	ff 24       	eor	r15, r15
    35b2:	fa 94       	dec	r15
    35b4:	f0 2d       	mov	r31, r0
    35b6:	00 e0       	ldi	r16, 0x00	; 0
    35b8:	10 e0       	ldi	r17, 0x00	; 0
    35ba:	28 e0       	ldi	r18, 0x08	; 8
    35bc:	42 e3       	ldi	r20, 0x32	; 50
    35be:	50 e0       	ldi	r21, 0x00	; 0
    35c0:	63 e2       	ldi	r22, 0x23	; 35
    35c2:	70 e0       	ldi	r23, 0x00	; 0
    35c4:	84 eb       	ldi	r24, 0xB4	; 180
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,80,203,97,yellow);
    35cc:	00 ee       	ldi	r16, 0xE0	; 224
    35ce:	1f ef       	ldi	r17, 0xFF	; 255
    35d0:	21 e6       	ldi	r18, 0x61	; 97
    35d2:	30 e0       	ldi	r19, 0x00	; 0
    35d4:	4b ec       	ldi	r20, 0xCB	; 203
    35d6:	50 e0       	ldi	r21, 0x00	; 0
    35d8:	60 e5       	ldi	r22, 0x50	; 80
    35da:	70 e0       	ldi	r23, 0x00	; 0
    35dc:	8b e1       	ldi	r24, 0x1B	; 27
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("70Lit. _ 50'C _ 2min",35,85,8,black,yellow);
    35e4:	00 e0       	ldi	r16, 0x00	; 0
    35e6:	10 e0       	ldi	r17, 0x00	; 0
    35e8:	28 e0       	ldi	r18, 0x08	; 8
    35ea:	45 e5       	ldi	r20, 0x55	; 85
    35ec:	50 e0       	ldi	r21, 0x00	; 0
    35ee:	63 e2       	ldi	r22, 0x23	; 35
    35f0:	70 e0       	ldi	r23, 0x00	; 0
    35f2:	89 ec       	ldi	r24, 0xC9	; 201
    35f4:	90 e0       	ldi	r25, 0x00	; 0
    35f6:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,115,203,132,yellow);
    35fa:	00 ee       	ldi	r16, 0xE0	; 224
    35fc:	1f ef       	ldi	r17, 0xFF	; 255
    35fe:	24 e8       	ldi	r18, 0x84	; 132
    3600:	30 e0       	ldi	r19, 0x00	; 0
    3602:	4b ec       	ldi	r20, 0xCB	; 203
    3604:	50 e0       	ldi	r21, 0x00	; 0
    3606:	63 e7       	ldi	r22, 0x73	; 115
    3608:	70 e0       	ldi	r23, 0x00	; 0
    360a:	8b e1       	ldi	r24, 0x1B	; 27
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("50Lit. _ 50'C _ 2min",35,120,8,black,yellow);
    3612:	00 e0       	ldi	r16, 0x00	; 0
    3614:	10 e0       	ldi	r17, 0x00	; 0
    3616:	28 e0       	ldi	r18, 0x08	; 8
    3618:	48 e7       	ldi	r20, 0x78	; 120
    361a:	50 e0       	ldi	r21, 0x00	; 0
    361c:	63 e2       	ldi	r22, 0x23	; 35
    361e:	70 e0       	ldi	r23, 0x00	; 0
    3620:	8e ed       	ldi	r24, 0xDE	; 222
    3622:	90 e0       	ldi	r25, 0x00	; 0
    3624:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,150,203,167,yellow);
    3628:	00 ee       	ldi	r16, 0xE0	; 224
    362a:	1f ef       	ldi	r17, 0xFF	; 255
    362c:	27 ea       	ldi	r18, 0xA7	; 167
    362e:	30 e0       	ldi	r19, 0x00	; 0
    3630:	4b ec       	ldi	r20, 0xCB	; 203
    3632:	50 e0       	ldi	r21, 0x00	; 0
    3634:	66 e9       	ldi	r22, 0x96	; 150
    3636:	70 e0       	ldi	r23, 0x00	; 0
    3638:	8b e1       	ldi	r24, 0x1B	; 27
    363a:	90 e0       	ldi	r25, 0x00	; 0
    363c:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("60Lit. _ 50'C _ 2min",35,155,8,black,yellow);
    3640:	00 e0       	ldi	r16, 0x00	; 0
    3642:	10 e0       	ldi	r17, 0x00	; 0
    3644:	28 e0       	ldi	r18, 0x08	; 8
    3646:	4b e9       	ldi	r20, 0x9B	; 155
    3648:	50 e0       	ldi	r21, 0x00	; 0
    364a:	63 e2       	ldi	r22, 0x23	; 35
    364c:	70 e0       	ldi	r23, 0x00	; 0
    364e:	83 ef       	ldi	r24, 0xF3	; 243
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,188,203,228,red);
    3656:	00 e0       	ldi	r16, 0x00	; 0
    3658:	18 ef       	ldi	r17, 0xF8	; 248
    365a:	24 ee       	ldi	r18, 0xE4	; 228
    365c:	30 e0       	ldi	r19, 0x00	; 0
    365e:	4b ec       	ldi	r20, 0xCB	; 203
    3660:	50 e0       	ldi	r21, 0x00	; 0
    3662:	6c eb       	ldi	r22, 0xBC	; 188
    3664:	70 e0       	ldi	r23, 0x00	; 0
    3666:	8b e1       	ldi	r24, 0x1B	; 27
    3668:	90 e0       	ldi	r25, 0x00	; 0
    366a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Manual Input",31,199,16,white,red);
    366e:	0f 2e       	mov	r0, r31
    3670:	e1 2c       	mov	r14, r1
    3672:	f8 ef       	ldi	r31, 0xF8	; 248
    3674:	ff 2e       	mov	r15, r31
    3676:	f0 2d       	mov	r31, r0
    3678:	0f ef       	ldi	r16, 0xFF	; 255
    367a:	1f ef       	ldi	r17, 0xFF	; 255
    367c:	20 e1       	ldi	r18, 0x10	; 16
    367e:	47 ec       	ldi	r20, 0xC7	; 199
    3680:	50 e0       	ldi	r21, 0x00	; 0
    3682:	6f e1       	ldi	r22, 0x1F	; 31
    3684:	70 e0       	ldi	r23, 0x00	; 0
    3686:	88 e0       	ldi	r24, 0x08	; 8
    3688:	91 e0       	ldi	r25, 0x01	; 1
    368a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(27,260,203,277,yellow);
    368e:	00 ee       	ldi	r16, 0xE0	; 224
    3690:	1f ef       	ldi	r17, 0xFF	; 255
    3692:	25 e1       	ldi	r18, 0x15	; 21
    3694:	31 e0       	ldi	r19, 0x01	; 1
    3696:	4b ec       	ldi	r20, 0xCB	; 203
    3698:	50 e0       	ldi	r21, 0x00	; 0
    369a:	64 e0       	ldi	r22, 0x04	; 4
    369c:	71 e0       	ldi	r23, 0x01	; 1
    369e:	8b e1       	ldi	r24, 0x1B	; 27
    36a0:	90 e0       	ldi	r25, 0x00	; 0
    36a2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("<<  BACK  <<",35,265,8,black,yellow);
    36a6:	0f 2e       	mov	r0, r31
    36a8:	f0 ee       	ldi	r31, 0xE0	; 224
    36aa:	ef 2e       	mov	r14, r31
    36ac:	ff 24       	eor	r15, r15
    36ae:	fa 94       	dec	r15
    36b0:	f0 2d       	mov	r31, r0
    36b2:	00 e0       	ldi	r16, 0x00	; 0
    36b4:	10 e0       	ldi	r17, 0x00	; 0
    36b6:	28 e0       	ldi	r18, 0x08	; 8
    36b8:	49 e0       	ldi	r20, 0x09	; 9
    36ba:	51 e0       	ldi	r21, 0x01	; 1
    36bc:	63 e2       	ldi	r22, 0x23	; 35
    36be:	70 e0       	ldi	r23, 0x00	; 0
    36c0:	85 e1       	ldi	r24, 0x15	; 21
    36c2:	91 e0       	ldi	r25, 0x01	; 1
    36c4:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    36c8:	83 9b       	sbis	0x10, 3	; 16
    36ca:	fe cf       	rjmp	.-4      	; 0x36c8 <main+0x468>
	while (1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    36cc:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    36d0:	88 23       	and	r24, r24
    36d2:	a9 f0       	breq	.+42     	; 0x36fe <main+0x49e>
		{
			usart_data = usart_getchar();
    36d4:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 13)
    36d8:	8d 30       	cpi	r24, 0x0D	; 13
    36da:	09 f4       	brne	.+2      	; 0x36de <main+0x47e>
    36dc:	72 c4       	rjmp	.+2276   	; 0x3fc2 <main+0xd62>
			{
				usart_data = 0;
				goto task_a;
			}
			else if (usart_data == 14)
    36de:	8e 30       	cpi	r24, 0x0E	; 14
    36e0:	09 f4       	brne	.+2      	; 0x36e4 <main+0x484>
    36e2:	88 c4       	rjmp	.+2320   	; 0x3ff4 <main+0xd94>
			{
				usart_data = 0;
				goto task_b;
			}
			else if (usart_data == 15)
    36e4:	8f 30       	cpi	r24, 0x0F	; 15
    36e6:	09 f4       	brne	.+2      	; 0x36ea <main+0x48a>
    36e8:	9e c4       	rjmp	.+2364   	; 0x4026 <main+0xdc6>
			{
				usart_data = 0;
				goto task_c;
			}
			else if (usart_data == 16)
    36ea:	80 31       	cpi	r24, 0x10	; 16
    36ec:	09 f4       	brne	.+2      	; 0x36f0 <main+0x490>
    36ee:	b0 c4       	rjmp	.+2400   	; 0x4050 <main+0xdf0>
			{
				usart_data = 0;
				goto task_d;
			}
			else if (usart_data == 12)
    36f0:	8c 30       	cpi	r24, 0x0C	; 12
    36f2:	11 f4       	brne	.+4      	; 0x36f8 <main+0x498>
    36f4:	0c 94 7d 2a 	jmp	0x54fa	; 0x54fa <main+0x229a>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    36f8:	8b 30       	cpi	r24, 0x0B	; 11
    36fa:	09 f4       	brne	.+2      	; 0x36fe <main+0x49e>
    36fc:	14 ce       	rjmp	.-984    	; 0x3326 <main+0xc6>
				goto start_pgm;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan for touch data
    36fe:	83 99       	sbic	0x10, 3	; 16
    3700:	e5 cf       	rjmp	.-54     	; 0x36cc <main+0x46c>
		{
			Read_TPval(TPval);
    3702:	ce 01       	movw	r24, r28
    3704:	01 96       	adiw	r24, 0x01	; 1
    3706:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    370a:	af e1       	ldi	r26, 0x1F	; 31
    370c:	be e4       	ldi	r27, 0x4E	; 78
    370e:	11 97       	sbiw	r26, 0x01	; 1
    3710:	f1 f7       	brne	.-4      	; 0x370e <main+0x4ae>
    3712:	00 c0       	rjmp	.+0      	; 0x3714 <main+0x4b4>
    3714:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    3716:	ce 01       	movw	r24, r28
    3718:	01 96       	adiw	r24, 0x01	; 1
    371a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
    371e:	8b 81       	ldd	r24, Y+3	; 0x03
    3720:	9c 81       	ldd	r25, Y+4	; 0x04
    3722:	84 97       	sbiw	r24, 0x24	; 36
    3724:	8f 3a       	cpi	r24, 0xAF	; 175
    3726:	91 05       	cpc	r25, r1
    3728:	30 f5       	brcc	.+76     	; 0x3776 <main+0x516>
			{
				if (TPval[0]>197 && TPval[0]<216)
    372a:	89 81       	ldd	r24, Y+1	; 0x01
    372c:	9a 81       	ldd	r25, Y+2	; 0x02
    372e:	9c 01       	movw	r18, r24
    3730:	26 5c       	subi	r18, 0xC6	; 198
    3732:	31 09       	sbc	r19, r1
    3734:	22 31       	cpi	r18, 0x12	; 18
    3736:	31 05       	cpc	r19, r1
    3738:	08 f4       	brcc	.+2      	; 0x373c <main+0x4dc>
    373a:	a0 c4       	rjmp	.+2368   	; 0x407c <main+0xe1c>
					water = 70;
					temp = 25;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
    373c:	2a 5e       	subi	r18, 0xEA	; 234
    373e:	3f 4f       	sbci	r19, 0xFF	; 255
    3740:	2e 30       	cpi	r18, 0x0E	; 14
    3742:	31 05       	cpc	r19, r1
    3744:	08 f4       	brcc	.+2      	; 0x3748 <main+0x4e8>
    3746:	b3 c4       	rjmp	.+2406   	; 0x40ae <main+0xe4e>
					water = 70;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
    3748:	25 5e       	subi	r18, 0xE5	; 229
    374a:	3f 4f       	sbci	r19, 0xFF	; 255
    374c:	22 31       	cpi	r18, 0x12	; 18
    374e:	31 05       	cpc	r19, r1
    3750:	08 f4       	brcc	.+2      	; 0x3754 <main+0x4f4>
    3752:	c6 c4       	rjmp	.+2444   	; 0x40e0 <main+0xe80>
					water = 50;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
    3754:	2b 5e       	subi	r18, 0xEB	; 235
    3756:	3f 4f       	sbci	r19, 0xFF	; 255
    3758:	20 31       	cpi	r18, 0x10	; 16
    375a:	31 05       	cpc	r19, r1
    375c:	08 f4       	brcc	.+2      	; 0x3760 <main+0x500>
    375e:	d5 c4       	rjmp	.+2474   	; 0x410a <main+0xeaa>
					water = 60;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>83 && TPval[0]<116)  //button for manual input
    3760:	24 5d       	subi	r18, 0xD4	; 212
    3762:	3f 4f       	sbci	r19, 0xFF	; 255
    3764:	20 32       	cpi	r18, 0x20	; 32
    3766:	31 05       	cpc	r19, r1
    3768:	10 f4       	brcc	.+4      	; 0x376e <main+0x50e>
    376a:	0c 94 80 2a 	jmp	0x5500	; 0x5500 <main+0x22a0>
				{
					break;
				}
				else if (TPval[0]>43 && TPval[0]<67)  //button for manual input
    376e:	8c 97       	sbiw	r24, 0x2c	; 44
    3770:	47 97       	sbiw	r24, 0x17	; 23
    3772:	08 f4       	brcc	.+2      	; 0x3776 <main+0x516>
    3774:	d8 cd       	rjmp	.-1104   	; 0x3326 <main+0xc6>
    3776:	bf ef       	ldi	r27, 0xFF	; 255
    3778:	20 e7       	ldi	r18, 0x70	; 112
    377a:	82 e0       	ldi	r24, 0x02	; 2
    377c:	b1 50       	subi	r27, 0x01	; 1
    377e:	20 40       	sbci	r18, 0x00	; 0
    3780:	80 40       	sbci	r24, 0x00	; 0
    3782:	e1 f7       	brne	.-8      	; 0x377c <main+0x51c>
    3784:	00 c0       	rjmp	.+0      	; 0x3786 <main+0x526>
    3786:	00 00       	nop
    3788:	a1 cf       	rjmp	.-190    	; 0x36cc <main+0x46c>
							input_f = 0;
							goto selection;
						}
						else if (input_f == 4)
						{
							input_f = 1;
    378a:	99 24       	eor	r9, r9
    378c:	93 94       	inc	r9
    378e:	04 c0       	rjmp	.+8      	; 0x3798 <main+0x538>
							goto button_operation;
						}
						else if (input_f == 6)
						{
							input_f = 3;
    3790:	0f 2e       	mov	r0, r31
    3792:	f3 e0       	ldi	r31, 0x03	; 3
    3794:	9f 2e       	mov	r9, r31
    3796:	f0 2d       	mov	r31, r0
		//for manual input show the button
		
	input_f = 1;

button_operation:
	TFT_Fill(back_color);
    3798:	8f e1       	ldi	r24, 0x1F	; 31
    379a:	90 e0       	ldi	r25, 0x00	; 0
    379c:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	show_button();
    37a0:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <show_button>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    37a4:	83 9b       	sbis	0x10, 3	; 16
    37a6:	fe cf       	rjmp	.-4      	; 0x37a4 <main+0x544>
	while(1)
	{
		if (input_f == 1)
    37a8:	91 e0       	ldi	r25, 0x01	; 1
    37aa:	99 12       	cpse	r9, r25
    37ac:	27 c0       	rjmp	.+78     	; 0x37fc <main+0x59c>
		{
			TFT_Box(10,69,231,101,white);
    37ae:	0f ef       	ldi	r16, 0xFF	; 255
    37b0:	1f ef       	ldi	r17, 0xFF	; 255
    37b2:	25 e6       	ldi	r18, 0x65	; 101
    37b4:	30 e0       	ldi	r19, 0x00	; 0
    37b6:	47 ee       	ldi	r20, 0xE7	; 231
    37b8:	50 e0       	ldi	r21, 0x00	; 0
    37ba:	65 e4       	ldi	r22, 0x45	; 69
    37bc:	70 e0       	ldi	r23, 0x00	; 0
    37be:	8a e0       	ldi	r24, 0x0A	; 10
    37c0:	90 e0       	ldi	r25, 0x00	; 0
    37c2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Water ...",10,20,16,white,back_color);
    37c6:	0f 2e       	mov	r0, r31
    37c8:	ff e1       	ldi	r31, 0x1F	; 31
    37ca:	ef 2e       	mov	r14, r31
    37cc:	f1 2c       	mov	r15, r1
    37ce:	f0 2d       	mov	r31, r0
    37d0:	20 e1       	ldi	r18, 0x10	; 16
    37d2:	44 e1       	ldi	r20, 0x14	; 20
    37d4:	50 e0       	ldi	r21, 0x00	; 0
    37d6:	6a e0       	ldi	r22, 0x0A	; 10
    37d8:	70 e0       	ldi	r23, 0x00	; 0
    37da:	82 e2       	ldi	r24, 0x22	; 34
    37dc:	91 e0       	ldi	r25, 0x01	; 1
    37de:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Liter)  ",10,38,16,white,back_color);
    37e2:	20 e1       	ldi	r18, 0x10	; 16
    37e4:	46 e2       	ldi	r20, 0x26	; 38
    37e6:	50 e0       	ldi	r21, 0x00	; 0
    37e8:	6a e0       	ldi	r22, 0x0A	; 10
    37ea:	70 e0       	ldi	r23, 0x00	; 0
    37ec:	82 e3       	ldi	r24, 0x32	; 50
    37ee:	91 e0       	ldi	r25, 0x01	; 1
    37f0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 2;
    37f4:	68 94       	set
    37f6:	99 24       	eor	r9, r9
    37f8:	91 f8       	bld	r9, 1
    37fa:	2b c1       	rjmp	.+598    	; 0x3a52 <main+0x7f2>
		}
		else if (input_f == 3)
    37fc:	a3 e0       	ldi	r26, 0x03	; 3
    37fe:	9a 12       	cpse	r9, r26
    3800:	35 c0       	rjmp	.+106    	; 0x386c <main+0x60c>
		{
			TFT_Box(10,69,231,101,white);
    3802:	0f ef       	ldi	r16, 0xFF	; 255
    3804:	1f ef       	ldi	r17, 0xFF	; 255
    3806:	25 e6       	ldi	r18, 0x65	; 101
    3808:	30 e0       	ldi	r19, 0x00	; 0
    380a:	47 ee       	ldi	r20, 0xE7	; 231
    380c:	50 e0       	ldi	r21, 0x00	; 0
    380e:	65 e4       	ldi	r22, 0x45	; 69
    3810:	70 e0       	ldi	r23, 0x00	; 0
    3812:	8a e0       	ldi	r24, 0x0A	; 10
    3814:	90 e0       	ldi	r25, 0x00	; 0
    3816:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    381a:	0f e1       	ldi	r16, 0x1F	; 31
    381c:	10 e0       	ldi	r17, 0x00	; 0
    381e:	26 e3       	ldi	r18, 0x36	; 54
    3820:	30 e0       	ldi	r19, 0x00	; 0
    3822:	47 ee       	ldi	r20, 0xE7	; 231
    3824:	50 e0       	ldi	r21, 0x00	; 0
    3826:	64 e1       	ldi	r22, 0x14	; 20
    3828:	70 e0       	ldi	r23, 0x00	; 0
    382a:	8a e0       	ldi	r24, 0x0A	; 10
    382c:	90 e0       	ldi	r25, 0x00	; 0
    382e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Temp ... ",10,20,16,white,back_color);
    3832:	0f 2e       	mov	r0, r31
    3834:	ff e1       	ldi	r31, 0x1F	; 31
    3836:	ef 2e       	mov	r14, r31
    3838:	f1 2c       	mov	r15, r1
    383a:	f0 2d       	mov	r31, r0
    383c:	0f ef       	ldi	r16, 0xFF	; 255
    383e:	1f ef       	ldi	r17, 0xFF	; 255
    3840:	20 e1       	ldi	r18, 0x10	; 16
    3842:	44 e1       	ldi	r20, 0x14	; 20
    3844:	50 e0       	ldi	r21, 0x00	; 0
    3846:	6a e0       	ldi	r22, 0x0A	; 10
    3848:	70 e0       	ldi	r23, 0x00	; 0
    384a:	8c e3       	ldi	r24, 0x3C	; 60
    384c:	91 e0       	ldi	r25, 0x01	; 1
    384e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Deg. C) ",10,38,16,white,back_color);
    3852:	20 e1       	ldi	r18, 0x10	; 16
    3854:	46 e2       	ldi	r20, 0x26	; 38
    3856:	50 e0       	ldi	r21, 0x00	; 0
    3858:	6a e0       	ldi	r22, 0x0A	; 10
    385a:	70 e0       	ldi	r23, 0x00	; 0
    385c:	8c e4       	ldi	r24, 0x4C	; 76
    385e:	91 e0       	ldi	r25, 0x01	; 1
    3860:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 4;
    3864:	68 94       	set
    3866:	99 24       	eor	r9, r9
    3868:	92 f8       	bld	r9, 2
    386a:	f3 c0       	rjmp	.+486    	; 0x3a52 <main+0x7f2>
		}
		else if (input_f == 5)
    386c:	b5 e0       	ldi	r27, 0x05	; 5
    386e:	9b 12       	cpse	r9, r27
    3870:	36 c0       	rjmp	.+108    	; 0x38de <main+0x67e>
		{
			TFT_Box(10,69,231,101,white);
    3872:	0f ef       	ldi	r16, 0xFF	; 255
    3874:	1f ef       	ldi	r17, 0xFF	; 255
    3876:	25 e6       	ldi	r18, 0x65	; 101
    3878:	30 e0       	ldi	r19, 0x00	; 0
    387a:	47 ee       	ldi	r20, 0xE7	; 231
    387c:	50 e0       	ldi	r21, 0x00	; 0
    387e:	65 e4       	ldi	r22, 0x45	; 69
    3880:	70 e0       	ldi	r23, 0x00	; 0
    3882:	8a e0       	ldi	r24, 0x0A	; 10
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    388a:	0f e1       	ldi	r16, 0x1F	; 31
    388c:	10 e0       	ldi	r17, 0x00	; 0
    388e:	26 e3       	ldi	r18, 0x36	; 54
    3890:	30 e0       	ldi	r19, 0x00	; 0
    3892:	47 ee       	ldi	r20, 0xE7	; 231
    3894:	50 e0       	ldi	r21, 0x00	; 0
    3896:	64 e1       	ldi	r22, 0x14	; 20
    3898:	70 e0       	ldi	r23, 0x00	; 0
    389a:	8a e0       	ldi	r24, 0x0A	; 10
    389c:	90 e0       	ldi	r25, 0x00	; 0
    389e:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			TFT_Text("Input Time ... ",10,20,16,white,back_color);
    38a2:	0f 2e       	mov	r0, r31
    38a4:	ff e1       	ldi	r31, 0x1F	; 31
    38a6:	ef 2e       	mov	r14, r31
    38a8:	f1 2c       	mov	r15, r1
    38aa:	f0 2d       	mov	r31, r0
    38ac:	0f ef       	ldi	r16, 0xFF	; 255
    38ae:	1f ef       	ldi	r17, 0xFF	; 255
    38b0:	20 e1       	ldi	r18, 0x10	; 16
    38b2:	44 e1       	ldi	r20, 0x14	; 20
    38b4:	50 e0       	ldi	r21, 0x00	; 0
    38b6:	6a e0       	ldi	r22, 0x0A	; 10
    38b8:	70 e0       	ldi	r23, 0x00	; 0
    38ba:	86 e5       	ldi	r24, 0x56	; 86
    38bc:	91 e0       	ldi	r25, 0x01	; 1
    38be:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("(Minute)",10,38,16,white,back_color);
    38c2:	20 e1       	ldi	r18, 0x10	; 16
    38c4:	46 e2       	ldi	r20, 0x26	; 38
    38c6:	50 e0       	ldi	r21, 0x00	; 0
    38c8:	6a e0       	ldi	r22, 0x0A	; 10
    38ca:	70 e0       	ldi	r23, 0x00	; 0
    38cc:	86 e6       	ldi	r24, 0x66	; 102
    38ce:	91 e0       	ldi	r25, 0x01	; 1
    38d0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 6;
    38d4:	0f 2e       	mov	r0, r31
    38d6:	f6 e0       	ldi	r31, 0x06	; 6
    38d8:	9f 2e       	mov	r9, r31
    38da:	f0 2d       	mov	r31, r0
    38dc:	ba c0       	rjmp	.+372    	; 0x3a52 <main+0x7f2>
		}
		else if (input_f == 7)  //this section is to update the calubration of temperature value
    38de:	27 e0       	ldi	r18, 0x07	; 7
    38e0:	92 12       	cpse	r9, r18
    38e2:	27 c0       	rjmp	.+78     	; 0x3932 <main+0x6d2>
		{
			TFT_Box(10,69,231,101,white);
    38e4:	0f ef       	ldi	r16, 0xFF	; 255
    38e6:	1f ef       	ldi	r17, 0xFF	; 255
    38e8:	25 e6       	ldi	r18, 0x65	; 101
    38ea:	30 e0       	ldi	r19, 0x00	; 0
    38ec:	47 ee       	ldi	r20, 0xE7	; 231
    38ee:	50 e0       	ldi	r21, 0x00	; 0
    38f0:	65 e4       	ldi	r22, 0x45	; 69
    38f2:	70 e0       	ldi	r23, 0x00	; 0
    38f4:	8a e0       	ldi	r24, 0x0A	; 10
    38f6:	90 e0       	ldi	r25, 0x00	; 0
    38f8:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			//TFT_Box(10,20,231,54,back_color);
			//TFT_Text("Thermal Calibration",45,140,8,white,back_color);
			TFT_Text("Thermal ADC value:",10,15,8,white,back_color);
    38fc:	0f 2e       	mov	r0, r31
    38fe:	ff e1       	ldi	r31, 0x1F	; 31
    3900:	ef 2e       	mov	r14, r31
    3902:	f1 2c       	mov	r15, r1
    3904:	f0 2d       	mov	r31, r0
    3906:	28 e0       	ldi	r18, 0x08	; 8
    3908:	4f e0       	ldi	r20, 0x0F	; 15
    390a:	50 e0       	ldi	r21, 0x00	; 0
    390c:	6a e0       	ldi	r22, 0x0A	; 10
    390e:	70 e0       	ldi	r23, 0x00	; 0
    3910:	8f e6       	ldi	r24, 0x6F	; 111
    3912:	91 e0       	ldi	r25, 0x01	; 1
    3914:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_Text("Enter the real value...",10,38,8,white,back_color);
    3918:	28 e0       	ldi	r18, 0x08	; 8
    391a:	46 e2       	ldi	r20, 0x26	; 38
    391c:	50 e0       	ldi	r21, 0x00	; 0
    391e:	6a e0       	ldi	r22, 0x0A	; 10
    3920:	70 e0       	ldi	r23, 0x00	; 0
    3922:	82 e8       	ldi	r24, 0x82	; 130
    3924:	91 e0       	ldi	r25, 0x01	; 1
    3926:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 8;
    392a:	68 94       	set
    392c:	99 24       	eor	r9, r9
    392e:	93 f8       	bld	r9, 3
    3930:	90 c0       	rjmp	.+288    	; 0x3a52 <main+0x7f2>
		}
		else if (input_f == 8)
    3932:	88 e0       	ldi	r24, 0x08	; 8
    3934:	98 12       	cpse	r9, r24
    3936:	41 c0       	rjmp	.+130    	; 0x39ba <main+0x75a>
		{
			if (compare_time != i_time)
    3938:	40 91 c7 03 	lds	r20, 0x03C7
    393c:	50 91 c8 03 	lds	r21, 0x03C8
    3940:	60 91 c9 03 	lds	r22, 0x03C9
    3944:	70 91 ca 03 	lds	r23, 0x03CA
    3948:	80 91 cb 03 	lds	r24, 0x03CB
    394c:	90 91 cc 03 	lds	r25, 0x03CC
    3950:	a0 91 cd 03 	lds	r26, 0x03CD
    3954:	b0 91 ce 03 	lds	r27, 0x03CE
    3958:	48 17       	cp	r20, r24
    395a:	59 07       	cpc	r21, r25
    395c:	6a 07       	cpc	r22, r26
    395e:	7b 07       	cpc	r23, r27
    3960:	09 f4       	brne	.+2      	; 0x3964 <main+0x704>
    3962:	77 c0       	rjmp	.+238    	; 0x3a52 <main+0x7f2>
			{
				TFT_PutsInt(Read_temperature(),4,162,15,8,white,back_color);
    3964:	0e 94 77 17 	call	0x2eee	; 0x2eee <Read_temperature>
    3968:	bc 01       	movw	r22, r24
    396a:	88 27       	eor	r24, r24
    396c:	77 fd       	sbrc	r23, 7
    396e:	80 95       	com	r24
    3970:	98 2f       	mov	r25, r24
    3972:	0f 2e       	mov	r0, r31
    3974:	ff e1       	ldi	r31, 0x1F	; 31
    3976:	af 2e       	mov	r10, r31
    3978:	b1 2c       	mov	r11, r1
    397a:	f0 2d       	mov	r31, r0
    397c:	cc 24       	eor	r12, r12
    397e:	ca 94       	dec	r12
    3980:	dc 2c       	mov	r13, r12
    3982:	68 94       	set
    3984:	ee 24       	eor	r14, r14
    3986:	e3 f8       	bld	r14, 3
    3988:	0f e0       	ldi	r16, 0x0F	; 15
    398a:	10 e0       	ldi	r17, 0x00	; 0
    398c:	22 ea       	ldi	r18, 0xA2	; 162
    398e:	30 e0       	ldi	r19, 0x00	; 0
    3990:	44 e0       	ldi	r20, 0x04	; 4
    3992:	50 e0       	ldi	r21, 0x00	; 0
    3994:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
				compare_time = i_time;
    3998:	80 91 cb 03 	lds	r24, 0x03CB
    399c:	90 91 cc 03 	lds	r25, 0x03CC
    39a0:	a0 91 cd 03 	lds	r26, 0x03CD
    39a4:	b0 91 ce 03 	lds	r27, 0x03CE
    39a8:	80 93 c7 03 	sts	0x03C7, r24
    39ac:	90 93 c8 03 	sts	0x03C8, r25
    39b0:	a0 93 c9 03 	sts	0x03C9, r26
    39b4:	b0 93 ca 03 	sts	0x03CA, r27
    39b8:	4c c0       	rjmp	.+152    	; 0x3a52 <main+0x7f2>
			}
		}
		else if (input_f == 9)  //this section is to update the calibration of water
    39ba:	99 e0       	ldi	r25, 0x09	; 9
    39bc:	99 12       	cpse	r9, r25
    39be:	49 c0       	rjmp	.+146    	; 0x3a52 <main+0x7f2>
		{
			TFT_Box(10,69,231,101,white);
    39c0:	0f ef       	ldi	r16, 0xFF	; 255
    39c2:	1f ef       	ldi	r17, 0xFF	; 255
    39c4:	25 e6       	ldi	r18, 0x65	; 101
    39c6:	30 e0       	ldi	r19, 0x00	; 0
    39c8:	47 ee       	ldi	r20, 0xE7	; 231
    39ca:	50 e0       	ldi	r21, 0x00	; 0
    39cc:	65 e4       	ldi	r22, 0x45	; 69
    39ce:	70 e0       	ldi	r23, 0x00	; 0
    39d0:	8a e0       	ldi	r24, 0x0A	; 10
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
			//TFT_Box(10,20,231,54,back_color);
			//TFT_Text("Thermal Calibration",45,140,8,white,back_color);
			TFT_Text("Total pulse counted:",10,15,8,white,back_color);
    39d8:	0f 2e       	mov	r0, r31
    39da:	ff e1       	ldi	r31, 0x1F	; 31
    39dc:	ef 2e       	mov	r14, r31
    39de:	f1 2c       	mov	r15, r1
    39e0:	f0 2d       	mov	r31, r0
    39e2:	28 e0       	ldi	r18, 0x08	; 8
    39e4:	4f e0       	ldi	r20, 0x0F	; 15
    39e6:	50 e0       	ldi	r21, 0x00	; 0
    39e8:	6a e0       	ldi	r22, 0x0A	; 10
    39ea:	70 e0       	ldi	r23, 0x00	; 0
    39ec:	8a e9       	ldi	r24, 0x9A	; 154
    39ee:	91 e0       	ldi	r25, 0x01	; 1
    39f0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			TFT_PutsInt(i_water_hold,-1,178,15,8,white,back_color);
    39f4:	60 91 cf 03 	lds	r22, 0x03CF
    39f8:	70 91 d0 03 	lds	r23, 0x03D0
    39fc:	80 91 d1 03 	lds	r24, 0x03D1
    3a00:	90 91 d2 03 	lds	r25, 0x03D2
    3a04:	0f 2e       	mov	r0, r31
    3a06:	ff e1       	ldi	r31, 0x1F	; 31
    3a08:	af 2e       	mov	r10, r31
    3a0a:	b1 2c       	mov	r11, r1
    3a0c:	f0 2d       	mov	r31, r0
    3a0e:	cc 24       	eor	r12, r12
    3a10:	ca 94       	dec	r12
    3a12:	dc 2c       	mov	r13, r12
    3a14:	68 94       	set
    3a16:	ee 24       	eor	r14, r14
    3a18:	e3 f8       	bld	r14, 3
    3a1a:	0f e0       	ldi	r16, 0x0F	; 15
    3a1c:	10 e0       	ldi	r17, 0x00	; 0
    3a1e:	22 eb       	ldi	r18, 0xB2	; 178
    3a20:	30 e0       	ldi	r19, 0x00	; 0
    3a22:	4f ef       	ldi	r20, 0xFF	; 255
    3a24:	5f ef       	ldi	r21, 0xFF	; 255
    3a26:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_Text("Enter the real value...",10,38,8,white,back_color);
    3a2a:	0f 2e       	mov	r0, r31
    3a2c:	ff e1       	ldi	r31, 0x1F	; 31
    3a2e:	ef 2e       	mov	r14, r31
    3a30:	f1 2c       	mov	r15, r1
    3a32:	f0 2d       	mov	r31, r0
    3a34:	0f ef       	ldi	r16, 0xFF	; 255
    3a36:	1f ef       	ldi	r17, 0xFF	; 255
    3a38:	28 e0       	ldi	r18, 0x08	; 8
    3a3a:	46 e2       	ldi	r20, 0x26	; 38
    3a3c:	50 e0       	ldi	r21, 0x00	; 0
    3a3e:	6a e0       	ldi	r22, 0x0A	; 10
    3a40:	70 e0       	ldi	r23, 0x00	; 0
    3a42:	82 e8       	ldi	r24, 0x82	; 130
    3a44:	91 e0       	ldi	r25, 0x01	; 1
    3a46:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			input_f = 10;
    3a4a:	0f 2e       	mov	r0, r31
    3a4c:	fa e0       	ldi	r31, 0x0A	; 10
    3a4e:	9f 2e       	mov	r9, r31
    3a50:	f0 2d       	mov	r31, r0
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    3a52:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    3a56:	88 23       	and	r24, r24
    3a58:	31 f1       	breq	.+76     	; 0x3aa6 <main+0x846>
		{
			usart_data = usart_getchar();
    3a5a:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 9)
    3a5e:	89 30       	cpi	r24, 0x09	; 9
    3a60:	09 f4       	brne	.+2      	; 0x3a64 <main+0x804>
    3a62:	42 c0       	rjmp	.+132    	; 0x3ae8 <main+0x888>
			{
				usart_data = 0;
				goto btn_9;
			}
			else if (usart_data == 10)
    3a64:	8a 30       	cpi	r24, 0x0A	; 10
    3a66:	09 f4       	brne	.+2      	; 0x3a6a <main+0x80a>
    3a68:	6d c0       	rjmp	.+218    	; 0x3b44 <main+0x8e4>
			{
				usart_data = 0;
				goto btn_0;
			}
			else if (usart_data == 11)
    3a6a:	8b 30       	cpi	r24, 0x0B	; 11
    3a6c:	09 f4       	brne	.+2      	; 0x3a70 <main+0x810>
    3a6e:	93 c0       	rjmp	.+294    	; 0x3b96 <main+0x936>
			{
				usart_data = 0;
				goto btn_del;
			}
			else if (usart_data == 12)
    3a70:	8c 30       	cpi	r24, 0x0C	; 12
    3a72:	09 f4       	brne	.+2      	; 0x3a76 <main+0x816>
    3a74:	cb c0       	rjmp	.+406    	; 0x3c0c <main+0x9ac>
			{
				usart_data = 0;
				goto btn_ok;
			}
			else if (usart_data == 5)
    3a76:	85 30       	cpi	r24, 0x05	; 5
    3a78:	09 f4       	brne	.+2      	; 0x3a7c <main+0x81c>
    3a7a:	47 c1       	rjmp	.+654    	; 0x3d0a <main+0xaaa>
			{
				usart_data = 0;
				goto btn_5;
			}
			else if (usart_data == 6)
    3a7c:	86 30       	cpi	r24, 0x06	; 6
    3a7e:	09 f4       	brne	.+2      	; 0x3a82 <main+0x822>
    3a80:	72 c1       	rjmp	.+740    	; 0x3d66 <main+0xb06>
			{
				usart_data = 0;
				goto btn_6;
			}
			else if (usart_data == 7)
    3a82:	87 30       	cpi	r24, 0x07	; 7
    3a84:	09 f4       	brne	.+2      	; 0x3a88 <main+0x828>
    3a86:	9d c1       	rjmp	.+826    	; 0x3dc2 <main+0xb62>
			{
				usart_data = 0;
				goto btn_7;
			}
			else if (usart_data == 8)
    3a88:	88 30       	cpi	r24, 0x08	; 8
    3a8a:	09 f4       	brne	.+2      	; 0x3a8e <main+0x82e>
    3a8c:	c6 c1       	rjmp	.+908    	; 0x3e1a <main+0xbba>
			{
				usart_data = 0;
				goto btn_8;
			}
			else if (usart_data == 1)
    3a8e:	81 30       	cpi	r24, 0x01	; 1
    3a90:	09 f4       	brne	.+2      	; 0x3a94 <main+0x834>
    3a92:	fa c1       	rjmp	.+1012   	; 0x3e88 <main+0xc28>
			{
				usart_data = 0;
				goto btn_1;
			}
			else if (usart_data == 2)
    3a94:	82 30       	cpi	r24, 0x02	; 2
    3a96:	09 f4       	brne	.+2      	; 0x3a9a <main+0x83a>
    3a98:	25 c2       	rjmp	.+1098   	; 0x3ee4 <main+0xc84>
			{
				usart_data = 0;
				goto btn_2;
			}
			else if (usart_data == 3)
    3a9a:	83 30       	cpi	r24, 0x03	; 3
    3a9c:	09 f4       	brne	.+2      	; 0x3aa0 <main+0x840>
    3a9e:	46 c2       	rjmp	.+1164   	; 0x3f2c <main+0xccc>
			{
				usart_data = 0;
				goto btn_3;
			}
			else if (usart_data == 4)
    3aa0:	84 30       	cpi	r24, 0x04	; 4
    3aa2:	09 f4       	brne	.+2      	; 0x3aa6 <main+0x846>
    3aa4:	65 c2       	rjmp	.+1226   	; 0x3f70 <main+0xd10>
			}
			else usart_data = 0;
		}
		
		
		if (!(PIND & (1<<PD3)))
    3aa6:	83 99       	sbic	0x10, 3	; 16
    3aa8:	7f ce       	rjmp	.-770    	; 0x37a8 <main+0x548>
		{
			Read_TPval(TPval);
    3aaa:	8f 89       	ldd	r24, Y+23	; 0x17
    3aac:	98 8d       	ldd	r25, Y+24	; 0x18
    3aae:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    3ab2:	af e1       	ldi	r26, 0x1F	; 31
    3ab4:	be e4       	ldi	r27, 0x4E	; 78
    3ab6:	11 97       	sbiw	r26, 0x01	; 1
    3ab8:	f1 f7       	brne	.-4      	; 0x3ab6 <main+0x856>
    3aba:	00 c0       	rjmp	.+0      	; 0x3abc <main+0x85c>
    3abc:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    3abe:	8f 89       	ldd	r24, Y+23	; 0x17
    3ac0:	98 8d       	ldd	r25, Y+24	; 0x18
    3ac2:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>36 && TPval[0]<72)  // 9 0 DEL OK 
    3ac6:	89 81       	ldd	r24, Y+1	; 0x01
    3ac8:	9a 81       	ldd	r25, Y+2	; 0x02
    3aca:	9c 01       	movw	r18, r24
    3acc:	25 52       	subi	r18, 0x25	; 37
    3ace:	31 09       	sbc	r19, r1
    3ad0:	23 32       	cpi	r18, 0x23	; 35
    3ad2:	31 05       	cpc	r19, r1
    3ad4:	08 f0       	brcs	.+2      	; 0x3ad8 <main+0x878>
    3ad6:	0a c1       	rjmp	.+532    	; 0x3cec <main+0xa8c>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    3ada:	9c 81       	ldd	r25, Y+4	; 0x04
    3adc:	9c 01       	movw	r18, r24
    3ade:	28 51       	subi	r18, 0x18	; 24
    3ae0:	31 09       	sbc	r19, r1
    3ae2:	21 33       	cpi	r18, 0x31	; 49
    3ae4:	31 05       	cpc	r19, r1
    3ae6:	40 f5       	brcc	.+80     	; 0x3b38 <main+0x8d8>
				{
btn_9:
					TFT_Text("9",mxpos,77,16,black,white);
    3ae8:	ee 24       	eor	r14, r14
    3aea:	ea 94       	dec	r14
    3aec:	fe 2c       	mov	r15, r14
    3aee:	00 e0       	ldi	r16, 0x00	; 0
    3af0:	10 e0       	ldi	r17, 0x00	; 0
    3af2:	20 e1       	ldi	r18, 0x10	; 16
    3af4:	4d e4       	ldi	r20, 0x4D	; 77
    3af6:	50 e0       	ldi	r21, 0x00	; 0
    3af8:	b1 01       	movw	r22, r2
    3afa:	80 e7       	ldi	r24, 0x70	; 112
    3afc:	90 e0       	ldi	r25, 0x00	; 0
    3afe:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3b02:	be e0       	ldi	r27, 0x0E	; 14
    3b04:	2b 0e       	add	r2, r27
    3b06:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 9;
    3b08:	44 0c       	add	r4, r4
    3b0a:	55 1c       	adc	r5, r5
    3b0c:	66 1c       	adc	r6, r6
    3b0e:	77 1c       	adc	r7, r7
    3b10:	d3 01       	movw	r26, r6
    3b12:	c2 01       	movw	r24, r4
    3b14:	88 0f       	add	r24, r24
    3b16:	99 1f       	adc	r25, r25
    3b18:	aa 1f       	adc	r26, r26
    3b1a:	bb 1f       	adc	r27, r27
    3b1c:	88 0f       	add	r24, r24
    3b1e:	99 1f       	adc	r25, r25
    3b20:	aa 1f       	adc	r26, r26
    3b22:	bb 1f       	adc	r27, r27
    3b24:	48 0e       	add	r4, r24
    3b26:	59 1e       	adc	r5, r25
    3b28:	6a 1e       	adc	r6, r26
    3b2a:	7b 1e       	adc	r7, r27
    3b2c:	29 e0       	ldi	r18, 0x09	; 9
    3b2e:	42 0e       	add	r4, r18
    3b30:	51 1c       	adc	r5, r1
    3b32:	61 1c       	adc	r6, r1
    3b34:	71 1c       	adc	r7, r1
    3b36:	d7 c0       	rjmp	.+430    	; 0x3ce6 <main+0xa86>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3b38:	9c 01       	movw	r18, r24
    3b3a:	2e 54       	subi	r18, 0x4E	; 78
    3b3c:	31 09       	sbc	r19, r1
    3b3e:	20 33       	cpi	r18, 0x30	; 48
    3b40:	31 05       	cpc	r19, r1
    3b42:	18 f5       	brcc	.+70     	; 0x3b8a <main+0x92a>
				{
btn_0:
					TFT_Text("0",mxpos,77,16,black,white);
    3b44:	ee 24       	eor	r14, r14
    3b46:	ea 94       	dec	r14
    3b48:	fe 2c       	mov	r15, r14
    3b4a:	00 e0       	ldi	r16, 0x00	; 0
    3b4c:	10 e0       	ldi	r17, 0x00	; 0
    3b4e:	20 e1       	ldi	r18, 0x10	; 16
    3b50:	4d e4       	ldi	r20, 0x4D	; 77
    3b52:	50 e0       	ldi	r21, 0x00	; 0
    3b54:	b1 01       	movw	r22, r2
    3b56:	8b e5       	ldi	r24, 0x5B	; 91
    3b58:	93 e0       	ldi	r25, 0x03	; 3
    3b5a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3b5e:	8e e0       	ldi	r24, 0x0E	; 14
    3b60:	28 0e       	add	r2, r24
    3b62:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10);
    3b64:	44 0c       	add	r4, r4
    3b66:	55 1c       	adc	r5, r5
    3b68:	66 1c       	adc	r6, r6
    3b6a:	77 1c       	adc	r7, r7
    3b6c:	d3 01       	movw	r26, r6
    3b6e:	c2 01       	movw	r24, r4
    3b70:	88 0f       	add	r24, r24
    3b72:	99 1f       	adc	r25, r25
    3b74:	aa 1f       	adc	r26, r26
    3b76:	bb 1f       	adc	r27, r27
    3b78:	88 0f       	add	r24, r24
    3b7a:	99 1f       	adc	r25, r25
    3b7c:	aa 1f       	adc	r26, r26
    3b7e:	bb 1f       	adc	r27, r27
    3b80:	48 0e       	add	r4, r24
    3b82:	59 1e       	adc	r5, r25
    3b84:	6a 1e       	adc	r6, r26
    3b86:	7b 1e       	adc	r7, r27
    3b88:	ae c0       	rjmp	.+348    	; 0x3ce6 <main+0xa86>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3b8a:	9c 01       	movw	r18, r24
    3b8c:	22 58       	subi	r18, 0x82	; 130
    3b8e:	31 09       	sbc	r19, r1
    3b90:	23 33       	cpi	r18, 0x33	; 51
    3b92:	31 05       	cpc	r19, r1
    3b94:	b0 f5       	brcc	.+108    	; 0x3c02 <main+0x9a2>
				{
btn_del:
					if (mxpos>13)
    3b96:	9e e0       	ldi	r25, 0x0E	; 14
    3b98:	29 16       	cp	r2, r25
    3b9a:	31 04       	cpc	r3, r1
    3b9c:	d8 f0       	brcs	.+54     	; 0x3bd4 <main+0x974>
					{
						mxpos-=14;
    3b9e:	ae e0       	ldi	r26, 0x0E	; 14
    3ba0:	2a 1a       	sub	r2, r26
    3ba2:	31 08       	sbc	r3, r1
						TFT_Text(" ",mxpos,77,16,black,white);
    3ba4:	ee 24       	eor	r14, r14
    3ba6:	ea 94       	dec	r14
    3ba8:	fe 2c       	mov	r15, r14
    3baa:	00 e0       	ldi	r16, 0x00	; 0
    3bac:	10 e0       	ldi	r17, 0x00	; 0
    3bae:	20 e1       	ldi	r18, 0x10	; 16
    3bb0:	4d e4       	ldi	r20, 0x4D	; 77
    3bb2:	50 e0       	ldi	r21, 0x00	; 0
    3bb4:	b1 01       	movw	r22, r2
    3bb6:	82 e1       	ldi	r24, 0x12	; 18
    3bb8:	93 e0       	ldi	r25, 0x03	; 3
    3bba:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
						kp_val = (kp_val / 10);
    3bbe:	c3 01       	movw	r24, r6
    3bc0:	b2 01       	movw	r22, r4
    3bc2:	2a e0       	ldi	r18, 0x0A	; 10
    3bc4:	30 e0       	ldi	r19, 0x00	; 0
    3bc6:	40 e0       	ldi	r20, 0x00	; 0
    3bc8:	50 e0       	ldi	r21, 0x00	; 0
    3bca:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    3bce:	29 01       	movw	r4, r18
    3bd0:	3a 01       	movw	r6, r20
    3bd2:	89 c0       	rjmp	.+274    	; 0x3ce6 <main+0xa86>
					}
					else
					{
						if (input_f == 2)
    3bd4:	b2 e0       	ldi	r27, 0x02	; 2
    3bd6:	9b 16       	cp	r9, r27
    3bd8:	09 f4       	brne	.+2      	; 0x3bdc <main+0x97c>
    3bda:	c3 cc       	rjmp	.-1658   	; 0x3562 <main+0x302>
						{
							input_f = 0;
							goto selection;
						}
						else if (input_f == 4)
    3bdc:	24 e0       	ldi	r18, 0x04	; 4
    3bde:	92 16       	cp	r9, r18
    3be0:	09 f4       	brne	.+2      	; 0x3be4 <main+0x984>
    3be2:	d3 cd       	rjmp	.-1114   	; 0x378a <main+0x52a>
						{
							input_f = 1;
							goto button_operation;
						}
						else if (input_f == 6)
    3be4:	86 e0       	ldi	r24, 0x06	; 6
    3be6:	98 16       	cp	r9, r24
    3be8:	09 f4       	brne	.+2      	; 0x3bec <main+0x98c>
    3bea:	d2 cd       	rjmp	.-1116   	; 0x3790 <main+0x530>
						{
							input_f = 3;
							goto button_operation;
						}
						else if (input_f == 8 || input_f == 10)
    3bec:	89 2d       	mov	r24, r9
    3bee:	8d 7f       	andi	r24, 0xFD	; 253
    3bf0:	88 30       	cpi	r24, 0x08	; 8
    3bf2:	09 f0       	breq	.+2      	; 0x3bf6 <main+0x996>
    3bf4:	78 c0       	rjmp	.+240    	; 0x3ce6 <main+0xa86>
    3bf6:	4f 82       	std	Y+7, r4	; 0x07
    3bf8:	58 86       	std	Y+8, r5	; 0x08
    3bfa:	69 86       	std	Y+9, r6	; 0x09
    3bfc:	7a 86       	std	Y+10, r7	; 0x0a
    3bfe:	0c 94 9f 28 	jmp	0x513e	; 0x513e <main+0x1ede>
							input_f = 0;
							goto settings_calibration;
						}
					}				
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3c02:	88 5b       	subi	r24, 0xB8	; 184
    3c04:	91 09       	sbc	r25, r1
    3c06:	c4 97       	sbiw	r24, 0x34	; 52
    3c08:	08 f0       	brcs	.+2      	; 0x3c0c <main+0x9ac>
    3c0a:	6d c0       	rjmp	.+218    	; 0x3ce6 <main+0xa86>
				{
btn_ok:
					if (input_f == 2)
    3c0c:	92 e0       	ldi	r25, 0x02	; 2
    3c0e:	99 16       	cp	r9, r25
    3c10:	09 f4       	brne	.+2      	; 0x3c14 <main+0x9b4>
    3c12:	4f c0       	rjmp	.+158    	; 0x3cb2 <main+0xa52>
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
					}
					else if (input_f == 4)
    3c14:	a4 e0       	ldi	r26, 0x04	; 4
    3c16:	9a 16       	cp	r9, r26
    3c18:	09 f4       	brne	.+2      	; 0x3c1c <main+0x9bc>
    3c1a:	57 c0       	rjmp	.+174    	; 0x3cca <main+0xa6a>
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
					}
					else if (input_f == 6)
    3c1c:	b6 e0       	ldi	r27, 0x06	; 6
    3c1e:	9b 16       	cp	r9, r27
    3c20:	09 f4       	brne	.+2      	; 0x3c24 <main+0x9c4>
    3c22:	89 c2       	rjmp	.+1298   	; 0x4136 <main+0xed6>
						kp_val = 0;
						mxpos = 13;
						input_f = 0;
						break;
					}
					else if (input_f == 8)
    3c24:	28 e0       	ldi	r18, 0x08	; 8
    3c26:	92 12       	cpse	r9, r18
    3c28:	21 c0       	rjmp	.+66     	; 0x3c6c <main+0xa0c>
    3c2a:	4f 82       	std	Y+7, r4	; 0x07
    3c2c:	58 86       	std	Y+8, r5	; 0x08
    3c2e:	69 86       	std	Y+9, r6	; 0x09
    3c30:	7a 86       	std	Y+10, r7	; 0x0a
					{
						eeprom_update_word(&temp_divider_hold,(Read_temperature() * 100UL) / (uint32_t)kp_val);
    3c32:	0e 94 77 17 	call	0x2eee	; 0x2eee <Read_temperature>
    3c36:	24 e6       	ldi	r18, 0x64	; 100
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	dc 01       	movw	r26, r24
    3c3c:	0e 94 21 2f 	call	0x5e42	; 0x5e42 <__usmulhisi3>
    3c40:	2f 81       	ldd	r18, Y+7	; 0x07
    3c42:	38 85       	ldd	r19, Y+8	; 0x08
    3c44:	49 85       	ldd	r20, Y+9	; 0x09
    3c46:	5a 85       	ldd	r21, Y+10	; 0x0a
    3c48:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    3c4c:	b9 01       	movw	r22, r18
    3c4e:	82 e0       	ldi	r24, 0x02	; 2
    3c50:	90 e0       	ldi	r25, 0x00	; 0
    3c52:	0e 94 fd 30 	call	0x61fa	; 0x61fa <__eeupd_word_m32>
						kp_val = 0;
    3c56:	1f 82       	std	Y+7, r1	; 0x07
    3c58:	18 86       	std	Y+8, r1	; 0x08
    3c5a:	19 86       	std	Y+9, r1	; 0x09
    3c5c:	1a 86       	std	Y+10, r1	; 0x0a
						mxpos = 13;
    3c5e:	0f 2e       	mov	r0, r31
    3c60:	fd e0       	ldi	r31, 0x0D	; 13
    3c62:	2f 2e       	mov	r2, r31
    3c64:	f0 2d       	mov	r31, r0
    3c66:	31 2c       	mov	r3, r1
						input_f = 0;
						goto settings_calibration;
    3c68:	0c 94 9f 28 	jmp	0x513e	; 0x513e <main+0x1ede>
					}
					else if (input_f == 10)
    3c6c:	8a e0       	ldi	r24, 0x0A	; 10
    3c6e:	98 12       	cpse	r9, r24
    3c70:	3a c0       	rjmp	.+116    	; 0x3ce6 <main+0xa86>
					{
						eeprom_update_word(&water_flow_divider_hold,(i_water_hold * 100UL) / (uint32_t)kp_val);
    3c72:	20 91 cf 03 	lds	r18, 0x03CF
    3c76:	30 91 d0 03 	lds	r19, 0x03D0
    3c7a:	40 91 d1 03 	lds	r20, 0x03D1
    3c7e:	50 91 d2 03 	lds	r21, 0x03D2
    3c82:	a4 e6       	ldi	r26, 0x64	; 100
    3c84:	b0 e0       	ldi	r27, 0x00	; 0
    3c86:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    3c8a:	a3 01       	movw	r20, r6
    3c8c:	92 01       	movw	r18, r4
    3c8e:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    3c92:	b9 01       	movw	r22, r18
    3c94:	80 e0       	ldi	r24, 0x00	; 0
    3c96:	90 e0       	ldi	r25, 0x00	; 0
    3c98:	0e 94 fd 30 	call	0x61fa	; 0x61fa <__eeupd_word_m32>
						kp_val = 0;
    3c9c:	1f 82       	std	Y+7, r1	; 0x07
    3c9e:	18 86       	std	Y+8, r1	; 0x08
    3ca0:	19 86       	std	Y+9, r1	; 0x09
    3ca2:	1a 86       	std	Y+10, r1	; 0x0a
						mxpos = 13;
    3ca4:	0f 2e       	mov	r0, r31
    3ca6:	fd e0       	ldi	r31, 0x0D	; 13
    3ca8:	2f 2e       	mov	r2, r31
    3caa:	f0 2d       	mov	r31, r0
    3cac:	31 2c       	mov	r3, r1
						input_f = 0;
						goto settings_calibration;
    3cae:	0c 94 9f 28 	jmp	0x513e	; 0x513e <main+0x1ede>
    3cb2:	4b 86       	std	Y+11, r4	; 0x0b
    3cb4:	5c 86       	std	Y+12, r5	; 0x0c
    3cb6:	6d 86       	std	Y+13, r6	; 0x0d
    3cb8:	7e 86       	std	Y+14, r7	; 0x0e
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
    3cba:	98 2c       	mov	r9, r8
				{
btn_ok:
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
    3cbc:	41 2c       	mov	r4, r1
    3cbe:	51 2c       	mov	r5, r1
    3cc0:	61 2c       	mov	r6, r1
    3cc2:	71 2c       	mov	r7, r1
						mxpos = 13;
    3cc4:	29 a4       	ldd	r2, Y+41	; 0x29
    3cc6:	3a a4       	ldd	r3, Y+42	; 0x2a
    3cc8:	0e c0       	rjmp	.+28     	; 0x3ce6 <main+0xa86>
    3cca:	4f 86       	std	Y+15, r4	; 0x0f
    3ccc:	58 8a       	std	Y+16, r5	; 0x10
    3cce:	69 8a       	std	Y+17, r6	; 0x11
    3cd0:	7a 8a       	std	Y+18, r7	; 0x12
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
    3cd2:	0f 2e       	mov	r0, r31
    3cd4:	f5 e0       	ldi	r31, 0x05	; 5
    3cd6:	9f 2e       	mov	r9, r31
    3cd8:	f0 2d       	mov	r31, r0
						input_f = 3;
					}
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
    3cda:	41 2c       	mov	r4, r1
    3cdc:	51 2c       	mov	r5, r1
    3cde:	61 2c       	mov	r6, r1
    3ce0:	71 2c       	mov	r7, r1
						mxpos = 13;
    3ce2:	29 a4       	ldd	r2, Y+41	; 0x29
    3ce4:	3a a4       	ldd	r3, Y+42	; 0x2a
						mxpos = 13;
						input_f = 0;
						goto settings_calibration;
					}
				}
				while (!(PIND & (1<<PD3)));
    3ce6:	83 9b       	sbis	0x10, 3	; 16
    3ce8:	fe cf       	rjmp	.-4      	; 0x3ce6 <main+0xa86>
    3cea:	61 c1       	rjmp	.+706    	; 0x3fae <main+0xd4e>
			}
			else if (TPval[0]>75 && TPval[0]<112)  // 5 6 7 8 
    3cec:	9c 01       	movw	r18, r24
    3cee:	2c 54       	subi	r18, 0x4C	; 76
    3cf0:	31 09       	sbc	r19, r1
    3cf2:	24 32       	cpi	r18, 0x24	; 36
    3cf4:	31 05       	cpc	r19, r1
    3cf6:	08 f0       	brcs	.+2      	; 0x3cfa <main+0xa9a>
    3cf8:	ba c0       	rjmp	.+372    	; 0x3e6e <main+0xc0e>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3cfa:	8b 81       	ldd	r24, Y+3	; 0x03
    3cfc:	9c 81       	ldd	r25, Y+4	; 0x04
    3cfe:	9c 01       	movw	r18, r24
    3d00:	28 51       	subi	r18, 0x18	; 24
    3d02:	31 09       	sbc	r19, r1
    3d04:	21 33       	cpi	r18, 0x31	; 49
    3d06:	31 05       	cpc	r19, r1
    3d08:	40 f5       	brcc	.+80     	; 0x3d5a <main+0xafa>
				{
btn_5:
					TFT_Text("5",mxpos,77,16,black,white);
    3d0a:	ee 24       	eor	r14, r14
    3d0c:	ea 94       	dec	r14
    3d0e:	fe 2c       	mov	r15, r14
    3d10:	00 e0       	ldi	r16, 0x00	; 0
    3d12:	10 e0       	ldi	r17, 0x00	; 0
    3d14:	20 e1       	ldi	r18, 0x10	; 16
    3d16:	4d e4       	ldi	r20, 0x4D	; 77
    3d18:	50 e0       	ldi	r21, 0x00	; 0
    3d1a:	b1 01       	movw	r22, r2
    3d1c:	88 e6       	ldi	r24, 0x68	; 104
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3d24:	9e e0       	ldi	r25, 0x0E	; 14
    3d26:	29 0e       	add	r2, r25
    3d28:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 5;
    3d2a:	44 0c       	add	r4, r4
    3d2c:	55 1c       	adc	r5, r5
    3d2e:	66 1c       	adc	r6, r6
    3d30:	77 1c       	adc	r7, r7
    3d32:	d3 01       	movw	r26, r6
    3d34:	c2 01       	movw	r24, r4
    3d36:	88 0f       	add	r24, r24
    3d38:	99 1f       	adc	r25, r25
    3d3a:	aa 1f       	adc	r26, r26
    3d3c:	bb 1f       	adc	r27, r27
    3d3e:	88 0f       	add	r24, r24
    3d40:	99 1f       	adc	r25, r25
    3d42:	aa 1f       	adc	r26, r26
    3d44:	bb 1f       	adc	r27, r27
    3d46:	48 0e       	add	r4, r24
    3d48:	59 1e       	adc	r5, r25
    3d4a:	6a 1e       	adc	r6, r26
    3d4c:	7b 1e       	adc	r7, r27
    3d4e:	a5 e0       	ldi	r26, 0x05	; 5
    3d50:	4a 0e       	add	r4, r26
    3d52:	51 1c       	adc	r5, r1
    3d54:	61 1c       	adc	r6, r1
    3d56:	71 1c       	adc	r7, r1
    3d58:	87 c0       	rjmp	.+270    	; 0x3e68 <main+0xc08>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3d5a:	9c 01       	movw	r18, r24
    3d5c:	2e 54       	subi	r18, 0x4E	; 78
    3d5e:	31 09       	sbc	r19, r1
    3d60:	20 33       	cpi	r18, 0x30	; 48
    3d62:	31 05       	cpc	r19, r1
    3d64:	40 f5       	brcc	.+80     	; 0x3db6 <main+0xb56>
				{
btn_6:
					TFT_Text("6",mxpos,77,16,black,white);
    3d66:	ee 24       	eor	r14, r14
    3d68:	ea 94       	dec	r14
    3d6a:	fe 2c       	mov	r15, r14
    3d6c:	00 e0       	ldi	r16, 0x00	; 0
    3d6e:	10 e0       	ldi	r17, 0x00	; 0
    3d70:	20 e1       	ldi	r18, 0x10	; 16
    3d72:	4d e4       	ldi	r20, 0x4D	; 77
    3d74:	50 e0       	ldi	r21, 0x00	; 0
    3d76:	b1 01       	movw	r22, r2
    3d78:	8a e6       	ldi	r24, 0x6A	; 106
    3d7a:	90 e0       	ldi	r25, 0x00	; 0
    3d7c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3d80:	be e0       	ldi	r27, 0x0E	; 14
    3d82:	2b 0e       	add	r2, r27
    3d84:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 6;
    3d86:	44 0c       	add	r4, r4
    3d88:	55 1c       	adc	r5, r5
    3d8a:	66 1c       	adc	r6, r6
    3d8c:	77 1c       	adc	r7, r7
    3d8e:	d3 01       	movw	r26, r6
    3d90:	c2 01       	movw	r24, r4
    3d92:	88 0f       	add	r24, r24
    3d94:	99 1f       	adc	r25, r25
    3d96:	aa 1f       	adc	r26, r26
    3d98:	bb 1f       	adc	r27, r27
    3d9a:	88 0f       	add	r24, r24
    3d9c:	99 1f       	adc	r25, r25
    3d9e:	aa 1f       	adc	r26, r26
    3da0:	bb 1f       	adc	r27, r27
    3da2:	48 0e       	add	r4, r24
    3da4:	59 1e       	adc	r5, r25
    3da6:	6a 1e       	adc	r6, r26
    3da8:	7b 1e       	adc	r7, r27
    3daa:	26 e0       	ldi	r18, 0x06	; 6
    3dac:	42 0e       	add	r4, r18
    3dae:	51 1c       	adc	r5, r1
    3db0:	61 1c       	adc	r6, r1
    3db2:	71 1c       	adc	r7, r1
    3db4:	59 c0       	rjmp	.+178    	; 0x3e68 <main+0xc08>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3db6:	9c 01       	movw	r18, r24
    3db8:	22 58       	subi	r18, 0x82	; 130
    3dba:	31 09       	sbc	r19, r1
    3dbc:	23 33       	cpi	r18, 0x33	; 51
    3dbe:	31 05       	cpc	r19, r1
    3dc0:	40 f5       	brcc	.+80     	; 0x3e12 <main+0xbb2>
				{
btn_7:
					TFT_Text("7",mxpos,77,16,black,white);
    3dc2:	ee 24       	eor	r14, r14
    3dc4:	ea 94       	dec	r14
    3dc6:	fe 2c       	mov	r15, r14
    3dc8:	00 e0       	ldi	r16, 0x00	; 0
    3dca:	10 e0       	ldi	r17, 0x00	; 0
    3dcc:	20 e1       	ldi	r18, 0x10	; 16
    3dce:	4d e4       	ldi	r20, 0x4D	; 77
    3dd0:	50 e0       	ldi	r21, 0x00	; 0
    3dd2:	b1 01       	movw	r22, r2
    3dd4:	8c e6       	ldi	r24, 0x6C	; 108
    3dd6:	90 e0       	ldi	r25, 0x00	; 0
    3dd8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3ddc:	8e e0       	ldi	r24, 0x0E	; 14
    3dde:	28 0e       	add	r2, r24
    3de0:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 7;
    3de2:	44 0c       	add	r4, r4
    3de4:	55 1c       	adc	r5, r5
    3de6:	66 1c       	adc	r6, r6
    3de8:	77 1c       	adc	r7, r7
    3dea:	d3 01       	movw	r26, r6
    3dec:	c2 01       	movw	r24, r4
    3dee:	88 0f       	add	r24, r24
    3df0:	99 1f       	adc	r25, r25
    3df2:	aa 1f       	adc	r26, r26
    3df4:	bb 1f       	adc	r27, r27
    3df6:	88 0f       	add	r24, r24
    3df8:	99 1f       	adc	r25, r25
    3dfa:	aa 1f       	adc	r26, r26
    3dfc:	bb 1f       	adc	r27, r27
    3dfe:	48 0e       	add	r4, r24
    3e00:	59 1e       	adc	r5, r25
    3e02:	6a 1e       	adc	r6, r26
    3e04:	7b 1e       	adc	r7, r27
    3e06:	97 e0       	ldi	r25, 0x07	; 7
    3e08:	49 0e       	add	r4, r25
    3e0a:	51 1c       	adc	r5, r1
    3e0c:	61 1c       	adc	r6, r1
    3e0e:	71 1c       	adc	r7, r1
    3e10:	2b c0       	rjmp	.+86     	; 0x3e68 <main+0xc08>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3e12:	88 5b       	subi	r24, 0xB8	; 184
    3e14:	91 09       	sbc	r25, r1
    3e16:	c4 97       	sbiw	r24, 0x34	; 52
    3e18:	38 f5       	brcc	.+78     	; 0x3e68 <main+0xc08>
				{
btn_8:
					TFT_Text("8",mxpos,77,16,black,white);
    3e1a:	ee 24       	eor	r14, r14
    3e1c:	ea 94       	dec	r14
    3e1e:	fe 2c       	mov	r15, r14
    3e20:	00 e0       	ldi	r16, 0x00	; 0
    3e22:	10 e0       	ldi	r17, 0x00	; 0
    3e24:	20 e1       	ldi	r18, 0x10	; 16
    3e26:	4d e4       	ldi	r20, 0x4D	; 77
    3e28:	50 e0       	ldi	r21, 0x00	; 0
    3e2a:	b1 01       	movw	r22, r2
    3e2c:	8e e6       	ldi	r24, 0x6E	; 110
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3e34:	ae e0       	ldi	r26, 0x0E	; 14
    3e36:	2a 0e       	add	r2, r26
    3e38:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 8;
    3e3a:	44 0c       	add	r4, r4
    3e3c:	55 1c       	adc	r5, r5
    3e3e:	66 1c       	adc	r6, r6
    3e40:	77 1c       	adc	r7, r7
    3e42:	d3 01       	movw	r26, r6
    3e44:	c2 01       	movw	r24, r4
    3e46:	88 0f       	add	r24, r24
    3e48:	99 1f       	adc	r25, r25
    3e4a:	aa 1f       	adc	r26, r26
    3e4c:	bb 1f       	adc	r27, r27
    3e4e:	88 0f       	add	r24, r24
    3e50:	99 1f       	adc	r25, r25
    3e52:	aa 1f       	adc	r26, r26
    3e54:	bb 1f       	adc	r27, r27
    3e56:	48 0e       	add	r4, r24
    3e58:	59 1e       	adc	r5, r25
    3e5a:	6a 1e       	adc	r6, r26
    3e5c:	7b 1e       	adc	r7, r27
    3e5e:	b8 e0       	ldi	r27, 0x08	; 8
    3e60:	4b 0e       	add	r4, r27
    3e62:	51 1c       	adc	r5, r1
    3e64:	61 1c       	adc	r6, r1
    3e66:	71 1c       	adc	r7, r1
				}
				while (!(PIND & (1<<PD3)));
    3e68:	83 9b       	sbis	0x10, 3	; 16
    3e6a:	fe cf       	rjmp	.-4      	; 0x3e68 <main+0xc08>
    3e6c:	a0 c0       	rjmp	.+320    	; 0x3fae <main+0xd4e>
			}
			else if (TPval[0]>115 && TPval[0]<150)  // 1 2 3 4 
    3e6e:	84 57       	subi	r24, 0x74	; 116
    3e70:	91 09       	sbc	r25, r1
    3e72:	82 97       	sbiw	r24, 0x22	; 34
    3e74:	08 f0       	brcs	.+2      	; 0x3e78 <main+0xc18>
    3e76:	9b c0       	rjmp	.+310    	; 0x3fae <main+0xd4e>
			{
				if (TPval[1]>23 && TPval[1]<73)
    3e78:	8b 81       	ldd	r24, Y+3	; 0x03
    3e7a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e7c:	9c 01       	movw	r18, r24
    3e7e:	28 51       	subi	r18, 0x18	; 24
    3e80:	31 09       	sbc	r19, r1
    3e82:	21 33       	cpi	r18, 0x31	; 49
    3e84:	31 05       	cpc	r19, r1
    3e86:	40 f5       	brcc	.+80     	; 0x3ed8 <main+0xc78>
				{
btn_1:
					TFT_Text("1",mxpos,77,16,black,white);
    3e88:	ee 24       	eor	r14, r14
    3e8a:	ea 94       	dec	r14
    3e8c:	fe 2c       	mov	r15, r14
    3e8e:	00 e0       	ldi	r16, 0x00	; 0
    3e90:	10 e0       	ldi	r17, 0x00	; 0
    3e92:	20 e1       	ldi	r18, 0x10	; 16
    3e94:	4d e4       	ldi	r20, 0x4D	; 77
    3e96:	50 e0       	ldi	r21, 0x00	; 0
    3e98:	b1 01       	movw	r22, r2
    3e9a:	80 e6       	ldi	r24, 0x60	; 96
    3e9c:	90 e0       	ldi	r25, 0x00	; 0
    3e9e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3ea2:	2e e0       	ldi	r18, 0x0E	; 14
    3ea4:	22 0e       	add	r2, r18
    3ea6:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 1;
    3ea8:	44 0c       	add	r4, r4
    3eaa:	55 1c       	adc	r5, r5
    3eac:	66 1c       	adc	r6, r6
    3eae:	77 1c       	adc	r7, r7
    3eb0:	d3 01       	movw	r26, r6
    3eb2:	c2 01       	movw	r24, r4
    3eb4:	88 0f       	add	r24, r24
    3eb6:	99 1f       	adc	r25, r25
    3eb8:	aa 1f       	adc	r26, r26
    3eba:	bb 1f       	adc	r27, r27
    3ebc:	88 0f       	add	r24, r24
    3ebe:	99 1f       	adc	r25, r25
    3ec0:	aa 1f       	adc	r26, r26
    3ec2:	bb 1f       	adc	r27, r27
    3ec4:	48 0e       	add	r4, r24
    3ec6:	59 1e       	adc	r5, r25
    3ec8:	6a 1e       	adc	r6, r26
    3eca:	7b 1e       	adc	r7, r27
    3ecc:	8f ef       	ldi	r24, 0xFF	; 255
    3ece:	48 1a       	sub	r4, r24
    3ed0:	58 0a       	sbc	r5, r24
    3ed2:	68 0a       	sbc	r6, r24
    3ed4:	78 0a       	sbc	r7, r24
    3ed6:	69 c0       	rjmp	.+210    	; 0x3faa <main+0xd4a>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    3ed8:	9c 01       	movw	r18, r24
    3eda:	2e 54       	subi	r18, 0x4E	; 78
    3edc:	31 09       	sbc	r19, r1
    3ede:	20 33       	cpi	r18, 0x30	; 48
    3ee0:	31 05       	cpc	r19, r1
    3ee2:	f0 f4       	brcc	.+60     	; 0x3f20 <main+0xcc0>
				{
btn_2:
					TFT_Text("2",mxpos,77,16,black,white);
    3ee4:	ee 24       	eor	r14, r14
    3ee6:	ea 94       	dec	r14
    3ee8:	fe 2c       	mov	r15, r14
    3eea:	00 e0       	ldi	r16, 0x00	; 0
    3eec:	10 e0       	ldi	r17, 0x00	; 0
    3eee:	20 e1       	ldi	r18, 0x10	; 16
    3ef0:	4d e4       	ldi	r20, 0x4D	; 77
    3ef2:	50 e0       	ldi	r21, 0x00	; 0
    3ef4:	b1 01       	movw	r22, r2
    3ef6:	82 e6       	ldi	r24, 0x62	; 98
    3ef8:	90 e0       	ldi	r25, 0x00	; 0
    3efa:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3efe:	9e e0       	ldi	r25, 0x0E	; 14
    3f00:	29 0e       	add	r2, r25
    3f02:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 2;
    3f04:	aa e0       	ldi	r26, 0x0A	; 10
    3f06:	b0 e0       	ldi	r27, 0x00	; 0
    3f08:	a3 01       	movw	r20, r6
    3f0a:	92 01       	movw	r18, r4
    3f0c:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    3f10:	2b 01       	movw	r4, r22
    3f12:	3c 01       	movw	r6, r24
    3f14:	a2 e0       	ldi	r26, 0x02	; 2
    3f16:	4a 0e       	add	r4, r26
    3f18:	51 1c       	adc	r5, r1
    3f1a:	61 1c       	adc	r6, r1
    3f1c:	71 1c       	adc	r7, r1
    3f1e:	45 c0       	rjmp	.+138    	; 0x3faa <main+0xd4a>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    3f20:	9c 01       	movw	r18, r24
    3f22:	22 58       	subi	r18, 0x82	; 130
    3f24:	31 09       	sbc	r19, r1
    3f26:	23 33       	cpi	r18, 0x33	; 51
    3f28:	31 05       	cpc	r19, r1
    3f2a:	f0 f4       	brcc	.+60     	; 0x3f68 <main+0xd08>
				{
btn_3:
					TFT_Text("3",mxpos,77,16,black,white);
    3f2c:	ee 24       	eor	r14, r14
    3f2e:	ea 94       	dec	r14
    3f30:	fe 2c       	mov	r15, r14
    3f32:	00 e0       	ldi	r16, 0x00	; 0
    3f34:	10 e0       	ldi	r17, 0x00	; 0
    3f36:	20 e1       	ldi	r18, 0x10	; 16
    3f38:	4d e4       	ldi	r20, 0x4D	; 77
    3f3a:	50 e0       	ldi	r21, 0x00	; 0
    3f3c:	b1 01       	movw	r22, r2
    3f3e:	84 e6       	ldi	r24, 0x64	; 100
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3f46:	be e0       	ldi	r27, 0x0E	; 14
    3f48:	2b 0e       	add	r2, r27
    3f4a:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 3;
    3f4c:	aa e0       	ldi	r26, 0x0A	; 10
    3f4e:	b0 e0       	ldi	r27, 0x00	; 0
    3f50:	a3 01       	movw	r20, r6
    3f52:	92 01       	movw	r18, r4
    3f54:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    3f58:	2b 01       	movw	r4, r22
    3f5a:	3c 01       	movw	r6, r24
    3f5c:	23 e0       	ldi	r18, 0x03	; 3
    3f5e:	42 0e       	add	r4, r18
    3f60:	51 1c       	adc	r5, r1
    3f62:	61 1c       	adc	r6, r1
    3f64:	71 1c       	adc	r7, r1
    3f66:	21 c0       	rjmp	.+66     	; 0x3faa <main+0xd4a>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    3f68:	88 5b       	subi	r24, 0xB8	; 184
    3f6a:	91 09       	sbc	r25, r1
    3f6c:	c4 97       	sbiw	r24, 0x34	; 52
    3f6e:	e8 f4       	brcc	.+58     	; 0x3faa <main+0xd4a>
				{
btn_4:
					TFT_Text("4",mxpos,77,16,black,white);
    3f70:	ee 24       	eor	r14, r14
    3f72:	ea 94       	dec	r14
    3f74:	fe 2c       	mov	r15, r14
    3f76:	00 e0       	ldi	r16, 0x00	; 0
    3f78:	10 e0       	ldi	r17, 0x00	; 0
    3f7a:	20 e1       	ldi	r18, 0x10	; 16
    3f7c:	4d e4       	ldi	r20, 0x4D	; 77
    3f7e:	50 e0       	ldi	r21, 0x00	; 0
    3f80:	b1 01       	movw	r22, r2
    3f82:	86 e6       	ldi	r24, 0x66	; 102
    3f84:	90 e0       	ldi	r25, 0x00	; 0
    3f86:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
					mxpos+=14;
    3f8a:	8e e0       	ldi	r24, 0x0E	; 14
    3f8c:	28 0e       	add	r2, r24
    3f8e:	31 1c       	adc	r3, r1
					kp_val = (kp_val * 10) + 4;
    3f90:	aa e0       	ldi	r26, 0x0A	; 10
    3f92:	b0 e0       	ldi	r27, 0x00	; 0
    3f94:	a3 01       	movw	r20, r6
    3f96:	92 01       	movw	r18, r4
    3f98:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    3f9c:	2b 01       	movw	r4, r22
    3f9e:	3c 01       	movw	r6, r24
    3fa0:	a4 e0       	ldi	r26, 0x04	; 4
    3fa2:	4a 0e       	add	r4, r26
    3fa4:	51 1c       	adc	r5, r1
    3fa6:	61 1c       	adc	r6, r1
    3fa8:	71 1c       	adc	r7, r1
				}
				while (!(PIND & (1<<PD3)));
    3faa:	83 9b       	sbis	0x10, 3	; 16
    3fac:	fe cf       	rjmp	.-4      	; 0x3faa <main+0xd4a>
    3fae:	bf ef       	ldi	r27, 0xFF	; 255
    3fb0:	20 e7       	ldi	r18, 0x70	; 112
    3fb2:	82 e0       	ldi	r24, 0x02	; 2
    3fb4:	b1 50       	subi	r27, 0x01	; 1
    3fb6:	20 40       	sbci	r18, 0x00	; 0
    3fb8:	80 40       	sbci	r24, 0x00	; 0
    3fba:	e1 f7       	brne	.-8      	; 0x3fb4 <main+0xd54>
    3fbc:	00 c0       	rjmp	.+0      	; 0x3fbe <main+0xd5e>
    3fbe:	00 00       	nop
    3fc0:	f3 cb       	rjmp	.-2074   	; 0x37a8 <main+0x548>
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
					time = 2;
    3fc2:	82 e0       	ldi	r24, 0x02	; 2
    3fc4:	90 e0       	ldi	r25, 0x00	; 0
    3fc6:	a0 e0       	ldi	r26, 0x00	; 0
    3fc8:	b0 e0       	ldi	r27, 0x00	; 0
    3fca:	8b 8b       	std	Y+19, r24	; 0x13
    3fcc:	9c 8b       	std	Y+20, r25	; 0x14
    3fce:	ad 8b       	std	Y+21, r26	; 0x15
    3fd0:	be 8b       	std	Y+22, r27	; 0x16
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
    3fd2:	89 e1       	ldi	r24, 0x19	; 25
    3fd4:	90 e0       	ldi	r25, 0x00	; 0
    3fd6:	a0 e0       	ldi	r26, 0x00	; 0
    3fd8:	b0 e0       	ldi	r27, 0x00	; 0
    3fda:	8f 87       	std	Y+15, r24	; 0x0f
    3fdc:	98 8b       	std	Y+16, r25	; 0x10
    3fde:	a9 8b       	std	Y+17, r26	; 0x11
    3fe0:	ba 8b       	std	Y+18, r27	; 0x12
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
    3fe2:	86 e4       	ldi	r24, 0x46	; 70
    3fe4:	90 e0       	ldi	r25, 0x00	; 0
    3fe6:	a0 e0       	ldi	r26, 0x00	; 0
    3fe8:	b0 e0       	ldi	r27, 0x00	; 0
    3fea:	8b 87       	std	Y+11, r24	; 0x0b
    3fec:	9c 87       	std	Y+12, r25	; 0x0c
    3fee:	ad 87       	std	Y+13, r26	; 0x0d
    3ff0:	be 87       	std	Y+14, r27	; 0x0e
    3ff2:	ae c0       	rjmp	.+348    	; 0x4150 <main+0xef0>
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
					time = 2;
    3ff4:	82 e0       	ldi	r24, 0x02	; 2
    3ff6:	90 e0       	ldi	r25, 0x00	; 0
    3ff8:	a0 e0       	ldi	r26, 0x00	; 0
    3ffa:	b0 e0       	ldi	r27, 0x00	; 0
    3ffc:	8b 8b       	std	Y+19, r24	; 0x13
    3ffe:	9c 8b       	std	Y+20, r25	; 0x14
    4000:	ad 8b       	std	Y+21, r26	; 0x15
    4002:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
    4004:	82 e3       	ldi	r24, 0x32	; 50
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	a0 e0       	ldi	r26, 0x00	; 0
    400a:	b0 e0       	ldi	r27, 0x00	; 0
    400c:	8f 87       	std	Y+15, r24	; 0x0f
    400e:	98 8b       	std	Y+16, r25	; 0x10
    4010:	a9 8b       	std	Y+17, r26	; 0x11
    4012:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
    4014:	86 e4       	ldi	r24, 0x46	; 70
    4016:	90 e0       	ldi	r25, 0x00	; 0
    4018:	a0 e0       	ldi	r26, 0x00	; 0
    401a:	b0 e0       	ldi	r27, 0x00	; 0
    401c:	8b 87       	std	Y+11, r24	; 0x0b
    401e:	9c 87       	std	Y+12, r25	; 0x0c
    4020:	ad 87       	std	Y+13, r26	; 0x0d
    4022:	be 87       	std	Y+14, r27	; 0x0e
    4024:	95 c0       	rjmp	.+298    	; 0x4150 <main+0xef0>
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
					time = 2;
    4026:	82 e0       	ldi	r24, 0x02	; 2
    4028:	90 e0       	ldi	r25, 0x00	; 0
    402a:	a0 e0       	ldi	r26, 0x00	; 0
    402c:	b0 e0       	ldi	r27, 0x00	; 0
    402e:	8b 8b       	std	Y+19, r24	; 0x13
    4030:	9c 8b       	std	Y+20, r25	; 0x14
    4032:	ad 8b       	std	Y+21, r26	; 0x15
    4034:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
    4036:	82 e3       	ldi	r24, 0x32	; 50
    4038:	90 e0       	ldi	r25, 0x00	; 0
    403a:	a0 e0       	ldi	r26, 0x00	; 0
    403c:	b0 e0       	ldi	r27, 0x00	; 0
    403e:	8f 87       	std	Y+15, r24	; 0x0f
    4040:	98 8b       	std	Y+16, r25	; 0x10
    4042:	a9 8b       	std	Y+17, r26	; 0x11
    4044:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
    4046:	8b 87       	std	Y+11, r24	; 0x0b
    4048:	9c 87       	std	Y+12, r25	; 0x0c
    404a:	ad 87       	std	Y+13, r26	; 0x0d
    404c:	be 87       	std	Y+14, r27	; 0x0e
    404e:	80 c0       	rjmp	.+256    	; 0x4150 <main+0xef0>
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
					time = 2;
    4050:	82 e0       	ldi	r24, 0x02	; 2
    4052:	90 e0       	ldi	r25, 0x00	; 0
    4054:	a0 e0       	ldi	r26, 0x00	; 0
    4056:	b0 e0       	ldi	r27, 0x00	; 0
    4058:	8b 8b       	std	Y+19, r24	; 0x13
    405a:	9c 8b       	std	Y+20, r25	; 0x14
    405c:	ad 8b       	std	Y+21, r26	; 0x15
    405e:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
    4060:	82 e3       	ldi	r24, 0x32	; 50
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	a0 e0       	ldi	r26, 0x00	; 0
    4066:	b0 e0       	ldi	r27, 0x00	; 0
    4068:	8f 87       	std	Y+15, r24	; 0x0f
    406a:	98 8b       	std	Y+16, r25	; 0x10
    406c:	a9 8b       	std	Y+17, r26	; 0x11
    406e:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
    4070:	9c e3       	ldi	r25, 0x3C	; 60
    4072:	9b 87       	std	Y+11, r25	; 0x0b
    4074:	1c 86       	std	Y+12, r1	; 0x0c
    4076:	1d 86       	std	Y+13, r1	; 0x0d
    4078:	1e 86       	std	Y+14, r1	; 0x0e
    407a:	6a c0       	rjmp	.+212    	; 0x4150 <main+0xef0>
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
					time = 2;
    407c:	82 e0       	ldi	r24, 0x02	; 2
    407e:	90 e0       	ldi	r25, 0x00	; 0
    4080:	a0 e0       	ldi	r26, 0x00	; 0
    4082:	b0 e0       	ldi	r27, 0x00	; 0
    4084:	8b 8b       	std	Y+19, r24	; 0x13
    4086:	9c 8b       	std	Y+20, r25	; 0x14
    4088:	ad 8b       	std	Y+21, r26	; 0x15
    408a:	be 8b       	std	Y+22, r27	; 0x16
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
					temp = 25;
    408c:	89 e1       	ldi	r24, 0x19	; 25
    408e:	90 e0       	ldi	r25, 0x00	; 0
    4090:	a0 e0       	ldi	r26, 0x00	; 0
    4092:	b0 e0       	ldi	r27, 0x00	; 0
    4094:	8f 87       	std	Y+15, r24	; 0x0f
    4096:	98 8b       	std	Y+16, r25	; 0x10
    4098:	a9 8b       	std	Y+17, r26	; 0x11
    409a:	ba 8b       	std	Y+18, r27	; 0x12
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
task_a:
					water = 70;
    409c:	86 e4       	ldi	r24, 0x46	; 70
    409e:	90 e0       	ldi	r25, 0x00	; 0
    40a0:	a0 e0       	ldi	r26, 0x00	; 0
    40a2:	b0 e0       	ldi	r27, 0x00	; 0
    40a4:	8b 87       	std	Y+11, r24	; 0x0b
    40a6:	9c 87       	std	Y+12, r25	; 0x0c
    40a8:	ad 87       	std	Y+13, r26	; 0x0d
    40aa:	be 87       	std	Y+14, r27	; 0x0e
    40ac:	51 c0       	rjmp	.+162    	; 0x4150 <main+0xef0>
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
					time = 2;
    40ae:	82 e0       	ldi	r24, 0x02	; 2
    40b0:	90 e0       	ldi	r25, 0x00	; 0
    40b2:	a0 e0       	ldi	r26, 0x00	; 0
    40b4:	b0 e0       	ldi	r27, 0x00	; 0
    40b6:	8b 8b       	std	Y+19, r24	; 0x13
    40b8:	9c 8b       	std	Y+20, r25	; 0x14
    40ba:	ad 8b       	std	Y+21, r26	; 0x15
    40bc:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
					temp = 50;
    40be:	82 e3       	ldi	r24, 0x32	; 50
    40c0:	90 e0       	ldi	r25, 0x00	; 0
    40c2:	a0 e0       	ldi	r26, 0x00	; 0
    40c4:	b0 e0       	ldi	r27, 0x00	; 0
    40c6:	8f 87       	std	Y+15, r24	; 0x0f
    40c8:	98 8b       	std	Y+16, r25	; 0x10
    40ca:	a9 8b       	std	Y+17, r26	; 0x11
    40cc:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
task_b:
					water = 70;
    40ce:	86 e4       	ldi	r24, 0x46	; 70
    40d0:	90 e0       	ldi	r25, 0x00	; 0
    40d2:	a0 e0       	ldi	r26, 0x00	; 0
    40d4:	b0 e0       	ldi	r27, 0x00	; 0
    40d6:	8b 87       	std	Y+11, r24	; 0x0b
    40d8:	9c 87       	std	Y+12, r25	; 0x0c
    40da:	ad 87       	std	Y+13, r26	; 0x0d
    40dc:	be 87       	std	Y+14, r27	; 0x0e
    40de:	38 c0       	rjmp	.+112    	; 0x4150 <main+0xef0>
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
					time = 2;
    40e0:	82 e0       	ldi	r24, 0x02	; 2
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	a0 e0       	ldi	r26, 0x00	; 0
    40e6:	b0 e0       	ldi	r27, 0x00	; 0
    40e8:	8b 8b       	std	Y+19, r24	; 0x13
    40ea:	9c 8b       	std	Y+20, r25	; 0x14
    40ec:	ad 8b       	std	Y+21, r26	; 0x15
    40ee:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
					temp = 50;
    40f0:	82 e3       	ldi	r24, 0x32	; 50
    40f2:	90 e0       	ldi	r25, 0x00	; 0
    40f4:	a0 e0       	ldi	r26, 0x00	; 0
    40f6:	b0 e0       	ldi	r27, 0x00	; 0
    40f8:	8f 87       	std	Y+15, r24	; 0x0f
    40fa:	98 8b       	std	Y+16, r25	; 0x10
    40fc:	a9 8b       	std	Y+17, r26	; 0x11
    40fe:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
task_c:
					water = 50;
    4100:	8b 87       	std	Y+11, r24	; 0x0b
    4102:	9c 87       	std	Y+12, r25	; 0x0c
    4104:	ad 87       	std	Y+13, r26	; 0x0d
    4106:	be 87       	std	Y+14, r27	; 0x0e
    4108:	23 c0       	rjmp	.+70     	; 0x4150 <main+0xef0>
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
					time = 2;
    410a:	82 e0       	ldi	r24, 0x02	; 2
    410c:	90 e0       	ldi	r25, 0x00	; 0
    410e:	a0 e0       	ldi	r26, 0x00	; 0
    4110:	b0 e0       	ldi	r27, 0x00	; 0
    4112:	8b 8b       	std	Y+19, r24	; 0x13
    4114:	9c 8b       	std	Y+20, r25	; 0x14
    4116:	ad 8b       	std	Y+21, r26	; 0x15
    4118:	be 8b       	std	Y+22, r27	; 0x16
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
					temp = 50;
    411a:	82 e3       	ldi	r24, 0x32	; 50
    411c:	90 e0       	ldi	r25, 0x00	; 0
    411e:	a0 e0       	ldi	r26, 0x00	; 0
    4120:	b0 e0       	ldi	r27, 0x00	; 0
    4122:	8f 87       	std	Y+15, r24	; 0x0f
    4124:	98 8b       	std	Y+16, r25	; 0x10
    4126:	a9 8b       	std	Y+17, r26	; 0x11
    4128:	ba 8b       	std	Y+18, r27	; 0x12
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
task_d:
					water = 60;
    412a:	9c e3       	ldi	r25, 0x3C	; 60
    412c:	9b 87       	std	Y+11, r25	; 0x0b
    412e:	1c 86       	std	Y+12, r1	; 0x0c
    4130:	1d 86       	std	Y+13, r1	; 0x0d
    4132:	1e 86       	std	Y+14, r1	; 0x0e
    4134:	0d c0       	rjmp	.+26     	; 0x4150 <main+0xef0>
    4136:	4b 8a       	std	Y+19, r4	; 0x13
    4138:	5c 8a       	std	Y+20, r5	; 0x14
    413a:	6d 8a       	std	Y+21, r6	; 0x15
    413c:	7e 8a       	std	Y+22, r7	; 0x16
						input_f = 5;
					}
					else if (input_f == 6)
					{
						time = kp_val;
						kp_val = 0;
    413e:	1f 82       	std	Y+7, r1	; 0x07
    4140:	18 86       	std	Y+8, r1	; 0x08
    4142:	19 86       	std	Y+9, r1	; 0x09
    4144:	1a 86       	std	Y+10, r1	; 0x0a
						mxpos = 13;
    4146:	0f 2e       	mov	r0, r31
    4148:	fd e0       	ldi	r31, 0x0D	; 13
    414a:	2f 2e       	mov	r2, r31
    414c:	f0 2d       	mov	r31, r0
    414e:	31 2c       	mov	r3, r1
	
	//End task Input system
	
	//Start confirmation input
confirmation:
	TFT_Fill(back_color);
    4150:	8f e1       	ldi	r24, 0x1F	; 31
    4152:	90 e0       	ldi	r25, 0x00	; 0
    4154:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Water :      Liter",20,50,8,white,back_color);
    4158:	0f 2e       	mov	r0, r31
    415a:	ff e1       	ldi	r31, 0x1F	; 31
    415c:	ef 2e       	mov	r14, r31
    415e:	f1 2c       	mov	r15, r1
    4160:	f0 2d       	mov	r31, r0
    4162:	0f ef       	ldi	r16, 0xFF	; 255
    4164:	1f ef       	ldi	r17, 0xFF	; 255
    4166:	28 e0       	ldi	r18, 0x08	; 8
    4168:	42 e3       	ldi	r20, 0x32	; 50
    416a:	50 e0       	ldi	r21, 0x00	; 0
    416c:	64 e1       	ldi	r22, 0x14	; 20
    416e:	70 e0       	ldi	r23, 0x00	; 0
    4170:	8f ea       	ldi	r24, 0xAF	; 175
    4172:	91 e0       	ldi	r25, 0x01	; 1
    4174:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,-1,84,50,8,white,back_color);
    4178:	9b 84       	ldd	r9, Y+11	; 0x0b
    417a:	8c 84       	ldd	r8, Y+12	; 0x0c
    417c:	ad 85       	ldd	r26, Y+13	; 0x0d
    417e:	a9 8f       	std	Y+25, r26	; 0x19
    4180:	be 85       	ldd	r27, Y+14	; 0x0e
    4182:	b9 a3       	std	Y+33, r27	; 0x21
    4184:	0f 2e       	mov	r0, r31
    4186:	ff e1       	ldi	r31, 0x1F	; 31
    4188:	af 2e       	mov	r10, r31
    418a:	b1 2c       	mov	r11, r1
    418c:	f0 2d       	mov	r31, r0
    418e:	cc 24       	eor	r12, r12
    4190:	ca 94       	dec	r12
    4192:	dc 2c       	mov	r13, r12
    4194:	68 94       	set
    4196:	ee 24       	eor	r14, r14
    4198:	e3 f8       	bld	r14, 3
    419a:	02 e3       	ldi	r16, 0x32	; 50
    419c:	10 e0       	ldi	r17, 0x00	; 0
    419e:	24 e5       	ldi	r18, 0x54	; 84
    41a0:	30 e0       	ldi	r19, 0x00	; 0
    41a2:	4f ef       	ldi	r20, 0xFF	; 255
    41a4:	5f ef       	ldi	r21, 0xFF	; 255
    41a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    41a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    41aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    41ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    41ae:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Temp. :      Deg. C",20,70,8,white,back_color);
    41b2:	0f 2e       	mov	r0, r31
    41b4:	ff e1       	ldi	r31, 0x1F	; 31
    41b6:	ef 2e       	mov	r14, r31
    41b8:	f1 2c       	mov	r15, r1
    41ba:	f0 2d       	mov	r31, r0
    41bc:	0f ef       	ldi	r16, 0xFF	; 255
    41be:	1f ef       	ldi	r17, 0xFF	; 255
    41c0:	28 e0       	ldi	r18, 0x08	; 8
    41c2:	46 e4       	ldi	r20, 0x46	; 70
    41c4:	50 e0       	ldi	r21, 0x00	; 0
    41c6:	64 e1       	ldi	r22, 0x14	; 20
    41c8:	70 e0       	ldi	r23, 0x00	; 0
    41ca:	82 ec       	ldi	r24, 0xC2	; 194
    41cc:	91 e0       	ldi	r25, 0x01	; 1
    41ce:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,-1,84,70,8,white,back_color);
    41d2:	2f 85       	ldd	r18, Y+15	; 0x0f
    41d4:	2a a3       	std	Y+34, r18	; 0x22
    41d6:	88 89       	ldd	r24, Y+16	; 0x10
    41d8:	8b a3       	std	Y+35, r24	; 0x23
    41da:	99 89       	ldd	r25, Y+17	; 0x11
    41dc:	9c a3       	std	Y+36, r25	; 0x24
    41de:	aa 89       	ldd	r26, Y+18	; 0x12
    41e0:	ad a3       	std	Y+37, r26	; 0x25
    41e2:	68 94       	set
    41e4:	ee 24       	eor	r14, r14
    41e6:	e3 f8       	bld	r14, 3
    41e8:	06 e4       	ldi	r16, 0x46	; 70
    41ea:	10 e0       	ldi	r17, 0x00	; 0
    41ec:	24 e5       	ldi	r18, 0x54	; 84
    41ee:	30 e0       	ldi	r19, 0x00	; 0
    41f0:	4f ef       	ldi	r20, 0xFF	; 255
    41f2:	5f ef       	ldi	r21, 0xFF	; 255
    41f4:	6f 85       	ldd	r22, Y+15	; 0x0f
    41f6:	78 89       	ldd	r23, Y+16	; 0x10
    41f8:	89 89       	ldd	r24, Y+17	; 0x11
    41fa:	9a 89       	ldd	r25, Y+18	; 0x12
    41fc:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Time  :      minute",20,90,8,white,back_color);
    4200:	0f 2e       	mov	r0, r31
    4202:	ff e1       	ldi	r31, 0x1F	; 31
    4204:	ef 2e       	mov	r14, r31
    4206:	f1 2c       	mov	r15, r1
    4208:	f0 2d       	mov	r31, r0
    420a:	0f ef       	ldi	r16, 0xFF	; 255
    420c:	1f ef       	ldi	r17, 0xFF	; 255
    420e:	28 e0       	ldi	r18, 0x08	; 8
    4210:	4a e5       	ldi	r20, 0x5A	; 90
    4212:	50 e0       	ldi	r21, 0x00	; 0
    4214:	64 e1       	ldi	r22, 0x14	; 20
    4216:	70 e0       	ldi	r23, 0x00	; 0
    4218:	86 ed       	ldi	r24, 0xD6	; 214
    421a:	91 e0       	ldi	r25, 0x01	; 1
    421c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,-1,84,90,8,white,back_color);
    4220:	bb 89       	ldd	r27, Y+19	; 0x13
    4222:	bd 8f       	std	Y+29, r27	; 0x1d
    4224:	2c 89       	ldd	r18, Y+20	; 0x14
    4226:	2e a3       	std	Y+38, r18	; 0x26
    4228:	8d 89       	ldd	r24, Y+21	; 0x15
    422a:	8f a3       	std	Y+39, r24	; 0x27
    422c:	9e 89       	ldd	r25, Y+22	; 0x16
    422e:	98 a7       	std	Y+40, r25	; 0x28
    4230:	68 94       	set
    4232:	ee 24       	eor	r14, r14
    4234:	e3 f8       	bld	r14, 3
    4236:	0a e5       	ldi	r16, 0x5A	; 90
    4238:	10 e0       	ldi	r17, 0x00	; 0
    423a:	24 e5       	ldi	r18, 0x54	; 84
    423c:	30 e0       	ldi	r19, 0x00	; 0
    423e:	4f ef       	ldi	r20, 0xFF	; 255
    4240:	5f ef       	ldi	r21, 0xFF	; 255
    4242:	6b 89       	ldd	r22, Y+19	; 0x13
    4244:	7c 89       	ldd	r23, Y+20	; 0x14
    4246:	8d 89       	ldd	r24, Y+21	; 0x15
    4248:	9e 89       	ldd	r25, Y+22	; 0x16
    424a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Box(50,140,190,180,white);
    424e:	0f ef       	ldi	r16, 0xFF	; 255
    4250:	1f ef       	ldi	r17, 0xFF	; 255
    4252:	24 eb       	ldi	r18, 0xB4	; 180
    4254:	30 e0       	ldi	r19, 0x00	; 0
    4256:	4e eb       	ldi	r20, 0xBE	; 190
    4258:	50 e0       	ldi	r21, 0x00	; 0
    425a:	6c e8       	ldi	r22, 0x8C	; 140
    425c:	70 e0       	ldi	r23, 0x00	; 0
    425e:	82 e3       	ldi	r24, 0x32	; 50
    4260:	90 e0       	ldi	r25, 0x00	; 0
    4262:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Box(50,200,190,240,white);
    4266:	20 ef       	ldi	r18, 0xF0	; 240
    4268:	30 e0       	ldi	r19, 0x00	; 0
    426a:	4e eb       	ldi	r20, 0xBE	; 190
    426c:	50 e0       	ldi	r21, 0x00	; 0
    426e:	68 ec       	ldi	r22, 0xC8	; 200
    4270:	70 e0       	ldi	r23, 0x00	; 0
    4272:	82 e3       	ldi	r24, 0x32	; 50
    4274:	90 e0       	ldi	r25, 0x00	; 0
    4276:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("CORRECT !",57,152,16,black,white);
    427a:	ee 24       	eor	r14, r14
    427c:	ea 94       	dec	r14
    427e:	fe 2c       	mov	r15, r14
    4280:	00 e0       	ldi	r16, 0x00	; 0
    4282:	10 e0       	ldi	r17, 0x00	; 0
    4284:	20 e1       	ldi	r18, 0x10	; 16
    4286:	48 e9       	ldi	r20, 0x98	; 152
    4288:	50 e0       	ldi	r21, 0x00	; 0
    428a:	69 e3       	ldi	r22, 0x39	; 57
    428c:	70 e0       	ldi	r23, 0x00	; 0
    428e:	8a ee       	ldi	r24, 0xEA	; 234
    4290:	91 e0       	ldi	r25, 0x01	; 1
    4292:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("INCORRECT",57,212,16,red,white);
    4296:	00 e0       	ldi	r16, 0x00	; 0
    4298:	18 ef       	ldi	r17, 0xF8	; 248
    429a:	20 e1       	ldi	r18, 0x10	; 16
    429c:	44 ed       	ldi	r20, 0xD4	; 212
    429e:	50 e0       	ldi	r21, 0x00	; 0
    42a0:	69 e3       	ldi	r22, 0x39	; 57
    42a2:	70 e0       	ldi	r23, 0x00	; 0
    42a4:	84 ef       	ldi	r24, 0xF4	; 244
    42a6:	91 e0       	ldi	r25, 0x01	; 1
    42a8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    42ac:	83 9b       	sbis	0x10, 3	; 16
    42ae:	fe cf       	rjmp	.-4      	; 0x42ac <main+0x104c>
    42b0:	ff 88       	ldd	r15, Y+23	; 0x17
    42b2:	d8 8c       	ldd	r13, Y+24	; 0x18
	while(1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    42b4:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    42b8:	88 23       	and	r24, r24
    42ba:	39 f0       	breq	.+14     	; 0x42ca <main+0x106a>
		{
			usart_data = usart_getchar();
    42bc:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    42c0:	8c 30       	cpi	r24, 0x0C	; 12
    42c2:	91 f1       	breq	.+100    	; 0x4328 <main+0x10c8>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11)
    42c4:	8b 30       	cpi	r24, 0x0B	; 11
    42c6:	09 f4       	brne	.+2      	; 0x42ca <main+0x106a>
    42c8:	50 c9       	rjmp	.-3424   	; 0x356a <main+0x30a>
				goto selection;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))
    42ca:	83 99       	sbic	0x10, 3	; 16
    42cc:	f3 cf       	rjmp	.-26     	; 0x42b4 <main+0x1054>
		{
			Read_TPval(TPval);
    42ce:	8f 2d       	mov	r24, r15
    42d0:	9d 2d       	mov	r25, r13
    42d2:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    42d6:	af e1       	ldi	r26, 0x1F	; 31
    42d8:	be e4       	ldi	r27, 0x4E	; 78
    42da:	11 97       	sbiw	r26, 0x01	; 1
    42dc:	f1 f7       	brne	.-4      	; 0x42da <main+0x107a>
    42de:	00 c0       	rjmp	.+0      	; 0x42e0 <main+0x1080>
    42e0:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    42e2:	8f 2d       	mov	r24, r15
    42e4:	9d 2d       	mov	r25, r13
    42e6:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>60 && TPval[1]<195)
    42ea:	2b 81       	ldd	r18, Y+3	; 0x03
    42ec:	3c 81       	ldd	r19, Y+4	; 0x04
    42ee:	2d 53       	subi	r18, 0x3D	; 61
    42f0:	31 09       	sbc	r19, r1
    42f2:	26 38       	cpi	r18, 0x86	; 134
    42f4:	31 05       	cpc	r19, r1
    42f6:	f0 f6       	brcc	.-68     	; 0x42b4 <main+0x1054>
			{
				if (TPval[0]>120 && TPval[0]<150)  //Correct button
    42f8:	29 81       	ldd	r18, Y+1	; 0x01
    42fa:	3a 81       	ldd	r19, Y+2	; 0x02
    42fc:	a9 01       	movw	r20, r18
    42fe:	49 57       	subi	r20, 0x79	; 121
    4300:	51 09       	sbc	r21, r1
    4302:	4d 31       	cpi	r20, 0x1D	; 29
    4304:	51 05       	cpc	r21, r1
    4306:	80 f0       	brcs	.+32     	; 0x4328 <main+0x10c8>
				{
					break;
				}
				else if (TPval[0]>75 && TPval[0]<105)  // Incorrect button
    4308:	2c 54       	subi	r18, 0x4C	; 76
    430a:	31 09       	sbc	r19, r1
    430c:	2d 31       	cpi	r18, 0x1D	; 29
    430e:	31 05       	cpc	r19, r1
    4310:	08 f4       	brcc	.+2      	; 0x4314 <main+0x10b4>
    4312:	2b c9       	rjmp	.-3498   	; 0x356a <main+0x30a>
    4314:	bf ef       	ldi	r27, 0xFF	; 255
    4316:	20 e7       	ldi	r18, 0x70	; 112
    4318:	82 e0       	ldi	r24, 0x02	; 2
    431a:	b1 50       	subi	r27, 0x01	; 1
    431c:	20 40       	sbci	r18, 0x00	; 0
    431e:	80 40       	sbci	r24, 0x00	; 0
    4320:	e1 f7       	brne	.-8      	; 0x431a <main+0x10ba>
    4322:	00 c0       	rjmp	.+0      	; 0x4324 <main+0x10c4>
    4324:	00 00       	nop
    4326:	c6 cf       	rjmp	.-116    	; 0x42b4 <main+0x1054>
		}
	}
	//End confirmation input
	
	//Start progress page
	TFT_Fill(back_color);
    4328:	8f e1       	ldi	r24, 0x1F	; 31
    432a:	90 e0       	ldi	r25, 0x00	; 0
    432c:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Progress monitor...",20,20,8,white,back_color);
    4330:	0f 2e       	mov	r0, r31
    4332:	ff e1       	ldi	r31, 0x1F	; 31
    4334:	ef 2e       	mov	r14, r31
    4336:	f1 2c       	mov	r15, r1
    4338:	f0 2d       	mov	r31, r0
    433a:	0f ef       	ldi	r16, 0xFF	; 255
    433c:	1f ef       	ldi	r17, 0xFF	; 255
    433e:	28 e0       	ldi	r18, 0x08	; 8
    4340:	44 e1       	ldi	r20, 0x14	; 20
    4342:	50 e0       	ldi	r21, 0x00	; 0
    4344:	64 e1       	ldi	r22, 0x14	; 20
    4346:	70 e0       	ldi	r23, 0x00	; 0
    4348:	8e ef       	ldi	r24, 0xFE	; 254
    434a:	91 e0       	ldi	r25, 0x01	; 1
    434c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	TFT_Box(30,40,210,56,white);
    4350:	28 e3       	ldi	r18, 0x38	; 56
    4352:	30 e0       	ldi	r19, 0x00	; 0
    4354:	42 ed       	ldi	r20, 0xD2	; 210
    4356:	50 e0       	ldi	r21, 0x00	; 0
    4358:	68 e2       	ldi	r22, 0x28	; 40
    435a:	70 e0       	ldi	r23, 0x00	; 0
    435c:	8e e1       	ldi	r24, 0x1E	; 30
    435e:	90 e0       	ldi	r25, 0x00	; 0
    4360:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,56,210,120,white);
    4364:	28 e7       	ldi	r18, 0x78	; 120
    4366:	30 e0       	ldi	r19, 0x00	; 0
    4368:	42 ed       	ldi	r20, 0xD2	; 210
    436a:	50 e0       	ldi	r21, 0x00	; 0
    436c:	68 e3       	ldi	r22, 0x38	; 56
    436e:	70 e0       	ldi	r23, 0x00	; 0
    4370:	8e e1       	ldi	r24, 0x1E	; 30
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Water:",35,44,8,black,white);
    4378:	ee 24       	eor	r14, r14
    437a:	ea 94       	dec	r14
    437c:	fe 2c       	mov	r15, r14
    437e:	00 e0       	ldi	r16, 0x00	; 0
    4380:	10 e0       	ldi	r17, 0x00	; 0
    4382:	28 e0       	ldi	r18, 0x08	; 8
    4384:	4c e2       	ldi	r20, 0x2C	; 44
    4386:	50 e0       	ldi	r21, 0x00	; 0
    4388:	63 e2       	ldi	r22, 0x23	; 35
    438a:	70 e0       	ldi	r23, 0x00	; 0
    438c:	82 e1       	ldi	r24, 0x12	; 18
    438e:	92 e0       	ldi	r25, 0x02	; 2
    4390:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Valve Off",35,60,8,white,back_color); // Idle, Loading, Complete//On
    4394:	0f 2e       	mov	r0, r31
    4396:	ff e1       	ldi	r31, 0x1F	; 31
    4398:	ef 2e       	mov	r14, r31
    439a:	f1 2c       	mov	r15, r1
    439c:	f0 2d       	mov	r31, r0
    439e:	0f ef       	ldi	r16, 0xFF	; 255
    43a0:	1f ef       	ldi	r17, 0xFF	; 255
    43a2:	28 e0       	ldi	r18, 0x08	; 8
    43a4:	4c e3       	ldi	r20, 0x3C	; 60
    43a6:	50 e0       	ldi	r21, 0x00	; 0
    43a8:	63 e2       	ldi	r22, 0x23	; 35
    43aa:	70 e0       	ldi	r23, 0x00	; 0
    43ac:	89 e1       	ldi	r24, 0x19	; 25
    43ae:	92 e0       	ldi	r25, 0x02	; 2
    43b0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("0   %     0   Liter",43,72,8,white,back_color);
    43b4:	28 e0       	ldi	r18, 0x08	; 8
    43b6:	48 e4       	ldi	r20, 0x48	; 72
    43b8:	50 e0       	ldi	r21, 0x00	; 0
    43ba:	6b e2       	ldi	r22, 0x2B	; 43
    43bc:	70 e0       	ldi	r23, 0x00	; 0
    43be:	8e e2       	ldi	r24, 0x2E	; 46
    43c0:	92 e0       	ldi	r25, 0x02	; 2
    43c2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     Liter",35,84,8,white,back_color);
    43c6:	28 e0       	ldi	r18, 0x08	; 8
    43c8:	44 e5       	ldi	r20, 0x54	; 84
    43ca:	50 e0       	ldi	r21, 0x00	; 0
    43cc:	63 e2       	ldi	r22, 0x23	; 35
    43ce:	70 e0       	ldi	r23, 0x00	; 0
    43d0:	82 e4       	ldi	r24, 0x42	; 66
    43d2:	92 e0       	ldi	r25, 0x02	; 2
    43d4:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,-1,123,84,8,white,back_color);
    43d8:	0f 2e       	mov	r0, r31
    43da:	ff e1       	ldi	r31, 0x1F	; 31
    43dc:	af 2e       	mov	r10, r31
    43de:	b1 2c       	mov	r11, r1
    43e0:	f0 2d       	mov	r31, r0
    43e2:	cc 24       	eor	r12, r12
    43e4:	ca 94       	dec	r12
    43e6:	dc 2c       	mov	r13, r12
    43e8:	68 94       	set
    43ea:	ee 24       	eor	r14, r14
    43ec:	e3 f8       	bld	r14, 3
    43ee:	04 e5       	ldi	r16, 0x54	; 84
    43f0:	10 e0       	ldi	r17, 0x00	; 0
    43f2:	2b e7       	ldi	r18, 0x7B	; 123
    43f4:	30 e0       	ldi	r19, 0x00	; 0
    43f6:	4f ef       	ldi	r20, 0xFF	; 255
    43f8:	5f ef       	ldi	r21, 0xFF	; 255
    43fa:	69 2d       	mov	r22, r9
    43fc:	78 2d       	mov	r23, r8
    43fe:	89 8d       	ldd	r24, Y+25	; 0x19
    4400:	99 a1       	ldd	r25, Y+33	; 0x21
    4402:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Remaining:     Liter",35,102,8,white,back_color);
    4406:	0f 2e       	mov	r0, r31
    4408:	ff e1       	ldi	r31, 0x1F	; 31
    440a:	ef 2e       	mov	r14, r31
    440c:	f1 2c       	mov	r15, r1
    440e:	f0 2d       	mov	r31, r0
    4410:	0f ef       	ldi	r16, 0xFF	; 255
    4412:	1f ef       	ldi	r17, 0xFF	; 255
    4414:	28 e0       	ldi	r18, 0x08	; 8
    4416:	46 e6       	ldi	r20, 0x66	; 102
    4418:	50 e0       	ldi	r21, 0x00	; 0
    441a:	63 e2       	ldi	r22, 0x23	; 35
    441c:	70 e0       	ldi	r23, 0x00	; 0
    441e:	87 e5       	ldi	r24, 0x57	; 87
    4420:	92 e0       	ldi	r25, 0x02	; 2
    4422:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(water,4,123,102,8,white,back_color);
    4426:	68 94       	set
    4428:	ee 24       	eor	r14, r14
    442a:	e3 f8       	bld	r14, 3
    442c:	06 e6       	ldi	r16, 0x66	; 102
    442e:	10 e0       	ldi	r17, 0x00	; 0
    4430:	2b e7       	ldi	r18, 0x7B	; 123
    4432:	30 e0       	ldi	r19, 0x00	; 0
    4434:	44 e0       	ldi	r20, 0x04	; 4
    4436:	50 e0       	ldi	r21, 0x00	; 0
    4438:	69 2d       	mov	r22, r9
    443a:	78 2d       	mov	r23, r8
    443c:	89 8d       	ldd	r24, Y+25	; 0x19
    443e:	99 a1       	ldd	r25, Y+33	; 0x21
    4440:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	TFT_Box(30,128,210,144,white);
    4444:	0f ef       	ldi	r16, 0xFF	; 255
    4446:	1f ef       	ldi	r17, 0xFF	; 255
    4448:	20 e9       	ldi	r18, 0x90	; 144
    444a:	30 e0       	ldi	r19, 0x00	; 0
    444c:	42 ed       	ldi	r20, 0xD2	; 210
    444e:	50 e0       	ldi	r21, 0x00	; 0
    4450:	60 e8       	ldi	r22, 0x80	; 128
    4452:	70 e0       	ldi	r23, 0x00	; 0
    4454:	8e e1       	ldi	r24, 0x1E	; 30
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,144,210,208,white);
    445c:	20 ed       	ldi	r18, 0xD0	; 208
    445e:	30 e0       	ldi	r19, 0x00	; 0
    4460:	42 ed       	ldi	r20, 0xD2	; 210
    4462:	50 e0       	ldi	r21, 0x00	; 0
    4464:	60 e9       	ldi	r22, 0x90	; 144
    4466:	70 e0       	ldi	r23, 0x00	; 0
    4468:	8e e1       	ldi	r24, 0x1E	; 30
    446a:	90 e0       	ldi	r25, 0x00	; 0
    446c:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Temperature:",35,132,8,black,white);
    4470:	ee 24       	eor	r14, r14
    4472:	ea 94       	dec	r14
    4474:	fe 2c       	mov	r15, r14
    4476:	00 e0       	ldi	r16, 0x00	; 0
    4478:	10 e0       	ldi	r17, 0x00	; 0
    447a:	28 e0       	ldi	r18, 0x08	; 8
    447c:	44 e8       	ldi	r20, 0x84	; 132
    447e:	50 e0       	ldi	r21, 0x00	; 0
    4480:	63 e2       	ldi	r22, 0x23	; 35
    4482:	70 e0       	ldi	r23, 0x00	; 0
    4484:	83 e9       	ldi	r24, 0x93	; 147
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Valve Off",35,148,8,white,back_color);  //NC, Rising, Complete
    448c:	0f 2e       	mov	r0, r31
    448e:	ff e1       	ldi	r31, 0x1F	; 31
    4490:	ef 2e       	mov	r14, r31
    4492:	f1 2c       	mov	r15, r1
    4494:	f0 2d       	mov	r31, r0
    4496:	0f ef       	ldi	r16, 0xFF	; 255
    4498:	1f ef       	ldi	r17, 0xFF	; 255
    449a:	28 e0       	ldi	r18, 0x08	; 8
    449c:	44 e9       	ldi	r20, 0x94	; 148
    449e:	50 e0       	ldi	r21, 0x00	; 0
    44a0:	63 e2       	ldi	r22, 0x23	; 35
    44a2:	70 e0       	ldi	r23, 0x00	; 0
    44a4:	89 e1       	ldi	r24, 0x19	; 25
    44a6:	92 e0       	ldi	r25, 0x02	; 2
    44a8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("0   %     N   Deg.C",43,160,8,white,back_color);
    44ac:	28 e0       	ldi	r18, 0x08	; 8
    44ae:	40 ea       	ldi	r20, 0xA0	; 160
    44b0:	50 e0       	ldi	r21, 0x00	; 0
    44b2:	6b e2       	ldi	r22, 0x2B	; 43
    44b4:	70 e0       	ldi	r23, 0x00	; 0
    44b6:	8c e6       	ldi	r24, 0x6C	; 108
    44b8:	92 e0       	ldi	r25, 0x02	; 2
    44ba:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     Deg.C",35,172,8,white,back_color);
    44be:	28 e0       	ldi	r18, 0x08	; 8
    44c0:	4c ea       	ldi	r20, 0xAC	; 172
    44c2:	50 e0       	ldi	r21, 0x00	; 0
    44c4:	63 e2       	ldi	r22, 0x23	; 35
    44c6:	70 e0       	ldi	r23, 0x00	; 0
    44c8:	80 e8       	ldi	r24, 0x80	; 128
    44ca:	92 e0       	ldi	r25, 0x02	; 2
    44cc:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,-1,123,172,8,white,back_color);
    44d0:	68 94       	set
    44d2:	ee 24       	eor	r14, r14
    44d4:	e3 f8       	bld	r14, 3
    44d6:	0c ea       	ldi	r16, 0xAC	; 172
    44d8:	10 e0       	ldi	r17, 0x00	; 0
    44da:	2b e7       	ldi	r18, 0x7B	; 123
    44dc:	30 e0       	ldi	r19, 0x00	; 0
    44de:	4f ef       	ldi	r20, 0xFF	; 255
    44e0:	5f ef       	ldi	r21, 0xFF	; 255
    44e2:	6a a1       	ldd	r22, Y+34	; 0x22
    44e4:	7b a1       	ldd	r23, Y+35	; 0x23
    44e6:	8c a1       	ldd	r24, Y+36	; 0x24
    44e8:	9d a1       	ldd	r25, Y+37	; 0x25
    44ea:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Remaining:     Deg.C",35,188,8,white,back_color);
    44ee:	0f 2e       	mov	r0, r31
    44f0:	ff e1       	ldi	r31, 0x1F	; 31
    44f2:	ef 2e       	mov	r14, r31
    44f4:	f1 2c       	mov	r15, r1
    44f6:	f0 2d       	mov	r31, r0
    44f8:	0f ef       	ldi	r16, 0xFF	; 255
    44fa:	1f ef       	ldi	r17, 0xFF	; 255
    44fc:	28 e0       	ldi	r18, 0x08	; 8
    44fe:	4c eb       	ldi	r20, 0xBC	; 188
    4500:	50 e0       	ldi	r21, 0x00	; 0
    4502:	63 e2       	ldi	r22, 0x23	; 35
    4504:	70 e0       	ldi	r23, 0x00	; 0
    4506:	85 e9       	ldi	r24, 0x95	; 149
    4508:	92 e0       	ldi	r25, 0x02	; 2
    450a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(temp,3,123,188,8,white,back_color);
    450e:	68 94       	set
    4510:	ee 24       	eor	r14, r14
    4512:	e3 f8       	bld	r14, 3
    4514:	0c eb       	ldi	r16, 0xBC	; 188
    4516:	10 e0       	ldi	r17, 0x00	; 0
    4518:	2b e7       	ldi	r18, 0x7B	; 123
    451a:	30 e0       	ldi	r19, 0x00	; 0
    451c:	43 e0       	ldi	r20, 0x03	; 3
    451e:	50 e0       	ldi	r21, 0x00	; 0
    4520:	6a a1       	ldd	r22, Y+34	; 0x22
    4522:	7b a1       	ldd	r23, Y+35	; 0x23
    4524:	8c a1       	ldd	r24, Y+36	; 0x24
    4526:	9d a1       	ldd	r25, Y+37	; 0x25
    4528:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	TFT_Box(30,216,210,232,white);
    452c:	0f ef       	ldi	r16, 0xFF	; 255
    452e:	1f ef       	ldi	r17, 0xFF	; 255
    4530:	28 ee       	ldi	r18, 0xE8	; 232
    4532:	30 e0       	ldi	r19, 0x00	; 0
    4534:	42 ed       	ldi	r20, 0xD2	; 210
    4536:	50 e0       	ldi	r21, 0x00	; 0
    4538:	68 ed       	ldi	r22, 0xD8	; 216
    453a:	70 e0       	ldi	r23, 0x00	; 0
    453c:	8e e1       	ldi	r24, 0x1E	; 30
    453e:	90 e0       	ldi	r25, 0x00	; 0
    4540:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Rectangle(30,232,210,296,white);
    4544:	28 e2       	ldi	r18, 0x28	; 40
    4546:	31 e0       	ldi	r19, 0x01	; 1
    4548:	42 ed       	ldi	r20, 0xD2	; 210
    454a:	50 e0       	ldi	r21, 0x00	; 0
    454c:	68 ee       	ldi	r22, 0xE8	; 232
    454e:	70 e0       	ldi	r23, 0x00	; 0
    4550:	8e e1       	ldi	r24, 0x1E	; 30
    4552:	90 e0       	ldi	r25, 0x00	; 0
    4554:	0e 94 1b 14 	call	0x2836	; 0x2836 <TFT_Rectangle>
	TFT_Text("Time:",35,220,8,black,white);
    4558:	ee 24       	eor	r14, r14
    455a:	ea 94       	dec	r14
    455c:	fe 2c       	mov	r15, r14
    455e:	00 e0       	ldi	r16, 0x00	; 0
    4560:	10 e0       	ldi	r17, 0x00	; 0
    4562:	28 e0       	ldi	r18, 0x08	; 8
    4564:	4c ed       	ldi	r20, 0xDC	; 220
    4566:	50 e0       	ldi	r21, 0x00	; 0
    4568:	63 e2       	ldi	r22, 0x23	; 35
    456a:	70 e0       	ldi	r23, 0x00	; 0
    456c:	8a ea       	ldi	r24, 0xAA	; 170
    456e:	92 e0       	ldi	r25, 0x02	; 2
    4570:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Status   : Idle",35,236,8,white,back_color);   //Idle , Counting, Complete
    4574:	0f 2e       	mov	r0, r31
    4576:	ff e1       	ldi	r31, 0x1F	; 31
    4578:	ef 2e       	mov	r14, r31
    457a:	f1 2c       	mov	r15, r1
    457c:	f0 2d       	mov	r31, r0
    457e:	0f ef       	ldi	r16, 0xFF	; 255
    4580:	1f ef       	ldi	r17, 0xFF	; 255
    4582:	28 e0       	ldi	r18, 0x08	; 8
    4584:	4c ee       	ldi	r20, 0xEC	; 236
    4586:	50 e0       	ldi	r21, 0x00	; 0
    4588:	63 e2       	ldi	r22, 0x23	; 35
    458a:	70 e0       	ldi	r23, 0x00	; 0
    458c:	80 eb       	ldi	r24, 0xB0	; 176
    458e:	92 e0       	ldi	r25, 0x02	; 2
    4590:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Target   :     min",35,248,8,white,back_color);
    4594:	28 e0       	ldi	r18, 0x08	; 8
    4596:	48 ef       	ldi	r20, 0xF8	; 248
    4598:	50 e0       	ldi	r21, 0x00	; 0
    459a:	63 e2       	ldi	r22, 0x23	; 35
    459c:	70 e0       	ldi	r23, 0x00	; 0
    459e:	80 ec       	ldi	r24, 0xC0	; 192
    45a0:	92 e0       	ldi	r25, 0x02	; 2
    45a2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,-1,123,248,8,white,back_color);
    45a6:	68 94       	set
    45a8:	ee 24       	eor	r14, r14
    45aa:	e3 f8       	bld	r14, 3
    45ac:	08 ef       	ldi	r16, 0xF8	; 248
    45ae:	10 e0       	ldi	r17, 0x00	; 0
    45b0:	2b e7       	ldi	r18, 0x7B	; 123
    45b2:	30 e0       	ldi	r19, 0x00	; 0
    45b4:	4f ef       	ldi	r20, 0xFF	; 255
    45b6:	5f ef       	ldi	r21, 0xFF	; 255
    45b8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    45ba:	7e a1       	ldd	r23, Y+38	; 0x26
    45bc:	8f a1       	ldd	r24, Y+39	; 0x27
    45be:	98 a5       	ldd	r25, Y+40	; 0x28
    45c0:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_Text("Counted  : 0      min",35,260,8,white,back_color);
    45c4:	0f 2e       	mov	r0, r31
    45c6:	ff e1       	ldi	r31, 0x1F	; 31
    45c8:	ef 2e       	mov	r14, r31
    45ca:	f1 2c       	mov	r15, r1
    45cc:	f0 2d       	mov	r31, r0
    45ce:	0f ef       	ldi	r16, 0xFF	; 255
    45d0:	1f ef       	ldi	r17, 0xFF	; 255
    45d2:	28 e0       	ldi	r18, 0x08	; 8
    45d4:	44 e0       	ldi	r20, 0x04	; 4
    45d6:	51 e0       	ldi	r21, 0x01	; 1
    45d8:	63 e2       	ldi	r22, 0x23	; 35
    45da:	70 e0       	ldi	r23, 0x00	; 0
    45dc:	83 ed       	ldi	r24, 0xD3	; 211
    45de:	92 e0       	ldi	r25, 0x02	; 2
    45e0:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Remaining:       min",35,276,8,white,back_color);
    45e4:	28 e0       	ldi	r18, 0x08	; 8
    45e6:	44 e1       	ldi	r20, 0x14	; 20
    45e8:	51 e0       	ldi	r21, 0x01	; 1
    45ea:	63 e2       	ldi	r22, 0x23	; 35
    45ec:	70 e0       	ldi	r23, 0x00	; 0
    45ee:	89 ee       	ldi	r24, 0xE9	; 233
    45f0:	92 e0       	ldi	r25, 0x02	; 2
    45f2:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_PutsInt(time,4,123,276,8,white,back_color);
    45f6:	68 94       	set
    45f8:	ee 24       	eor	r14, r14
    45fa:	e3 f8       	bld	r14, 3
    45fc:	04 e1       	ldi	r16, 0x14	; 20
    45fe:	11 e0       	ldi	r17, 0x01	; 1
    4600:	2b e7       	ldi	r18, 0x7B	; 123
    4602:	30 e0       	ldi	r19, 0x00	; 0
    4604:	44 e0       	ldi	r20, 0x04	; 4
    4606:	50 e0       	ldi	r21, 0x00	; 0
    4608:	6d 8d       	ldd	r22, Y+29	; 0x1d
    460a:	7e a1       	ldd	r23, Y+38	; 0x26
    460c:	8f a1       	ldd	r24, Y+39	; 0x27
    460e:	98 a5       	ldd	r25, Y+40	; 0x28
    4610:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	//Applying one by one method to calculate water, temperature and time measurement
	
	i_water = 0;
    4614:	10 92 d3 03 	sts	0x03D3, r1
    4618:	10 92 d4 03 	sts	0x03D4, r1
    461c:	10 92 d5 03 	sts	0x03D5, r1
    4620:	10 92 d6 03 	sts	0x03D6, r1
	i_time = 0;
    4624:	10 92 cb 03 	sts	0x03CB, r1
    4628:	10 92 cc 03 	sts	0x03CC, r1
    462c:	10 92 cd 03 	sts	0x03CD, r1
    4630:	10 92 ce 03 	sts	0x03CE, r1
	while (1) //This while loop is for water valve open after 1 second and wait until get the relay on feedback
	{
		if (compare_time != i_time)
    4634:	40 91 c7 03 	lds	r20, 0x03C7
    4638:	50 91 c8 03 	lds	r21, 0x03C8
    463c:	60 91 c9 03 	lds	r22, 0x03C9
    4640:	70 91 ca 03 	lds	r23, 0x03CA
    4644:	80 91 cb 03 	lds	r24, 0x03CB
    4648:	90 91 cc 03 	lds	r25, 0x03CC
    464c:	a0 91 cd 03 	lds	r26, 0x03CD
    4650:	b0 91 ce 03 	lds	r27, 0x03CE
    4654:	48 17       	cp	r20, r24
    4656:	59 07       	cpc	r21, r25
    4658:	6a 07       	cpc	r22, r26
    465a:	7b 07       	cpc	r23, r27
    465c:	39 f1       	breq	.+78     	; 0x46ac <main+0x144c>
		{
			usart_putchar(97);
    465e:	81 e6       	ldi	r24, 0x61	; 97
    4660:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    4664:	9f e7       	ldi	r25, 0x7F	; 127
    4666:	a9 ea       	ldi	r26, 0xA9	; 169
    4668:	b3 e0       	ldi	r27, 0x03	; 3
    466a:	91 50       	subi	r25, 0x01	; 1
    466c:	a0 40       	sbci	r26, 0x00	; 0
    466e:	b0 40       	sbci	r27, 0x00	; 0
    4670:	e1 f7       	brne	.-8      	; 0x466a <main+0x140a>
    4672:	00 c0       	rjmp	.+0      	; 0x4674 <main+0x1414>
    4674:	00 00       	nop
			_delay_ms(150);
			usart_putchar(97);//This port pin is for water valve on
    4676:	81 e6       	ldi	r24, 0x61	; 97
    4678:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
			data_send_count = data_send_count + 1;
    467c:	80 91 c2 03 	lds	r24, 0x03C2
    4680:	8f 5f       	subi	r24, 0xFF	; 255
    4682:	80 93 c2 03 	sts	0x03C2, r24
			if (data_send_count > 5)
    4686:	86 30       	cpi	r24, 0x06	; 6
    4688:	08 f0       	brcs	.+2      	; 0x468c <main+0x142c>
    468a:	50 c7       	rjmp	.+3744   	; 0x552c <main+0x22cc>
			{
				goto failure_message;
			}
			compare_time = i_time;
    468c:	80 91 cb 03 	lds	r24, 0x03CB
    4690:	90 91 cc 03 	lds	r25, 0x03CC
    4694:	a0 91 cd 03 	lds	r26, 0x03CD
    4698:	b0 91 ce 03 	lds	r27, 0x03CE
    469c:	80 93 c7 03 	sts	0x03C7, r24
    46a0:	90 93 c8 03 	sts	0x03C8, r25
    46a4:	a0 93 c9 03 	sts	0x03C9, r26
    46a8:	b0 93 ca 03 	sts	0x03CA, r27
		}
			
		if (usart_dthit())  //scan for relay on feedback
    46ac:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    46b0:	88 23       	and	r24, r24
    46b2:	41 f1       	breq	.+80     	; 0x4704 <main+0x14a4>
		{
			usart_data = usart_getchar();
    46b4:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 97)
    46b8:	81 36       	cpi	r24, 0x61	; 97
    46ba:	09 f5       	brne	.+66     	; 0x46fe <main+0x149e>
			{
				usart_data = 0;
				TFT_Text("On ",171,60,8,white,red);
    46bc:	0f 2e       	mov	r0, r31
    46be:	e1 2c       	mov	r14, r1
    46c0:	f8 ef       	ldi	r31, 0xF8	; 248
    46c2:	ff 2e       	mov	r15, r31
    46c4:	f0 2d       	mov	r31, r0
    46c6:	0f ef       	ldi	r16, 0xFF	; 255
    46c8:	1f ef       	ldi	r17, 0xFF	; 255
    46ca:	28 e0       	ldi	r18, 0x08	; 8
    46cc:	4c e3       	ldi	r20, 0x3C	; 60
    46ce:	50 e0       	ldi	r21, 0x00	; 0
    46d0:	6b ea       	ldi	r22, 0xAB	; 171
    46d2:	70 e0       	ldi	r23, 0x00	; 0
    46d4:	8e ef       	ldi	r24, 0xFE	; 254
    46d6:	92 e0       	ldi	r25, 0x02	; 2
    46d8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
				data_send_count = 0;
    46dc:	10 92 c2 03 	sts	0x03C2, r1
		{
			usart_data = usart_getchar();
			if (usart_data == 12)
			{
				usart_data = 0;
				i_water = (water * 100UL)/(uint32_t)water_flow_divider;
    46e0:	a4 e6       	ldi	r26, 0x64	; 100
    46e2:	b0 e0       	ldi	r27, 0x00	; 0
    46e4:	2b 85       	ldd	r18, Y+11	; 0x0b
    46e6:	3c 85       	ldd	r19, Y+12	; 0x0c
    46e8:	4d 85       	ldd	r20, Y+13	; 0x0d
    46ea:	5e 85       	ldd	r21, Y+14	; 0x0e
    46ec:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    46f0:	6d 8f       	std	Y+29, r22	; 0x1d
    46f2:	7e 8f       	std	Y+30, r23	; 0x1e
    46f4:	8f 8f       	std	Y+31, r24	; 0x1f
    46f6:	98 a3       	std	Y+32, r25	; 0x20
    46f8:	59 2c       	mov	r5, r9
    46fa:	f8 2c       	mov	r15, r8
			if (usart_data == 97)
			{
				usart_data = 0;
				TFT_Text("On ",171,60,8,white,red);
				data_send_count = 0;
				break;
    46fc:	3c c0       	rjmp	.+120    	; 0x4776 <main+0x1516>
			}
			else if (usart_data == 12) //OK button to skip
    46fe:	8c 30       	cpi	r24, 0x0C	; 12
    4700:	f1 f4       	brne	.+60     	; 0x473e <main+0x14de>
    4702:	14 c7       	rjmp	.+3624   	; 0x552c <main+0x22cc>
				usart_data = 0;
				goto failure_message; //goto failure message
			}
			else usart_data = 0;
		}
		else if (!(PIND & (1<<PD3)))
    4704:	83 99       	sbic	0x10, 3	; 16
    4706:	1b c0       	rjmp	.+54     	; 0x473e <main+0x14de>
		{
			Read_TPval(TPval);
    4708:	ce 01       	movw	r24, r28
    470a:	01 96       	adiw	r24, 0x01	; 1
    470c:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4710:	8f e1       	ldi	r24, 0x1F	; 31
    4712:	9e e4       	ldi	r25, 0x4E	; 78
    4714:	01 97       	sbiw	r24, 0x01	; 1
    4716:	f1 f7       	brne	.-4      	; 0x4714 <main+0x14b4>
    4718:	00 c0       	rjmp	.+0      	; 0x471a <main+0x14ba>
    471a:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    471c:	ce 01       	movw	r24, r28
    471e:	01 96       	adiw	r24, 0x01	; 1
    4720:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>190 && TPval[0]<222 && TPval[1]>37 && TPval[1]<216)
    4724:	89 81       	ldd	r24, Y+1	; 0x01
    4726:	9a 81       	ldd	r25, Y+2	; 0x02
    4728:	8f 5b       	subi	r24, 0xBF	; 191
    472a:	91 09       	sbc	r25, r1
    472c:	4f 97       	sbiw	r24, 0x1f	; 31
    472e:	38 f4       	brcc	.+14     	; 0x473e <main+0x14de>
    4730:	8b 81       	ldd	r24, Y+3	; 0x03
    4732:	9c 81       	ldd	r25, Y+4	; 0x04
    4734:	86 97       	sbiw	r24, 0x26	; 38
    4736:	82 3b       	cpi	r24, 0xB2	; 178
    4738:	91 05       	cpc	r25, r1
    473a:	08 f4       	brcc	.+2      	; 0x473e <main+0x14de>
    473c:	f7 c6       	rjmp	.+3566   	; 0x552c <main+0x22cc>
			{
				goto failure_message;
			}
		}
		
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    473e:	60 91 cb 03 	lds	r22, 0x03CB
    4742:	70 91 cc 03 	lds	r23, 0x03CC
    4746:	80 91 cd 03 	lds	r24, 0x03CD
    474a:	90 91 ce 03 	lds	r25, 0x03CE
    474e:	aa 24       	eor	r10, r10
    4750:	aa 94       	dec	r10
    4752:	ba 2c       	mov	r11, r10
    4754:	0f 2e       	mov	r0, r31
    4756:	ff e1       	ldi	r31, 0x1F	; 31
    4758:	cf 2e       	mov	r12, r31
    475a:	d1 2c       	mov	r13, r1
    475c:	f0 2d       	mov	r31, r0
    475e:	68 94       	set
    4760:	ee 24       	eor	r14, r14
    4762:	e3 f8       	bld	r14, 3
    4764:	05 e0       	ldi	r16, 0x05	; 5
    4766:	10 e0       	ldi	r17, 0x00	; 0
    4768:	25 e0       	ldi	r18, 0x05	; 5
    476a:	30 e0       	ldi	r19, 0x00	; 0
    476c:	44 e0       	ldi	r20, 0x04	; 4
    476e:	50 e0       	ldi	r21, 0x00	; 0
    4770:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4774:	5f cf       	rjmp	.-322    	; 0x4634 <main+0x13d4>
	
	while (1) //This while loop is for water calculation
	{
		water_read = (i_water * 100UL)/(uint32_t)water_flow_divider; //This is the assumption to calculate water 1 liter = 2 rotation of propeller
    4776:	20 91 d3 03 	lds	r18, 0x03D3
    477a:	30 91 d4 03 	lds	r19, 0x03D4
    477e:	40 91 d5 03 	lds	r20, 0x03D5
    4782:	50 91 d6 03 	lds	r21, 0x03D6
    4786:	a4 e6       	ldi	r26, 0x64	; 100
    4788:	b0 e0       	ldi	r27, 0x00	; 0
    478a:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    478e:	20 91 c3 03 	lds	r18, 0x03C3
    4792:	30 91 c4 03 	lds	r19, 0x03C4
    4796:	40 e0       	ldi	r20, 0x00	; 0
    4798:	50 e0       	ldi	r21, 0x00	; 0
    479a:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    479e:	39 01       	movw	r6, r18
    47a0:	4a 01       	movw	r8, r20
		if (water_read >= water)
    47a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    47a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    47a6:	ad 85       	ldd	r26, Y+13	; 0x0d
    47a8:	be 85       	ldd	r27, Y+14	; 0x0e
    47aa:	28 17       	cp	r18, r24
    47ac:	39 07       	cpc	r19, r25
    47ae:	4a 07       	cpc	r20, r26
    47b0:	5b 07       	cpc	r21, r27
    47b2:	e0 f1       	brcs	.+120    	; 0x482c <main+0x15cc>
		{
			if (compare_time != i_time)
    47b4:	40 91 c7 03 	lds	r20, 0x03C7
    47b8:	50 91 c8 03 	lds	r21, 0x03C8
    47bc:	60 91 c9 03 	lds	r22, 0x03C9
    47c0:	70 91 ca 03 	lds	r23, 0x03CA
    47c4:	80 91 cb 03 	lds	r24, 0x03CB
    47c8:	90 91 cc 03 	lds	r25, 0x03CC
    47cc:	a0 91 cd 03 	lds	r26, 0x03CD
    47d0:	b0 91 ce 03 	lds	r27, 0x03CE
    47d4:	48 17       	cp	r20, r24
    47d6:	59 07       	cpc	r21, r25
    47d8:	6a 07       	cpc	r22, r26
    47da:	7b 07       	cpc	r23, r27
    47dc:	39 f1       	breq	.+78     	; 0x482c <main+0x15cc>
			{
				usart_putchar(98);
    47de:	82 e6       	ldi	r24, 0x62	; 98
    47e0:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    47e4:	9f e7       	ldi	r25, 0x7F	; 127
    47e6:	a9 ea       	ldi	r26, 0xA9	; 169
    47e8:	b3 e0       	ldi	r27, 0x03	; 3
    47ea:	91 50       	subi	r25, 0x01	; 1
    47ec:	a0 40       	sbci	r26, 0x00	; 0
    47ee:	b0 40       	sbci	r27, 0x00	; 0
    47f0:	e1 f7       	brne	.-8      	; 0x47ea <main+0x158a>
    47f2:	00 c0       	rjmp	.+0      	; 0x47f4 <main+0x1594>
    47f4:	00 00       	nop
				_delay_ms(150);
				usart_putchar(98);//This port pin is for water valve off
    47f6:	82 e6       	ldi	r24, 0x62	; 98
    47f8:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
				data_send_count = data_send_count + 1;
    47fc:	80 91 c2 03 	lds	r24, 0x03C2
    4800:	8f 5f       	subi	r24, 0xFF	; 255
    4802:	80 93 c2 03 	sts	0x03C2, r24
				if (data_send_count > 9)
    4806:	8a 30       	cpi	r24, 0x0A	; 10
    4808:	08 f0       	brcs	.+2      	; 0x480c <main+0x15ac>
    480a:	90 c6       	rjmp	.+3360   	; 0x552c <main+0x22cc>
				{
					goto failure_message;
				}
				compare_time = i_time;
    480c:	80 91 cb 03 	lds	r24, 0x03CB
    4810:	90 91 cc 03 	lds	r25, 0x03CC
    4814:	a0 91 cd 03 	lds	r26, 0x03CD
    4818:	b0 91 ce 03 	lds	r27, 0x03CE
    481c:	80 93 c7 03 	sts	0x03C7, r24
    4820:	90 93 c8 03 	sts	0x03C8, r25
    4824:	a0 93 c9 03 	sts	0x03C9, r26
    4828:	b0 93 ca 03 	sts	0x03CA, r27
			}
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    482c:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    4830:	88 23       	and	r24, r24
    4832:	09 f4       	brne	.+2      	; 0x4836 <main+0x15d6>
    4834:	65 c0       	rjmp	.+202    	; 0x4900 <main+0x16a0>
		{
			usart_data = usart_getchar();
    4836:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    483a:	8c 30       	cpi	r24, 0x0C	; 12
    483c:	a9 f4       	brne	.+42     	; 0x4868 <main+0x1608>
			{
				usart_data = 0;
				i_water = (water * 100UL)/(uint32_t)water_flow_divider;
    483e:	20 91 c3 03 	lds	r18, 0x03C3
    4842:	30 91 c4 03 	lds	r19, 0x03C4
    4846:	40 e0       	ldi	r20, 0x00	; 0
    4848:	50 e0       	ldi	r21, 0x00	; 0
    484a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    484c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    484e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4850:	98 a1       	ldd	r25, Y+32	; 0x20
    4852:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4856:	20 93 d3 03 	sts	0x03D3, r18
    485a:	30 93 d4 03 	sts	0x03D4, r19
    485e:	40 93 d5 03 	sts	0x03D5, r20
    4862:	50 93 d6 03 	sts	0x03D6, r21
    4866:	7c c0       	rjmp	.+248    	; 0x4960 <main+0x1700>
			}
			else if (usart_data == 98)
    4868:	82 36       	cpi	r24, 0x62	; 98
    486a:	09 f0       	breq	.+2      	; 0x486e <main+0x160e>
    486c:	79 c0       	rjmp	.+242    	; 0x4960 <main+0x1700>
    486e:	8f 2c       	mov	r8, r15
			{
				usart_data = 0;
				data_send_count = 0;
    4870:	10 92 c2 03 	sts	0x03C2, r1
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	

	TFT_Text("Off",171,60,8,white,back_color);
    4874:	0f 2e       	mov	r0, r31
    4876:	ff e1       	ldi	r31, 0x1F	; 31
    4878:	ef 2e       	mov	r14, r31
    487a:	f1 2c       	mov	r15, r1
    487c:	f0 2d       	mov	r31, r0
    487e:	0f ef       	ldi	r16, 0xFF	; 255
    4880:	1f ef       	ldi	r17, 0xFF	; 255
    4882:	28 e0       	ldi	r18, 0x08	; 8
    4884:	4c e3       	ldi	r20, 0x3C	; 60
    4886:	50 e0       	ldi	r21, 0x00	; 0
    4888:	6b ea       	ldi	r22, 0xAB	; 171
    488a:	70 e0       	ldi	r23, 0x00	; 0
    488c:	8a e2       	ldi	r24, 0x2A	; 42
    488e:	92 e0       	ldi	r25, 0x02	; 2
    4890:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	//Updating last status for water
	TFT_PutsInt(100,-1,43,72,8,white,back_color);
    4894:	0f 2e       	mov	r0, r31
    4896:	ff e1       	ldi	r31, 0x1F	; 31
    4898:	af 2e       	mov	r10, r31
    489a:	b1 2c       	mov	r11, r1
    489c:	f0 2d       	mov	r31, r0
    489e:	cc 24       	eor	r12, r12
    48a0:	ca 94       	dec	r12
    48a2:	dc 2c       	mov	r13, r12
    48a4:	68 94       	set
    48a6:	ee 24       	eor	r14, r14
    48a8:	e3 f8       	bld	r14, 3
    48aa:	08 e4       	ldi	r16, 0x48	; 72
    48ac:	10 e0       	ldi	r17, 0x00	; 0
    48ae:	2b e2       	ldi	r18, 0x2B	; 43
    48b0:	30 e0       	ldi	r19, 0x00	; 0
    48b2:	4f ef       	ldi	r20, 0xFF	; 255
    48b4:	5f ef       	ldi	r21, 0xFF	; 255
    48b6:	64 e6       	ldi	r22, 0x64	; 100
    48b8:	70 e0       	ldi	r23, 0x00	; 0
    48ba:	80 e0       	ldi	r24, 0x00	; 0
    48bc:	90 e0       	ldi	r25, 0x00	; 0
    48be:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(water,-1,123,72,8,white,back_color);
    48c2:	2b e7       	ldi	r18, 0x7B	; 123
    48c4:	30 e0       	ldi	r19, 0x00	; 0
    48c6:	4f ef       	ldi	r20, 0xFF	; 255
    48c8:	5f ef       	ldi	r21, 0xFF	; 255
    48ca:	65 2d       	mov	r22, r5
    48cc:	78 2d       	mov	r23, r8
    48ce:	89 8d       	ldd	r24, Y+25	; 0x19
    48d0:	99 a1       	ldd	r25, Y+33	; 0x21
    48d2:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,4,123,102,8,white,back_color);
    48d6:	06 e6       	ldi	r16, 0x66	; 102
    48d8:	10 e0       	ldi	r17, 0x00	; 0
    48da:	2b e7       	ldi	r18, 0x7B	; 123
    48dc:	30 e0       	ldi	r19, 0x00	; 0
    48de:	44 e0       	ldi	r20, 0x04	; 4
    48e0:	50 e0       	ldi	r21, 0x00	; 0
    48e2:	60 e0       	ldi	r22, 0x00	; 0
    48e4:	70 e0       	ldi	r23, 0x00	; 0
    48e6:	80 e0       	ldi	r24, 0x00	; 0
    48e8:	90 e0       	ldi	r25, 0x00	; 0
    48ea:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
    48ee:	10 92 cb 03 	sts	0x03CB, r1
    48f2:	10 92 cc 03 	sts	0x03CC, r1
    48f6:	10 92 cd 03 	sts	0x03CD, r1
    48fa:	10 92 ce 03 	sts	0x03CE, r1
    48fe:	82 c0       	rjmp	.+260    	; 0x4a04 <main+0x17a4>
				break;
			}
			else usart_data = 0;
		}
		
		else if (!(PIND & (1<<PD3)))
    4900:	83 99       	sbic	0x10, 3	; 16
    4902:	2e c0       	rjmp	.+92     	; 0x4960 <main+0x1700>
		{
			Read_TPval(TPval);
    4904:	ce 01       	movw	r24, r28
    4906:	01 96       	adiw	r24, 0x01	; 1
    4908:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    490c:	8f e1       	ldi	r24, 0x1F	; 31
    490e:	9e e4       	ldi	r25, 0x4E	; 78
    4910:	01 97       	sbiw	r24, 0x01	; 1
    4912:	f1 f7       	brne	.-4      	; 0x4910 <main+0x16b0>
    4914:	00 c0       	rjmp	.+0      	; 0x4916 <main+0x16b6>
    4916:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4918:	ce 01       	movw	r24, r28
    491a:	01 96       	adiw	r24, 0x01	; 1
    491c:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>190 && TPval[0]<222 && TPval[1]>37 && TPval[1]<216)
    4920:	89 81       	ldd	r24, Y+1	; 0x01
    4922:	9a 81       	ldd	r25, Y+2	; 0x02
    4924:	8f 5b       	subi	r24, 0xBF	; 191
    4926:	91 09       	sbc	r25, r1
    4928:	4f 97       	sbiw	r24, 0x1f	; 31
    492a:	d0 f4       	brcc	.+52     	; 0x4960 <main+0x1700>
    492c:	8b 81       	ldd	r24, Y+3	; 0x03
    492e:	9c 81       	ldd	r25, Y+4	; 0x04
    4930:	86 97       	sbiw	r24, 0x26	; 38
    4932:	82 3b       	cpi	r24, 0xB2	; 178
    4934:	91 05       	cpc	r25, r1
    4936:	a0 f4       	brcc	.+40     	; 0x4960 <main+0x1700>
			{
				i_water = (water * 100UL)/(uint32_t)water_flow_divider;
    4938:	20 91 c3 03 	lds	r18, 0x03C3
    493c:	30 91 c4 03 	lds	r19, 0x03C4
    4940:	40 e0       	ldi	r20, 0x00	; 0
    4942:	50 e0       	ldi	r21, 0x00	; 0
    4944:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4946:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4948:	8f 8d       	ldd	r24, Y+31	; 0x1f
    494a:	98 a1       	ldd	r25, Y+32	; 0x20
    494c:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4950:	20 93 d3 03 	sts	0x03D3, r18
    4954:	30 93 d4 03 	sts	0x03D4, r19
    4958:	40 93 d5 03 	sts	0x03D5, r20
    495c:	50 93 d6 03 	sts	0x03D6, r21
			}
		}
		TFT_PutsInt((water_read*100)/water,-1,43,72,8,white,back_color);
    4960:	a4 e6       	ldi	r26, 0x64	; 100
    4962:	b0 e0       	ldi	r27, 0x00	; 0
    4964:	a4 01       	movw	r20, r8
    4966:	93 01       	movw	r18, r6
    4968:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    496c:	2b 85       	ldd	r18, Y+11	; 0x0b
    496e:	3c 85       	ldd	r19, Y+12	; 0x0c
    4970:	4d 85       	ldd	r20, Y+13	; 0x0d
    4972:	5e 85       	ldd	r21, Y+14	; 0x0e
    4974:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4978:	ca 01       	movw	r24, r20
    497a:	b9 01       	movw	r22, r18
    497c:	0f 2e       	mov	r0, r31
    497e:	ff e1       	ldi	r31, 0x1F	; 31
    4980:	af 2e       	mov	r10, r31
    4982:	b1 2c       	mov	r11, r1
    4984:	f0 2d       	mov	r31, r0
    4986:	cc 24       	eor	r12, r12
    4988:	ca 94       	dec	r12
    498a:	dc 2c       	mov	r13, r12
    498c:	68 94       	set
    498e:	ee 24       	eor	r14, r14
    4990:	e3 f8       	bld	r14, 3
    4992:	08 e4       	ldi	r16, 0x48	; 72
    4994:	10 e0       	ldi	r17, 0x00	; 0
    4996:	2b e2       	ldi	r18, 0x2B	; 43
    4998:	30 e0       	ldi	r19, 0x00	; 0
    499a:	4f ef       	ldi	r20, 0xFF	; 255
    499c:	5f ef       	ldi	r21, 0xFF	; 255
    499e:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(water_read,-1,123,72,8,white,back_color);
    49a2:	2b e7       	ldi	r18, 0x7B	; 123
    49a4:	30 e0       	ldi	r19, 0x00	; 0
    49a6:	4f ef       	ldi	r20, 0xFF	; 255
    49a8:	5f ef       	ldi	r21, 0xFF	; 255
    49aa:	c4 01       	movw	r24, r8
    49ac:	b3 01       	movw	r22, r6
    49ae:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
    49b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    49b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    49b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    49b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    49ba:	66 19       	sub	r22, r6
    49bc:	77 09       	sbc	r23, r7
    49be:	88 09       	sbc	r24, r8
    49c0:	99 09       	sbc	r25, r9
    49c2:	06 e6       	ldi	r16, 0x66	; 102
    49c4:	10 e0       	ldi	r17, 0x00	; 0
    49c6:	2b e7       	ldi	r18, 0x7B	; 123
    49c8:	30 e0       	ldi	r19, 0x00	; 0
    49ca:	44 e0       	ldi	r20, 0x04	; 4
    49cc:	50 e0       	ldi	r21, 0x00	; 0
    49ce:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    49d2:	60 91 cb 03 	lds	r22, 0x03CB
    49d6:	70 91 cc 03 	lds	r23, 0x03CC
    49da:	80 91 cd 03 	lds	r24, 0x03CD
    49de:	90 91 ce 03 	lds	r25, 0x03CE
    49e2:	aa 24       	eor	r10, r10
    49e4:	aa 94       	dec	r10
    49e6:	ba 2c       	mov	r11, r10
    49e8:	0f 2e       	mov	r0, r31
    49ea:	ff e1       	ldi	r31, 0x1F	; 31
    49ec:	cf 2e       	mov	r12, r31
    49ee:	d1 2c       	mov	r13, r1
    49f0:	f0 2d       	mov	r31, r0
    49f2:	05 e0       	ldi	r16, 0x05	; 5
    49f4:	10 e0       	ldi	r17, 0x00	; 0
    49f6:	25 e0       	ldi	r18, 0x05	; 5
    49f8:	30 e0       	ldi	r19, 0x00	; 0
    49fa:	44 e0       	ldi	r20, 0x04	; 4
    49fc:	50 e0       	ldi	r21, 0x00	; 0
    49fe:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4a02:	b9 ce       	rjmp	.-654    	; 0x4776 <main+0x1516>
	TFT_PutsInt(0,4,123,102,8,white,back_color);
	
	i_time = 0;
	while (1) //This while loop is for steam valve open after 1 second and wait for relay on feedback
	{
		if (compare_time != i_time)
    4a04:	40 91 c7 03 	lds	r20, 0x03C7
    4a08:	50 91 c8 03 	lds	r21, 0x03C8
    4a0c:	60 91 c9 03 	lds	r22, 0x03C9
    4a10:	70 91 ca 03 	lds	r23, 0x03CA
    4a14:	80 91 cb 03 	lds	r24, 0x03CB
    4a18:	90 91 cc 03 	lds	r25, 0x03CC
    4a1c:	a0 91 cd 03 	lds	r26, 0x03CD
    4a20:	b0 91 ce 03 	lds	r27, 0x03CE
    4a24:	48 17       	cp	r20, r24
    4a26:	59 07       	cpc	r21, r25
    4a28:	6a 07       	cpc	r22, r26
    4a2a:	7b 07       	cpc	r23, r27
    4a2c:	39 f1       	breq	.+78     	; 0x4a7c <main+0x181c>
		{
			usart_putchar(99);
    4a2e:	83 e6       	ldi	r24, 0x63	; 99
    4a30:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    4a34:	9f e7       	ldi	r25, 0x7F	; 127
    4a36:	a9 ea       	ldi	r26, 0xA9	; 169
    4a38:	b3 e0       	ldi	r27, 0x03	; 3
    4a3a:	91 50       	subi	r25, 0x01	; 1
    4a3c:	a0 40       	sbci	r26, 0x00	; 0
    4a3e:	b0 40       	sbci	r27, 0x00	; 0
    4a40:	e1 f7       	brne	.-8      	; 0x4a3a <main+0x17da>
    4a42:	00 c0       	rjmp	.+0      	; 0x4a44 <main+0x17e4>
    4a44:	00 00       	nop
			_delay_ms(150);
			usart_putchar(99);//This command is for steam valve on
    4a46:	83 e6       	ldi	r24, 0x63	; 99
    4a48:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
			data_send_count = data_send_count + 1;
    4a4c:	80 91 c2 03 	lds	r24, 0x03C2
    4a50:	8f 5f       	subi	r24, 0xFF	; 255
    4a52:	80 93 c2 03 	sts	0x03C2, r24
			if (data_send_count > 9)
    4a56:	8a 30       	cpi	r24, 0x0A	; 10
    4a58:	08 f0       	brcs	.+2      	; 0x4a5c <main+0x17fc>
    4a5a:	68 c5       	rjmp	.+2768   	; 0x552c <main+0x22cc>
			{
				goto failure_message;
			}
			compare_time = i_time;
    4a5c:	80 91 cb 03 	lds	r24, 0x03CB
    4a60:	90 91 cc 03 	lds	r25, 0x03CC
    4a64:	a0 91 cd 03 	lds	r26, 0x03CD
    4a68:	b0 91 ce 03 	lds	r27, 0x03CE
    4a6c:	80 93 c7 03 	sts	0x03C7, r24
    4a70:	90 93 c8 03 	sts	0x03C8, r25
    4a74:	a0 93 c9 03 	sts	0x03C9, r26
    4a78:	b0 93 ca 03 	sts	0x03CA, r27
		}
		
		if (usart_dthit())  //scan for relay on feedback
    4a7c:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    4a80:	88 23       	and	r24, r24
    4a82:	01 f1       	breq	.+64     	; 0x4ac4 <main+0x1864>
		{
			usart_data = usart_getchar();
    4a84:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 99)
    4a88:	83 36       	cpi	r24, 0x63	; 99
    4a8a:	c9 f4       	brne	.+50     	; 0x4abe <main+0x185e>
			{
				usart_data = 0;
				TFT_Text("On ",171,148,8,white,red);
    4a8c:	0f 2e       	mov	r0, r31
    4a8e:	e1 2c       	mov	r14, r1
    4a90:	f8 ef       	ldi	r31, 0xF8	; 248
    4a92:	ff 2e       	mov	r15, r31
    4a94:	f0 2d       	mov	r31, r0
    4a96:	0f ef       	ldi	r16, 0xFF	; 255
    4a98:	1f ef       	ldi	r17, 0xFF	; 255
    4a9a:	28 e0       	ldi	r18, 0x08	; 8
    4a9c:	44 e9       	ldi	r20, 0x94	; 148
    4a9e:	50 e0       	ldi	r21, 0x00	; 0
    4aa0:	6b ea       	ldi	r22, 0xAB	; 171
    4aa2:	70 e0       	ldi	r23, 0x00	; 0
    4aa4:	8e ef       	ldi	r24, 0xFE	; 254
    4aa6:	92 e0       	ldi	r25, 0x02	; 2
    4aa8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
				data_send_count = 0;
    4aac:	10 92 c2 03 	sts	0x03C2, r1
			Read_TPval(TPval);
			_delay_ms(10);
			Read_TPval(TPval);
			if (TPval[0]>130 && TPval[0]<165 && TPval[1]>37 && TPval[1]<216)
			{
				temp_divider = 10;
    4ab0:	0f 2e       	mov	r0, r31
    4ab2:	fa e0       	ldi	r31, 0x0A	; 10
    4ab4:	8f 2e       	mov	r8, r31
    4ab6:	91 2c       	mov	r9, r1
    4ab8:	f0 2d       	mov	r31, r0
    4aba:	31 01       	movw	r6, r2
			if (usart_data == 99)
			{
				usart_data = 0;
				TFT_Text("On ",171,148,8,white,red);
				data_send_count = 0;
				break;
    4abc:	3c c0       	rjmp	.+120    	; 0x4b36 <main+0x18d6>
			}
			else if (usart_data == 12) //OK button to skip
    4abe:	8c 30       	cpi	r24, 0x0C	; 12
    4ac0:	f1 f4       	brne	.+60     	; 0x4afe <main+0x189e>
    4ac2:	34 c5       	rjmp	.+2664   	; 0x552c <main+0x22cc>
				usart_data = 0;
				goto failure_message; //goto failure message
			}
			else usart_data = 0;
		}
		else if (!(PIND & (1<<PD3)))
    4ac4:	83 99       	sbic	0x10, 3	; 16
    4ac6:	1b c0       	rjmp	.+54     	; 0x4afe <main+0x189e>
		{
			Read_TPval(TPval);
    4ac8:	ce 01       	movw	r24, r28
    4aca:	01 96       	adiw	r24, 0x01	; 1
    4acc:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4ad0:	8f e1       	ldi	r24, 0x1F	; 31
    4ad2:	9e e4       	ldi	r25, 0x4E	; 78
    4ad4:	01 97       	sbiw	r24, 0x01	; 1
    4ad6:	f1 f7       	brne	.-4      	; 0x4ad4 <main+0x1874>
    4ad8:	00 c0       	rjmp	.+0      	; 0x4ada <main+0x187a>
    4ada:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4adc:	ce 01       	movw	r24, r28
    4ade:	01 96       	adiw	r24, 0x01	; 1
    4ae0:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>130 && TPval[0]<165 && TPval[1]>37 && TPval[1]<216)
    4ae4:	89 81       	ldd	r24, Y+1	; 0x01
    4ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ae8:	83 58       	subi	r24, 0x83	; 131
    4aea:	91 09       	sbc	r25, r1
    4aec:	82 97       	sbiw	r24, 0x22	; 34
    4aee:	38 f4       	brcc	.+14     	; 0x4afe <main+0x189e>
    4af0:	8b 81       	ldd	r24, Y+3	; 0x03
    4af2:	9c 81       	ldd	r25, Y+4	; 0x04
    4af4:	86 97       	sbiw	r24, 0x26	; 38
    4af6:	82 3b       	cpi	r24, 0xB2	; 178
    4af8:	91 05       	cpc	r25, r1
    4afa:	08 f4       	brcc	.+2      	; 0x4afe <main+0x189e>
    4afc:	17 c5       	rjmp	.+2606   	; 0x552c <main+0x22cc>
			{
				goto failure_message;
			}
		}
		
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4afe:	60 91 cb 03 	lds	r22, 0x03CB
    4b02:	70 91 cc 03 	lds	r23, 0x03CC
    4b06:	80 91 cd 03 	lds	r24, 0x03CD
    4b0a:	90 91 ce 03 	lds	r25, 0x03CE
    4b0e:	aa 24       	eor	r10, r10
    4b10:	aa 94       	dec	r10
    4b12:	ba 2c       	mov	r11, r10
    4b14:	0f 2e       	mov	r0, r31
    4b16:	ff e1       	ldi	r31, 0x1F	; 31
    4b18:	cf 2e       	mov	r12, r31
    4b1a:	d1 2c       	mov	r13, r1
    4b1c:	f0 2d       	mov	r31, r0
    4b1e:	68 94       	set
    4b20:	ee 24       	eor	r14, r14
    4b22:	e3 f8       	bld	r14, 3
    4b24:	05 e0       	ldi	r16, 0x05	; 5
    4b26:	10 e0       	ldi	r17, 0x00	; 0
    4b28:	25 e0       	ldi	r18, 0x05	; 5
    4b2a:	30 e0       	ldi	r19, 0x00	; 0
    4b2c:	44 e0       	ldi	r20, 0x04	; 4
    4b2e:	50 e0       	ldi	r21, 0x00	; 0
    4b30:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4b34:	67 cf       	rjmp	.-306    	; 0x4a04 <main+0x17a4>
	
	
	while (1) //This while loop is for temperature calculation
	{
		if (compare_time != i_time)
    4b36:	40 91 c7 03 	lds	r20, 0x03C7
    4b3a:	50 91 c8 03 	lds	r21, 0x03C8
    4b3e:	60 91 c9 03 	lds	r22, 0x03C9
    4b42:	70 91 ca 03 	lds	r23, 0x03CA
    4b46:	80 91 cb 03 	lds	r24, 0x03CB
    4b4a:	90 91 cc 03 	lds	r25, 0x03CC
    4b4e:	a0 91 cd 03 	lds	r26, 0x03CD
    4b52:	b0 91 ce 03 	lds	r27, 0x03CE
    4b56:	48 17       	cp	r20, r24
    4b58:	59 07       	cpc	r21, r25
    4b5a:	6a 07       	cpc	r22, r26
    4b5c:	7b 07       	cpc	r23, r27
    4b5e:	09 f4       	brne	.+2      	; 0x4b62 <main+0x1902>
    4b60:	78 c0       	rjmp	.+240    	; 0x4c52 <main+0x19f2>
		{
			temp_read = (Read_temperature() * 100UL)/(uint32_t)temp_divider; //This is the divider to adjust the temperature now 4 for experiment
    4b62:	0e 94 77 17 	call	0x2eee	; 0x2eee <Read_temperature>
    4b66:	24 e6       	ldi	r18, 0x64	; 100
    4b68:	30 e0       	ldi	r19, 0x00	; 0
    4b6a:	dc 01       	movw	r26, r24
    4b6c:	0e 94 21 2f 	call	0x5e42	; 0x5e42 <__usmulhisi3>
    4b70:	20 91 c5 03 	lds	r18, 0x03C5
    4b74:	30 91 c6 03 	lds	r19, 0x03C6
    4b78:	40 e0       	ldi	r20, 0x00	; 0
    4b7a:	50 e0       	ldi	r21, 0x00	; 0
    4b7c:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4b80:	19 01       	movw	r2, r18
    4b82:	2a 01       	movw	r4, r20
			
			TFT_PutsInt((temp_read*100)/temp,3,43,160,8,white,back_color);
    4b84:	a4 e6       	ldi	r26, 0x64	; 100
    4b86:	b0 e0       	ldi	r27, 0x00	; 0
    4b88:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    4b8c:	2f 85       	ldd	r18, Y+15	; 0x0f
    4b8e:	38 89       	ldd	r19, Y+16	; 0x10
    4b90:	49 89       	ldd	r20, Y+17	; 0x11
    4b92:	5a 89       	ldd	r21, Y+18	; 0x12
    4b94:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4b98:	ca 01       	movw	r24, r20
    4b9a:	b9 01       	movw	r22, r18
    4b9c:	0f 2e       	mov	r0, r31
    4b9e:	ff e1       	ldi	r31, 0x1F	; 31
    4ba0:	af 2e       	mov	r10, r31
    4ba2:	b1 2c       	mov	r11, r1
    4ba4:	f0 2d       	mov	r31, r0
    4ba6:	cc 24       	eor	r12, r12
    4ba8:	ca 94       	dec	r12
    4baa:	dc 2c       	mov	r13, r12
    4bac:	68 94       	set
    4bae:	ee 24       	eor	r14, r14
    4bb0:	e3 f8       	bld	r14, 3
    4bb2:	00 ea       	ldi	r16, 0xA0	; 160
    4bb4:	10 e0       	ldi	r17, 0x00	; 0
    4bb6:	2b e2       	ldi	r18, 0x2B	; 43
    4bb8:	30 e0       	ldi	r19, 0x00	; 0
    4bba:	43 e0       	ldi	r20, 0x03	; 3
    4bbc:	50 e0       	ldi	r21, 0x00	; 0
    4bbe:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_PutsInt(temp_read,3,123,160,8,white,back_color);
    4bc2:	2b e7       	ldi	r18, 0x7B	; 123
    4bc4:	30 e0       	ldi	r19, 0x00	; 0
    4bc6:	43 e0       	ldi	r20, 0x03	; 3
    4bc8:	50 e0       	ldi	r21, 0x00	; 0
    4bca:	c2 01       	movw	r24, r4
    4bcc:	b1 01       	movw	r22, r2
    4bce:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			TFT_PutsInt(temp-temp_read,3,123,188,8,white,back_color);
    4bd2:	6f 85       	ldd	r22, Y+15	; 0x0f
    4bd4:	78 89       	ldd	r23, Y+16	; 0x10
    4bd6:	89 89       	ldd	r24, Y+17	; 0x11
    4bd8:	9a 89       	ldd	r25, Y+18	; 0x12
    4bda:	62 19       	sub	r22, r2
    4bdc:	73 09       	sbc	r23, r3
    4bde:	84 09       	sbc	r24, r4
    4be0:	95 09       	sbc	r25, r5
    4be2:	0c eb       	ldi	r16, 0xBC	; 188
    4be4:	10 e0       	ldi	r17, 0x00	; 0
    4be6:	2b e7       	ldi	r18, 0x7B	; 123
    4be8:	30 e0       	ldi	r19, 0x00	; 0
    4bea:	43 e0       	ldi	r20, 0x03	; 3
    4bec:	50 e0       	ldi	r21, 0x00	; 0
    4bee:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
			
			if (temp_read >= temp)
    4bf2:	8f 85       	ldd	r24, Y+15	; 0x0f
    4bf4:	98 89       	ldd	r25, Y+16	; 0x10
    4bf6:	a9 89       	ldd	r26, Y+17	; 0x11
    4bf8:	ba 89       	ldd	r27, Y+18	; 0x12
    4bfa:	28 16       	cp	r2, r24
    4bfc:	39 06       	cpc	r3, r25
    4bfe:	4a 06       	cpc	r4, r26
    4c00:	5b 06       	cpc	r5, r27
    4c02:	b8 f0       	brcs	.+46     	; 0x4c32 <main+0x19d2>
			{
				usart_putchar(100);
    4c04:	84 e6       	ldi	r24, 0x64	; 100
    4c06:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    4c0a:	9f e7       	ldi	r25, 0x7F	; 127
    4c0c:	a9 ea       	ldi	r26, 0xA9	; 169
    4c0e:	b3 e0       	ldi	r27, 0x03	; 3
    4c10:	91 50       	subi	r25, 0x01	; 1
    4c12:	a0 40       	sbci	r26, 0x00	; 0
    4c14:	b0 40       	sbci	r27, 0x00	; 0
    4c16:	e1 f7       	brne	.-8      	; 0x4c10 <main+0x19b0>
    4c18:	00 c0       	rjmp	.+0      	; 0x4c1a <main+0x19ba>
    4c1a:	00 00       	nop
				_delay_ms(150);
				usart_putchar(100);//This command is for steam valve off
    4c1c:	84 e6       	ldi	r24, 0x64	; 100
    4c1e:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
				data_send_count = data_send_count + 1;
    4c22:	80 91 c2 03 	lds	r24, 0x03C2
    4c26:	8f 5f       	subi	r24, 0xFF	; 255
    4c28:	80 93 c2 03 	sts	0x03C2, r24
				if (data_send_count > 9)
    4c2c:	8a 30       	cpi	r24, 0x0A	; 10
    4c2e:	08 f0       	brcs	.+2      	; 0x4c32 <main+0x19d2>
    4c30:	7d c4       	rjmp	.+2298   	; 0x552c <main+0x22cc>
				{
					goto failure_message;
				}
			}
			compare_time = i_time;
    4c32:	80 91 cb 03 	lds	r24, 0x03CB
    4c36:	90 91 cc 03 	lds	r25, 0x03CC
    4c3a:	a0 91 cd 03 	lds	r26, 0x03CD
    4c3e:	b0 91 ce 03 	lds	r27, 0x03CE
    4c42:	80 93 c7 03 	sts	0x03C7, r24
    4c46:	90 93 c8 03 	sts	0x03C8, r25
    4c4a:	a0 93 c9 03 	sts	0x03C9, r26
    4c4e:	b0 93 ca 03 	sts	0x03CA, r27
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    4c52:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    4c56:	88 23       	and	r24, r24
    4c58:	09 f4       	brne	.+2      	; 0x4c5c <main+0x19fc>
    4c5a:	71 c0       	rjmp	.+226    	; 0x4d3e <main+0x1ade>
		{
			usart_data = usart_getchar();
    4c5c:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    4c60:	8c 30       	cpi	r24, 0x0C	; 12
    4c62:	29 f4       	brne	.+10     	; 0x4c6e <main+0x1a0e>
			{
				usart_data = 0;
				temp_divider = 10;
    4c64:	90 92 c6 03 	sts	0x03C6, r9
    4c68:	80 92 c5 03 	sts	0x03C5, r8
    4c6c:	88 c0       	rjmp	.+272    	; 0x4d7e <main+0x1b1e>
			}
			else if (usart_data == 100)
    4c6e:	84 36       	cpi	r24, 0x64	; 100
    4c70:	09 f0       	breq	.+2      	; 0x4c74 <main+0x1a14>
    4c72:	85 c0       	rjmp	.+266    	; 0x4d7e <main+0x1b1e>
    4c74:	13 01       	movw	r2, r6
			{
				usart_data = 0;
				data_send_count = 0;
    4c76:	10 92 c2 03 	sts	0x03C2, r1
		}

		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	TFT_Text("Off",171,148,8,white,back_color);
    4c7a:	0f 2e       	mov	r0, r31
    4c7c:	ff e1       	ldi	r31, 0x1F	; 31
    4c7e:	ef 2e       	mov	r14, r31
    4c80:	f1 2c       	mov	r15, r1
    4c82:	f0 2d       	mov	r31, r0
    4c84:	0f ef       	ldi	r16, 0xFF	; 255
    4c86:	1f ef       	ldi	r17, 0xFF	; 255
    4c88:	28 e0       	ldi	r18, 0x08	; 8
    4c8a:	44 e9       	ldi	r20, 0x94	; 148
    4c8c:	50 e0       	ldi	r21, 0x00	; 0
    4c8e:	6b ea       	ldi	r22, 0xAB	; 171
    4c90:	70 e0       	ldi	r23, 0x00	; 0
    4c92:	8a e2       	ldi	r24, 0x2A	; 42
    4c94:	92 e0       	ldi	r25, 0x02	; 2
    4c96:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	// Updating last status for temperature
	TFT_PutsInt(100,3,43,160,8,white,back_color);
    4c9a:	0f 2e       	mov	r0, r31
    4c9c:	ff e1       	ldi	r31, 0x1F	; 31
    4c9e:	af 2e       	mov	r10, r31
    4ca0:	b1 2c       	mov	r11, r1
    4ca2:	f0 2d       	mov	r31, r0
    4ca4:	cc 24       	eor	r12, r12
    4ca6:	ca 94       	dec	r12
    4ca8:	dc 2c       	mov	r13, r12
    4caa:	68 94       	set
    4cac:	ee 24       	eor	r14, r14
    4cae:	e3 f8       	bld	r14, 3
    4cb0:	00 ea       	ldi	r16, 0xA0	; 160
    4cb2:	10 e0       	ldi	r17, 0x00	; 0
    4cb4:	2b e2       	ldi	r18, 0x2B	; 43
    4cb6:	30 e0       	ldi	r19, 0x00	; 0
    4cb8:	43 e0       	ldi	r20, 0x03	; 3
    4cba:	50 e0       	ldi	r21, 0x00	; 0
    4cbc:	64 e6       	ldi	r22, 0x64	; 100
    4cbe:	70 e0       	ldi	r23, 0x00	; 0
    4cc0:	80 e0       	ldi	r24, 0x00	; 0
    4cc2:	90 e0       	ldi	r25, 0x00	; 0
    4cc4:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(temp,3,123,160,8,white,back_color);
    4cc8:	2b e7       	ldi	r18, 0x7B	; 123
    4cca:	30 e0       	ldi	r19, 0x00	; 0
    4ccc:	43 e0       	ldi	r20, 0x03	; 3
    4cce:	50 e0       	ldi	r21, 0x00	; 0
    4cd0:	6a a1       	ldd	r22, Y+34	; 0x22
    4cd2:	7b a1       	ldd	r23, Y+35	; 0x23
    4cd4:	8c a1       	ldd	r24, Y+36	; 0x24
    4cd6:	9d a1       	ldd	r25, Y+37	; 0x25
    4cd8:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	TFT_PutsInt(0,3,123,188,8,white,back_color);	
    4cdc:	0c eb       	ldi	r16, 0xBC	; 188
    4cde:	10 e0       	ldi	r17, 0x00	; 0
    4ce0:	2b e7       	ldi	r18, 0x7B	; 123
    4ce2:	30 e0       	ldi	r19, 0x00	; 0
    4ce4:	43 e0       	ldi	r20, 0x03	; 3
    4ce6:	50 e0       	ldi	r21, 0x00	; 0
    4ce8:	60 e0       	ldi	r22, 0x00	; 0
    4cea:	70 e0       	ldi	r23, 0x00	; 0
    4cec:	80 e0       	ldi	r24, 0x00	; 0
    4cee:	90 e0       	ldi	r25, 0x00	; 0
    4cf0:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	
	i_time = 0;
    4cf4:	10 92 cb 03 	sts	0x03CB, r1
    4cf8:	10 92 cc 03 	sts	0x03CC, r1
    4cfc:	10 92 cd 03 	sts	0x03CD, r1
    4d00:	10 92 ce 03 	sts	0x03CE, r1
	TFT_Text("Counting",123,236,8,white,red);
    4d04:	0f 2e       	mov	r0, r31
    4d06:	e1 2c       	mov	r14, r1
    4d08:	f8 ef       	ldi	r31, 0xF8	; 248
    4d0a:	ff 2e       	mov	r15, r31
    4d0c:	f0 2d       	mov	r31, r0
    4d0e:	0f ef       	ldi	r16, 0xFF	; 255
    4d10:	1f ef       	ldi	r17, 0xFF	; 255
    4d12:	28 e0       	ldi	r18, 0x08	; 8
    4d14:	4c ee       	ldi	r20, 0xEC	; 236
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	6b e7       	ldi	r22, 0x7B	; 123
    4d1a:	70 e0       	ldi	r23, 0x00	; 0
    4d1c:	82 e0       	ldi	r24, 0x02	; 2
    4d1e:	93 e0       	ldi	r25, 0x03	; 3
    4d20:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
		{
			usart_data = usart_getchar();
			if (usart_data == 12)
			{
				usart_data = 0;
				i_time = time*60;
    4d24:	ac e3       	ldi	r26, 0x3C	; 60
    4d26:	b0 e0       	ldi	r27, 0x00	; 0
    4d28:	2b 89       	ldd	r18, Y+19	; 0x13
    4d2a:	3c 89       	ldd	r19, Y+20	; 0x14
    4d2c:	4d 89       	ldd	r20, Y+21	; 0x15
    4d2e:	5e 89       	ldd	r21, Y+22	; 0x16
    4d30:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <__muluhisi3>
    4d34:	69 8f       	std	Y+25, r22	; 0x19
    4d36:	7a 8f       	std	Y+26, r23	; 0x1a
    4d38:	8b 8f       	std	Y+27, r24	; 0x1b
    4d3a:	9c 8f       	std	Y+28, r25	; 0x1c
    4d3c:	3c c0       	rjmp	.+120    	; 0x4db6 <main+0x1b56>
				break;
			}
			else usart_data = 0;
		}
		
		else if (!(PIND & (1<<PD3)))  //scan for touch data
    4d3e:	83 99       	sbic	0x10, 3	; 16
    4d40:	1e c0       	rjmp	.+60     	; 0x4d7e <main+0x1b1e>
		{
			Read_TPval(TPval);
    4d42:	ce 01       	movw	r24, r28
    4d44:	01 96       	adiw	r24, 0x01	; 1
    4d46:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    4d4a:	8f e1       	ldi	r24, 0x1F	; 31
    4d4c:	9e e4       	ldi	r25, 0x4E	; 78
    4d4e:	01 97       	sbiw	r24, 0x01	; 1
    4d50:	f1 f7       	brne	.-4      	; 0x4d4e <main+0x1aee>
    4d52:	00 c0       	rjmp	.+0      	; 0x4d54 <main+0x1af4>
    4d54:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    4d56:	ce 01       	movw	r24, r28
    4d58:	01 96       	adiw	r24, 0x01	; 1
    4d5a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			if (TPval[0]>130 && TPval[0]<165 && TPval[1]>37 && TPval[1]<216)
    4d5e:	89 81       	ldd	r24, Y+1	; 0x01
    4d60:	9a 81       	ldd	r25, Y+2	; 0x02
    4d62:	83 58       	subi	r24, 0x83	; 131
    4d64:	91 09       	sbc	r25, r1
    4d66:	82 97       	sbiw	r24, 0x22	; 34
    4d68:	50 f4       	brcc	.+20     	; 0x4d7e <main+0x1b1e>
    4d6a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d6c:	9c 81       	ldd	r25, Y+4	; 0x04
    4d6e:	86 97       	sbiw	r24, 0x26	; 38
    4d70:	82 3b       	cpi	r24, 0xB2	; 178
    4d72:	91 05       	cpc	r25, r1
    4d74:	20 f4       	brcc	.+8      	; 0x4d7e <main+0x1b1e>
			{
				temp_divider = 10;
    4d76:	90 92 c6 03 	sts	0x03C6, r9
    4d7a:	80 92 c5 03 	sts	0x03C5, r8
			}
		}

		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4d7e:	60 91 cb 03 	lds	r22, 0x03CB
    4d82:	70 91 cc 03 	lds	r23, 0x03CC
    4d86:	80 91 cd 03 	lds	r24, 0x03CD
    4d8a:	90 91 ce 03 	lds	r25, 0x03CE
    4d8e:	aa 24       	eor	r10, r10
    4d90:	aa 94       	dec	r10
    4d92:	ba 2c       	mov	r11, r10
    4d94:	0f 2e       	mov	r0, r31
    4d96:	ff e1       	ldi	r31, 0x1F	; 31
    4d98:	cf 2e       	mov	r12, r31
    4d9a:	d1 2c       	mov	r13, r1
    4d9c:	f0 2d       	mov	r31, r0
    4d9e:	68 94       	set
    4da0:	ee 24       	eor	r14, r14
    4da2:	e3 f8       	bld	r14, 3
    4da4:	05 e0       	ldi	r16, 0x05	; 5
    4da6:	10 e0       	ldi	r17, 0x00	; 0
    4da8:	25 e0       	ldi	r18, 0x05	; 5
    4daa:	30 e0       	ldi	r19, 0x00	; 0
    4dac:	44 e0       	ldi	r20, 0x04	; 4
    4dae:	50 e0       	ldi	r21, 0x00	; 0
    4db0:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    4db4:	c0 ce       	rjmp	.-640    	; 0x4b36 <main+0x18d6>
	
	i_time = 0;
	TFT_Text("Counting",123,236,8,white,red);
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    4db6:	c0 90 cb 03 	lds	r12, 0x03CB
    4dba:	d0 90 cc 03 	lds	r13, 0x03CC
    4dbe:	e0 90 cd 03 	lds	r14, 0x03CD
    4dc2:	f0 90 ce 03 	lds	r15, 0x03CE
    4dc6:	c7 01       	movw	r24, r14
    4dc8:	b6 01       	movw	r22, r12
    4dca:	2c e3       	ldi	r18, 0x3C	; 60
    4dcc:	30 e0       	ldi	r19, 0x00	; 0
    4dce:	40 e0       	ldi	r20, 0x00	; 0
    4dd0:	50 e0       	ldi	r21, 0x00	; 0
    4dd2:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4dd6:	39 01       	movw	r6, r18
    4dd8:	4a 01       	movw	r8, r20
		if (time_read >= time)
    4dda:	8b 89       	ldd	r24, Y+19	; 0x13
    4ddc:	9c 89       	ldd	r25, Y+20	; 0x14
    4dde:	ad 89       	ldd	r26, Y+21	; 0x15
    4de0:	be 89       	ldd	r27, Y+22	; 0x16
    4de2:	28 17       	cp	r18, r24
    4de4:	39 07       	cpc	r19, r25
    4de6:	4a 07       	cpc	r20, r26
    4de8:	5b 07       	cpc	r21, r27
    4dea:	a0 f1       	brcs	.+104    	; 0x4e54 <main+0x1bf4>
		{
			if (compare_time != i_time)
    4dec:	80 91 c7 03 	lds	r24, 0x03C7
    4df0:	90 91 c8 03 	lds	r25, 0x03C8
    4df4:	a0 91 c9 03 	lds	r26, 0x03C9
    4df8:	b0 91 ca 03 	lds	r27, 0x03CA
    4dfc:	c8 16       	cp	r12, r24
    4dfe:	d9 06       	cpc	r13, r25
    4e00:	ea 06       	cpc	r14, r26
    4e02:	fb 06       	cpc	r15, r27
    4e04:	39 f1       	breq	.+78     	; 0x4e54 <main+0x1bf4>
			{
				usart_putchar(101);
    4e06:	85 e6       	ldi	r24, 0x65	; 101
    4e08:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    4e0c:	9f e7       	ldi	r25, 0x7F	; 127
    4e0e:	a9 ea       	ldi	r26, 0xA9	; 169
    4e10:	b3 e0       	ldi	r27, 0x03	; 3
    4e12:	91 50       	subi	r25, 0x01	; 1
    4e14:	a0 40       	sbci	r26, 0x00	; 0
    4e16:	b0 40       	sbci	r27, 0x00	; 0
    4e18:	e1 f7       	brne	.-8      	; 0x4e12 <main+0x1bb2>
    4e1a:	00 c0       	rjmp	.+0      	; 0x4e1c <main+0x1bbc>
    4e1c:	00 00       	nop
				_delay_ms(150);
				usart_putchar(101);//This command is for alarm on
    4e1e:	85 e6       	ldi	r24, 0x65	; 101
    4e20:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
				data_send_count = data_send_count + 1;
    4e24:	80 91 c2 03 	lds	r24, 0x03C2
    4e28:	8f 5f       	subi	r24, 0xFF	; 255
    4e2a:	80 93 c2 03 	sts	0x03C2, r24
				if (data_send_count > 5)
    4e2e:	86 30       	cpi	r24, 0x06	; 6
    4e30:	08 f0       	brcs	.+2      	; 0x4e34 <main+0x1bd4>
    4e32:	7c c3       	rjmp	.+1784   	; 0x552c <main+0x22cc>
				{
					goto failure_message;
				}
				compare_time = i_time;
    4e34:	80 91 cb 03 	lds	r24, 0x03CB
    4e38:	90 91 cc 03 	lds	r25, 0x03CC
    4e3c:	a0 91 cd 03 	lds	r26, 0x03CD
    4e40:	b0 91 ce 03 	lds	r27, 0x03CE
    4e44:	80 93 c7 03 	sts	0x03C7, r24
    4e48:	90 93 c8 03 	sts	0x03C8, r25
    4e4c:	a0 93 c9 03 	sts	0x03C9, r26
    4e50:	b0 93 ca 03 	sts	0x03CA, r27
			}
		}
		TFT_PutsInt(time_read,-1,123,260,8,white,back_color);
    4e54:	0f 2e       	mov	r0, r31
    4e56:	ff e1       	ldi	r31, 0x1F	; 31
    4e58:	af 2e       	mov	r10, r31
    4e5a:	b1 2c       	mov	r11, r1
    4e5c:	f0 2d       	mov	r31, r0
    4e5e:	cc 24       	eor	r12, r12
    4e60:	ca 94       	dec	r12
    4e62:	dc 2c       	mov	r13, r12
    4e64:	68 94       	set
    4e66:	ee 24       	eor	r14, r14
    4e68:	e3 f8       	bld	r14, 3
    4e6a:	04 e0       	ldi	r16, 0x04	; 4
    4e6c:	11 e0       	ldi	r17, 0x01	; 1
    4e6e:	2b e7       	ldi	r18, 0x7B	; 123
    4e70:	30 e0       	ldi	r19, 0x00	; 0
    4e72:	4f ef       	ldi	r20, 0xFF	; 255
    4e74:	5f ef       	ldi	r21, 0xFF	; 255
    4e76:	c4 01       	movw	r24, r8
    4e78:	b3 01       	movw	r22, r6
    4e7a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_Text(":",155,260,8,white,back_color);
    4e7e:	0f 2e       	mov	r0, r31
    4e80:	ff e1       	ldi	r31, 0x1F	; 31
    4e82:	ef 2e       	mov	r14, r31
    4e84:	f1 2c       	mov	r15, r1
    4e86:	f0 2d       	mov	r31, r0
    4e88:	0f ef       	ldi	r16, 0xFF	; 255
    4e8a:	1f ef       	ldi	r17, 0xFF	; 255
    4e8c:	28 e0       	ldi	r18, 0x08	; 8
    4e8e:	44 e0       	ldi	r20, 0x04	; 4
    4e90:	51 e0       	ldi	r21, 0x01	; 1
    4e92:	6b e9       	ldi	r22, 0x9B	; 155
    4e94:	70 e0       	ldi	r23, 0x00	; 0
    4e96:	8d ea       	ldi	r24, 0xAD	; 173
    4e98:	91 e0       	ldi	r25, 0x01	; 1
    4e9a:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
		TFT_PutsInt(i_time % 60,2,163,260,8,white,back_color);
    4e9e:	60 91 cb 03 	lds	r22, 0x03CB
    4ea2:	70 91 cc 03 	lds	r23, 0x03CC
    4ea6:	80 91 cd 03 	lds	r24, 0x03CD
    4eaa:	90 91 ce 03 	lds	r25, 0x03CE
    4eae:	2c e3       	ldi	r18, 0x3C	; 60
    4eb0:	30 e0       	ldi	r19, 0x00	; 0
    4eb2:	40 e0       	ldi	r20, 0x00	; 0
    4eb4:	50 e0       	ldi	r21, 0x00	; 0
    4eb6:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    4eba:	68 94       	set
    4ebc:	ee 24       	eor	r14, r14
    4ebe:	e3 f8       	bld	r14, 3
    4ec0:	04 e0       	ldi	r16, 0x04	; 4
    4ec2:	11 e0       	ldi	r17, 0x01	; 1
    4ec4:	23 ea       	ldi	r18, 0xA3	; 163
    4ec6:	30 e0       	ldi	r19, 0x00	; 0
    4ec8:	42 e0       	ldi	r20, 0x02	; 2
    4eca:	50 e0       	ldi	r21, 0x00	; 0
    4ecc:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		TFT_PutsInt(time - time_read,4,123,276,8,white,back_color);
    4ed0:	6b 89       	ldd	r22, Y+19	; 0x13
    4ed2:	7c 89       	ldd	r23, Y+20	; 0x14
    4ed4:	8d 89       	ldd	r24, Y+21	; 0x15
    4ed6:	9e 89       	ldd	r25, Y+22	; 0x16
    4ed8:	66 19       	sub	r22, r6
    4eda:	77 09       	sbc	r23, r7
    4edc:	88 09       	sbc	r24, r8
    4ede:	99 09       	sbc	r25, r9
    4ee0:	04 e1       	ldi	r16, 0x14	; 20
    4ee2:	11 e0       	ldi	r17, 0x01	; 1
    4ee4:	2b e7       	ldi	r18, 0x7B	; 123
    4ee6:	30 e0       	ldi	r19, 0x00	; 0
    4ee8:	44 e0       	ldi	r20, 0x04	; 4
    4eea:	50 e0       	ldi	r21, 0x00	; 0
    4eec:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		
		if (usart_dthit())  //scan for keypad data via usart
    4ef0:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    4ef4:	88 23       	and	r24, r24
    4ef6:	09 f4       	brne	.+2      	; 0x4efa <main+0x1c9a>
    4ef8:	54 c0       	rjmp	.+168    	; 0x4fa2 <main+0x1d42>
		{
			usart_data = usart_getchar();
    4efa:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    4efe:	8c 30       	cpi	r24, 0x0C	; 12
    4f00:	69 f4       	brne	.+26     	; 0x4f1c <main+0x1cbc>
			{
				usart_data = 0;
				i_time = time*60;
    4f02:	89 8d       	ldd	r24, Y+25	; 0x19
    4f04:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4f06:	ab 8d       	ldd	r26, Y+27	; 0x1b
    4f08:	bc 8d       	ldd	r27, Y+28	; 0x1c
    4f0a:	80 93 cb 03 	sts	0x03CB, r24
    4f0e:	90 93 cc 03 	sts	0x03CC, r25
    4f12:	a0 93 cd 03 	sts	0x03CD, r26
    4f16:	b0 93 ce 03 	sts	0x03CE, r27
    4f1a:	43 c0       	rjmp	.+134    	; 0x4fa2 <main+0x1d42>
			}
			if (usart_data == 101)
    4f1c:	85 36       	cpi	r24, 0x65	; 101
    4f1e:	09 f0       	breq	.+2      	; 0x4f22 <main+0x1cc2>
    4f20:	40 c0       	rjmp	.+128    	; 0x4fa2 <main+0x1d42>
			{
				usart_data = 0;
				data_send_count = 0;
    4f22:	10 92 c2 03 	sts	0x03C2, r1
				TFT_Text("Idle    ",123,236,8,white,back_color);
    4f26:	0f 2e       	mov	r0, r31
    4f28:	ff e1       	ldi	r31, 0x1F	; 31
    4f2a:	ef 2e       	mov	r14, r31
    4f2c:	f1 2c       	mov	r15, r1
    4f2e:	f0 2d       	mov	r31, r0
    4f30:	0f ef       	ldi	r16, 0xFF	; 255
    4f32:	1f ef       	ldi	r17, 0xFF	; 255
    4f34:	28 e0       	ldi	r18, 0x08	; 8
    4f36:	4c ee       	ldi	r20, 0xEC	; 236
    4f38:	50 e0       	ldi	r21, 0x00	; 0
    4f3a:	6b e7       	ldi	r22, 0x7B	; 123
    4f3c:	70 e0       	ldi	r23, 0x00	; 0
    4f3e:	8b e0       	ldi	r24, 0x0B	; 11
    4f40:	93 e0       	ldi	r25, 0x03	; 3
    4f42:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	 //this section is to wait for alarm off command
	 i_time = 0;
    4f46:	10 92 cb 03 	sts	0x03CB, r1
    4f4a:	10 92 cc 03 	sts	0x03CC, r1
    4f4e:	10 92 cd 03 	sts	0x03CD, r1
    4f52:	10 92 ce 03 	sts	0x03CE, r1
	TFT_Fill(back_color);
    4f56:	8f e1       	ldi	r24, 0x1F	; 31
    4f58:	90 e0       	ldi	r25, 0x00	; 0
    4f5a:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
    4f5e:	20 e1       	ldi	r18, 0x10	; 16
    4f60:	44 e5       	ldi	r20, 0x54	; 84
    4f62:	50 e0       	ldi	r21, 0x00	; 0
    4f64:	63 e3       	ldi	r22, 0x33	; 51
    4f66:	70 e0       	ldi	r23, 0x00	; 0
    4f68:	84 e1       	ldi	r24, 0x14	; 20
    4f6a:	93 e0       	ldi	r25, 0x03	; 3
    4f6c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(35,150,195,174,white);
    4f70:	2e ea       	ldi	r18, 0xAE	; 174
    4f72:	30 e0       	ldi	r19, 0x00	; 0
    4f74:	43 ec       	ldi	r20, 0xC3	; 195
    4f76:	50 e0       	ldi	r21, 0x00	; 0
    4f78:	66 e9       	ldi	r22, 0x96	; 150
    4f7a:	70 e0       	ldi	r23, 0x00	; 0
    4f7c:	83 e2       	ldi	r24, 0x23	; 35
    4f7e:	90 e0       	ldi	r25, 0x00	; 0
    4f80:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("ALARM OFF",53,155,16,red,white);	
    4f84:	ee 24       	eor	r14, r14
    4f86:	ea 94       	dec	r14
    4f88:	fe 2c       	mov	r15, r14
    4f8a:	00 e0       	ldi	r16, 0x00	; 0
    4f8c:	18 ef       	ldi	r17, 0xF8	; 248
    4f8e:	20 e1       	ldi	r18, 0x10	; 16
    4f90:	4b e9       	ldi	r20, 0x9B	; 155
    4f92:	50 e0       	ldi	r21, 0x00	; 0
    4f94:	65 e3       	ldi	r22, 0x35	; 53
    4f96:	70 e0       	ldi	r23, 0x00	; 0
    4f98:	8e e1       	ldi	r24, 0x1E	; 30
    4f9a:	93 e0       	ldi	r25, 0x03	; 3
    4f9c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
    4fa0:	3a c0       	rjmp	.+116    	; 0x5016 <main+0x1db6>
				break;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan touch pad data
    4fa2:	83 99       	sbic	0x10, 3	; 16
    4fa4:	1c c0       	rjmp	.+56     	; 0x4fde <main+0x1d7e>
		{
			Read_TPval(TPval);
    4fa6:	ce 01       	movw	r24, r28
    4fa8:	01 96       	adiw	r24, 0x01	; 1
    4faa:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>77 && TPval[0]<103 && TPval[1]>37 && TPval[1]<216)
    4fae:	89 81       	ldd	r24, Y+1	; 0x01
    4fb0:	9a 81       	ldd	r25, Y+2	; 0x02
    4fb2:	8e 54       	subi	r24, 0x4E	; 78
    4fb4:	91 09       	sbc	r25, r1
    4fb6:	49 97       	sbiw	r24, 0x19	; 25
    4fb8:	90 f4       	brcc	.+36     	; 0x4fde <main+0x1d7e>
    4fba:	8b 81       	ldd	r24, Y+3	; 0x03
    4fbc:	9c 81       	ldd	r25, Y+4	; 0x04
    4fbe:	86 97       	sbiw	r24, 0x26	; 38
    4fc0:	82 3b       	cpi	r24, 0xB2	; 178
    4fc2:	91 05       	cpc	r25, r1
    4fc4:	60 f4       	brcc	.+24     	; 0x4fde <main+0x1d7e>
			{
				i_time = time*60;
    4fc6:	89 8d       	ldd	r24, Y+25	; 0x19
    4fc8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4fca:	ab 8d       	ldd	r26, Y+27	; 0x1b
    4fcc:	bc 8d       	ldd	r27, Y+28	; 0x1c
    4fce:	80 93 cb 03 	sts	0x03CB, r24
    4fd2:	90 93 cc 03 	sts	0x03CC, r25
    4fd6:	a0 93 cd 03 	sts	0x03CD, r26
    4fda:	b0 93 ce 03 	sts	0x03CE, r27
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    4fde:	60 91 cb 03 	lds	r22, 0x03CB
    4fe2:	70 91 cc 03 	lds	r23, 0x03CC
    4fe6:	80 91 cd 03 	lds	r24, 0x03CD
    4fea:	90 91 ce 03 	lds	r25, 0x03CE
    4fee:	aa 24       	eor	r10, r10
    4ff0:	aa 94       	dec	r10
    4ff2:	ba 2c       	mov	r11, r10
    4ff4:	0f 2e       	mov	r0, r31
    4ff6:	ff e1       	ldi	r31, 0x1F	; 31
    4ff8:	cf 2e       	mov	r12, r31
    4ffa:	d1 2c       	mov	r13, r1
    4ffc:	f0 2d       	mov	r31, r0
    4ffe:	68 94       	set
    5000:	ee 24       	eor	r14, r14
    5002:	e3 f8       	bld	r14, 3
    5004:	05 e0       	ldi	r16, 0x05	; 5
    5006:	10 e0       	ldi	r17, 0x00	; 0
    5008:	25 e0       	ldi	r18, 0x05	; 5
    500a:	30 e0       	ldi	r19, 0x00	; 0
    500c:	44 e0       	ldi	r20, 0x04	; 4
    500e:	50 e0       	ldi	r21, 0x00	; 0
    5010:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    5014:	d0 ce       	rjmp	.-608    	; 0x4db6 <main+0x1b56>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
	TFT_Box(35,150,195,174,white);
	TFT_Text("ALARM OFF",53,155,16,red,white);	
	while (1)
	{
		if (usart_dthit())  //scan for keypad data via usart
    5016:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    501a:	88 23       	and	r24, r24
    501c:	29 f0       	breq	.+10     	; 0x5028 <main+0x1dc8>
		{
			usart_data = usart_getchar();
    501e:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)
    5022:	8c 30       	cpi	r24, 0x0C	; 12
    5024:	09 f4       	brne	.+2      	; 0x5028 <main+0x1dc8>
    5026:	41 c0       	rjmp	.+130    	; 0x50aa <main+0x1e4a>
				break;
			}
			else usart_data = 0;
		}
		
		if (!(PIND & (1<<PD3)))  //scan for touch pad data
    5028:	83 99       	sbic	0x10, 3	; 16
    502a:	23 c0       	rjmp	.+70     	; 0x5072 <main+0x1e12>
		{
			Read_TPval(TPval);
    502c:	ce 01       	movw	r24, r28
    502e:	01 96       	adiw	r24, 0x01	; 1
    5030:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    5034:	af e1       	ldi	r26, 0x1F	; 31
    5036:	be e4       	ldi	r27, 0x4E	; 78
    5038:	11 97       	sbiw	r26, 0x01	; 1
    503a:	f1 f7       	brne	.-4      	; 0x5038 <main+0x1dd8>
    503c:	00 c0       	rjmp	.+0      	; 0x503e <main+0x1dde>
    503e:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    5040:	ce 01       	movw	r24, r28
    5042:	01 96       	adiw	r24, 0x01	; 1
    5044:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)
    5048:	89 81       	ldd	r24, Y+1	; 0x01
    504a:	9a 81       	ldd	r25, Y+2	; 0x02
    504c:	89 57       	subi	r24, 0x79	; 121
    504e:	91 09       	sbc	r25, r1
    5050:	4d 97       	sbiw	r24, 0x1d	; 29
    5052:	30 f4       	brcc	.+12     	; 0x5060 <main+0x1e00>
    5054:	8b 81       	ldd	r24, Y+3	; 0x03
    5056:	9c 81       	ldd	r25, Y+4	; 0x04
    5058:	c4 97       	sbiw	r24, 0x34	; 52
    505a:	85 39       	cpi	r24, 0x95	; 149
    505c:	91 05       	cpc	r25, r1
    505e:	28 f1       	brcs	.+74     	; 0x50aa <main+0x1e4a>
    5060:	bf ef       	ldi	r27, 0xFF	; 255
    5062:	20 e7       	ldi	r18, 0x70	; 112
    5064:	82 e0       	ldi	r24, 0x02	; 2
    5066:	b1 50       	subi	r27, 0x01	; 1
    5068:	20 40       	sbci	r18, 0x00	; 0
    506a:	80 40       	sbci	r24, 0x00	; 0
    506c:	e1 f7       	brne	.-8      	; 0x5066 <main+0x1e06>
    506e:	00 c0       	rjmp	.+0      	; 0x5070 <main+0x1e10>
    5070:	00 00       	nop
			{
				break;
			}
			_delay_ms(100);
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    5072:	60 91 cb 03 	lds	r22, 0x03CB
    5076:	70 91 cc 03 	lds	r23, 0x03CC
    507a:	80 91 cd 03 	lds	r24, 0x03CD
    507e:	90 91 ce 03 	lds	r25, 0x03CE
    5082:	aa 24       	eor	r10, r10
    5084:	aa 94       	dec	r10
    5086:	ba 2c       	mov	r11, r10
    5088:	0f 2e       	mov	r0, r31
    508a:	ff e1       	ldi	r31, 0x1F	; 31
    508c:	cf 2e       	mov	r12, r31
    508e:	d1 2c       	mov	r13, r1
    5090:	f0 2d       	mov	r31, r0
    5092:	68 94       	set
    5094:	ee 24       	eor	r14, r14
    5096:	e3 f8       	bld	r14, 3
    5098:	05 e0       	ldi	r16, 0x05	; 5
    509a:	10 e0       	ldi	r17, 0x00	; 0
    509c:	25 e0       	ldi	r18, 0x05	; 5
    509e:	30 e0       	ldi	r19, 0x00	; 0
    50a0:	44 e0       	ldi	r20, 0x04	; 4
    50a2:	50 e0       	ldi	r21, 0x00	; 0
    50a4:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
	}
    50a8:	b6 cf       	rjmp	.-148    	; 0x5016 <main+0x1db6>
	
	while(1)
	{
		if (compare_time != i_time)
    50aa:	40 91 c7 03 	lds	r20, 0x03C7
    50ae:	50 91 c8 03 	lds	r21, 0x03C8
    50b2:	60 91 c9 03 	lds	r22, 0x03C9
    50b6:	70 91 ca 03 	lds	r23, 0x03CA
    50ba:	80 91 cb 03 	lds	r24, 0x03CB
    50be:	90 91 cc 03 	lds	r25, 0x03CC
    50c2:	a0 91 cd 03 	lds	r26, 0x03CD
    50c6:	b0 91 ce 03 	lds	r27, 0x03CE
    50ca:	48 17       	cp	r20, r24
    50cc:	59 07       	cpc	r21, r25
    50ce:	6a 07       	cpc	r22, r26
    50d0:	7b 07       	cpc	r23, r27
    50d2:	39 f1       	breq	.+78     	; 0x5122 <main+0x1ec2>
		{
			usart_putchar(102);
    50d4:	86 e6       	ldi	r24, 0x66	; 102
    50d6:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    50da:	9f e7       	ldi	r25, 0x7F	; 127
    50dc:	a9 ea       	ldi	r26, 0xA9	; 169
    50de:	b3 e0       	ldi	r27, 0x03	; 3
    50e0:	91 50       	subi	r25, 0x01	; 1
    50e2:	a0 40       	sbci	r26, 0x00	; 0
    50e4:	b0 40       	sbci	r27, 0x00	; 0
    50e6:	e1 f7       	brne	.-8      	; 0x50e0 <main+0x1e80>
    50e8:	00 c0       	rjmp	.+0      	; 0x50ea <main+0x1e8a>
    50ea:	00 00       	nop
			_delay_ms(150);
			usart_putchar(102);//This command is for alarm off
    50ec:	86 e6       	ldi	r24, 0x66	; 102
    50ee:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
			data_send_count = data_send_count + 1;
    50f2:	80 91 c2 03 	lds	r24, 0x03C2
    50f6:	8f 5f       	subi	r24, 0xFF	; 255
    50f8:	80 93 c2 03 	sts	0x03C2, r24
			if (data_send_count > 5)
    50fc:	86 30       	cpi	r24, 0x06	; 6
    50fe:	08 f0       	brcs	.+2      	; 0x5102 <main+0x1ea2>
    5100:	15 c2       	rjmp	.+1066   	; 0x552c <main+0x22cc>
			{
				goto failure_message;
			}
			compare_time = i_time;
    5102:	80 91 cb 03 	lds	r24, 0x03CB
    5106:	90 91 cc 03 	lds	r25, 0x03CC
    510a:	a0 91 cd 03 	lds	r26, 0x03CD
    510e:	b0 91 ce 03 	lds	r27, 0x03CE
    5112:	80 93 c7 03 	sts	0x03C7, r24
    5116:	90 93 c8 03 	sts	0x03C8, r25
    511a:	a0 93 c9 03 	sts	0x03C9, r26
    511e:	b0 93 ca 03 	sts	0x03CA, r27
		}
		
		if (usart_dthit())  //scan for keypad data via usart
    5122:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    5126:	88 23       	and	r24, r24
    5128:	09 f4       	brne	.+2      	; 0x512c <main+0x1ecc>
    512a:	bf cf       	rjmp	.-130    	; 0x50aa <main+0x1e4a>
		{
			usart_data = usart_getchar();
    512c:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 102)
    5130:	86 36       	cpi	r24, 0x66	; 102
    5132:	09 f0       	breq	.+2      	; 0x5136 <main+0x1ed6>
    5134:	ba cf       	rjmp	.-140    	; 0x50aa <main+0x1e4a>
			{
				usart_data = 0;
				data_send_count = 0;
    5136:	10 92 c2 03 	sts	0x03C2, r1
				goto start_pgm;
    513a:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0xc6>
	**  Start settings and Calibration part  *******************************************************************
	************************************************************************************************************
	*/
settings_calibration:

	TFT_Fill(back_color);
    513e:	8f e1       	ldi	r24, 0x1F	; 31
    5140:	90 e0       	ldi	r25, 0x00	; 0
    5142:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("SETTINGS",64,70,16,white,back_color);
    5146:	0f 2e       	mov	r0, r31
    5148:	ff e1       	ldi	r31, 0x1F	; 31
    514a:	ef 2e       	mov	r14, r31
    514c:	f1 2c       	mov	r15, r1
    514e:	f0 2d       	mov	r31, r0
    5150:	0f ef       	ldi	r16, 0xFF	; 255
    5152:	1f ef       	ldi	r17, 0xFF	; 255
    5154:	20 e1       	ldi	r18, 0x10	; 16
    5156:	46 e4       	ldi	r20, 0x46	; 70
    5158:	50 e0       	ldi	r21, 0x00	; 0
    515a:	60 e4       	ldi	r22, 0x40	; 64
    515c:	70 e0       	ldi	r23, 0x00	; 0
    515e:	8a e8       	ldi	r24, 0x8A	; 138
    5160:	90 e0       	ldi	r25, 0x00	; 0
    5162:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,132,201,156,yellow);
    5166:	00 ee       	ldi	r16, 0xE0	; 224
    5168:	1f ef       	ldi	r17, 0xFF	; 255
    516a:	2c e9       	ldi	r18, 0x9C	; 156
    516c:	30 e0       	ldi	r19, 0x00	; 0
    516e:	49 ec       	ldi	r20, 0xC9	; 201
    5170:	50 e0       	ldi	r21, 0x00	; 0
    5172:	64 e8       	ldi	r22, 0x84	; 132
    5174:	70 e0       	ldi	r23, 0x00	; 0
    5176:	88 e2       	ldi	r24, 0x28	; 40
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Thermal Calibration",45,140,8,blue,yellow);
    517e:	0f 2e       	mov	r0, r31
    5180:	f0 ee       	ldi	r31, 0xE0	; 224
    5182:	ef 2e       	mov	r14, r31
    5184:	ff 24       	eor	r15, r15
    5186:	fa 94       	dec	r15
    5188:	f0 2d       	mov	r31, r0
    518a:	0f e1       	ldi	r16, 0x1F	; 31
    518c:	10 e0       	ldi	r17, 0x00	; 0
    518e:	28 e0       	ldi	r18, 0x08	; 8
    5190:	4c e8       	ldi	r20, 0x8C	; 140
    5192:	50 e0       	ldi	r21, 0x00	; 0
    5194:	6d e2       	ldi	r22, 0x2D	; 45
    5196:	70 e0       	ldi	r23, 0x00	; 0
    5198:	88 e2       	ldi	r24, 0x28	; 40
    519a:	93 e0       	ldi	r25, 0x03	; 3
    519c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,182,201,206,yellow);
    51a0:	00 ee       	ldi	r16, 0xE0	; 224
    51a2:	1f ef       	ldi	r17, 0xFF	; 255
    51a4:	2e ec       	ldi	r18, 0xCE	; 206
    51a6:	30 e0       	ldi	r19, 0x00	; 0
    51a8:	49 ec       	ldi	r20, 0xC9	; 201
    51aa:	50 e0       	ldi	r21, 0x00	; 0
    51ac:	66 eb       	ldi	r22, 0xB6	; 182
    51ae:	70 e0       	ldi	r23, 0x00	; 0
    51b0:	88 e2       	ldi	r24, 0x28	; 40
    51b2:	90 e0       	ldi	r25, 0x00	; 0
    51b4:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("Water Calibration",53,190,8,blue,yellow);
    51b8:	0f e1       	ldi	r16, 0x1F	; 31
    51ba:	10 e0       	ldi	r17, 0x00	; 0
    51bc:	28 e0       	ldi	r18, 0x08	; 8
    51be:	4e eb       	ldi	r20, 0xBE	; 190
    51c0:	50 e0       	ldi	r21, 0x00	; 0
    51c2:	65 e3       	ldi	r22, 0x35	; 53
    51c4:	70 e0       	ldi	r23, 0x00	; 0
    51c6:	8c e3       	ldi	r24, 0x3C	; 60
    51c8:	93 e0       	ldi	r25, 0x03	; 3
    51ca:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,232,201,256,yellow);
    51ce:	00 ee       	ldi	r16, 0xE0	; 224
    51d0:	1f ef       	ldi	r17, 0xFF	; 255
    51d2:	20 e0       	ldi	r18, 0x00	; 0
    51d4:	31 e0       	ldi	r19, 0x01	; 1
    51d6:	49 ec       	ldi	r20, 0xC9	; 201
    51d8:	50 e0       	ldi	r21, 0x00	; 0
    51da:	68 ee       	ldi	r22, 0xE8	; 232
    51dc:	70 e0       	ldi	r23, 0x00	; 0
    51de:	88 e2       	ldi	r24, 0x28	; 40
    51e0:	90 e0       	ldi	r25, 0x00	; 0
    51e2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("<<  BACK  <<",45,240,8,blue,yellow);
    51e6:	0f e1       	ldi	r16, 0x1F	; 31
    51e8:	10 e0       	ldi	r17, 0x00	; 0
    51ea:	28 e0       	ldi	r18, 0x08	; 8
    51ec:	40 ef       	ldi	r20, 0xF0	; 240
    51ee:	50 e0       	ldi	r21, 0x00	; 0
    51f0:	6d e2       	ldi	r22, 0x2D	; 45
    51f2:	70 e0       	ldi	r23, 0x00	; 0
    51f4:	85 e1       	ldi	r24, 0x15	; 21
    51f6:	91 e0       	ldi	r25, 0x01	; 1
    51f8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
				{
thermal_calib:
					input_f = 7;
    51fc:	17 e0       	ldi	r17, 0x07	; 7
    51fe:	b1 2e       	mov	r11, r17
    5200:	af 88       	ldd	r10, Y+23	; 0x17
    5202:	88 8c       	ldd	r8, Y+24	; 0x18
	TFT_Text("<<  BACK  <<",45,240,8,blue,yellow);

	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    5204:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    5208:	88 23       	and	r24, r24
    520a:	69 f0       	breq	.+26     	; 0x5226 <main+0x1fc6>
		{
			usart_data = usart_getchar();
    520c:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
				{
thermal_calib:
					input_f = 7;
    5210:	9b 2c       	mov	r9, r11
	{

		if (usart_dthit())  //scan for keypad data via usart
		{
			usart_data = usart_getchar();
			if (usart_data == 13)  // option a for thermal calibration
    5212:	8d 30       	cpi	r24, 0x0D	; 13
    5214:	09 f4       	brne	.+2      	; 0x5218 <main+0x1fb8>
    5216:	76 c1       	rjmp	.+748    	; 0x5504 <main+0x22a4>
			{
				usart_data = 0;
				goto thermal_calib;
			}
			else if (usart_data == 14)  // option b for water flow calibration
    5218:	8e 30       	cpi	r24, 0x0E	; 14
    521a:	e1 f1       	breq	.+120    	; 0x5294 <main+0x2034>
			{
				usart_data = 0;
				break;
			}
			else if (usart_data == 11 || usart_data == 15)
    521c:	8b 7f       	andi	r24, 0xFB	; 251
    521e:	8b 30       	cpi	r24, 0x0B	; 11
    5220:	11 f4       	brne	.+4      	; 0x5226 <main+0x1fc6>
    5222:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0xc6>
				usart_data = 0;
				goto start_pgm;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    5226:	83 99       	sbic	0x10, 3	; 16
    5228:	ed cf       	rjmp	.-38     	; 0x5204 <main+0x1fa4>
		{
			Read_TPval(TPval);
    522a:	8a 2d       	mov	r24, r10
    522c:	98 2d       	mov	r25, r8
    522e:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    5232:	8f e1       	ldi	r24, 0x1F	; 31
    5234:	9e e4       	ldi	r25, 0x4E	; 78
    5236:	01 97       	sbiw	r24, 0x01	; 1
    5238:	f1 f7       	brne	.-4      	; 0x5236 <main+0x1fd6>
    523a:	00 c0       	rjmp	.+0      	; 0x523c <main+0x1fdc>
    523c:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    523e:	8a 2d       	mov	r24, r10
    5240:	98 2d       	mov	r25, r8
    5242:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    5246:	2b 81       	ldd	r18, Y+3	; 0x03
    5248:	3c 81       	ldd	r19, Y+4	; 0x04
    524a:	2e 52       	subi	r18, 0x2E	; 46
    524c:	31 09       	sbc	r19, r1
    524e:	29 3a       	cpi	r18, 0xA9	; 169
    5250:	31 05       	cpc	r19, r1
    5252:	c0 f6       	brcc	.-80     	; 0x5204 <main+0x1fa4>
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
    5254:	29 81       	ldd	r18, Y+1	; 0x01
    5256:	3a 81       	ldd	r19, Y+2	; 0x02
				{
thermal_calib:
					input_f = 7;
    5258:	91 2e       	mov	r9, r17
			Read_TPval(TPval);
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
			{
				if (TPval[0]>130 && TPval[0]<160)  //Thermal calibration button
    525a:	c9 01       	movw	r24, r18
    525c:	83 58       	subi	r24, 0x83	; 131
    525e:	91 09       	sbc	r25, r1
    5260:	4d 97       	sbiw	r24, 0x1d	; 29
    5262:	08 f4       	brcc	.+2      	; 0x5266 <main+0x2006>
    5264:	4f c1       	rjmp	.+670    	; 0x5504 <main+0x22a4>
				{
thermal_calib:
					input_f = 7;
					goto button_operation;
				}
				else if (TPval[0]>97 && TPval[0]<122)  // water calibration button
    5266:	a9 01       	movw	r20, r18
    5268:	42 56       	subi	r20, 0x62	; 98
    526a:	51 09       	sbc	r21, r1
    526c:	48 31       	cpi	r20, 0x18	; 24
    526e:	51 05       	cpc	r21, r1
    5270:	88 f0       	brcs	.+34     	; 0x5294 <main+0x2034>
				{
					break;
				}
				else if (TPval[0]>61 && TPval[0]<88)  // back button
    5272:	2e 53       	subi	r18, 0x3E	; 62
    5274:	31 09       	sbc	r19, r1
    5276:	2a 31       	cpi	r18, 0x1A	; 26
    5278:	31 05       	cpc	r19, r1
    527a:	10 f4       	brcc	.+4      	; 0x5280 <main+0x2020>
    527c:	0c 94 93 19 	jmp	0x3326	; 0x3326 <main+0xc6>
    5280:	9f ef       	ldi	r25, 0xFF	; 255
    5282:	a0 e7       	ldi	r26, 0x70	; 112
    5284:	b2 e0       	ldi	r27, 0x02	; 2
    5286:	91 50       	subi	r25, 0x01	; 1
    5288:	a0 40       	sbci	r26, 0x00	; 0
    528a:	b0 40       	sbci	r27, 0x00	; 0
    528c:	e1 f7       	brne	.-8      	; 0x5286 <main+0x2026>
    528e:	00 c0       	rjmp	.+0      	; 0x5290 <main+0x2030>
    5290:	00 00       	nop
    5292:	b8 cf       	rjmp	.-144    	; 0x5204 <main+0x1fa4>
			}
		}
		
	}
	
	TFT_Fill(back_color);
    5294:	8f e1       	ldi	r24, 0x1F	; 31
    5296:	90 e0       	ldi	r25, 0x00	; 0
    5298:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("Water Calibration",53,20,8,white,back_color);
    529c:	0f 2e       	mov	r0, r31
    529e:	ff e1       	ldi	r31, 0x1F	; 31
    52a0:	ef 2e       	mov	r14, r31
    52a2:	f1 2c       	mov	r15, r1
    52a4:	f0 2d       	mov	r31, r0
    52a6:	0f ef       	ldi	r16, 0xFF	; 255
    52a8:	1f ef       	ldi	r17, 0xFF	; 255
    52aa:	28 e0       	ldi	r18, 0x08	; 8
    52ac:	44 e1       	ldi	r20, 0x14	; 20
    52ae:	50 e0       	ldi	r21, 0x00	; 0
    52b0:	65 e3       	ldi	r22, 0x35	; 53
    52b2:	70 e0       	ldi	r23, 0x00	; 0
    52b4:	8c e3       	ldi	r24, 0x3C	; 60
    52b6:	93 e0       	ldi	r25, 0x03	; 3
    52b8:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("Pulse Count: 0",64,80,8,white,back_color);
    52bc:	28 e0       	ldi	r18, 0x08	; 8
    52be:	40 e5       	ldi	r20, 0x50	; 80
    52c0:	50 e0       	ldi	r21, 0x00	; 0
    52c2:	60 e4       	ldi	r22, 0x40	; 64
    52c4:	70 e0       	ldi	r23, 0x00	; 0
    52c6:	8e e4       	ldi	r24, 0x4E	; 78
    52c8:	93 e0       	ldi	r25, 0x03	; 3
    52ca:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Box(40,132,201,156,yellow);
    52ce:	00 ee       	ldi	r16, 0xE0	; 224
    52d0:	1f ef       	ldi	r17, 0xFF	; 255
    52d2:	2c e9       	ldi	r18, 0x9C	; 156
    52d4:	30 e0       	ldi	r19, 0x00	; 0
    52d6:	49 ec       	ldi	r20, 0xC9	; 201
    52d8:	50 e0       	ldi	r21, 0x00	; 0
    52da:	64 e8       	ldi	r22, 0x84	; 132
    52dc:	70 e0       	ldi	r23, 0x00	; 0
    52de:	88 e2       	ldi	r24, 0x28	; 40
    52e0:	90 e0       	ldi	r25, 0x00	; 0
    52e2:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("    Load Water",45,140,8,blue,yellow);
    52e6:	0f 2e       	mov	r0, r31
    52e8:	f0 ee       	ldi	r31, 0xE0	; 224
    52ea:	ef 2e       	mov	r14, r31
    52ec:	ff 24       	eor	r15, r15
    52ee:	fa 94       	dec	r15
    52f0:	f0 2d       	mov	r31, r0
    52f2:	0f e1       	ldi	r16, 0x1F	; 31
    52f4:	10 e0       	ldi	r17, 0x00	; 0
    52f6:	28 e0       	ldi	r18, 0x08	; 8
    52f8:	4c e8       	ldi	r20, 0x8C	; 140
    52fa:	50 e0       	ldi	r21, 0x00	; 0
    52fc:	6d e2       	ldi	r22, 0x2D	; 45
    52fe:	70 e0       	ldi	r23, 0x00	; 0
    5300:	8d e5       	ldi	r24, 0x5D	; 93
    5302:	93 e0       	ldi	r25, 0x03	; 3
    5304:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    5308:	83 9b       	sbis	0x10, 3	; 16
    530a:	fe cf       	rjmp	.-4      	; 0x5308 <main+0x20a8>
    530c:	bf 88       	ldd	r11, Y+23	; 0x17
    530e:	a8 8c       	ldd	r10, Y+24	; 0x18
	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    5310:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    5314:	88 23       	and	r24, r24
    5316:	21 f0       	breq	.+8      	; 0x5320 <main+0x20c0>
		{
			usart_data = usart_getchar();
    5318:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)  // press Ok to load water
    531c:	8c 30       	cpi	r24, 0x0C	; 12
    531e:	41 f1       	breq	.+80     	; 0x5370 <main+0x2110>
				usart_data = 0;
				break;
			}
			else usart_data = 0;
		}
		if (!(PIND & (1<<PD3)))
    5320:	83 99       	sbic	0x10, 3	; 16
    5322:	f6 cf       	rjmp	.-20     	; 0x5310 <main+0x20b0>
		{
			Read_TPval(TPval);
    5324:	8b 2d       	mov	r24, r11
    5326:	9a 2d       	mov	r25, r10
    5328:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    532c:	8f e1       	ldi	r24, 0x1F	; 31
    532e:	9e e4       	ldi	r25, 0x4E	; 78
    5330:	01 97       	sbiw	r24, 0x01	; 1
    5332:	f1 f7       	brne	.-4      	; 0x5330 <main+0x20d0>
    5334:	00 c0       	rjmp	.+0      	; 0x5336 <main+0x20d6>
    5336:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    5338:	8b 2d       	mov	r24, r11
    533a:	9a 2d       	mov	r25, r10
    533c:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    5340:	2b 81       	ldd	r18, Y+3	; 0x03
    5342:	3c 81       	ldd	r19, Y+4	; 0x04
    5344:	2e 52       	subi	r18, 0x2E	; 46
    5346:	31 09       	sbc	r19, r1
    5348:	29 3a       	cpi	r18, 0xA9	; 169
    534a:	31 05       	cpc	r19, r1
    534c:	08 f7       	brcc	.-62     	; 0x5310 <main+0x20b0>
			{
				if (TPval[0]>130 && TPval[0]<160)  //load water
    534e:	29 81       	ldd	r18, Y+1	; 0x01
    5350:	3a 81       	ldd	r19, Y+2	; 0x02
    5352:	23 58       	subi	r18, 0x83	; 131
    5354:	31 09       	sbc	r19, r1
    5356:	2d 31       	cpi	r18, 0x1D	; 29
    5358:	31 05       	cpc	r19, r1
    535a:	50 f0       	brcs	.+20     	; 0x5370 <main+0x2110>
    535c:	9f ef       	ldi	r25, 0xFF	; 255
    535e:	a0 e7       	ldi	r26, 0x70	; 112
    5360:	b2 e0       	ldi	r27, 0x02	; 2
    5362:	91 50       	subi	r25, 0x01	; 1
    5364:	a0 40       	sbci	r26, 0x00	; 0
    5366:	b0 40       	sbci	r27, 0x00	; 0
    5368:	e1 f7       	brne	.-8      	; 0x5362 <main+0x2102>
    536a:	00 c0       	rjmp	.+0      	; 0x536c <main+0x210c>
    536c:	00 00       	nop
    536e:	d0 cf       	rjmp	.-96     	; 0x5310 <main+0x20b0>
			}
		}
		
	}

	i_water = 0;
    5370:	10 92 d3 03 	sts	0x03D3, r1
    5374:	10 92 d4 03 	sts	0x03D4, r1
    5378:	10 92 d5 03 	sts	0x03D5, r1
    537c:	10 92 d6 03 	sts	0x03D6, r1
	i_water_hold =0;
    5380:	10 92 cf 03 	sts	0x03CF, r1
    5384:	10 92 d0 03 	sts	0x03D0, r1
    5388:	10 92 d1 03 	sts	0x03D1, r1
    538c:	10 92 d2 03 	sts	0x03D2, r1
	usart_putchar(97); //water valve on
    5390:	81 e6       	ldi	r24, 0x61	; 97
    5392:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    5396:	2f ef       	ldi	r18, 0xFF	; 255
    5398:	80 e7       	ldi	r24, 0x70	; 112
    539a:	92 e0       	ldi	r25, 0x02	; 2
    539c:	21 50       	subi	r18, 0x01	; 1
    539e:	80 40       	sbci	r24, 0x00	; 0
    53a0:	90 40       	sbci	r25, 0x00	; 0
    53a2:	e1 f7       	brne	.-8      	; 0x539c <main+0x213c>
    53a4:	00 c0       	rjmp	.+0      	; 0x53a6 <main+0x2146>
    53a6:	00 00       	nop
	_delay_ms(100);
	usart_putchar(97);
    53a8:	81 e6       	ldi	r24, 0x61	; 97
    53aa:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    53ae:	af ef       	ldi	r26, 0xFF	; 255
    53b0:	b0 e7       	ldi	r27, 0x70	; 112
    53b2:	22 e0       	ldi	r18, 0x02	; 2
    53b4:	a1 50       	subi	r26, 0x01	; 1
    53b6:	b0 40       	sbci	r27, 0x00	; 0
    53b8:	20 40       	sbci	r18, 0x00	; 0
    53ba:	e1 f7       	brne	.-8      	; 0x53b4 <main+0x2154>
    53bc:	00 c0       	rjmp	.+0      	; 0x53be <main+0x215e>
    53be:	00 00       	nop
	_delay_ms(100);
	usart_putchar(97);
    53c0:	81 e6       	ldi	r24, 0x61	; 97
    53c2:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
	TFT_Box(40,132,201,156,yellow);
    53c6:	00 ee       	ldi	r16, 0xE0	; 224
    53c8:	1f ef       	ldi	r17, 0xFF	; 255
    53ca:	2c e9       	ldi	r18, 0x9C	; 156
    53cc:	30 e0       	ldi	r19, 0x00	; 0
    53ce:	49 ec       	ldi	r20, 0xC9	; 201
    53d0:	50 e0       	ldi	r21, 0x00	; 0
    53d2:	64 e8       	ldi	r22, 0x84	; 132
    53d4:	70 e0       	ldi	r23, 0x00	; 0
    53d6:	88 e2       	ldi	r24, 0x28	; 40
    53d8:	90 e0       	ldi	r25, 0x00	; 0
    53da:	0e 94 96 13 	call	0x272c	; 0x272c <TFT_Box>
	TFT_Text("   Stop Loading",45,140,8,blue,yellow);
    53de:	0f 2e       	mov	r0, r31
    53e0:	f0 ee       	ldi	r31, 0xE0	; 224
    53e2:	ef 2e       	mov	r14, r31
    53e4:	ff 24       	eor	r15, r15
    53e6:	fa 94       	dec	r15
    53e8:	f0 2d       	mov	r31, r0
    53ea:	0f e1       	ldi	r16, 0x1F	; 31
    53ec:	10 e0       	ldi	r17, 0x00	; 0
    53ee:	28 e0       	ldi	r18, 0x08	; 8
    53f0:	4c e8       	ldi	r20, 0x8C	; 140
    53f2:	50 e0       	ldi	r21, 0x00	; 0
    53f4:	6d e2       	ldi	r22, 0x2D	; 45
    53f6:	70 e0       	ldi	r23, 0x00	; 0
    53f8:	8c e6       	ldi	r24, 0x6C	; 108
    53fa:	93 e0       	ldi	r25, 0x03	; 3
    53fc:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    5400:	83 9b       	sbis	0x10, 3	; 16
    5402:	fe cf       	rjmp	.-4      	; 0x5400 <main+0x21a0>
    5404:	9f 88       	ldd	r9, Y+23	; 0x17
    5406:	88 8c       	ldd	r8, Y+24	; 0x18
	while (1)
	{

		if (usart_dthit())  //scan for keypad data via usart
    5408:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <usart_dthit>
    540c:	88 23       	and	r24, r24
    540e:	21 f0       	breq	.+8      	; 0x5418 <main+0x21b8>
		{
			usart_data = usart_getchar();
    5410:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <usart_getchar>
			if (usart_data == 12)  // press Ok to load water
    5414:	8c 30       	cpi	r24, 0x0C	; 12
    5416:	c1 f1       	breq	.+112    	; 0x5488 <main+0x2228>
				goto water_calib;
			}
			else usart_data = 0;
		}
		
		TFT_PutsInt(i_water,-1,168,80,8,white,back_color);
    5418:	60 91 d3 03 	lds	r22, 0x03D3
    541c:	70 91 d4 03 	lds	r23, 0x03D4
    5420:	80 91 d5 03 	lds	r24, 0x03D5
    5424:	90 91 d6 03 	lds	r25, 0x03D6
    5428:	0f 2e       	mov	r0, r31
    542a:	ff e1       	ldi	r31, 0x1F	; 31
    542c:	af 2e       	mov	r10, r31
    542e:	b1 2c       	mov	r11, r1
    5430:	f0 2d       	mov	r31, r0
    5432:	cc 24       	eor	r12, r12
    5434:	ca 94       	dec	r12
    5436:	dc 2c       	mov	r13, r12
    5438:	68 94       	set
    543a:	ee 24       	eor	r14, r14
    543c:	e3 f8       	bld	r14, 3
    543e:	00 e5       	ldi	r16, 0x50	; 80
    5440:	10 e0       	ldi	r17, 0x00	; 0
    5442:	28 ea       	ldi	r18, 0xA8	; 168
    5444:	30 e0       	ldi	r19, 0x00	; 0
    5446:	4f ef       	ldi	r20, 0xFF	; 255
    5448:	5f ef       	ldi	r21, 0xFF	; 255
    544a:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <TFT_PutsInt>
		
		if (!(PIND & (1<<PD3)))
    544e:	83 99       	sbic	0x10, 3	; 16
    5450:	db cf       	rjmp	.-74     	; 0x5408 <main+0x21a8>
		{
			Read_TPval(TPval);
    5452:	89 2d       	mov	r24, r9
    5454:	98 2d       	mov	r25, r8
    5456:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
    545a:	8f e1       	ldi	r24, 0x1F	; 31
    545c:	9e e4       	ldi	r25, 0x4E	; 78
    545e:	01 97       	sbiw	r24, 0x01	; 1
    5460:	f1 f7       	brne	.-4      	; 0x545e <main+0x21fe>
    5462:	00 c0       	rjmp	.+0      	; 0x5464 <main+0x2204>
    5464:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    5466:	89 2d       	mov	r24, r9
    5468:	98 2d       	mov	r25, r8
    546a:	0e 94 49 17 	call	0x2e92	; 0x2e92 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>45 && TPval[1]<215)
    546e:	8b 81       	ldd	r24, Y+3	; 0x03
    5470:	9c 81       	ldd	r25, Y+4	; 0x04
    5472:	8e 97       	sbiw	r24, 0x2e	; 46
    5474:	89 3a       	cpi	r24, 0xA9	; 169
    5476:	91 05       	cpc	r25, r1
    5478:	38 f6       	brcc	.-114    	; 0x5408 <main+0x21a8>
			{
				if (TPval[0]>130 && TPval[0]<160)  //load water
    547a:	89 81       	ldd	r24, Y+1	; 0x01
    547c:	9a 81       	ldd	r25, Y+2	; 0x02
    547e:	83 58       	subi	r24, 0x83	; 131
    5480:	91 09       	sbc	r25, r1
    5482:	4d 97       	sbiw	r24, 0x1d	; 29
    5484:	08 f0       	brcs	.+2      	; 0x5488 <main+0x2228>
    5486:	48 c0       	rjmp	.+144    	; 0x5518 <main+0x22b8>
				{
water_calib:
					usart_putchar(98); //water valve off
    5488:	82 e6       	ldi	r24, 0x62	; 98
    548a:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    548e:	9f ef       	ldi	r25, 0xFF	; 255
    5490:	a0 e7       	ldi	r26, 0x70	; 112
    5492:	b2 e0       	ldi	r27, 0x02	; 2
    5494:	91 50       	subi	r25, 0x01	; 1
    5496:	a0 40       	sbci	r26, 0x00	; 0
    5498:	b0 40       	sbci	r27, 0x00	; 0
    549a:	e1 f7       	brne	.-8      	; 0x5494 <main+0x2234>
    549c:	00 c0       	rjmp	.+0      	; 0x549e <main+0x223e>
    549e:	00 00       	nop
					_delay_ms(100);
					usart_putchar(98);
    54a0:	82 e6       	ldi	r24, 0x62	; 98
    54a2:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    54a6:	2f ef       	ldi	r18, 0xFF	; 255
    54a8:	80 e7       	ldi	r24, 0x70	; 112
    54aa:	92 e0       	ldi	r25, 0x02	; 2
    54ac:	21 50       	subi	r18, 0x01	; 1
    54ae:	80 40       	sbci	r24, 0x00	; 0
    54b0:	90 40       	sbci	r25, 0x00	; 0
    54b2:	e1 f7       	brne	.-8      	; 0x54ac <main+0x224c>
    54b4:	00 c0       	rjmp	.+0      	; 0x54b6 <main+0x2256>
    54b6:	00 00       	nop
					_delay_ms(100);
					usart_putchar(98);
    54b8:	82 e6       	ldi	r24, 0x62	; 98
    54ba:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <usart_putchar>
    54be:	af ef       	ldi	r26, 0xFF	; 255
    54c0:	b4 e3       	ldi	r27, 0x34	; 52
    54c2:	2c e0       	ldi	r18, 0x0C	; 12
    54c4:	a1 50       	subi	r26, 0x01	; 1
    54c6:	b0 40       	sbci	r27, 0x00	; 0
    54c8:	20 40       	sbci	r18, 0x00	; 0
    54ca:	e1 f7       	brne	.-8      	; 0x54c4 <main+0x2264>
    54cc:	00 c0       	rjmp	.+0      	; 0x54ce <main+0x226e>
    54ce:	00 00       	nop
					_delay_ms(500);
					i_water_hold = i_water;
    54d0:	80 91 d3 03 	lds	r24, 0x03D3
    54d4:	90 91 d4 03 	lds	r25, 0x03D4
    54d8:	a0 91 d5 03 	lds	r26, 0x03D5
    54dc:	b0 91 d6 03 	lds	r27, 0x03D6
    54e0:	80 93 cf 03 	sts	0x03CF, r24
    54e4:	90 93 d0 03 	sts	0x03D0, r25
    54e8:	a0 93 d1 03 	sts	0x03D1, r26
    54ec:	b0 93 d2 03 	sts	0x03D2, r27
					input_f = 9;
    54f0:	0f 2e       	mov	r0, r31
    54f2:	f9 e0       	ldi	r31, 0x09	; 9
    54f4:	9f 2e       	mov	r9, r31
    54f6:	f0 2d       	mov	r31, r0
					goto button_operation;
    54f8:	05 c0       	rjmp	.+10     	; 0x5504 <main+0x22a4>
			_delay_ms(100);
		}
	}
		//for manual input show the button
		
	input_f = 1;
    54fa:	99 24       	eor	r9, r9
    54fc:	93 94       	inc	r9
    54fe:	02 c0       	rjmp	.+4      	; 0x5504 <main+0x22a4>
    5500:	99 24       	eor	r9, r9
    5502:	93 94       	inc	r9
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
    5504:	0f 2e       	mov	r0, r31
    5506:	f3 e0       	ldi	r31, 0x03	; 3
    5508:	8f 2e       	mov	r8, r31
    550a:	f0 2d       	mov	r31, r0
    550c:	4f 80       	ldd	r4, Y+7	; 0x07
    550e:	58 84       	ldd	r5, Y+8	; 0x08
    5510:	69 84       	ldd	r6, Y+9	; 0x09
    5512:	7a 84       	ldd	r7, Y+10	; 0x0a
    5514:	0c 94 cc 1b 	jmp	0x3798	; 0x3798 <main+0x538>
    5518:	8f ef       	ldi	r24, 0xFF	; 255
    551a:	90 e7       	ldi	r25, 0x70	; 112
    551c:	a2 e0       	ldi	r26, 0x02	; 2
    551e:	81 50       	subi	r24, 0x01	; 1
    5520:	90 40       	sbci	r25, 0x00	; 0
    5522:	a0 40       	sbci	r26, 0x00	; 0
    5524:	e1 f7       	brne	.-8      	; 0x551e <main+0x22be>
    5526:	00 c0       	rjmp	.+0      	; 0x5528 <main+0x22c8>
    5528:	00 00       	nop
    552a:	6e cf       	rjmp	.-292    	; 0x5408 <main+0x21a8>
		
	}
	
failure_message:

	TFT_Fill(white);
    552c:	8f ef       	ldi	r24, 0xFF	; 255
    552e:	9f ef       	ldi	r25, 0xFF	; 255
    5530:	0e 94 6f 13 	call	0x26de	; 0x26de <TFT_Fill>
	TFT_Text("OPERATION FAILED !!!",23,40,8,red,white);
    5534:	ee 24       	eor	r14, r14
    5536:	ea 94       	dec	r14
    5538:	fe 2c       	mov	r15, r14
    553a:	00 e0       	ldi	r16, 0x00	; 0
    553c:	18 ef       	ldi	r17, 0xF8	; 248
    553e:	28 e0       	ldi	r18, 0x08	; 8
    5540:	48 e2       	ldi	r20, 0x28	; 40
    5542:	50 e0       	ldi	r21, 0x00	; 0
    5544:	67 e1       	ldi	r22, 0x17	; 23
    5546:	70 e0       	ldi	r23, 0x00	; 0
    5548:	8c e7       	ldi	r24, 0x7C	; 124
    554a:	93 e0       	ldi	r25, 0x03	; 3
    554c:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("STARTING NEW SESSION...",23,60,8,red,white);
    5550:	28 e0       	ldi	r18, 0x08	; 8
    5552:	4c e3       	ldi	r20, 0x3C	; 60
    5554:	50 e0       	ldi	r21, 0x00	; 0
    5556:	67 e1       	ldi	r22, 0x17	; 23
    5558:	70 e0       	ldi	r23, 0x00	; 0
    555a:	81 e9       	ldi	r24, 0x91	; 145
    555c:	93 e0       	ldi	r25, 0x03	; 3
    555e:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
	TFT_Text("PLEASE WAIT FOR A WHILE",23,80,8,red,white);
    5562:	28 e0       	ldi	r18, 0x08	; 8
    5564:	40 e5       	ldi	r20, 0x50	; 80
    5566:	50 e0       	ldi	r21, 0x00	; 0
    5568:	67 e1       	ldi	r22, 0x17	; 23
    556a:	70 e0       	ldi	r23, 0x00	; 0
    556c:	89 ea       	ldi	r24, 0xA9	; 169
    556e:	93 e0       	ldi	r25, 0x03	; 3
    5570:	0e 94 51 15 	call	0x2aa2	; 0x2aa2 <TFT_Text>
    5574:	bf ef       	ldi	r27, 0xFF	; 255
    5576:	2d e3       	ldi	r18, 0x3D	; 61
    5578:	89 e4       	ldi	r24, 0x49	; 73
    557a:	b1 50       	subi	r27, 0x01	; 1
    557c:	20 40       	sbci	r18, 0x00	; 0
    557e:	80 40       	sbci	r24, 0x00	; 0
    5580:	e1 f7       	brne	.-8      	; 0x557a <main+0x231a>
    5582:	00 c0       	rjmp	.+0      	; 0x5584 <main+0x2324>
    5584:	00 00       	nop
	_delay_ms(3000);
	
		
	cli(); //irq's off
    5586:	f8 94       	cli
    5588:	ff cf       	rjmp	.-2      	; 0x5588 <main+0x2328>

0000558a <__floatunsisf>:
    558a:	e8 94       	clt
    558c:	09 c0       	rjmp	.+18     	; 0x55a0 <__floatsisf+0x12>

0000558e <__floatsisf>:
    558e:	97 fb       	bst	r25, 7
    5590:	3e f4       	brtc	.+14     	; 0x55a0 <__floatsisf+0x12>
    5592:	90 95       	com	r25
    5594:	80 95       	com	r24
    5596:	70 95       	com	r23
    5598:	61 95       	neg	r22
    559a:	7f 4f       	sbci	r23, 0xFF	; 255
    559c:	8f 4f       	sbci	r24, 0xFF	; 255
    559e:	9f 4f       	sbci	r25, 0xFF	; 255
    55a0:	99 23       	and	r25, r25
    55a2:	a9 f0       	breq	.+42     	; 0x55ce <__floatsisf+0x40>
    55a4:	f9 2f       	mov	r31, r25
    55a6:	96 e9       	ldi	r25, 0x96	; 150
    55a8:	bb 27       	eor	r27, r27
    55aa:	93 95       	inc	r25
    55ac:	f6 95       	lsr	r31
    55ae:	87 95       	ror	r24
    55b0:	77 95       	ror	r23
    55b2:	67 95       	ror	r22
    55b4:	b7 95       	ror	r27
    55b6:	f1 11       	cpse	r31, r1
    55b8:	f8 cf       	rjmp	.-16     	; 0x55aa <__floatsisf+0x1c>
    55ba:	fa f4       	brpl	.+62     	; 0x55fa <__floatsisf+0x6c>
    55bc:	bb 0f       	add	r27, r27
    55be:	11 f4       	brne	.+4      	; 0x55c4 <__floatsisf+0x36>
    55c0:	60 ff       	sbrs	r22, 0
    55c2:	1b c0       	rjmp	.+54     	; 0x55fa <__floatsisf+0x6c>
    55c4:	6f 5f       	subi	r22, 0xFF	; 255
    55c6:	7f 4f       	sbci	r23, 0xFF	; 255
    55c8:	8f 4f       	sbci	r24, 0xFF	; 255
    55ca:	9f 4f       	sbci	r25, 0xFF	; 255
    55cc:	16 c0       	rjmp	.+44     	; 0x55fa <__floatsisf+0x6c>
    55ce:	88 23       	and	r24, r24
    55d0:	11 f0       	breq	.+4      	; 0x55d6 <__floatsisf+0x48>
    55d2:	96 e9       	ldi	r25, 0x96	; 150
    55d4:	11 c0       	rjmp	.+34     	; 0x55f8 <__floatsisf+0x6a>
    55d6:	77 23       	and	r23, r23
    55d8:	21 f0       	breq	.+8      	; 0x55e2 <__floatsisf+0x54>
    55da:	9e e8       	ldi	r25, 0x8E	; 142
    55dc:	87 2f       	mov	r24, r23
    55de:	76 2f       	mov	r23, r22
    55e0:	05 c0       	rjmp	.+10     	; 0x55ec <__floatsisf+0x5e>
    55e2:	66 23       	and	r22, r22
    55e4:	71 f0       	breq	.+28     	; 0x5602 <__floatsisf+0x74>
    55e6:	96 e8       	ldi	r25, 0x86	; 134
    55e8:	86 2f       	mov	r24, r22
    55ea:	70 e0       	ldi	r23, 0x00	; 0
    55ec:	60 e0       	ldi	r22, 0x00	; 0
    55ee:	2a f0       	brmi	.+10     	; 0x55fa <__floatsisf+0x6c>
    55f0:	9a 95       	dec	r25
    55f2:	66 0f       	add	r22, r22
    55f4:	77 1f       	adc	r23, r23
    55f6:	88 1f       	adc	r24, r24
    55f8:	da f7       	brpl	.-10     	; 0x55f0 <__floatsisf+0x62>
    55fa:	88 0f       	add	r24, r24
    55fc:	96 95       	lsr	r25
    55fe:	87 95       	ror	r24
    5600:	97 f9       	bld	r25, 7
    5602:	08 95       	ret

00005604 <lrint>:
    5604:	41 d0       	rcall	.+130    	; 0x5688 <__fp_splitA>
    5606:	a8 f1       	brcs	.+106    	; 0x5672 <lrint+0x6e>
    5608:	9e 57       	subi	r25, 0x7E	; 126
    560a:	a8 f1       	brcs	.+106    	; 0x5676 <lrint+0x72>
    560c:	98 51       	subi	r25, 0x18	; 24
    560e:	60 f0       	brcs	.+24     	; 0x5628 <lrint+0x24>
    5610:	39 f1       	breq	.+78     	; 0x5660 <lrint+0x5c>
    5612:	98 30       	cpi	r25, 0x08	; 8
    5614:	70 f5       	brcc	.+92     	; 0x5672 <lrint+0x6e>
    5616:	09 2e       	mov	r0, r25
    5618:	99 27       	eor	r25, r25
    561a:	66 0f       	add	r22, r22
    561c:	77 1f       	adc	r23, r23
    561e:	88 1f       	adc	r24, r24
    5620:	99 1f       	adc	r25, r25
    5622:	0a 94       	dec	r0
    5624:	d1 f7       	brne	.-12     	; 0x561a <lrint+0x16>
    5626:	1c c0       	rjmp	.+56     	; 0x5660 <lrint+0x5c>
    5628:	bb 27       	eor	r27, r27
    562a:	99 3f       	cpi	r25, 0xF9	; 249
    562c:	4c f4       	brge	.+18     	; 0x5640 <lrint+0x3c>
    562e:	b1 11       	cpse	r27, r1
    5630:	b1 e0       	ldi	r27, 0x01	; 1
    5632:	b6 2b       	or	r27, r22
    5634:	67 2f       	mov	r22, r23
    5636:	78 2f       	mov	r23, r24
    5638:	88 27       	eor	r24, r24
    563a:	98 5f       	subi	r25, 0xF8	; 248
    563c:	b1 f7       	brne	.-20     	; 0x562a <lrint+0x26>
    563e:	08 c0       	rjmp	.+16     	; 0x5650 <lrint+0x4c>
    5640:	86 95       	lsr	r24
    5642:	77 95       	ror	r23
    5644:	67 95       	ror	r22
    5646:	b7 95       	ror	r27
    5648:	08 f4       	brcc	.+2      	; 0x564c <lrint+0x48>
    564a:	b1 60       	ori	r27, 0x01	; 1
    564c:	93 95       	inc	r25
    564e:	c1 f7       	brne	.-16     	; 0x5640 <lrint+0x3c>
    5650:	bb 0f       	add	r27, r27
    5652:	30 f4       	brcc	.+12     	; 0x5660 <lrint+0x5c>
    5654:	11 f4       	brne	.+4      	; 0x565a <lrint+0x56>
    5656:	60 ff       	sbrs	r22, 0
    5658:	03 c0       	rjmp	.+6      	; 0x5660 <lrint+0x5c>
    565a:	6f 5f       	subi	r22, 0xFF	; 255
    565c:	7f 4f       	sbci	r23, 0xFF	; 255
    565e:	8f 4f       	sbci	r24, 0xFF	; 255
    5660:	3e f4       	brtc	.+14     	; 0x5670 <lrint+0x6c>
    5662:	90 95       	com	r25
    5664:	80 95       	com	r24
    5666:	70 95       	com	r23
    5668:	61 95       	neg	r22
    566a:	7f 4f       	sbci	r23, 0xFF	; 255
    566c:	8f 4f       	sbci	r24, 0xFF	; 255
    566e:	9f 4f       	sbci	r25, 0xFF	; 255
    5670:	08 95       	ret
    5672:	68 94       	set
    5674:	24 c0       	rjmp	.+72     	; 0x56be <__fp_szero>
    5676:	22 c0       	rjmp	.+68     	; 0x56bc <__fp_zero>

00005678 <__fp_split3>:
    5678:	57 fd       	sbrc	r21, 7
    567a:	90 58       	subi	r25, 0x80	; 128
    567c:	44 0f       	add	r20, r20
    567e:	55 1f       	adc	r21, r21
    5680:	59 f0       	breq	.+22     	; 0x5698 <__fp_splitA+0x10>
    5682:	5f 3f       	cpi	r21, 0xFF	; 255
    5684:	71 f0       	breq	.+28     	; 0x56a2 <__fp_splitA+0x1a>
    5686:	47 95       	ror	r20

00005688 <__fp_splitA>:
    5688:	88 0f       	add	r24, r24
    568a:	97 fb       	bst	r25, 7
    568c:	99 1f       	adc	r25, r25
    568e:	61 f0       	breq	.+24     	; 0x56a8 <__fp_splitA+0x20>
    5690:	9f 3f       	cpi	r25, 0xFF	; 255
    5692:	79 f0       	breq	.+30     	; 0x56b2 <__fp_splitA+0x2a>
    5694:	87 95       	ror	r24
    5696:	08 95       	ret
    5698:	12 16       	cp	r1, r18
    569a:	13 06       	cpc	r1, r19
    569c:	14 06       	cpc	r1, r20
    569e:	55 1f       	adc	r21, r21
    56a0:	f2 cf       	rjmp	.-28     	; 0x5686 <__fp_split3+0xe>
    56a2:	46 95       	lsr	r20
    56a4:	f1 df       	rcall	.-30     	; 0x5688 <__fp_splitA>
    56a6:	08 c0       	rjmp	.+16     	; 0x56b8 <__fp_splitA+0x30>
    56a8:	16 16       	cp	r1, r22
    56aa:	17 06       	cpc	r1, r23
    56ac:	18 06       	cpc	r1, r24
    56ae:	99 1f       	adc	r25, r25
    56b0:	f1 cf       	rjmp	.-30     	; 0x5694 <__fp_splitA+0xc>
    56b2:	86 95       	lsr	r24
    56b4:	71 05       	cpc	r23, r1
    56b6:	61 05       	cpc	r22, r1
    56b8:	08 94       	sec
    56ba:	08 95       	ret

000056bc <__fp_zero>:
    56bc:	e8 94       	clt

000056be <__fp_szero>:
    56be:	bb 27       	eor	r27, r27
    56c0:	66 27       	eor	r22, r22
    56c2:	77 27       	eor	r23, r23
    56c4:	cb 01       	movw	r24, r22
    56c6:	97 f9       	bld	r25, 7
    56c8:	08 95       	ret

000056ca <vfprintf>:
    56ca:	a3 e1       	ldi	r26, 0x13	; 19
    56cc:	b0 e0       	ldi	r27, 0x00	; 0
    56ce:	eb e6       	ldi	r30, 0x6B	; 107
    56d0:	fb e2       	ldi	r31, 0x2B	; 43
    56d2:	0c 94 33 2f 	jmp	0x5e66	; 0x5e66 <__prologue_saves__>
    56d6:	7c 01       	movw	r14, r24
    56d8:	1b 01       	movw	r2, r22
    56da:	6a 01       	movw	r12, r20
    56dc:	fc 01       	movw	r30, r24
    56de:	17 82       	std	Z+7, r1	; 0x07
    56e0:	16 82       	std	Z+6, r1	; 0x06
    56e2:	83 81       	ldd	r24, Z+3	; 0x03
    56e4:	81 ff       	sbrs	r24, 1
    56e6:	66 c3       	rjmp	.+1740   	; 0x5db4 <vfprintf+0x6ea>
    56e8:	be 01       	movw	r22, r28
    56ea:	6f 5f       	subi	r22, 0xFF	; 255
    56ec:	7f 4f       	sbci	r23, 0xFF	; 255
    56ee:	4b 01       	movw	r8, r22
    56f0:	f7 01       	movw	r30, r14
    56f2:	93 81       	ldd	r25, Z+3	; 0x03
    56f4:	f1 01       	movw	r30, r2
    56f6:	93 fd       	sbrc	r25, 3
    56f8:	85 91       	lpm	r24, Z+
    56fa:	93 ff       	sbrs	r25, 3
    56fc:	81 91       	ld	r24, Z+
    56fe:	1f 01       	movw	r2, r30
    5700:	88 23       	and	r24, r24
    5702:	09 f4       	brne	.+2      	; 0x5706 <vfprintf+0x3c>
    5704:	53 c3       	rjmp	.+1702   	; 0x5dac <vfprintf+0x6e2>
    5706:	85 32       	cpi	r24, 0x25	; 37
    5708:	39 f4       	brne	.+14     	; 0x5718 <vfprintf+0x4e>
    570a:	93 fd       	sbrc	r25, 3
    570c:	85 91       	lpm	r24, Z+
    570e:	93 ff       	sbrs	r25, 3
    5710:	81 91       	ld	r24, Z+
    5712:	1f 01       	movw	r2, r30
    5714:	85 32       	cpi	r24, 0x25	; 37
    5716:	39 f4       	brne	.+14     	; 0x5726 <vfprintf+0x5c>
    5718:	b7 01       	movw	r22, r14
    571a:	90 e0       	ldi	r25, 0x00	; 0
    571c:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5720:	56 01       	movw	r10, r12
    5722:	65 01       	movw	r12, r10
    5724:	e5 cf       	rjmp	.-54     	; 0x56f0 <vfprintf+0x26>
    5726:	10 e0       	ldi	r17, 0x00	; 0
    5728:	51 2c       	mov	r5, r1
    572a:	20 e0       	ldi	r18, 0x00	; 0
    572c:	20 32       	cpi	r18, 0x20	; 32
    572e:	a0 f4       	brcc	.+40     	; 0x5758 <vfprintf+0x8e>
    5730:	8b 32       	cpi	r24, 0x2B	; 43
    5732:	69 f0       	breq	.+26     	; 0x574e <vfprintf+0x84>
    5734:	30 f4       	brcc	.+12     	; 0x5742 <vfprintf+0x78>
    5736:	80 32       	cpi	r24, 0x20	; 32
    5738:	59 f0       	breq	.+22     	; 0x5750 <vfprintf+0x86>
    573a:	83 32       	cpi	r24, 0x23	; 35
    573c:	69 f4       	brne	.+26     	; 0x5758 <vfprintf+0x8e>
    573e:	20 61       	ori	r18, 0x10	; 16
    5740:	2c c0       	rjmp	.+88     	; 0x579a <vfprintf+0xd0>
    5742:	8d 32       	cpi	r24, 0x2D	; 45
    5744:	39 f0       	breq	.+14     	; 0x5754 <vfprintf+0x8a>
    5746:	80 33       	cpi	r24, 0x30	; 48
    5748:	39 f4       	brne	.+14     	; 0x5758 <vfprintf+0x8e>
    574a:	21 60       	ori	r18, 0x01	; 1
    574c:	26 c0       	rjmp	.+76     	; 0x579a <vfprintf+0xd0>
    574e:	22 60       	ori	r18, 0x02	; 2
    5750:	24 60       	ori	r18, 0x04	; 4
    5752:	23 c0       	rjmp	.+70     	; 0x579a <vfprintf+0xd0>
    5754:	28 60       	ori	r18, 0x08	; 8
    5756:	21 c0       	rjmp	.+66     	; 0x579a <vfprintf+0xd0>
    5758:	27 fd       	sbrc	r18, 7
    575a:	27 c0       	rjmp	.+78     	; 0x57aa <vfprintf+0xe0>
    575c:	30 ed       	ldi	r19, 0xD0	; 208
    575e:	38 0f       	add	r19, r24
    5760:	3a 30       	cpi	r19, 0x0A	; 10
    5762:	78 f4       	brcc	.+30     	; 0x5782 <vfprintf+0xb8>
    5764:	26 ff       	sbrs	r18, 6
    5766:	06 c0       	rjmp	.+12     	; 0x5774 <vfprintf+0xaa>
    5768:	fa e0       	ldi	r31, 0x0A	; 10
    576a:	1f 9f       	mul	r17, r31
    576c:	30 0d       	add	r19, r0
    576e:	11 24       	eor	r1, r1
    5770:	13 2f       	mov	r17, r19
    5772:	13 c0       	rjmp	.+38     	; 0x579a <vfprintf+0xd0>
    5774:	6a e0       	ldi	r22, 0x0A	; 10
    5776:	56 9e       	mul	r5, r22
    5778:	30 0d       	add	r19, r0
    577a:	11 24       	eor	r1, r1
    577c:	53 2e       	mov	r5, r19
    577e:	20 62       	ori	r18, 0x20	; 32
    5780:	0c c0       	rjmp	.+24     	; 0x579a <vfprintf+0xd0>
    5782:	8e 32       	cpi	r24, 0x2E	; 46
    5784:	21 f4       	brne	.+8      	; 0x578e <vfprintf+0xc4>
    5786:	26 fd       	sbrc	r18, 6
    5788:	11 c3       	rjmp	.+1570   	; 0x5dac <vfprintf+0x6e2>
    578a:	20 64       	ori	r18, 0x40	; 64
    578c:	06 c0       	rjmp	.+12     	; 0x579a <vfprintf+0xd0>
    578e:	8c 36       	cpi	r24, 0x6C	; 108
    5790:	11 f4       	brne	.+4      	; 0x5796 <vfprintf+0xcc>
    5792:	20 68       	ori	r18, 0x80	; 128
    5794:	02 c0       	rjmp	.+4      	; 0x579a <vfprintf+0xd0>
    5796:	88 36       	cpi	r24, 0x68	; 104
    5798:	41 f4       	brne	.+16     	; 0x57aa <vfprintf+0xe0>
    579a:	f1 01       	movw	r30, r2
    579c:	93 fd       	sbrc	r25, 3
    579e:	85 91       	lpm	r24, Z+
    57a0:	93 ff       	sbrs	r25, 3
    57a2:	81 91       	ld	r24, Z+
    57a4:	1f 01       	movw	r2, r30
    57a6:	81 11       	cpse	r24, r1
    57a8:	c1 cf       	rjmp	.-126    	; 0x572c <vfprintf+0x62>
    57aa:	9b eb       	ldi	r25, 0xBB	; 187
    57ac:	98 0f       	add	r25, r24
    57ae:	93 30       	cpi	r25, 0x03	; 3
    57b0:	18 f4       	brcc	.+6      	; 0x57b8 <vfprintf+0xee>
    57b2:	20 61       	ori	r18, 0x10	; 16
    57b4:	80 5e       	subi	r24, 0xE0	; 224
    57b6:	06 c0       	rjmp	.+12     	; 0x57c4 <vfprintf+0xfa>
    57b8:	9b e9       	ldi	r25, 0x9B	; 155
    57ba:	98 0f       	add	r25, r24
    57bc:	93 30       	cpi	r25, 0x03	; 3
    57be:	08 f0       	brcs	.+2      	; 0x57c2 <vfprintf+0xf8>
    57c0:	aa c1       	rjmp	.+852    	; 0x5b16 <vfprintf+0x44c>
    57c2:	2f 7e       	andi	r18, 0xEF	; 239
    57c4:	26 ff       	sbrs	r18, 6
    57c6:	16 e0       	ldi	r17, 0x06	; 6
    57c8:	2f 73       	andi	r18, 0x3F	; 63
    57ca:	72 2e       	mov	r7, r18
    57cc:	85 36       	cpi	r24, 0x65	; 101
    57ce:	21 f4       	brne	.+8      	; 0x57d8 <vfprintf+0x10e>
    57d0:	f2 2f       	mov	r31, r18
    57d2:	f0 64       	ori	r31, 0x40	; 64
    57d4:	7f 2e       	mov	r7, r31
    57d6:	08 c0       	rjmp	.+16     	; 0x57e8 <vfprintf+0x11e>
    57d8:	86 36       	cpi	r24, 0x66	; 102
    57da:	21 f4       	brne	.+8      	; 0x57e4 <vfprintf+0x11a>
    57dc:	62 2f       	mov	r22, r18
    57de:	60 68       	ori	r22, 0x80	; 128
    57e0:	76 2e       	mov	r7, r22
    57e2:	02 c0       	rjmp	.+4      	; 0x57e8 <vfprintf+0x11e>
    57e4:	11 11       	cpse	r17, r1
    57e6:	11 50       	subi	r17, 0x01	; 1
    57e8:	77 fe       	sbrs	r7, 7
    57ea:	07 c0       	rjmp	.+14     	; 0x57fa <vfprintf+0x130>
    57ec:	1c 33       	cpi	r17, 0x3C	; 60
    57ee:	48 f4       	brcc	.+18     	; 0x5802 <vfprintf+0x138>
    57f0:	44 24       	eor	r4, r4
    57f2:	43 94       	inc	r4
    57f4:	41 0e       	add	r4, r17
    57f6:	27 e0       	ldi	r18, 0x07	; 7
    57f8:	0b c0       	rjmp	.+22     	; 0x5810 <vfprintf+0x146>
    57fa:	18 30       	cpi	r17, 0x08	; 8
    57fc:	30 f4       	brcc	.+12     	; 0x580a <vfprintf+0x140>
    57fe:	21 2f       	mov	r18, r17
    5800:	06 c0       	rjmp	.+12     	; 0x580e <vfprintf+0x144>
    5802:	27 e0       	ldi	r18, 0x07	; 7
    5804:	4c e3       	ldi	r20, 0x3C	; 60
    5806:	44 2e       	mov	r4, r20
    5808:	03 c0       	rjmp	.+6      	; 0x5810 <vfprintf+0x146>
    580a:	27 e0       	ldi	r18, 0x07	; 7
    580c:	17 e0       	ldi	r17, 0x07	; 7
    580e:	41 2c       	mov	r4, r1
    5810:	56 01       	movw	r10, r12
    5812:	74 e0       	ldi	r23, 0x04	; 4
    5814:	a7 0e       	add	r10, r23
    5816:	b1 1c       	adc	r11, r1
    5818:	f6 01       	movw	r30, r12
    581a:	60 81       	ld	r22, Z
    581c:	71 81       	ldd	r23, Z+1	; 0x01
    581e:	82 81       	ldd	r24, Z+2	; 0x02
    5820:	93 81       	ldd	r25, Z+3	; 0x03
    5822:	04 2d       	mov	r16, r4
    5824:	a4 01       	movw	r20, r8
    5826:	0e 94 79 2f 	call	0x5ef2	; 0x5ef2 <__ftoa_engine>
    582a:	6c 01       	movw	r12, r24
    582c:	09 81       	ldd	r16, Y+1	; 0x01
    582e:	00 ff       	sbrs	r16, 0
    5830:	02 c0       	rjmp	.+4      	; 0x5836 <vfprintf+0x16c>
    5832:	03 ff       	sbrs	r16, 3
    5834:	06 c0       	rjmp	.+12     	; 0x5842 <vfprintf+0x178>
    5836:	71 fc       	sbrc	r7, 1
    5838:	07 c0       	rjmp	.+14     	; 0x5848 <vfprintf+0x17e>
    583a:	72 fc       	sbrc	r7, 2
    583c:	08 c0       	rjmp	.+16     	; 0x584e <vfprintf+0x184>
    583e:	61 2c       	mov	r6, r1
    5840:	08 c0       	rjmp	.+16     	; 0x5852 <vfprintf+0x188>
    5842:	3d e2       	ldi	r19, 0x2D	; 45
    5844:	63 2e       	mov	r6, r19
    5846:	05 c0       	rjmp	.+10     	; 0x5852 <vfprintf+0x188>
    5848:	2b e2       	ldi	r18, 0x2B	; 43
    584a:	62 2e       	mov	r6, r18
    584c:	02 c0       	rjmp	.+4      	; 0x5852 <vfprintf+0x188>
    584e:	90 e2       	ldi	r25, 0x20	; 32
    5850:	69 2e       	mov	r6, r25
    5852:	80 2f       	mov	r24, r16
    5854:	8c 70       	andi	r24, 0x0C	; 12
    5856:	99 f1       	breq	.+102    	; 0x58be <vfprintf+0x1f4>
    5858:	66 20       	and	r6, r6
    585a:	11 f0       	breq	.+4      	; 0x5860 <vfprintf+0x196>
    585c:	84 e0       	ldi	r24, 0x04	; 4
    585e:	01 c0       	rjmp	.+2      	; 0x5862 <vfprintf+0x198>
    5860:	83 e0       	ldi	r24, 0x03	; 3
    5862:	85 15       	cp	r24, r5
    5864:	10 f0       	brcs	.+4      	; 0x586a <vfprintf+0x1a0>
    5866:	51 2c       	mov	r5, r1
    5868:	0b c0       	rjmp	.+22     	; 0x5880 <vfprintf+0x1b6>
    586a:	58 1a       	sub	r5, r24
    586c:	73 fc       	sbrc	r7, 3
    586e:	08 c0       	rjmp	.+16     	; 0x5880 <vfprintf+0x1b6>
    5870:	b7 01       	movw	r22, r14
    5872:	80 e2       	ldi	r24, 0x20	; 32
    5874:	90 e0       	ldi	r25, 0x00	; 0
    5876:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    587a:	5a 94       	dec	r5
    587c:	c9 f7       	brne	.-14     	; 0x5870 <vfprintf+0x1a6>
    587e:	f3 cf       	rjmp	.-26     	; 0x5866 <vfprintf+0x19c>
    5880:	66 20       	and	r6, r6
    5882:	29 f0       	breq	.+10     	; 0x588e <vfprintf+0x1c4>
    5884:	b7 01       	movw	r22, r14
    5886:	86 2d       	mov	r24, r6
    5888:	90 e0       	ldi	r25, 0x00	; 0
    588a:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    588e:	03 fd       	sbrc	r16, 3
    5890:	03 c0       	rjmp	.+6      	; 0x5898 <vfprintf+0x1ce>
    5892:	00 ed       	ldi	r16, 0xD0	; 208
    5894:	12 e2       	ldi	r17, 0x22	; 34
    5896:	02 c0       	rjmp	.+4      	; 0x589c <vfprintf+0x1d2>
    5898:	0c ec       	ldi	r16, 0xCC	; 204
    589a:	12 e2       	ldi	r17, 0x22	; 34
    589c:	f7 2d       	mov	r31, r7
    589e:	f0 71       	andi	r31, 0x10	; 16
    58a0:	7f 2e       	mov	r7, r31
    58a2:	f8 01       	movw	r30, r16
    58a4:	84 91       	lpm	r24, Z
    58a6:	88 23       	and	r24, r24
    58a8:	09 f4       	brne	.+2      	; 0x58ac <vfprintf+0x1e2>
    58aa:	76 c2       	rjmp	.+1260   	; 0x5d98 <vfprintf+0x6ce>
    58ac:	71 10       	cpse	r7, r1
    58ae:	80 52       	subi	r24, 0x20	; 32
    58b0:	b7 01       	movw	r22, r14
    58b2:	90 e0       	ldi	r25, 0x00	; 0
    58b4:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    58b8:	0f 5f       	subi	r16, 0xFF	; 255
    58ba:	1f 4f       	sbci	r17, 0xFF	; 255
    58bc:	f2 cf       	rjmp	.-28     	; 0x58a2 <vfprintf+0x1d8>
    58be:	77 fe       	sbrs	r7, 7
    58c0:	0f c0       	rjmp	.+30     	; 0x58e0 <vfprintf+0x216>
    58c2:	4c 0c       	add	r4, r12
    58c4:	04 ff       	sbrs	r16, 4
    58c6:	04 c0       	rjmp	.+8      	; 0x58d0 <vfprintf+0x206>
    58c8:	8a 81       	ldd	r24, Y+2	; 0x02
    58ca:	81 33       	cpi	r24, 0x31	; 49
    58cc:	09 f4       	brne	.+2      	; 0x58d0 <vfprintf+0x206>
    58ce:	4a 94       	dec	r4
    58d0:	14 14       	cp	r1, r4
    58d2:	74 f5       	brge	.+92     	; 0x5930 <vfprintf+0x266>
    58d4:	f8 e0       	ldi	r31, 0x08	; 8
    58d6:	f4 15       	cp	r31, r4
    58d8:	78 f5       	brcc	.+94     	; 0x5938 <vfprintf+0x26e>
    58da:	88 e0       	ldi	r24, 0x08	; 8
    58dc:	48 2e       	mov	r4, r24
    58de:	2c c0       	rjmp	.+88     	; 0x5938 <vfprintf+0x26e>
    58e0:	76 fc       	sbrc	r7, 6
    58e2:	2a c0       	rjmp	.+84     	; 0x5938 <vfprintf+0x26e>
    58e4:	81 2f       	mov	r24, r17
    58e6:	90 e0       	ldi	r25, 0x00	; 0
    58e8:	8c 15       	cp	r24, r12
    58ea:	9d 05       	cpc	r25, r13
    58ec:	9c f0       	brlt	.+38     	; 0x5914 <vfprintf+0x24a>
    58ee:	6c ef       	ldi	r22, 0xFC	; 252
    58f0:	c6 16       	cp	r12, r22
    58f2:	6f ef       	ldi	r22, 0xFF	; 255
    58f4:	d6 06       	cpc	r13, r22
    58f6:	74 f0       	brlt	.+28     	; 0x5914 <vfprintf+0x24a>
    58f8:	77 2d       	mov	r23, r7
    58fa:	70 68       	ori	r23, 0x80	; 128
    58fc:	77 2e       	mov	r7, r23
    58fe:	0a c0       	rjmp	.+20     	; 0x5914 <vfprintf+0x24a>
    5900:	e2 e0       	ldi	r30, 0x02	; 2
    5902:	f0 e0       	ldi	r31, 0x00	; 0
    5904:	ec 0f       	add	r30, r28
    5906:	fd 1f       	adc	r31, r29
    5908:	e1 0f       	add	r30, r17
    590a:	f1 1d       	adc	r31, r1
    590c:	80 81       	ld	r24, Z
    590e:	80 33       	cpi	r24, 0x30	; 48
    5910:	19 f4       	brne	.+6      	; 0x5918 <vfprintf+0x24e>
    5912:	11 50       	subi	r17, 0x01	; 1
    5914:	11 11       	cpse	r17, r1
    5916:	f4 cf       	rjmp	.-24     	; 0x5900 <vfprintf+0x236>
    5918:	77 fe       	sbrs	r7, 7
    591a:	0e c0       	rjmp	.+28     	; 0x5938 <vfprintf+0x26e>
    591c:	44 24       	eor	r4, r4
    591e:	43 94       	inc	r4
    5920:	41 0e       	add	r4, r17
    5922:	81 2f       	mov	r24, r17
    5924:	90 e0       	ldi	r25, 0x00	; 0
    5926:	c8 16       	cp	r12, r24
    5928:	d9 06       	cpc	r13, r25
    592a:	2c f4       	brge	.+10     	; 0x5936 <vfprintf+0x26c>
    592c:	1c 19       	sub	r17, r12
    592e:	04 c0       	rjmp	.+8      	; 0x5938 <vfprintf+0x26e>
    5930:	44 24       	eor	r4, r4
    5932:	43 94       	inc	r4
    5934:	01 c0       	rjmp	.+2      	; 0x5938 <vfprintf+0x26e>
    5936:	10 e0       	ldi	r17, 0x00	; 0
    5938:	77 fe       	sbrs	r7, 7
    593a:	07 c0       	rjmp	.+14     	; 0x594a <vfprintf+0x280>
    593c:	1c 14       	cp	r1, r12
    593e:	1d 04       	cpc	r1, r13
    5940:	3c f4       	brge	.+14     	; 0x5950 <vfprintf+0x286>
    5942:	96 01       	movw	r18, r12
    5944:	2f 5f       	subi	r18, 0xFF	; 255
    5946:	3f 4f       	sbci	r19, 0xFF	; 255
    5948:	05 c0       	rjmp	.+10     	; 0x5954 <vfprintf+0x28a>
    594a:	25 e0       	ldi	r18, 0x05	; 5
    594c:	30 e0       	ldi	r19, 0x00	; 0
    594e:	02 c0       	rjmp	.+4      	; 0x5954 <vfprintf+0x28a>
    5950:	21 e0       	ldi	r18, 0x01	; 1
    5952:	30 e0       	ldi	r19, 0x00	; 0
    5954:	66 20       	and	r6, r6
    5956:	11 f0       	breq	.+4      	; 0x595c <vfprintf+0x292>
    5958:	2f 5f       	subi	r18, 0xFF	; 255
    595a:	3f 4f       	sbci	r19, 0xFF	; 255
    595c:	11 23       	and	r17, r17
    595e:	31 f0       	breq	.+12     	; 0x596c <vfprintf+0x2a2>
    5960:	41 2f       	mov	r20, r17
    5962:	50 e0       	ldi	r21, 0x00	; 0
    5964:	4f 5f       	subi	r20, 0xFF	; 255
    5966:	5f 4f       	sbci	r21, 0xFF	; 255
    5968:	24 0f       	add	r18, r20
    596a:	35 1f       	adc	r19, r21
    596c:	45 2d       	mov	r20, r5
    596e:	50 e0       	ldi	r21, 0x00	; 0
    5970:	24 17       	cp	r18, r20
    5972:	35 07       	cpc	r19, r21
    5974:	14 f4       	brge	.+4      	; 0x597a <vfprintf+0x2b0>
    5976:	52 1a       	sub	r5, r18
    5978:	01 c0       	rjmp	.+2      	; 0x597c <vfprintf+0x2b2>
    597a:	51 2c       	mov	r5, r1
    597c:	87 2d       	mov	r24, r7
    597e:	89 70       	andi	r24, 0x09	; 9
    5980:	49 f4       	brne	.+18     	; 0x5994 <vfprintf+0x2ca>
    5982:	55 20       	and	r5, r5
    5984:	39 f0       	breq	.+14     	; 0x5994 <vfprintf+0x2ca>
    5986:	b7 01       	movw	r22, r14
    5988:	80 e2       	ldi	r24, 0x20	; 32
    598a:	90 e0       	ldi	r25, 0x00	; 0
    598c:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5990:	5a 94       	dec	r5
    5992:	f7 cf       	rjmp	.-18     	; 0x5982 <vfprintf+0x2b8>
    5994:	66 20       	and	r6, r6
    5996:	29 f0       	breq	.+10     	; 0x59a2 <vfprintf+0x2d8>
    5998:	b7 01       	movw	r22, r14
    599a:	86 2d       	mov	r24, r6
    599c:	90 e0       	ldi	r25, 0x00	; 0
    599e:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    59a2:	73 fc       	sbrc	r7, 3
    59a4:	09 c0       	rjmp	.+18     	; 0x59b8 <vfprintf+0x2ee>
    59a6:	55 20       	and	r5, r5
    59a8:	39 f0       	breq	.+14     	; 0x59b8 <vfprintf+0x2ee>
    59aa:	b7 01       	movw	r22, r14
    59ac:	80 e3       	ldi	r24, 0x30	; 48
    59ae:	90 e0       	ldi	r25, 0x00	; 0
    59b0:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    59b4:	5a 94       	dec	r5
    59b6:	f7 cf       	rjmp	.-18     	; 0x59a6 <vfprintf+0x2dc>
    59b8:	77 fe       	sbrs	r7, 7
    59ba:	5f c0       	rjmp	.+190    	; 0x5a7a <vfprintf+0x3b0>
    59bc:	9c 2d       	mov	r25, r12
    59be:	8d 2d       	mov	r24, r13
    59c0:	d7 fe       	sbrs	r13, 7
    59c2:	02 c0       	rjmp	.+4      	; 0x59c8 <vfprintf+0x2fe>
    59c4:	90 e0       	ldi	r25, 0x00	; 0
    59c6:	80 e0       	ldi	r24, 0x00	; 0
    59c8:	69 2e       	mov	r6, r25
    59ca:	78 2e       	mov	r7, r24
    59cc:	40 e0       	ldi	r20, 0x00	; 0
    59ce:	50 e0       	ldi	r21, 0x00	; 0
    59d0:	c6 01       	movw	r24, r12
    59d2:	84 19       	sub	r24, r4
    59d4:	91 09       	sbc	r25, r1
    59d6:	9d 87       	std	Y+13, r25	; 0x0d
    59d8:	8c 87       	std	Y+12, r24	; 0x0c
    59da:	96 01       	movw	r18, r12
    59dc:	26 19       	sub	r18, r6
    59de:	37 09       	sbc	r19, r7
    59e0:	28 0d       	add	r18, r8
    59e2:	39 1d       	adc	r19, r9
    59e4:	81 2f       	mov	r24, r17
    59e6:	90 e0       	ldi	r25, 0x00	; 0
    59e8:	ee 27       	eor	r30, r30
    59ea:	ff 27       	eor	r31, r31
    59ec:	e8 1b       	sub	r30, r24
    59ee:	f9 0b       	sbc	r31, r25
    59f0:	ff 87       	std	Y+15, r31	; 0x0f
    59f2:	ee 87       	std	Y+14, r30	; 0x0e
    59f4:	ff ef       	ldi	r31, 0xFF	; 255
    59f6:	6f 16       	cp	r6, r31
    59f8:	7f 06       	cpc	r7, r31
    59fa:	69 f4       	brne	.+26     	; 0x5a16 <vfprintf+0x34c>
    59fc:	b7 01       	movw	r22, r14
    59fe:	8e e2       	ldi	r24, 0x2E	; 46
    5a00:	90 e0       	ldi	r25, 0x00	; 0
    5a02:	2b 8b       	std	Y+19, r18	; 0x13
    5a04:	3a 8b       	std	Y+18, r19	; 0x12
    5a06:	48 8b       	std	Y+16, r20	; 0x10
    5a08:	59 8b       	std	Y+17, r21	; 0x11
    5a0a:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5a0e:	59 89       	ldd	r21, Y+17	; 0x11
    5a10:	48 89       	ldd	r20, Y+16	; 0x10
    5a12:	3a 89       	ldd	r19, Y+18	; 0x12
    5a14:	2b 89       	ldd	r18, Y+19	; 0x13
    5a16:	c6 14       	cp	r12, r6
    5a18:	d7 04       	cpc	r13, r7
    5a1a:	54 f0       	brlt	.+20     	; 0x5a30 <vfprintf+0x366>
    5a1c:	6c 85       	ldd	r22, Y+12	; 0x0c
    5a1e:	7d 85       	ldd	r23, Y+13	; 0x0d
    5a20:	66 15       	cp	r22, r6
    5a22:	77 05       	cpc	r23, r7
    5a24:	2c f4       	brge	.+10     	; 0x5a30 <vfprintf+0x366>
    5a26:	f9 01       	movw	r30, r18
    5a28:	e4 0f       	add	r30, r20
    5a2a:	f5 1f       	adc	r31, r21
    5a2c:	81 81       	ldd	r24, Z+1	; 0x01
    5a2e:	01 c0       	rjmp	.+2      	; 0x5a32 <vfprintf+0x368>
    5a30:	80 e3       	ldi	r24, 0x30	; 48
    5a32:	71 e0       	ldi	r23, 0x01	; 1
    5a34:	67 1a       	sub	r6, r23
    5a36:	71 08       	sbc	r7, r1
    5a38:	4f 5f       	subi	r20, 0xFF	; 255
    5a3a:	5f 4f       	sbci	r21, 0xFF	; 255
    5a3c:	ee 85       	ldd	r30, Y+14	; 0x0e
    5a3e:	ff 85       	ldd	r31, Y+15	; 0x0f
    5a40:	6e 16       	cp	r6, r30
    5a42:	7f 06       	cpc	r7, r31
    5a44:	6c f0       	brlt	.+26     	; 0x5a60 <vfprintf+0x396>
    5a46:	b7 01       	movw	r22, r14
    5a48:	90 e0       	ldi	r25, 0x00	; 0
    5a4a:	2b 8b       	std	Y+19, r18	; 0x13
    5a4c:	3a 8b       	std	Y+18, r19	; 0x12
    5a4e:	48 8b       	std	Y+16, r20	; 0x10
    5a50:	59 8b       	std	Y+17, r21	; 0x11
    5a52:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5a56:	2b 89       	ldd	r18, Y+19	; 0x13
    5a58:	3a 89       	ldd	r19, Y+18	; 0x12
    5a5a:	48 89       	ldd	r20, Y+16	; 0x10
    5a5c:	59 89       	ldd	r21, Y+17	; 0x11
    5a5e:	ca cf       	rjmp	.-108    	; 0x59f4 <vfprintf+0x32a>
    5a60:	6c 14       	cp	r6, r12
    5a62:	7d 04       	cpc	r7, r13
    5a64:	39 f4       	brne	.+14     	; 0x5a74 <vfprintf+0x3aa>
    5a66:	9a 81       	ldd	r25, Y+2	; 0x02
    5a68:	96 33       	cpi	r25, 0x36	; 54
    5a6a:	18 f4       	brcc	.+6      	; 0x5a72 <vfprintf+0x3a8>
    5a6c:	95 33       	cpi	r25, 0x35	; 53
    5a6e:	11 f4       	brne	.+4      	; 0x5a74 <vfprintf+0x3aa>
    5a70:	04 ff       	sbrs	r16, 4
    5a72:	81 e3       	ldi	r24, 0x31	; 49
    5a74:	b7 01       	movw	r22, r14
    5a76:	90 e0       	ldi	r25, 0x00	; 0
    5a78:	4b c0       	rjmp	.+150    	; 0x5b10 <vfprintf+0x446>
    5a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    5a7c:	81 33       	cpi	r24, 0x31	; 49
    5a7e:	09 f0       	breq	.+2      	; 0x5a82 <vfprintf+0x3b8>
    5a80:	0f 7e       	andi	r16, 0xEF	; 239
    5a82:	b7 01       	movw	r22, r14
    5a84:	90 e0       	ldi	r25, 0x00	; 0
    5a86:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5a8a:	11 11       	cpse	r17, r1
    5a8c:	05 c0       	rjmp	.+10     	; 0x5a98 <vfprintf+0x3ce>
    5a8e:	74 fe       	sbrs	r7, 4
    5a90:	18 c0       	rjmp	.+48     	; 0x5ac2 <vfprintf+0x3f8>
    5a92:	85 e4       	ldi	r24, 0x45	; 69
    5a94:	90 e0       	ldi	r25, 0x00	; 0
    5a96:	17 c0       	rjmp	.+46     	; 0x5ac6 <vfprintf+0x3fc>
    5a98:	b7 01       	movw	r22, r14
    5a9a:	8e e2       	ldi	r24, 0x2E	; 46
    5a9c:	90 e0       	ldi	r25, 0x00	; 0
    5a9e:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5aa2:	82 e0       	ldi	r24, 0x02	; 2
    5aa4:	66 24       	eor	r6, r6
    5aa6:	63 94       	inc	r6
    5aa8:	68 0e       	add	r6, r24
    5aaa:	f4 01       	movw	r30, r8
    5aac:	e8 0f       	add	r30, r24
    5aae:	f1 1d       	adc	r31, r1
    5ab0:	80 81       	ld	r24, Z
    5ab2:	b7 01       	movw	r22, r14
    5ab4:	90 e0       	ldi	r25, 0x00	; 0
    5ab6:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5aba:	11 50       	subi	r17, 0x01	; 1
    5abc:	41 f3       	breq	.-48     	; 0x5a8e <vfprintf+0x3c4>
    5abe:	86 2d       	mov	r24, r6
    5ac0:	f1 cf       	rjmp	.-30     	; 0x5aa4 <vfprintf+0x3da>
    5ac2:	85 e6       	ldi	r24, 0x65	; 101
    5ac4:	90 e0       	ldi	r25, 0x00	; 0
    5ac6:	b7 01       	movw	r22, r14
    5ac8:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5acc:	d7 fc       	sbrc	r13, 7
    5ace:	05 c0       	rjmp	.+10     	; 0x5ada <vfprintf+0x410>
    5ad0:	c1 14       	cp	r12, r1
    5ad2:	d1 04       	cpc	r13, r1
    5ad4:	39 f4       	brne	.+14     	; 0x5ae4 <vfprintf+0x41a>
    5ad6:	04 ff       	sbrs	r16, 4
    5ad8:	05 c0       	rjmp	.+10     	; 0x5ae4 <vfprintf+0x41a>
    5ada:	d1 94       	neg	r13
    5adc:	c1 94       	neg	r12
    5ade:	d1 08       	sbc	r13, r1
    5ae0:	8d e2       	ldi	r24, 0x2D	; 45
    5ae2:	01 c0       	rjmp	.+2      	; 0x5ae6 <vfprintf+0x41c>
    5ae4:	8b e2       	ldi	r24, 0x2B	; 43
    5ae6:	b7 01       	movw	r22, r14
    5ae8:	90 e0       	ldi	r25, 0x00	; 0
    5aea:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5aee:	80 e3       	ldi	r24, 0x30	; 48
    5af0:	6a e0       	ldi	r22, 0x0A	; 10
    5af2:	c6 16       	cp	r12, r22
    5af4:	d1 04       	cpc	r13, r1
    5af6:	2c f0       	brlt	.+10     	; 0x5b02 <vfprintf+0x438>
    5af8:	8f 5f       	subi	r24, 0xFF	; 255
    5afa:	fa e0       	ldi	r31, 0x0A	; 10
    5afc:	cf 1a       	sub	r12, r31
    5afe:	d1 08       	sbc	r13, r1
    5b00:	f7 cf       	rjmp	.-18     	; 0x5af0 <vfprintf+0x426>
    5b02:	b7 01       	movw	r22, r14
    5b04:	90 e0       	ldi	r25, 0x00	; 0
    5b06:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5b0a:	b7 01       	movw	r22, r14
    5b0c:	c6 01       	movw	r24, r12
    5b0e:	c0 96       	adiw	r24, 0x30	; 48
    5b10:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5b14:	41 c1       	rjmp	.+642    	; 0x5d98 <vfprintf+0x6ce>
    5b16:	83 36       	cpi	r24, 0x63	; 99
    5b18:	31 f0       	breq	.+12     	; 0x5b26 <vfprintf+0x45c>
    5b1a:	83 37       	cpi	r24, 0x73	; 115
    5b1c:	79 f0       	breq	.+30     	; 0x5b3c <vfprintf+0x472>
    5b1e:	83 35       	cpi	r24, 0x53	; 83
    5b20:	09 f0       	breq	.+2      	; 0x5b24 <vfprintf+0x45a>
    5b22:	58 c0       	rjmp	.+176    	; 0x5bd4 <vfprintf+0x50a>
    5b24:	21 c0       	rjmp	.+66     	; 0x5b68 <vfprintf+0x49e>
    5b26:	56 01       	movw	r10, r12
    5b28:	72 e0       	ldi	r23, 0x02	; 2
    5b2a:	a7 0e       	add	r10, r23
    5b2c:	b1 1c       	adc	r11, r1
    5b2e:	f6 01       	movw	r30, r12
    5b30:	80 81       	ld	r24, Z
    5b32:	89 83       	std	Y+1, r24	; 0x01
    5b34:	01 e0       	ldi	r16, 0x01	; 1
    5b36:	10 e0       	ldi	r17, 0x00	; 0
    5b38:	64 01       	movw	r12, r8
    5b3a:	14 c0       	rjmp	.+40     	; 0x5b64 <vfprintf+0x49a>
    5b3c:	56 01       	movw	r10, r12
    5b3e:	f2 e0       	ldi	r31, 0x02	; 2
    5b40:	af 0e       	add	r10, r31
    5b42:	b1 1c       	adc	r11, r1
    5b44:	f6 01       	movw	r30, r12
    5b46:	c0 80       	ld	r12, Z
    5b48:	d1 80       	ldd	r13, Z+1	; 0x01
    5b4a:	26 ff       	sbrs	r18, 6
    5b4c:	03 c0       	rjmp	.+6      	; 0x5b54 <vfprintf+0x48a>
    5b4e:	61 2f       	mov	r22, r17
    5b50:	70 e0       	ldi	r23, 0x00	; 0
    5b52:	02 c0       	rjmp	.+4      	; 0x5b58 <vfprintf+0x48e>
    5b54:	6f ef       	ldi	r22, 0xFF	; 255
    5b56:	7f ef       	ldi	r23, 0xFF	; 255
    5b58:	c6 01       	movw	r24, r12
    5b5a:	2b 8b       	std	Y+19, r18	; 0x13
    5b5c:	0e 94 5c 30 	call	0x60b8	; 0x60b8 <strnlen>
    5b60:	8c 01       	movw	r16, r24
    5b62:	2b 89       	ldd	r18, Y+19	; 0x13
    5b64:	2f 77       	andi	r18, 0x7F	; 127
    5b66:	15 c0       	rjmp	.+42     	; 0x5b92 <vfprintf+0x4c8>
    5b68:	56 01       	movw	r10, r12
    5b6a:	f2 e0       	ldi	r31, 0x02	; 2
    5b6c:	af 0e       	add	r10, r31
    5b6e:	b1 1c       	adc	r11, r1
    5b70:	f6 01       	movw	r30, r12
    5b72:	c0 80       	ld	r12, Z
    5b74:	d1 80       	ldd	r13, Z+1	; 0x01
    5b76:	26 ff       	sbrs	r18, 6
    5b78:	03 c0       	rjmp	.+6      	; 0x5b80 <vfprintf+0x4b6>
    5b7a:	61 2f       	mov	r22, r17
    5b7c:	70 e0       	ldi	r23, 0x00	; 0
    5b7e:	02 c0       	rjmp	.+4      	; 0x5b84 <vfprintf+0x4ba>
    5b80:	6f ef       	ldi	r22, 0xFF	; 255
    5b82:	7f ef       	ldi	r23, 0xFF	; 255
    5b84:	c6 01       	movw	r24, r12
    5b86:	2b 8b       	std	Y+19, r18	; 0x13
    5b88:	0e 94 51 30 	call	0x60a2	; 0x60a2 <strnlen_P>
    5b8c:	8c 01       	movw	r16, r24
    5b8e:	2b 89       	ldd	r18, Y+19	; 0x13
    5b90:	20 68       	ori	r18, 0x80	; 128
    5b92:	72 2e       	mov	r7, r18
    5b94:	23 fd       	sbrc	r18, 3
    5b96:	1a c0       	rjmp	.+52     	; 0x5bcc <vfprintf+0x502>
    5b98:	85 2d       	mov	r24, r5
    5b9a:	90 e0       	ldi	r25, 0x00	; 0
    5b9c:	08 17       	cp	r16, r24
    5b9e:	19 07       	cpc	r17, r25
    5ba0:	a8 f4       	brcc	.+42     	; 0x5bcc <vfprintf+0x502>
    5ba2:	b7 01       	movw	r22, r14
    5ba4:	80 e2       	ldi	r24, 0x20	; 32
    5ba6:	90 e0       	ldi	r25, 0x00	; 0
    5ba8:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5bac:	5a 94       	dec	r5
    5bae:	f4 cf       	rjmp	.-24     	; 0x5b98 <vfprintf+0x4ce>
    5bb0:	f6 01       	movw	r30, r12
    5bb2:	77 fc       	sbrc	r7, 7
    5bb4:	85 91       	lpm	r24, Z+
    5bb6:	77 fe       	sbrs	r7, 7
    5bb8:	81 91       	ld	r24, Z+
    5bba:	6f 01       	movw	r12, r30
    5bbc:	b7 01       	movw	r22, r14
    5bbe:	90 e0       	ldi	r25, 0x00	; 0
    5bc0:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5bc4:	51 10       	cpse	r5, r1
    5bc6:	5a 94       	dec	r5
    5bc8:	01 50       	subi	r16, 0x01	; 1
    5bca:	11 09       	sbc	r17, r1
    5bcc:	01 15       	cp	r16, r1
    5bce:	11 05       	cpc	r17, r1
    5bd0:	79 f7       	brne	.-34     	; 0x5bb0 <vfprintf+0x4e6>
    5bd2:	e2 c0       	rjmp	.+452    	; 0x5d98 <vfprintf+0x6ce>
    5bd4:	84 36       	cpi	r24, 0x64	; 100
    5bd6:	11 f0       	breq	.+4      	; 0x5bdc <vfprintf+0x512>
    5bd8:	89 36       	cpi	r24, 0x69	; 105
    5bda:	51 f5       	brne	.+84     	; 0x5c30 <vfprintf+0x566>
    5bdc:	56 01       	movw	r10, r12
    5bde:	27 ff       	sbrs	r18, 7
    5be0:	09 c0       	rjmp	.+18     	; 0x5bf4 <vfprintf+0x52a>
    5be2:	f4 e0       	ldi	r31, 0x04	; 4
    5be4:	af 0e       	add	r10, r31
    5be6:	b1 1c       	adc	r11, r1
    5be8:	f6 01       	movw	r30, r12
    5bea:	60 81       	ld	r22, Z
    5bec:	71 81       	ldd	r23, Z+1	; 0x01
    5bee:	82 81       	ldd	r24, Z+2	; 0x02
    5bf0:	93 81       	ldd	r25, Z+3	; 0x03
    5bf2:	0a c0       	rjmp	.+20     	; 0x5c08 <vfprintf+0x53e>
    5bf4:	f2 e0       	ldi	r31, 0x02	; 2
    5bf6:	af 0e       	add	r10, r31
    5bf8:	b1 1c       	adc	r11, r1
    5bfa:	f6 01       	movw	r30, r12
    5bfc:	60 81       	ld	r22, Z
    5bfe:	71 81       	ldd	r23, Z+1	; 0x01
    5c00:	88 27       	eor	r24, r24
    5c02:	77 fd       	sbrc	r23, 7
    5c04:	80 95       	com	r24
    5c06:	98 2f       	mov	r25, r24
    5c08:	02 2f       	mov	r16, r18
    5c0a:	0f 76       	andi	r16, 0x6F	; 111
    5c0c:	97 ff       	sbrs	r25, 7
    5c0e:	08 c0       	rjmp	.+16     	; 0x5c20 <vfprintf+0x556>
    5c10:	90 95       	com	r25
    5c12:	80 95       	com	r24
    5c14:	70 95       	com	r23
    5c16:	61 95       	neg	r22
    5c18:	7f 4f       	sbci	r23, 0xFF	; 255
    5c1a:	8f 4f       	sbci	r24, 0xFF	; 255
    5c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    5c1e:	00 68       	ori	r16, 0x80	; 128
    5c20:	2a e0       	ldi	r18, 0x0A	; 10
    5c22:	30 e0       	ldi	r19, 0x00	; 0
    5c24:	a4 01       	movw	r20, r8
    5c26:	0e 94 99 30 	call	0x6132	; 0x6132 <__ultoa_invert>
    5c2a:	c8 2e       	mov	r12, r24
    5c2c:	c8 18       	sub	r12, r8
    5c2e:	3e c0       	rjmp	.+124    	; 0x5cac <vfprintf+0x5e2>
    5c30:	02 2f       	mov	r16, r18
    5c32:	85 37       	cpi	r24, 0x75	; 117
    5c34:	21 f4       	brne	.+8      	; 0x5c3e <vfprintf+0x574>
    5c36:	0f 7e       	andi	r16, 0xEF	; 239
    5c38:	2a e0       	ldi	r18, 0x0A	; 10
    5c3a:	30 e0       	ldi	r19, 0x00	; 0
    5c3c:	1d c0       	rjmp	.+58     	; 0x5c78 <vfprintf+0x5ae>
    5c3e:	09 7f       	andi	r16, 0xF9	; 249
    5c40:	8f 36       	cpi	r24, 0x6F	; 111
    5c42:	91 f0       	breq	.+36     	; 0x5c68 <vfprintf+0x59e>
    5c44:	18 f4       	brcc	.+6      	; 0x5c4c <vfprintf+0x582>
    5c46:	88 35       	cpi	r24, 0x58	; 88
    5c48:	59 f0       	breq	.+22     	; 0x5c60 <vfprintf+0x596>
    5c4a:	b0 c0       	rjmp	.+352    	; 0x5dac <vfprintf+0x6e2>
    5c4c:	80 37       	cpi	r24, 0x70	; 112
    5c4e:	19 f0       	breq	.+6      	; 0x5c56 <vfprintf+0x58c>
    5c50:	88 37       	cpi	r24, 0x78	; 120
    5c52:	11 f0       	breq	.+4      	; 0x5c58 <vfprintf+0x58e>
    5c54:	ab c0       	rjmp	.+342    	; 0x5dac <vfprintf+0x6e2>
    5c56:	00 61       	ori	r16, 0x10	; 16
    5c58:	04 ff       	sbrs	r16, 4
    5c5a:	09 c0       	rjmp	.+18     	; 0x5c6e <vfprintf+0x5a4>
    5c5c:	04 60       	ori	r16, 0x04	; 4
    5c5e:	07 c0       	rjmp	.+14     	; 0x5c6e <vfprintf+0x5a4>
    5c60:	24 ff       	sbrs	r18, 4
    5c62:	08 c0       	rjmp	.+16     	; 0x5c74 <vfprintf+0x5aa>
    5c64:	06 60       	ori	r16, 0x06	; 6
    5c66:	06 c0       	rjmp	.+12     	; 0x5c74 <vfprintf+0x5aa>
    5c68:	28 e0       	ldi	r18, 0x08	; 8
    5c6a:	30 e0       	ldi	r19, 0x00	; 0
    5c6c:	05 c0       	rjmp	.+10     	; 0x5c78 <vfprintf+0x5ae>
    5c6e:	20 e1       	ldi	r18, 0x10	; 16
    5c70:	30 e0       	ldi	r19, 0x00	; 0
    5c72:	02 c0       	rjmp	.+4      	; 0x5c78 <vfprintf+0x5ae>
    5c74:	20 e1       	ldi	r18, 0x10	; 16
    5c76:	32 e0       	ldi	r19, 0x02	; 2
    5c78:	56 01       	movw	r10, r12
    5c7a:	07 ff       	sbrs	r16, 7
    5c7c:	09 c0       	rjmp	.+18     	; 0x5c90 <vfprintf+0x5c6>
    5c7e:	f4 e0       	ldi	r31, 0x04	; 4
    5c80:	af 0e       	add	r10, r31
    5c82:	b1 1c       	adc	r11, r1
    5c84:	f6 01       	movw	r30, r12
    5c86:	60 81       	ld	r22, Z
    5c88:	71 81       	ldd	r23, Z+1	; 0x01
    5c8a:	82 81       	ldd	r24, Z+2	; 0x02
    5c8c:	93 81       	ldd	r25, Z+3	; 0x03
    5c8e:	08 c0       	rjmp	.+16     	; 0x5ca0 <vfprintf+0x5d6>
    5c90:	f2 e0       	ldi	r31, 0x02	; 2
    5c92:	af 0e       	add	r10, r31
    5c94:	b1 1c       	adc	r11, r1
    5c96:	f6 01       	movw	r30, r12
    5c98:	60 81       	ld	r22, Z
    5c9a:	71 81       	ldd	r23, Z+1	; 0x01
    5c9c:	80 e0       	ldi	r24, 0x00	; 0
    5c9e:	90 e0       	ldi	r25, 0x00	; 0
    5ca0:	a4 01       	movw	r20, r8
    5ca2:	0e 94 99 30 	call	0x6132	; 0x6132 <__ultoa_invert>
    5ca6:	c8 2e       	mov	r12, r24
    5ca8:	c8 18       	sub	r12, r8
    5caa:	0f 77       	andi	r16, 0x7F	; 127
    5cac:	06 ff       	sbrs	r16, 6
    5cae:	0b c0       	rjmp	.+22     	; 0x5cc6 <vfprintf+0x5fc>
    5cb0:	20 2f       	mov	r18, r16
    5cb2:	2e 7f       	andi	r18, 0xFE	; 254
    5cb4:	c1 16       	cp	r12, r17
    5cb6:	50 f4       	brcc	.+20     	; 0x5ccc <vfprintf+0x602>
    5cb8:	04 ff       	sbrs	r16, 4
    5cba:	0a c0       	rjmp	.+20     	; 0x5cd0 <vfprintf+0x606>
    5cbc:	02 fd       	sbrc	r16, 2
    5cbe:	08 c0       	rjmp	.+16     	; 0x5cd0 <vfprintf+0x606>
    5cc0:	20 2f       	mov	r18, r16
    5cc2:	2e 7e       	andi	r18, 0xEE	; 238
    5cc4:	05 c0       	rjmp	.+10     	; 0x5cd0 <vfprintf+0x606>
    5cc6:	dc 2c       	mov	r13, r12
    5cc8:	20 2f       	mov	r18, r16
    5cca:	03 c0       	rjmp	.+6      	; 0x5cd2 <vfprintf+0x608>
    5ccc:	dc 2c       	mov	r13, r12
    5cce:	01 c0       	rjmp	.+2      	; 0x5cd2 <vfprintf+0x608>
    5cd0:	d1 2e       	mov	r13, r17
    5cd2:	24 ff       	sbrs	r18, 4
    5cd4:	0d c0       	rjmp	.+26     	; 0x5cf0 <vfprintf+0x626>
    5cd6:	fe 01       	movw	r30, r28
    5cd8:	ec 0d       	add	r30, r12
    5cda:	f1 1d       	adc	r31, r1
    5cdc:	80 81       	ld	r24, Z
    5cde:	80 33       	cpi	r24, 0x30	; 48
    5ce0:	11 f4       	brne	.+4      	; 0x5ce6 <vfprintf+0x61c>
    5ce2:	29 7e       	andi	r18, 0xE9	; 233
    5ce4:	09 c0       	rjmp	.+18     	; 0x5cf8 <vfprintf+0x62e>
    5ce6:	22 ff       	sbrs	r18, 2
    5ce8:	06 c0       	rjmp	.+12     	; 0x5cf6 <vfprintf+0x62c>
    5cea:	d3 94       	inc	r13
    5cec:	d3 94       	inc	r13
    5cee:	04 c0       	rjmp	.+8      	; 0x5cf8 <vfprintf+0x62e>
    5cf0:	82 2f       	mov	r24, r18
    5cf2:	86 78       	andi	r24, 0x86	; 134
    5cf4:	09 f0       	breq	.+2      	; 0x5cf8 <vfprintf+0x62e>
    5cf6:	d3 94       	inc	r13
    5cf8:	23 fd       	sbrc	r18, 3
    5cfa:	13 c0       	rjmp	.+38     	; 0x5d22 <vfprintf+0x658>
    5cfc:	20 ff       	sbrs	r18, 0
    5cfe:	06 c0       	rjmp	.+12     	; 0x5d0c <vfprintf+0x642>
    5d00:	1c 2d       	mov	r17, r12
    5d02:	d5 14       	cp	r13, r5
    5d04:	18 f4       	brcc	.+6      	; 0x5d0c <vfprintf+0x642>
    5d06:	15 0d       	add	r17, r5
    5d08:	1d 19       	sub	r17, r13
    5d0a:	d5 2c       	mov	r13, r5
    5d0c:	d5 14       	cp	r13, r5
    5d0e:	68 f4       	brcc	.+26     	; 0x5d2a <vfprintf+0x660>
    5d10:	b7 01       	movw	r22, r14
    5d12:	80 e2       	ldi	r24, 0x20	; 32
    5d14:	90 e0       	ldi	r25, 0x00	; 0
    5d16:	2b 8b       	std	Y+19, r18	; 0x13
    5d18:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5d1c:	d3 94       	inc	r13
    5d1e:	2b 89       	ldd	r18, Y+19	; 0x13
    5d20:	f5 cf       	rjmp	.-22     	; 0x5d0c <vfprintf+0x642>
    5d22:	d5 14       	cp	r13, r5
    5d24:	10 f4       	brcc	.+4      	; 0x5d2a <vfprintf+0x660>
    5d26:	5d 18       	sub	r5, r13
    5d28:	01 c0       	rjmp	.+2      	; 0x5d2c <vfprintf+0x662>
    5d2a:	51 2c       	mov	r5, r1
    5d2c:	24 ff       	sbrs	r18, 4
    5d2e:	12 c0       	rjmp	.+36     	; 0x5d54 <vfprintf+0x68a>
    5d30:	b7 01       	movw	r22, r14
    5d32:	80 e3       	ldi	r24, 0x30	; 48
    5d34:	90 e0       	ldi	r25, 0x00	; 0
    5d36:	2b 8b       	std	Y+19, r18	; 0x13
    5d38:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5d3c:	2b 89       	ldd	r18, Y+19	; 0x13
    5d3e:	22 ff       	sbrs	r18, 2
    5d40:	17 c0       	rjmp	.+46     	; 0x5d70 <vfprintf+0x6a6>
    5d42:	21 ff       	sbrs	r18, 1
    5d44:	03 c0       	rjmp	.+6      	; 0x5d4c <vfprintf+0x682>
    5d46:	88 e5       	ldi	r24, 0x58	; 88
    5d48:	90 e0       	ldi	r25, 0x00	; 0
    5d4a:	02 c0       	rjmp	.+4      	; 0x5d50 <vfprintf+0x686>
    5d4c:	88 e7       	ldi	r24, 0x78	; 120
    5d4e:	90 e0       	ldi	r25, 0x00	; 0
    5d50:	b7 01       	movw	r22, r14
    5d52:	0c c0       	rjmp	.+24     	; 0x5d6c <vfprintf+0x6a2>
    5d54:	82 2f       	mov	r24, r18
    5d56:	86 78       	andi	r24, 0x86	; 134
    5d58:	59 f0       	breq	.+22     	; 0x5d70 <vfprintf+0x6a6>
    5d5a:	21 fd       	sbrc	r18, 1
    5d5c:	02 c0       	rjmp	.+4      	; 0x5d62 <vfprintf+0x698>
    5d5e:	80 e2       	ldi	r24, 0x20	; 32
    5d60:	01 c0       	rjmp	.+2      	; 0x5d64 <vfprintf+0x69a>
    5d62:	8b e2       	ldi	r24, 0x2B	; 43
    5d64:	27 fd       	sbrc	r18, 7
    5d66:	8d e2       	ldi	r24, 0x2D	; 45
    5d68:	b7 01       	movw	r22, r14
    5d6a:	90 e0       	ldi	r25, 0x00	; 0
    5d6c:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5d70:	c1 16       	cp	r12, r17
    5d72:	38 f4       	brcc	.+14     	; 0x5d82 <vfprintf+0x6b8>
    5d74:	b7 01       	movw	r22, r14
    5d76:	80 e3       	ldi	r24, 0x30	; 48
    5d78:	90 e0       	ldi	r25, 0x00	; 0
    5d7a:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5d7e:	11 50       	subi	r17, 0x01	; 1
    5d80:	f7 cf       	rjmp	.-18     	; 0x5d70 <vfprintf+0x6a6>
    5d82:	ca 94       	dec	r12
    5d84:	f4 01       	movw	r30, r8
    5d86:	ec 0d       	add	r30, r12
    5d88:	f1 1d       	adc	r31, r1
    5d8a:	80 81       	ld	r24, Z
    5d8c:	b7 01       	movw	r22, r14
    5d8e:	90 e0       	ldi	r25, 0x00	; 0
    5d90:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5d94:	c1 10       	cpse	r12, r1
    5d96:	f5 cf       	rjmp	.-22     	; 0x5d82 <vfprintf+0x6b8>
    5d98:	55 20       	and	r5, r5
    5d9a:	09 f4       	brne	.+2      	; 0x5d9e <vfprintf+0x6d4>
    5d9c:	c2 cc       	rjmp	.-1660   	; 0x5722 <vfprintf+0x58>
    5d9e:	b7 01       	movw	r22, r14
    5da0:	80 e2       	ldi	r24, 0x20	; 32
    5da2:	90 e0       	ldi	r25, 0x00	; 0
    5da4:	0e 94 67 30 	call	0x60ce	; 0x60ce <fputc>
    5da8:	5a 94       	dec	r5
    5daa:	f6 cf       	rjmp	.-20     	; 0x5d98 <vfprintf+0x6ce>
    5dac:	f7 01       	movw	r30, r14
    5dae:	86 81       	ldd	r24, Z+6	; 0x06
    5db0:	97 81       	ldd	r25, Z+7	; 0x07
    5db2:	02 c0       	rjmp	.+4      	; 0x5db8 <vfprintf+0x6ee>
    5db4:	8f ef       	ldi	r24, 0xFF	; 255
    5db6:	9f ef       	ldi	r25, 0xFF	; 255
    5db8:	63 96       	adiw	r28, 0x13	; 19
    5dba:	e2 e1       	ldi	r30, 0x12	; 18
    5dbc:	0c 94 4f 2f 	jmp	0x5e9e	; 0x5e9e <__epilogue_restores__>

00005dc0 <__udivmodsi4>:
    5dc0:	a1 e2       	ldi	r26, 0x21	; 33
    5dc2:	1a 2e       	mov	r1, r26
    5dc4:	aa 1b       	sub	r26, r26
    5dc6:	bb 1b       	sub	r27, r27
    5dc8:	fd 01       	movw	r30, r26
    5dca:	0d c0       	rjmp	.+26     	; 0x5de6 <__udivmodsi4_ep>

00005dcc <__udivmodsi4_loop>:
    5dcc:	aa 1f       	adc	r26, r26
    5dce:	bb 1f       	adc	r27, r27
    5dd0:	ee 1f       	adc	r30, r30
    5dd2:	ff 1f       	adc	r31, r31
    5dd4:	a2 17       	cp	r26, r18
    5dd6:	b3 07       	cpc	r27, r19
    5dd8:	e4 07       	cpc	r30, r20
    5dda:	f5 07       	cpc	r31, r21
    5ddc:	20 f0       	brcs	.+8      	; 0x5de6 <__udivmodsi4_ep>
    5dde:	a2 1b       	sub	r26, r18
    5de0:	b3 0b       	sbc	r27, r19
    5de2:	e4 0b       	sbc	r30, r20
    5de4:	f5 0b       	sbc	r31, r21

00005de6 <__udivmodsi4_ep>:
    5de6:	66 1f       	adc	r22, r22
    5de8:	77 1f       	adc	r23, r23
    5dea:	88 1f       	adc	r24, r24
    5dec:	99 1f       	adc	r25, r25
    5dee:	1a 94       	dec	r1
    5df0:	69 f7       	brne	.-38     	; 0x5dcc <__udivmodsi4_loop>
    5df2:	60 95       	com	r22
    5df4:	70 95       	com	r23
    5df6:	80 95       	com	r24
    5df8:	90 95       	com	r25
    5dfa:	9b 01       	movw	r18, r22
    5dfc:	ac 01       	movw	r20, r24
    5dfe:	bd 01       	movw	r22, r26
    5e00:	cf 01       	movw	r24, r30
    5e02:	08 95       	ret

00005e04 <__divmodsi4>:
    5e04:	05 2e       	mov	r0, r21
    5e06:	97 fb       	bst	r25, 7
    5e08:	1e f4       	brtc	.+6      	; 0x5e10 <__divmodsi4+0xc>
    5e0a:	00 94       	com	r0
    5e0c:	0e 94 19 2f 	call	0x5e32	; 0x5e32 <__negsi2>
    5e10:	57 fd       	sbrc	r21, 7
    5e12:	07 d0       	rcall	.+14     	; 0x5e22 <__divmodsi4_neg2>
    5e14:	0e 94 e0 2e 	call	0x5dc0	; 0x5dc0 <__udivmodsi4>
    5e18:	07 fc       	sbrc	r0, 7
    5e1a:	03 d0       	rcall	.+6      	; 0x5e22 <__divmodsi4_neg2>
    5e1c:	4e f4       	brtc	.+18     	; 0x5e30 <__divmodsi4_exit>
    5e1e:	0c 94 19 2f 	jmp	0x5e32	; 0x5e32 <__negsi2>

00005e22 <__divmodsi4_neg2>:
    5e22:	50 95       	com	r21
    5e24:	40 95       	com	r20
    5e26:	30 95       	com	r19
    5e28:	21 95       	neg	r18
    5e2a:	3f 4f       	sbci	r19, 0xFF	; 255
    5e2c:	4f 4f       	sbci	r20, 0xFF	; 255
    5e2e:	5f 4f       	sbci	r21, 0xFF	; 255

00005e30 <__divmodsi4_exit>:
    5e30:	08 95       	ret

00005e32 <__negsi2>:
    5e32:	90 95       	com	r25
    5e34:	80 95       	com	r24
    5e36:	70 95       	com	r23
    5e38:	61 95       	neg	r22
    5e3a:	7f 4f       	sbci	r23, 0xFF	; 255
    5e3c:	8f 4f       	sbci	r24, 0xFF	; 255
    5e3e:	9f 4f       	sbci	r25, 0xFF	; 255
    5e40:	08 95       	ret

00005e42 <__usmulhisi3>:
    5e42:	0e 94 6a 2f 	call	0x5ed4	; 0x5ed4 <__umulhisi3>

00005e46 <__usmulhisi3_tail>:
    5e46:	b7 ff       	sbrs	r27, 7
    5e48:	08 95       	ret
    5e4a:	82 1b       	sub	r24, r18
    5e4c:	93 0b       	sbc	r25, r19
    5e4e:	08 95       	ret

00005e50 <__muluhisi3>:
    5e50:	0e 94 6a 2f 	call	0x5ed4	; 0x5ed4 <__umulhisi3>
    5e54:	a5 9f       	mul	r26, r21
    5e56:	90 0d       	add	r25, r0
    5e58:	b4 9f       	mul	r27, r20
    5e5a:	90 0d       	add	r25, r0
    5e5c:	a4 9f       	mul	r26, r20
    5e5e:	80 0d       	add	r24, r0
    5e60:	91 1d       	adc	r25, r1
    5e62:	11 24       	eor	r1, r1
    5e64:	08 95       	ret

00005e66 <__prologue_saves__>:
    5e66:	2f 92       	push	r2
    5e68:	3f 92       	push	r3
    5e6a:	4f 92       	push	r4
    5e6c:	5f 92       	push	r5
    5e6e:	6f 92       	push	r6
    5e70:	7f 92       	push	r7
    5e72:	8f 92       	push	r8
    5e74:	9f 92       	push	r9
    5e76:	af 92       	push	r10
    5e78:	bf 92       	push	r11
    5e7a:	cf 92       	push	r12
    5e7c:	df 92       	push	r13
    5e7e:	ef 92       	push	r14
    5e80:	ff 92       	push	r15
    5e82:	0f 93       	push	r16
    5e84:	1f 93       	push	r17
    5e86:	cf 93       	push	r28
    5e88:	df 93       	push	r29
    5e8a:	cd b7       	in	r28, 0x3d	; 61
    5e8c:	de b7       	in	r29, 0x3e	; 62
    5e8e:	ca 1b       	sub	r28, r26
    5e90:	db 0b       	sbc	r29, r27
    5e92:	0f b6       	in	r0, 0x3f	; 63
    5e94:	f8 94       	cli
    5e96:	de bf       	out	0x3e, r29	; 62
    5e98:	0f be       	out	0x3f, r0	; 63
    5e9a:	cd bf       	out	0x3d, r28	; 61
    5e9c:	09 94       	ijmp

00005e9e <__epilogue_restores__>:
    5e9e:	2a 88       	ldd	r2, Y+18	; 0x12
    5ea0:	39 88       	ldd	r3, Y+17	; 0x11
    5ea2:	48 88       	ldd	r4, Y+16	; 0x10
    5ea4:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ea6:	6e 84       	ldd	r6, Y+14	; 0x0e
    5ea8:	7d 84       	ldd	r7, Y+13	; 0x0d
    5eaa:	8c 84       	ldd	r8, Y+12	; 0x0c
    5eac:	9b 84       	ldd	r9, Y+11	; 0x0b
    5eae:	aa 84       	ldd	r10, Y+10	; 0x0a
    5eb0:	b9 84       	ldd	r11, Y+9	; 0x09
    5eb2:	c8 84       	ldd	r12, Y+8	; 0x08
    5eb4:	df 80       	ldd	r13, Y+7	; 0x07
    5eb6:	ee 80       	ldd	r14, Y+6	; 0x06
    5eb8:	fd 80       	ldd	r15, Y+5	; 0x05
    5eba:	0c 81       	ldd	r16, Y+4	; 0x04
    5ebc:	1b 81       	ldd	r17, Y+3	; 0x03
    5ebe:	aa 81       	ldd	r26, Y+2	; 0x02
    5ec0:	b9 81       	ldd	r27, Y+1	; 0x01
    5ec2:	ce 0f       	add	r28, r30
    5ec4:	d1 1d       	adc	r29, r1
    5ec6:	0f b6       	in	r0, 0x3f	; 63
    5ec8:	f8 94       	cli
    5eca:	de bf       	out	0x3e, r29	; 62
    5ecc:	0f be       	out	0x3f, r0	; 63
    5ece:	cd bf       	out	0x3d, r28	; 61
    5ed0:	ed 01       	movw	r28, r26
    5ed2:	08 95       	ret

00005ed4 <__umulhisi3>:
    5ed4:	a2 9f       	mul	r26, r18
    5ed6:	b0 01       	movw	r22, r0
    5ed8:	b3 9f       	mul	r27, r19
    5eda:	c0 01       	movw	r24, r0
    5edc:	a3 9f       	mul	r26, r19
    5ede:	70 0d       	add	r23, r0
    5ee0:	81 1d       	adc	r24, r1
    5ee2:	11 24       	eor	r1, r1
    5ee4:	91 1d       	adc	r25, r1
    5ee6:	b2 9f       	mul	r27, r18
    5ee8:	70 0d       	add	r23, r0
    5eea:	81 1d       	adc	r24, r1
    5eec:	11 24       	eor	r1, r1
    5eee:	91 1d       	adc	r25, r1
    5ef0:	08 95       	ret

00005ef2 <__ftoa_engine>:
    5ef2:	28 30       	cpi	r18, 0x08	; 8
    5ef4:	08 f0       	brcs	.+2      	; 0x5ef8 <__ftoa_engine+0x6>
    5ef6:	27 e0       	ldi	r18, 0x07	; 7
    5ef8:	33 27       	eor	r19, r19
    5efa:	da 01       	movw	r26, r20
    5efc:	99 0f       	add	r25, r25
    5efe:	31 1d       	adc	r19, r1
    5f00:	87 fd       	sbrc	r24, 7
    5f02:	91 60       	ori	r25, 0x01	; 1
    5f04:	00 96       	adiw	r24, 0x00	; 0
    5f06:	61 05       	cpc	r22, r1
    5f08:	71 05       	cpc	r23, r1
    5f0a:	39 f4       	brne	.+14     	; 0x5f1a <__ftoa_engine+0x28>
    5f0c:	32 60       	ori	r19, 0x02	; 2
    5f0e:	2e 5f       	subi	r18, 0xFE	; 254
    5f10:	3d 93       	st	X+, r19
    5f12:	30 e3       	ldi	r19, 0x30	; 48
    5f14:	2a 95       	dec	r18
    5f16:	e1 f7       	brne	.-8      	; 0x5f10 <__ftoa_engine+0x1e>
    5f18:	08 95       	ret
    5f1a:	9f 3f       	cpi	r25, 0xFF	; 255
    5f1c:	30 f0       	brcs	.+12     	; 0x5f2a <__ftoa_engine+0x38>
    5f1e:	80 38       	cpi	r24, 0x80	; 128
    5f20:	71 05       	cpc	r23, r1
    5f22:	61 05       	cpc	r22, r1
    5f24:	09 f0       	breq	.+2      	; 0x5f28 <__ftoa_engine+0x36>
    5f26:	3c 5f       	subi	r19, 0xFC	; 252
    5f28:	3c 5f       	subi	r19, 0xFC	; 252
    5f2a:	3d 93       	st	X+, r19
    5f2c:	91 30       	cpi	r25, 0x01	; 1
    5f2e:	08 f0       	brcs	.+2      	; 0x5f32 <__ftoa_engine+0x40>
    5f30:	80 68       	ori	r24, 0x80	; 128
    5f32:	91 1d       	adc	r25, r1
    5f34:	df 93       	push	r29
    5f36:	cf 93       	push	r28
    5f38:	1f 93       	push	r17
    5f3a:	0f 93       	push	r16
    5f3c:	ff 92       	push	r15
    5f3e:	ef 92       	push	r14
    5f40:	19 2f       	mov	r17, r25
    5f42:	98 7f       	andi	r25, 0xF8	; 248
    5f44:	96 95       	lsr	r25
    5f46:	e9 2f       	mov	r30, r25
    5f48:	96 95       	lsr	r25
    5f4a:	96 95       	lsr	r25
    5f4c:	e9 0f       	add	r30, r25
    5f4e:	ff 27       	eor	r31, r31
    5f50:	e2 5d       	subi	r30, 0xD2	; 210
    5f52:	fc 4d       	sbci	r31, 0xDC	; 220
    5f54:	99 27       	eor	r25, r25
    5f56:	33 27       	eor	r19, r19
    5f58:	ee 24       	eor	r14, r14
    5f5a:	ff 24       	eor	r15, r15
    5f5c:	a7 01       	movw	r20, r14
    5f5e:	e7 01       	movw	r28, r14
    5f60:	05 90       	lpm	r0, Z+
    5f62:	08 94       	sec
    5f64:	07 94       	ror	r0
    5f66:	28 f4       	brcc	.+10     	; 0x5f72 <__ftoa_engine+0x80>
    5f68:	36 0f       	add	r19, r22
    5f6a:	e7 1e       	adc	r14, r23
    5f6c:	f8 1e       	adc	r15, r24
    5f6e:	49 1f       	adc	r20, r25
    5f70:	51 1d       	adc	r21, r1
    5f72:	66 0f       	add	r22, r22
    5f74:	77 1f       	adc	r23, r23
    5f76:	88 1f       	adc	r24, r24
    5f78:	99 1f       	adc	r25, r25
    5f7a:	06 94       	lsr	r0
    5f7c:	a1 f7       	brne	.-24     	; 0x5f66 <__ftoa_engine+0x74>
    5f7e:	05 90       	lpm	r0, Z+
    5f80:	07 94       	ror	r0
    5f82:	28 f4       	brcc	.+10     	; 0x5f8e <__ftoa_engine+0x9c>
    5f84:	e7 0e       	add	r14, r23
    5f86:	f8 1e       	adc	r15, r24
    5f88:	49 1f       	adc	r20, r25
    5f8a:	56 1f       	adc	r21, r22
    5f8c:	c1 1d       	adc	r28, r1
    5f8e:	77 0f       	add	r23, r23
    5f90:	88 1f       	adc	r24, r24
    5f92:	99 1f       	adc	r25, r25
    5f94:	66 1f       	adc	r22, r22
    5f96:	06 94       	lsr	r0
    5f98:	a1 f7       	brne	.-24     	; 0x5f82 <__ftoa_engine+0x90>
    5f9a:	05 90       	lpm	r0, Z+
    5f9c:	07 94       	ror	r0
    5f9e:	28 f4       	brcc	.+10     	; 0x5faa <__ftoa_engine+0xb8>
    5fa0:	f8 0e       	add	r15, r24
    5fa2:	49 1f       	adc	r20, r25
    5fa4:	56 1f       	adc	r21, r22
    5fa6:	c7 1f       	adc	r28, r23
    5fa8:	d1 1d       	adc	r29, r1
    5faa:	88 0f       	add	r24, r24
    5fac:	99 1f       	adc	r25, r25
    5fae:	66 1f       	adc	r22, r22
    5fb0:	77 1f       	adc	r23, r23
    5fb2:	06 94       	lsr	r0
    5fb4:	a1 f7       	brne	.-24     	; 0x5f9e <__ftoa_engine+0xac>
    5fb6:	05 90       	lpm	r0, Z+
    5fb8:	07 94       	ror	r0
    5fba:	20 f4       	brcc	.+8      	; 0x5fc4 <__ftoa_engine+0xd2>
    5fbc:	49 0f       	add	r20, r25
    5fbe:	56 1f       	adc	r21, r22
    5fc0:	c7 1f       	adc	r28, r23
    5fc2:	d8 1f       	adc	r29, r24
    5fc4:	99 0f       	add	r25, r25
    5fc6:	66 1f       	adc	r22, r22
    5fc8:	77 1f       	adc	r23, r23
    5fca:	88 1f       	adc	r24, r24
    5fcc:	06 94       	lsr	r0
    5fce:	a9 f7       	brne	.-22     	; 0x5fba <__ftoa_engine+0xc8>
    5fd0:	84 91       	lpm	r24, Z
    5fd2:	10 95       	com	r17
    5fd4:	17 70       	andi	r17, 0x07	; 7
    5fd6:	41 f0       	breq	.+16     	; 0x5fe8 <__ftoa_engine+0xf6>
    5fd8:	d6 95       	lsr	r29
    5fda:	c7 95       	ror	r28
    5fdc:	57 95       	ror	r21
    5fde:	47 95       	ror	r20
    5fe0:	f7 94       	ror	r15
    5fe2:	e7 94       	ror	r14
    5fe4:	1a 95       	dec	r17
    5fe6:	c1 f7       	brne	.-16     	; 0x5fd8 <__ftoa_engine+0xe6>
    5fe8:	e4 ed       	ldi	r30, 0xD4	; 212
    5fea:	f2 e2       	ldi	r31, 0x22	; 34
    5fec:	68 94       	set
    5fee:	15 90       	lpm	r1, Z+
    5ff0:	15 91       	lpm	r17, Z+
    5ff2:	35 91       	lpm	r19, Z+
    5ff4:	65 91       	lpm	r22, Z+
    5ff6:	95 91       	lpm	r25, Z+
    5ff8:	05 90       	lpm	r0, Z+
    5ffa:	7f e2       	ldi	r23, 0x2F	; 47
    5ffc:	73 95       	inc	r23
    5ffe:	e1 18       	sub	r14, r1
    6000:	f1 0a       	sbc	r15, r17
    6002:	43 0b       	sbc	r20, r19
    6004:	56 0b       	sbc	r21, r22
    6006:	c9 0b       	sbc	r28, r25
    6008:	d0 09       	sbc	r29, r0
    600a:	c0 f7       	brcc	.-16     	; 0x5ffc <__ftoa_engine+0x10a>
    600c:	e1 0c       	add	r14, r1
    600e:	f1 1e       	adc	r15, r17
    6010:	43 1f       	adc	r20, r19
    6012:	56 1f       	adc	r21, r22
    6014:	c9 1f       	adc	r28, r25
    6016:	d0 1d       	adc	r29, r0
    6018:	7e f4       	brtc	.+30     	; 0x6038 <__ftoa_engine+0x146>
    601a:	70 33       	cpi	r23, 0x30	; 48
    601c:	11 f4       	brne	.+4      	; 0x6022 <__ftoa_engine+0x130>
    601e:	8a 95       	dec	r24
    6020:	e6 cf       	rjmp	.-52     	; 0x5fee <__ftoa_engine+0xfc>
    6022:	e8 94       	clt
    6024:	01 50       	subi	r16, 0x01	; 1
    6026:	30 f0       	brcs	.+12     	; 0x6034 <__ftoa_engine+0x142>
    6028:	08 0f       	add	r16, r24
    602a:	0a f4       	brpl	.+2      	; 0x602e <__ftoa_engine+0x13c>
    602c:	00 27       	eor	r16, r16
    602e:	02 17       	cp	r16, r18
    6030:	08 f4       	brcc	.+2      	; 0x6034 <__ftoa_engine+0x142>
    6032:	20 2f       	mov	r18, r16
    6034:	23 95       	inc	r18
    6036:	02 2f       	mov	r16, r18
    6038:	7a 33       	cpi	r23, 0x3A	; 58
    603a:	28 f0       	brcs	.+10     	; 0x6046 <__ftoa_engine+0x154>
    603c:	79 e3       	ldi	r23, 0x39	; 57
    603e:	7d 93       	st	X+, r23
    6040:	2a 95       	dec	r18
    6042:	e9 f7       	brne	.-6      	; 0x603e <__ftoa_engine+0x14c>
    6044:	10 c0       	rjmp	.+32     	; 0x6066 <__ftoa_engine+0x174>
    6046:	7d 93       	st	X+, r23
    6048:	2a 95       	dec	r18
    604a:	89 f6       	brne	.-94     	; 0x5fee <__ftoa_engine+0xfc>
    604c:	06 94       	lsr	r0
    604e:	97 95       	ror	r25
    6050:	67 95       	ror	r22
    6052:	37 95       	ror	r19
    6054:	17 95       	ror	r17
    6056:	17 94       	ror	r1
    6058:	e1 18       	sub	r14, r1
    605a:	f1 0a       	sbc	r15, r17
    605c:	43 0b       	sbc	r20, r19
    605e:	56 0b       	sbc	r21, r22
    6060:	c9 0b       	sbc	r28, r25
    6062:	d0 09       	sbc	r29, r0
    6064:	98 f0       	brcs	.+38     	; 0x608c <__ftoa_engine+0x19a>
    6066:	23 95       	inc	r18
    6068:	7e 91       	ld	r23, -X
    606a:	73 95       	inc	r23
    606c:	7a 33       	cpi	r23, 0x3A	; 58
    606e:	08 f0       	brcs	.+2      	; 0x6072 <__ftoa_engine+0x180>
    6070:	70 e3       	ldi	r23, 0x30	; 48
    6072:	7c 93       	st	X, r23
    6074:	20 13       	cpse	r18, r16
    6076:	b8 f7       	brcc	.-18     	; 0x6066 <__ftoa_engine+0x174>
    6078:	7e 91       	ld	r23, -X
    607a:	70 61       	ori	r23, 0x10	; 16
    607c:	7d 93       	st	X+, r23
    607e:	30 f0       	brcs	.+12     	; 0x608c <__ftoa_engine+0x19a>
    6080:	83 95       	inc	r24
    6082:	71 e3       	ldi	r23, 0x31	; 49
    6084:	7d 93       	st	X+, r23
    6086:	70 e3       	ldi	r23, 0x30	; 48
    6088:	2a 95       	dec	r18
    608a:	e1 f7       	brne	.-8      	; 0x6084 <__ftoa_engine+0x192>
    608c:	11 24       	eor	r1, r1
    608e:	ef 90       	pop	r14
    6090:	ff 90       	pop	r15
    6092:	0f 91       	pop	r16
    6094:	1f 91       	pop	r17
    6096:	cf 91       	pop	r28
    6098:	df 91       	pop	r29
    609a:	99 27       	eor	r25, r25
    609c:	87 fd       	sbrc	r24, 7
    609e:	90 95       	com	r25
    60a0:	08 95       	ret

000060a2 <strnlen_P>:
    60a2:	fc 01       	movw	r30, r24
    60a4:	05 90       	lpm	r0, Z+
    60a6:	61 50       	subi	r22, 0x01	; 1
    60a8:	70 40       	sbci	r23, 0x00	; 0
    60aa:	01 10       	cpse	r0, r1
    60ac:	d8 f7       	brcc	.-10     	; 0x60a4 <strnlen_P+0x2>
    60ae:	80 95       	com	r24
    60b0:	90 95       	com	r25
    60b2:	8e 0f       	add	r24, r30
    60b4:	9f 1f       	adc	r25, r31
    60b6:	08 95       	ret

000060b8 <strnlen>:
    60b8:	fc 01       	movw	r30, r24
    60ba:	61 50       	subi	r22, 0x01	; 1
    60bc:	70 40       	sbci	r23, 0x00	; 0
    60be:	01 90       	ld	r0, Z+
    60c0:	01 10       	cpse	r0, r1
    60c2:	d8 f7       	brcc	.-10     	; 0x60ba <strnlen+0x2>
    60c4:	80 95       	com	r24
    60c6:	90 95       	com	r25
    60c8:	8e 0f       	add	r24, r30
    60ca:	9f 1f       	adc	r25, r31
    60cc:	08 95       	ret

000060ce <fputc>:
    60ce:	0f 93       	push	r16
    60d0:	1f 93       	push	r17
    60d2:	cf 93       	push	r28
    60d4:	df 93       	push	r29
    60d6:	18 2f       	mov	r17, r24
    60d8:	09 2f       	mov	r16, r25
    60da:	eb 01       	movw	r28, r22
    60dc:	8b 81       	ldd	r24, Y+3	; 0x03
    60de:	81 fd       	sbrc	r24, 1
    60e0:	03 c0       	rjmp	.+6      	; 0x60e8 <fputc+0x1a>
    60e2:	8f ef       	ldi	r24, 0xFF	; 255
    60e4:	9f ef       	ldi	r25, 0xFF	; 255
    60e6:	20 c0       	rjmp	.+64     	; 0x6128 <fputc+0x5a>
    60e8:	82 ff       	sbrs	r24, 2
    60ea:	10 c0       	rjmp	.+32     	; 0x610c <fputc+0x3e>
    60ec:	4e 81       	ldd	r20, Y+6	; 0x06
    60ee:	5f 81       	ldd	r21, Y+7	; 0x07
    60f0:	2c 81       	ldd	r18, Y+4	; 0x04
    60f2:	3d 81       	ldd	r19, Y+5	; 0x05
    60f4:	42 17       	cp	r20, r18
    60f6:	53 07       	cpc	r21, r19
    60f8:	7c f4       	brge	.+30     	; 0x6118 <fputc+0x4a>
    60fa:	e8 81       	ld	r30, Y
    60fc:	f9 81       	ldd	r31, Y+1	; 0x01
    60fe:	9f 01       	movw	r18, r30
    6100:	2f 5f       	subi	r18, 0xFF	; 255
    6102:	3f 4f       	sbci	r19, 0xFF	; 255
    6104:	39 83       	std	Y+1, r19	; 0x01
    6106:	28 83       	st	Y, r18
    6108:	10 83       	st	Z, r17
    610a:	06 c0       	rjmp	.+12     	; 0x6118 <fputc+0x4a>
    610c:	e8 85       	ldd	r30, Y+8	; 0x08
    610e:	f9 85       	ldd	r31, Y+9	; 0x09
    6110:	81 2f       	mov	r24, r17
    6112:	09 95       	icall
    6114:	89 2b       	or	r24, r25
    6116:	29 f7       	brne	.-54     	; 0x60e2 <fputc+0x14>
    6118:	2e 81       	ldd	r18, Y+6	; 0x06
    611a:	3f 81       	ldd	r19, Y+7	; 0x07
    611c:	2f 5f       	subi	r18, 0xFF	; 255
    611e:	3f 4f       	sbci	r19, 0xFF	; 255
    6120:	3f 83       	std	Y+7, r19	; 0x07
    6122:	2e 83       	std	Y+6, r18	; 0x06
    6124:	81 2f       	mov	r24, r17
    6126:	90 2f       	mov	r25, r16
    6128:	df 91       	pop	r29
    612a:	cf 91       	pop	r28
    612c:	1f 91       	pop	r17
    612e:	0f 91       	pop	r16
    6130:	08 95       	ret

00006132 <__ultoa_invert>:
    6132:	fa 01       	movw	r30, r20
    6134:	aa 27       	eor	r26, r26
    6136:	28 30       	cpi	r18, 0x08	; 8
    6138:	51 f1       	breq	.+84     	; 0x618e <__ultoa_invert+0x5c>
    613a:	20 31       	cpi	r18, 0x10	; 16
    613c:	81 f1       	breq	.+96     	; 0x619e <__ultoa_invert+0x6c>
    613e:	e8 94       	clt
    6140:	6f 93       	push	r22
    6142:	6e 7f       	andi	r22, 0xFE	; 254
    6144:	6e 5f       	subi	r22, 0xFE	; 254
    6146:	7f 4f       	sbci	r23, 0xFF	; 255
    6148:	8f 4f       	sbci	r24, 0xFF	; 255
    614a:	9f 4f       	sbci	r25, 0xFF	; 255
    614c:	af 4f       	sbci	r26, 0xFF	; 255
    614e:	b1 e0       	ldi	r27, 0x01	; 1
    6150:	3e d0       	rcall	.+124    	; 0x61ce <__ultoa_invert+0x9c>
    6152:	b4 e0       	ldi	r27, 0x04	; 4
    6154:	3c d0       	rcall	.+120    	; 0x61ce <__ultoa_invert+0x9c>
    6156:	67 0f       	add	r22, r23
    6158:	78 1f       	adc	r23, r24
    615a:	89 1f       	adc	r24, r25
    615c:	9a 1f       	adc	r25, r26
    615e:	a1 1d       	adc	r26, r1
    6160:	68 0f       	add	r22, r24
    6162:	79 1f       	adc	r23, r25
    6164:	8a 1f       	adc	r24, r26
    6166:	91 1d       	adc	r25, r1
    6168:	a1 1d       	adc	r26, r1
    616a:	6a 0f       	add	r22, r26
    616c:	71 1d       	adc	r23, r1
    616e:	81 1d       	adc	r24, r1
    6170:	91 1d       	adc	r25, r1
    6172:	a1 1d       	adc	r26, r1
    6174:	20 d0       	rcall	.+64     	; 0x61b6 <__ultoa_invert+0x84>
    6176:	09 f4       	brne	.+2      	; 0x617a <__ultoa_invert+0x48>
    6178:	68 94       	set
    617a:	3f 91       	pop	r19
    617c:	2a e0       	ldi	r18, 0x0A	; 10
    617e:	26 9f       	mul	r18, r22
    6180:	11 24       	eor	r1, r1
    6182:	30 19       	sub	r19, r0
    6184:	30 5d       	subi	r19, 0xD0	; 208
    6186:	31 93       	st	Z+, r19
    6188:	de f6       	brtc	.-74     	; 0x6140 <__ultoa_invert+0xe>
    618a:	cf 01       	movw	r24, r30
    618c:	08 95       	ret
    618e:	46 2f       	mov	r20, r22
    6190:	47 70       	andi	r20, 0x07	; 7
    6192:	40 5d       	subi	r20, 0xD0	; 208
    6194:	41 93       	st	Z+, r20
    6196:	b3 e0       	ldi	r27, 0x03	; 3
    6198:	0f d0       	rcall	.+30     	; 0x61b8 <__ultoa_invert+0x86>
    619a:	c9 f7       	brne	.-14     	; 0x618e <__ultoa_invert+0x5c>
    619c:	f6 cf       	rjmp	.-20     	; 0x618a <__ultoa_invert+0x58>
    619e:	46 2f       	mov	r20, r22
    61a0:	4f 70       	andi	r20, 0x0F	; 15
    61a2:	40 5d       	subi	r20, 0xD0	; 208
    61a4:	4a 33       	cpi	r20, 0x3A	; 58
    61a6:	18 f0       	brcs	.+6      	; 0x61ae <__ultoa_invert+0x7c>
    61a8:	49 5d       	subi	r20, 0xD9	; 217
    61aa:	31 fd       	sbrc	r19, 1
    61ac:	40 52       	subi	r20, 0x20	; 32
    61ae:	41 93       	st	Z+, r20
    61b0:	02 d0       	rcall	.+4      	; 0x61b6 <__ultoa_invert+0x84>
    61b2:	a9 f7       	brne	.-22     	; 0x619e <__ultoa_invert+0x6c>
    61b4:	ea cf       	rjmp	.-44     	; 0x618a <__ultoa_invert+0x58>
    61b6:	b4 e0       	ldi	r27, 0x04	; 4
    61b8:	a6 95       	lsr	r26
    61ba:	97 95       	ror	r25
    61bc:	87 95       	ror	r24
    61be:	77 95       	ror	r23
    61c0:	67 95       	ror	r22
    61c2:	ba 95       	dec	r27
    61c4:	c9 f7       	brne	.-14     	; 0x61b8 <__ultoa_invert+0x86>
    61c6:	00 97       	sbiw	r24, 0x00	; 0
    61c8:	61 05       	cpc	r22, r1
    61ca:	71 05       	cpc	r23, r1
    61cc:	08 95       	ret
    61ce:	9b 01       	movw	r18, r22
    61d0:	ac 01       	movw	r20, r24
    61d2:	0a 2e       	mov	r0, r26
    61d4:	06 94       	lsr	r0
    61d6:	57 95       	ror	r21
    61d8:	47 95       	ror	r20
    61da:	37 95       	ror	r19
    61dc:	27 95       	ror	r18
    61de:	ba 95       	dec	r27
    61e0:	c9 f7       	brne	.-14     	; 0x61d4 <__ultoa_invert+0xa2>
    61e2:	62 0f       	add	r22, r18
    61e4:	73 1f       	adc	r23, r19
    61e6:	84 1f       	adc	r24, r20
    61e8:	95 1f       	adc	r25, r21
    61ea:	a0 1d       	adc	r26, r0
    61ec:	08 95       	ret

000061ee <__eerd_word_m32>:
    61ee:	a8 e1       	ldi	r26, 0x18	; 24
    61f0:	b0 e0       	ldi	r27, 0x00	; 0
    61f2:	42 e0       	ldi	r20, 0x02	; 2
    61f4:	50 e0       	ldi	r21, 0x00	; 0
    61f6:	0c 94 05 31 	jmp	0x620a	; 0x620a <__eerd_blraw_m32>

000061fa <__eeupd_word_m32>:
    61fa:	01 96       	adiw	r24, 0x01	; 1
    61fc:	27 2f       	mov	r18, r23
    61fe:	0e 94 14 31 	call	0x6228	; 0x6228 <__eeupd_r18_m32>
    6202:	0c 94 13 31 	jmp	0x6226	; 0x6226 <__eeupd_byte_m32>

00006206 <__eerd_block_m32>:
    6206:	dc 01       	movw	r26, r24
    6208:	cb 01       	movw	r24, r22

0000620a <__eerd_blraw_m32>:
    620a:	fc 01       	movw	r30, r24
    620c:	e1 99       	sbic	0x1c, 1	; 28
    620e:	fe cf       	rjmp	.-4      	; 0x620c <__eerd_blraw_m32+0x2>
    6210:	06 c0       	rjmp	.+12     	; 0x621e <__eerd_blraw_m32+0x14>
    6212:	ff bb       	out	0x1f, r31	; 31
    6214:	ee bb       	out	0x1e, r30	; 30
    6216:	e0 9a       	sbi	0x1c, 0	; 28
    6218:	31 96       	adiw	r30, 0x01	; 1
    621a:	0d b2       	in	r0, 0x1d	; 29
    621c:	0d 92       	st	X+, r0
    621e:	41 50       	subi	r20, 0x01	; 1
    6220:	50 40       	sbci	r21, 0x00	; 0
    6222:	b8 f7       	brcc	.-18     	; 0x6212 <__eerd_blraw_m32+0x8>
    6224:	08 95       	ret

00006226 <__eeupd_byte_m32>:
    6226:	26 2f       	mov	r18, r22

00006228 <__eeupd_r18_m32>:
    6228:	e1 99       	sbic	0x1c, 1	; 28
    622a:	fe cf       	rjmp	.-4      	; 0x6228 <__eeupd_r18_m32>
    622c:	9f bb       	out	0x1f, r25	; 31
    622e:	8e bb       	out	0x1e, r24	; 30
    6230:	e0 9a       	sbi	0x1c, 0	; 28
    6232:	01 97       	sbiw	r24, 0x01	; 1
    6234:	0d b2       	in	r0, 0x1d	; 29
    6236:	02 16       	cp	r0, r18
    6238:	31 f0       	breq	.+12     	; 0x6246 <__eeupd_r18_m32+0x1e>
    623a:	2d bb       	out	0x1d, r18	; 29
    623c:	0f b6       	in	r0, 0x3f	; 63
    623e:	f8 94       	cli
    6240:	e2 9a       	sbi	0x1c, 2	; 28
    6242:	e1 9a       	sbi	0x1c, 1	; 28
    6244:	0f be       	out	0x3f, r0	; 63
    6246:	08 95       	ret

00006248 <_exit>:
    6248:	f8 94       	cli

0000624a <__stop_program>:
    624a:	ff cf       	rjmp	.-2      	; 0x624a <__stop_program>
