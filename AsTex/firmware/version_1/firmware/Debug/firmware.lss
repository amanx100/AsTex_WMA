
firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003e70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000276  00800060  00003e70  00003f04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008002d6  008002d6  0000417a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000417a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  000041d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000049dd  00000000  00000000  000042f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000355  00000000  00000000  00008cd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000891  00000000  00000000  00009028  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000005d0  00000000  00000000  000098bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000487  00000000  00000000  00009e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002d5f  00000000  00000000  0000a313  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  0000d072  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__ctors_end>
       4:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__vector_1>
       8:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
       c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      10:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      14:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      18:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      1c:	0c 94 9b 0e 	jmp	0x1d36	; 0x1d36 <__vector_7>
      20:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      24:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      28:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      2c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      30:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      34:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      38:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      3c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      40:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      44:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      48:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      4c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>
      50:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__bad_interrupt>

00000054 <FONT_16x16>:
	...
      78:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      88:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      98:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b4:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c4:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d4:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e4:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f4:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     104:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     114:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     124:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     134:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     158:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     168:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     178:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     188:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     198:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1a8:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1b8:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1c8:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1e8:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     200:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     228:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     238:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     248:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     258:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     268:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     278:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     288:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     298:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2a8:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2b8:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2c8:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2d8:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2e8:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2f8:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     308:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     318:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     328:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     338:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     348:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     358:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     368:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     378:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     388:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     398:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3a8:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3b8:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3c8:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3d8:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3e8:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3f8:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     408:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     418:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     428:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     438:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     448:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     458:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     468:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     478:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     488:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     498:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4a8:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4b8:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4c8:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4d8:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4e8:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4f8:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     508:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     518:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     528:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     538:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     548:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     558:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     568:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     578:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     588:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     598:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5a8:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5b8:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5d8:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5e8:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5f8:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     608:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     618:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     628:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     638:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     648:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     658:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     668:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     678:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     688:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     698:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6a8:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6b8:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6c8:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6d8:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6e8:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6f8:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     708:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     718:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     728:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     738:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     748:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     758:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     768:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     778:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     788:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     798:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7a8:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7b8:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7c8:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7d8:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7e8:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7f8:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     808:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     818:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     850:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     880:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     898:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8a8:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c0:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8d8:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8e8:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     900:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     918:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     928:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     940:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     950:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     960:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     978:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     988:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     998:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9a8:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9b8:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9d8:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9e8:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a00:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a20:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a40:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a60:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a70:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a80:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a90:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa0:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac0:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     ad8:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     ae8:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b00:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b20:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b40:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b60:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b80:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b90:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba0:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bb8:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bc8:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bd8:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     be8:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bf8:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c08:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c18:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c34 <FONT_8x8>:
	...
     c3c:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     c4c:	6c 6c fe 6c fe 6c 6c 00 18 3e 60 3c 06 7c 18 00     ll.l.ll..>`<.|..
     c5c:	00 63 66 0c 18 33 63 00 1c 36 1c 3b 6e 66 3b 00     .cf..3c..6.;nf;.
     c6c:	30 30 60 00 00 00 00 00 0c 18 30 30 30 18 0c 00     00`.......000...
     c7c:	30 18 0c 0c 0c 18 30 00 00 66 3c ff 3c 66 00 00     0.....0..f<.<f..
     c8c:	00 30 30 fc 30 30 00 00 00 00 00 00 00 18 18 30     .00.00.........0
     c9c:	00 00 00 7e 00 00 00 00 00 00 00 00 00 18 18 00     ...~............
     cac:	03 06 0c 18 30 60 40 00 3e 63 63 6b 63 63 3e 00     ....0`@.>cckcc>.
     cbc:	18 38 58 18 18 18 7e 00 3c 66 06 1c 30 66 7e 00     .8X...~.<f..0f~.
     ccc:	3c 66 06 1c 06 66 3c 00 0e 1e 36 66 7f 06 0f 00     <f...f<...6f....
     cdc:	7e 60 7c 06 06 66 3c 00 1c 30 60 7c 66 66 3c 00     ~`|..f<..0`|ff<.
     cec:	7e 66 06 0c 18 18 18 00 3c 66 66 3c 66 66 3c 00     ~f......<ff<ff<.
     cfc:	3c 66 66 3e 06 0c 38 00 00 18 18 00 00 18 18 00     <ff>..8.........
     d0c:	00 18 18 00 00 18 18 30 0c 18 30 60 30 18 0c 00     .......0..0`0...
     d1c:	00 00 7e 00 00 7e 00 00 30 18 0c 06 0c 18 30 00     ..~..~..0.....0.
     d2c:	3c 66 06 0c 18 00 18 00 3e 63 6f 69 6f 60 3e 00     <f......>coio`>.
     d3c:	18 3c 66 66 7e 66 66 00 7e 33 33 3e 33 33 7e 00     .<ff~ff.~33>33~.
     d4c:	1e 33 60 60 60 33 1e 00 7c 36 33 33 33 36 7c 00     .3```3..|63336|.
     d5c:	7f 31 34 3c 34 31 7f 00 7f 31 34 3c 34 30 78 00     .14<41...14<40x.
     d6c:	1e 33 60 60 67 33 1f 00 66 66 66 7e 66 66 66 00     .3``g3..fff~fff.
     d7c:	3c 18 18 18 18 18 3c 00 0f 06 06 06 66 66 3c 00     <.....<.....ff<.
     d8c:	73 33 36 3c 36 33 73 00 78 30 30 30 31 33 7f 00     s36<63s.x00013..
     d9c:	63 77 7f 7f 6b 63 63 00 63 73 7b 6f 67 63 63 00     cw..kcc.cs{ogcc.
     dac:	3e 63 63 63 63 63 3e 00 7e 33 33 3e 30 30 78 00     >ccccc>.~33>00x.
     dbc:	3c 66 66 66 6e 3c 0e 00 7e 33 33 3e 36 33 73 00     <fffn<..~33>63s.
     dcc:	3c 66 30 18 0c 66 3c 00 7e 5a 18 18 18 18 3c 00     <f0..f<.~Z....<.
     ddc:	66 66 66 66 66 66 7e 00 66 66 66 66 66 3c 18 00     ffffff~.fffff<..
     dec:	63 63 63 6b 7f 77 63 00 63 63 36 1c 1c 36 63 00     ccck.wc.cc6..6c.
     dfc:	66 66 66 3c 18 18 3c 00 7f 63 46 0c 19 33 7f 00     fff<..<..cF..3..
     e0c:	3c 30 30 30 30 30 3c 00 60 30 18 0c 06 03 01 00     <00000<.`0......
     e1c:	3c 0c 0c 0c 0c 0c 3c 00 08 1c 36 63 00 00 00 00     <.....<...6c....
     e2c:	00 00 00 00 00 00 00 ff 18 18 0c 00 00 00 00 00     ................
     e3c:	00 00 3c 06 3e 66 3b 00 70 30 3e 33 33 33 6e 00     ..<.>f;.p0>333n.
     e4c:	00 00 3c 66 60 66 3c 00 0e 06 3e 66 66 66 3b 00     ..<f`f<...>fff;.
     e5c:	00 00 3c 66 7e 60 3c 00 1c 36 30 78 30 30 78 00     ..<f~`<..60x00x.
     e6c:	00 00 3b 66 66 3e 06 7c 70 30 36 3b 33 33 73 00     ..;ff>.|p06;33s.
     e7c:	18 00 38 18 18 18 3c 00 06 00 06 06 06 66 66 3c     ..8...<......ff<
     e8c:	70 30 33 36 3c 36 73 00 38 18 18 18 18 18 3c 00     p036<6s.8.....<.
     e9c:	00 00 66 7f 7f 6b 63 00 00 00 7c 66 66 66 66 00     ..f..kc...|ffff.
     eac:	00 00 3c 66 66 66 3c 00 00 00 6e 33 33 3e 30 78     ..<fff<...n33>0x
     ebc:	00 00 3b 66 66 3e 06 0f 00 00 6e 3b 33 30 78 00     ..;ff>....n;30x.
     ecc:	00 00 3e 60 3c 06 7c 00 08 18 3e 18 18 1a 0c 00     ..>`<.|...>.....
     edc:	00 00 66 66 66 66 3b 00 00 00 66 66 66 3c 18 00     ..ffff;...fff<..
     eec:	00 00 63 6b 7f 7f 36 00 00 00 63 36 1c 36 63 00     ..ck..6...c6.6c.
     efc:	00 00 66 66 66 3e 06 7c 00 00 7e 4c 18 32 7e 00     ..fff>.|..~L.2~.
     f0c:	0e 18 18 70 18 18 0e 00 0c 0c 0c 00 0c 0c 0c 00     ...p............
     f1c:	70 18 18 0e 18 18 70 00 3b 6e 00 00 00 00 00 00     p.....p.;n......
     f2c:	1c 36 36 1c 00 00 00 00 60 90 90 60 00 00 00 00     .66.....`..`....
     f3c:	22 77 7f 7f 3e 1c 08 00                             "w..>...

00000f44 <__c.2161>:
     f44:	6e 61 6e 00                                         nan.

00000f48 <__c.2159>:
     f48:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     f58:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     f68:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     f78:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     f88:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     f98:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     fa8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     fb8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     fc8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     fd8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     fe8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     ff8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
    1008:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
    1018:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
    1028:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
    1038:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00001046 <__ctors_end>:
    1046:	11 24       	eor	r1, r1
    1048:	1f be       	out	0x3f, r1	; 63
    104a:	cf e5       	ldi	r28, 0x5F	; 95
    104c:	d8 e0       	ldi	r29, 0x08	; 8
    104e:	de bf       	out	0x3e, r29	; 62
    1050:	cd bf       	out	0x3d, r28	; 61

00001052 <__do_copy_data>:
    1052:	12 e0       	ldi	r17, 0x02	; 2
    1054:	a0 e6       	ldi	r26, 0x60	; 96
    1056:	b0 e0       	ldi	r27, 0x00	; 0
    1058:	e0 e7       	ldi	r30, 0x70	; 112
    105a:	fe e3       	ldi	r31, 0x3E	; 62
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <__do_copy_data+0x10>
    105e:	05 90       	lpm	r0, Z+
    1060:	0d 92       	st	X+, r0
    1062:	a6 3d       	cpi	r26, 0xD6	; 214
    1064:	b1 07       	cpc	r27, r17
    1066:	d9 f7       	brne	.-10     	; 0x105e <__do_copy_data+0xc>

00001068 <__do_clear_bss>:
    1068:	22 e0       	ldi	r18, 0x02	; 2
    106a:	a6 ed       	ldi	r26, 0xD6	; 214
    106c:	b2 e0       	ldi	r27, 0x02	; 2
    106e:	01 c0       	rjmp	.+2      	; 0x1072 <.do_clear_bss_start>

00001070 <.do_clear_bss_loop>:
    1070:	1d 92       	st	X+, r1

00001072 <.do_clear_bss_start>:
    1072:	ae 3d       	cpi	r26, 0xDE	; 222
    1074:	b2 07       	cpc	r27, r18
    1076:	e1 f7       	brne	.-8      	; 0x1070 <.do_clear_bss_loop>
    1078:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <main>
    107c:	0c 94 36 1f 	jmp	0x3e6c	; 0x3e6c <_exit>

00001080 <__bad_interrupt>:
    1080:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001084 <TFT_DP_DATA>:
#include <avr/pgmspace.h>

//display data write path define function
void TFT_DP_DATA(uint16_t Data)
{
	PORTC = (uint8_t) (Data & 0x00FF);
    1084:	85 bb       	out	0x15, r24	; 21
	PORTA = (uint8_t) ((Data & 0xFE00)>>8);
    1086:	9c 01       	movw	r18, r24
    1088:	22 27       	eor	r18, r18
    108a:	3e 7f       	andi	r19, 0xFE	; 254
    108c:	3b bb       	out	0x1b, r19	; 27
	if (Data & (1<<8)) PORTB |=(1<<0);
    108e:	90 ff       	sbrs	r25, 0
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <TFT_DP_DATA+0x12>
    1092:	c0 9a       	sbi	0x18, 0	; 24
    1094:	08 95       	ret
	else PORTB &=~(1<<0);
    1096:	c0 98       	cbi	0x18, 0	; 24
    1098:	08 95       	ret

0000109a <Write_Command>:



void Write_Command(uint16_t Wcommand)
{
	TFT_RD_1;
    109a:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RS_0;
    109c:	95 98       	cbi	0x12, 5	; 18
	TFT_DP_DATA(Wcommand);
    109e:	0e 94 42 08 	call	0x1084	; 0x1084 <TFT_DP_DATA>
	TFT_WR_0;
    10a2:	c1 98       	cbi	0x18, 1	; 24
	TFT_WR_1;
    10a4:	c1 9a       	sbi	0x18, 1	; 24
    10a6:	08 95       	ret

000010a8 <Write_Data>:
}

void Write_Data(uint16_t Wdata)
{
		TFT_RD_1;
    10a8:	c2 9a       	sbi	0x18, 2	; 24
		TFT_RS_1;
    10aa:	95 9a       	sbi	0x12, 5	; 18
		TFT_DP_DATA(Wdata);
    10ac:	0e 94 42 08 	call	0x1084	; 0x1084 <TFT_DP_DATA>
		TFT_WR_0;
    10b0:	c1 98       	cbi	0x18, 1	; 24
		TFT_WR_1;
    10b2:	c1 9a       	sbi	0x18, 1	; 24
    10b4:	08 95       	ret

000010b6 <Write_Command_Data>:
}

void Write_Command_Data(uint16_t Wcommand, uint16_t Wdata)
{
    10b6:	cf 93       	push	r28
    10b8:	df 93       	push	r29
    10ba:	eb 01       	movw	r28, r22
	Write_Command(Wcommand);
    10bc:	0e 94 4d 08 	call	0x109a	; 0x109a <Write_Command>
	Write_Data(Wdata);
    10c0:	ce 01       	movw	r24, r28
    10c2:	0e 94 54 08 	call	0x10a8	; 0x10a8 <Write_Data>
}
    10c6:	df 91       	pop	r29
    10c8:	cf 91       	pop	r28
    10ca:	08 95       	ret

000010cc <TFT_Set_Address>:

void TFT_Set_Address(uint16_t PX1, uint16_t PY1, uint16_t PX2, uint16_t PY2)
{
    10cc:	ef 92       	push	r14
    10ce:	ff 92       	push	r15
    10d0:	0f 93       	push	r16
    10d2:	1f 93       	push	r17
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	8c 01       	movw	r16, r24
    10da:	eb 01       	movw	r28, r22
    10dc:	79 01       	movw	r14, r18
	Write_Command_Data(0x0044,(PX2 << 8) + PX1 );	//Column address start2
    10de:	e0 e0       	ldi	r30, 0x00	; 0
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	f4 2f       	mov	r31, r20
    10e4:	bf 01       	movw	r22, r30
    10e6:	68 0f       	add	r22, r24
    10e8:	79 1f       	adc	r23, r25
    10ea:	84 e4       	ldi	r24, 0x44	; 68
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0045,PY1);					//Column address start1
    10f2:	be 01       	movw	r22, r28
    10f4:	85 e4       	ldi	r24, 0x45	; 69
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0046,PY2);					//Column address end2
    10fc:	b7 01       	movw	r22, r14
    10fe:	86 e4       	ldi	r24, 0x46	; 70
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004E,PX1);					//Column address end1
    1106:	b8 01       	movw	r22, r16
    1108:	8e e4       	ldi	r24, 0x4E	; 78
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004F,PY1);					//Row address start2
    1110:	be 01       	movw	r22, r28
    1112:	8f e4       	ldi	r24, 0x4F	; 79
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command(0x0022);
    111a:	82 e2       	ldi	r24, 0x22	; 34
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 4d 08 	call	0x109a	; 0x109a <Write_Command>
}
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	08 95       	ret

00001130 <TFT_Init>:

void TFT_Init(void)
{
	TFT_RD_1;
    1130:	c2 9a       	sbi	0x18, 2	; 24
	TFT_RST_1;
    1132:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1134:	8f e0       	ldi	r24, 0x0F	; 15
    1136:	97 e2       	ldi	r25, 0x27	; 39
    1138:	01 97       	sbiw	r24, 0x01	; 1
    113a:	f1 f7       	brne	.-4      	; 0x1138 <TFT_Init+0x8>
    113c:	00 c0       	rjmp	.+0      	; 0x113e <TFT_Init+0xe>
    113e:	00 00       	nop
	_delay_ms(5);
	TFT_RST_0;
    1140:	c3 98       	cbi	0x18, 3	; 24
    1142:	8f e2       	ldi	r24, 0x2F	; 47
    1144:	95 e7       	ldi	r25, 0x75	; 117
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	f1 f7       	brne	.-4      	; 0x1146 <TFT_Init+0x16>
    114a:	00 c0       	rjmp	.+0      	; 0x114c <TFT_Init+0x1c>
    114c:	00 00       	nop
	_delay_ms(15);
	TFT_RST_1;
    114e:	c3 9a       	sbi	0x18, 3	; 24
    1150:	8f e2       	ldi	r24, 0x2F	; 47
    1152:	95 e7       	ldi	r25, 0x75	; 117
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	f1 f7       	brne	.-4      	; 0x1154 <TFT_Init+0x24>
    1158:	00 c0       	rjmp	.+0      	; 0x115a <TFT_Init+0x2a>
    115a:	00 00       	nop
	_delay_ms(15);
	TFT_CS_0;
    115c:	94 98       	cbi	0x12, 4	; 18
	Write_Command_Data(0x0000,0x0001);
    115e:	61 e0       	ldi	r22, 0x01	; 1
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0003,0xA8A4);
    116a:	64 ea       	ldi	r22, 0xA4	; 164
    116c:	78 ea       	ldi	r23, 0xA8	; 168
    116e:	83 e0       	ldi	r24, 0x03	; 3
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x000C,0x0000);
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	8c e0       	ldi	r24, 0x0C	; 12
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x000D,0x800C);
    1182:	6c e0       	ldi	r22, 0x0C	; 12
    1184:	70 e8       	ldi	r23, 0x80	; 128
    1186:	8d e0       	ldi	r24, 0x0D	; 13
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x000E,0x2B00);
    118e:	60 e0       	ldi	r22, 0x00	; 0
    1190:	7b e2       	ldi	r23, 0x2B	; 43
    1192:	8e e0       	ldi	r24, 0x0E	; 14
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x001E,0x00B7);
    119a:	67 eb       	ldi	r22, 0xB7	; 183
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	8e e1       	ldi	r24, 0x1E	; 30
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0001,0x2B3F);
    11a6:	6f e3       	ldi	r22, 0x3F	; 63
    11a8:	7b e2       	ldi	r23, 0x2B	; 43
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0002,0x0600);
    11b2:	60 e0       	ldi	r22, 0x00	; 0
    11b4:	76 e0       	ldi	r23, 0x06	; 6
    11b6:	82 e0       	ldi	r24, 0x02	; 2
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0010,0x0000);
    11be:	60 e0       	ldi	r22, 0x00	; 0
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	80 e1       	ldi	r24, 0x10	; 16
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0011,0x6070);
    11ca:	60 e7       	ldi	r22, 0x70	; 112
    11cc:	70 e6       	ldi	r23, 0x60	; 96
    11ce:	81 e1       	ldi	r24, 0x11	; 17
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0005,0x0000);
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	85 e0       	ldi	r24, 0x05	; 5
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0006,0x0000);
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	86 e0       	ldi	r24, 0x06	; 6
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0016,0xEF1C);
    11ee:	6c e1       	ldi	r22, 0x1C	; 28
    11f0:	7f ee       	ldi	r23, 0xEF	; 239
    11f2:	86 e1       	ldi	r24, 0x16	; 22
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0017,0x0003);
    11fa:	63 e0       	ldi	r22, 0x03	; 3
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	87 e1       	ldi	r24, 0x17	; 23
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0007,0x0233);
    1206:	63 e3       	ldi	r22, 0x33	; 51
    1208:	72 e0       	ldi	r23, 0x02	; 2
    120a:	87 e0       	ldi	r24, 0x07	; 7
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x000B,0x0000);
    1212:	60 e0       	ldi	r22, 0x00	; 0
    1214:	70 e0       	ldi	r23, 0x00	; 0
    1216:	8b e0       	ldi	r24, 0x0B	; 11
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x000F,0x0000);
    121e:	60 e0       	ldi	r22, 0x00	; 0
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	8f e0       	ldi	r24, 0x0F	; 15
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0041,0x0000);
    122a:	60 e0       	ldi	r22, 0x00	; 0
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	81 e4       	ldi	r24, 0x41	; 65
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0042,0x0000);
    1236:	60 e0       	ldi	r22, 0x00	; 0
    1238:	70 e0       	ldi	r23, 0x00	; 0
    123a:	82 e4       	ldi	r24, 0x42	; 66
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0048,0x0000);
    1242:	60 e0       	ldi	r22, 0x00	; 0
    1244:	70 e0       	ldi	r23, 0x00	; 0
    1246:	88 e4       	ldi	r24, 0x48	; 72
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0049,0x013F);
    124e:	6f e3       	ldi	r22, 0x3F	; 63
    1250:	71 e0       	ldi	r23, 0x01	; 1
    1252:	89 e4       	ldi	r24, 0x49	; 73
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004A,0x0000);
    125a:	60 e0       	ldi	r22, 0x00	; 0
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	8a e4       	ldi	r24, 0x4A	; 74
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004B,0x0000);
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	70 e0       	ldi	r23, 0x00	; 0
    126a:	8b e4       	ldi	r24, 0x4B	; 75
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0044,0xEF95);
    1272:	65 e9       	ldi	r22, 0x95	; 149
    1274:	7f ee       	ldi	r23, 0xEF	; 239
    1276:	84 e4       	ldi	r24, 0x44	; 68
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0045,0x0000);
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	85 e4       	ldi	r24, 0x45	; 69
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0046,0x013F);
    128a:	6f e3       	ldi	r22, 0x3F	; 63
    128c:	71 e0       	ldi	r23, 0x01	; 1
    128e:	86 e4       	ldi	r24, 0x46	; 70
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0030,0x0707);
    1296:	67 e0       	ldi	r22, 0x07	; 7
    1298:	77 e0       	ldi	r23, 0x07	; 7
    129a:	80 e3       	ldi	r24, 0x30	; 48
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0031,0x0204);
    12a2:	64 e0       	ldi	r22, 0x04	; 4
    12a4:	72 e0       	ldi	r23, 0x02	; 2
    12a6:	81 e3       	ldi	r24, 0x31	; 49
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0032,0x0204);
    12ae:	64 e0       	ldi	r22, 0x04	; 4
    12b0:	72 e0       	ldi	r23, 0x02	; 2
    12b2:	82 e3       	ldi	r24, 0x32	; 50
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0033,0x0502);
    12ba:	62 e0       	ldi	r22, 0x02	; 2
    12bc:	75 e0       	ldi	r23, 0x05	; 5
    12be:	83 e3       	ldi	r24, 0x33	; 51
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0034,0x0507);
    12c6:	67 e0       	ldi	r22, 0x07	; 7
    12c8:	75 e0       	ldi	r23, 0x05	; 5
    12ca:	84 e3       	ldi	r24, 0x34	; 52
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0035,0x0204);
    12d2:	64 e0       	ldi	r22, 0x04	; 4
    12d4:	72 e0       	ldi	r23, 0x02	; 2
    12d6:	85 e3       	ldi	r24, 0x35	; 53
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0036,0x0204);
    12de:	64 e0       	ldi	r22, 0x04	; 4
    12e0:	72 e0       	ldi	r23, 0x02	; 2
    12e2:	86 e3       	ldi	r24, 0x36	; 54
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0037,0x0502);
    12ea:	62 e0       	ldi	r22, 0x02	; 2
    12ec:	75 e0       	ldi	r23, 0x05	; 5
    12ee:	87 e3       	ldi	r24, 0x37	; 55
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x003A,0x0302);
    12f6:	62 e0       	ldi	r22, 0x02	; 2
    12f8:	73 e0       	ldi	r23, 0x03	; 3
    12fa:	8a e3       	ldi	r24, 0x3A	; 58
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x003B,0x0302);
    1302:	62 e0       	ldi	r22, 0x02	; 2
    1304:	73 e0       	ldi	r23, 0x03	; 3
    1306:	8b e3       	ldi	r24, 0x3B	; 59
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0023,0x0000);
    130e:	60 e0       	ldi	r22, 0x00	; 0
    1310:	70 e0       	ldi	r23, 0x00	; 0
    1312:	83 e2       	ldi	r24, 0x23	; 35
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0024,0x0000);
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	84 e2       	ldi	r24, 0x24	; 36
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x0025,0x8000);
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	70 e8       	ldi	r23, 0x80	; 128
    132a:	85 e2       	ldi	r24, 0x25	; 37
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004f,0x0000);
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	8f e4       	ldi	r24, 0x4F	; 79
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command_Data(0x004e,0x0000);
    133e:	60 e0       	ldi	r22, 0x00	; 0
    1340:	70 e0       	ldi	r23, 0x00	; 0
    1342:	8e e4       	ldi	r24, 0x4E	; 78
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <Write_Command_Data>
	Write_Command(0x0022);
    134a:	82 e2       	ldi	r24, 0x22	; 34
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 4d 08 	call	0x109a	; 0x109a <Write_Command>
	TFT_CS_1;
    1352:	94 9a       	sbi	0x12, 4	; 18
    1354:	08 95       	ret

00001356 <TFT_Fill>:
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    1356:	cf 93       	push	r28
    1358:	df 93       	push	r29
    135a:	ec 01       	movw	r28, r24
	unsigned int i,j;
	TFT_CS_0;
    135c:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(0,0,239,319);
    135e:	2f e3       	ldi	r18, 0x3F	; 63
    1360:	31 e0       	ldi	r19, 0x01	; 1
    1362:	4f ee       	ldi	r20, 0xEF	; 239
    1364:	50 e0       	ldi	r21, 0x00	; 0
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	80 e0       	ldi	r24, 0x00	; 0
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
	Write_Data(color);
    1372:	ce 01       	movw	r24, r28
    1374:	0e 94 54 08 	call	0x10a8	; 0x10a8 <Write_Data>
    1378:	20 e4       	ldi	r18, 0x40	; 64
    137a:	31 e0       	ldi	r19, 0x01	; 1
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    137c:	50 ef       	ldi	r21, 0xF0	; 240
    137e:	40 e0       	ldi	r20, 0x00	; 0
    1380:	0a c0       	rjmp	.+20     	; 0x1396 <TFT_Fill+0x40>
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
		{
			TFT_WR_0;
    1382:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    1384:	c1 9a       	sbi	0x18, 1	; 24
    1386:	01 97       	sbiw	r24, 0x01	; 1
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
	{
		for(j = 0; j <= 239; j++)
    1388:	00 97       	sbiw	r24, 0x00	; 0
    138a:	d9 f7       	brne	.-10     	; 0x1382 <TFT_Fill+0x2c>
    138c:	21 50       	subi	r18, 0x01	; 1
    138e:	31 09       	sbc	r19, r1
{
	unsigned int i,j;
	TFT_CS_0;
	TFT_Set_Address(0,0,239,319);
	Write_Data(color);
	for(i = 0; i <= 319; i++)
    1390:	21 15       	cp	r18, r1
    1392:	31 05       	cpc	r19, r1
    1394:	19 f0       	breq	.+6      	; 0x139c <TFT_Fill+0x46>
	uint16_t temp = (((R & 0xF8)|(G>>5))<<8)|(((G & 0x1C)<<3)|(B>>3));
	return temp;
}

void TFT_Fill(unsigned int color)
{
    1396:	85 2f       	mov	r24, r21
    1398:	94 2f       	mov	r25, r20
    139a:	f3 cf       	rjmp	.-26     	; 0x1382 <TFT_Fill+0x2c>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    139c:	94 9a       	sbi	0x12, 4	; 18
}
    139e:	df 91       	pop	r29
    13a0:	cf 91       	pop	r28
    13a2:	08 95       	ret

000013a4 <TFT_Box>:

void TFT_Box(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    13a4:	af 92       	push	r10
    13a6:	bf 92       	push	r11
    13a8:	cf 92       	push	r12
    13aa:	df 92       	push	r13
    13ac:	ef 92       	push	r14
    13ae:	ff 92       	push	r15
    13b0:	0f 93       	push	r16
    13b2:	1f 93       	push	r17
    13b4:	cf 93       	push	r28
    13b6:	df 93       	push	r29
    13b8:	6c 01       	movw	r12, r24
    13ba:	7b 01       	movw	r14, r22
    13bc:	ea 01       	movw	r28, r20
    13be:	59 01       	movw	r10, r18
	unsigned int  i,j;
	TFT_CS_0;
    13c0:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x1,y1,x2,y2);
    13c2:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
	Write_Data(color);
    13c6:	c8 01       	movw	r24, r16
    13c8:	0e 94 54 08 	call	0x10a8	; 0x10a8 <Write_Data>
	for(i = y1; i <= y2; i++)
    13cc:	ae 14       	cp	r10, r14
    13ce:	bf 04       	cpc	r11, r15
    13d0:	a8 f0       	brcs	.+42     	; 0x13fc <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    13d2:	9c 2d       	mov	r25, r12
    13d4:	8d 2d       	mov	r24, r13
    13d6:	0c c0       	rjmp	.+24     	; 0x13f0 <TFT_Box+0x4c>
		{
			TFT_WR_0;
    13d8:	c1 98       	cbi	0x18, 1	; 24
			TFT_WR_1;
    13da:	c1 9a       	sbi	0x18, 1	; 24
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
	{
		for(j = x1; j <= x2; j++)
    13dc:	31 96       	adiw	r30, 0x01	; 1
    13de:	ce 17       	cp	r28, r30
    13e0:	df 07       	cpc	r29, r31
    13e2:	d0 f7       	brcc	.-12     	; 0x13d8 <TFT_Box+0x34>
{
	unsigned int  i,j;
	TFT_CS_0;
	TFT_Set_Address(x1,y1,x2,y2);
	Write_Data(color);
	for(i = y1; i <= y2; i++)
    13e4:	2f ef       	ldi	r18, 0xFF	; 255
    13e6:	e2 1a       	sub	r14, r18
    13e8:	f2 0a       	sbc	r15, r18
    13ea:	ae 14       	cp	r10, r14
    13ec:	bf 04       	cpc	r11, r15
    13ee:	30 f0       	brcs	.+12     	; 0x13fc <TFT_Box+0x58>
	{
		for(j = x1; j <= x2; j++)
    13f0:	cc 15       	cp	r28, r12
    13f2:	dd 05       	cpc	r29, r13
    13f4:	b8 f3       	brcs	.-18     	; 0x13e4 <TFT_Box+0x40>
    13f6:	e9 2f       	mov	r30, r25
    13f8:	f8 2f       	mov	r31, r24
    13fa:	ee cf       	rjmp	.-36     	; 0x13d8 <TFT_Box+0x34>
		{
			TFT_WR_0;
			TFT_WR_1;
		}
	}
	TFT_CS_1;
    13fc:	94 9a       	sbi	0x12, 4	; 18
}
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	ff 90       	pop	r15
    1408:	ef 90       	pop	r14
    140a:	df 90       	pop	r13
    140c:	cf 90       	pop	r12
    140e:	bf 90       	pop	r11
    1410:	af 90       	pop	r10
    1412:	08 95       	ret

00001414 <TFT_Dot>:

void TFT_Dot(unsigned int x,unsigned int y,unsigned int color)
{
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	ea 01       	movw	r28, r20
	TFT_CS_0;
    141a:	94 98       	cbi	0x12, 4	; 18
	TFT_Set_Address(x,y,x,y);
    141c:	9b 01       	movw	r18, r22
    141e:	ac 01       	movw	r20, r24
    1420:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
	Write_Data(color);
    1424:	ce 01       	movw	r24, r28
    1426:	0e 94 54 08 	call	0x10a8	; 0x10a8 <Write_Data>
	TFT_CS_1;
    142a:	94 9a       	sbi	0x12, 4	; 18
}
    142c:	df 91       	pop	r29
    142e:	cf 91       	pop	r28
    1430:	08 95       	ret

00001432 <TFT_H_Line>:
	}
}


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
    1432:	ef 92       	push	r14
    1434:	ff 92       	push	r15
    1436:	0f 93       	push	r16
    1438:	1f 93       	push	r17
    143a:	cf 93       	push	r28
    143c:	df 93       	push	r29
    143e:	f8 2e       	mov	r15, r24
    1440:	e6 2e       	mov	r14, r22
    1442:	8a 01       	movw	r16, r20
    1444:	e9 01       	movw	r28, r18
	char k;
	for(k = x1; k <= x2; k++)
    1446:	68 17       	cp	r22, r24
    1448:	48 f0       	brcs	.+18     	; 0x145c <TFT_H_Line+0x2a>
	{
		TFT_Dot(k,y_pos,color);
    144a:	ae 01       	movw	r20, r28
    144c:	b8 01       	movw	r22, r16
    144e:	8f 2d       	mov	r24, r15
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>


void TFT_H_Line(char x1,char x2,unsigned int y_pos,unsigned int color)
{
	char k;
	for(k = x1; k <= x2; k++)
    1456:	f3 94       	inc	r15
    1458:	ef 14       	cp	r14, r15
    145a:	b8 f7       	brcc	.-18     	; 0x144a <TFT_H_Line+0x18>
	{
		TFT_Dot(k,y_pos,color);
	}
}
    145c:	df 91       	pop	r29
    145e:	cf 91       	pop	r28
    1460:	1f 91       	pop	r17
    1462:	0f 91       	pop	r16
    1464:	ff 90       	pop	r15
    1466:	ef 90       	pop	r14
    1468:	08 95       	ret

0000146a <TFT_V_Line>:

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
    146a:	cf 92       	push	r12
    146c:	df 92       	push	r13
    146e:	ef 92       	push	r14
    1470:	ff 92       	push	r15
    1472:	0f 93       	push	r16
    1474:	1f 93       	push	r17
    1476:	cf 93       	push	r28
    1478:	df 93       	push	r29
    147a:	ec 01       	movw	r28, r24
    147c:	8b 01       	movw	r16, r22
    147e:	79 01       	movw	r14, r18
	unsigned int k;
	for(k = y1; k <= y2; k++)
    1480:	68 17       	cp	r22, r24
    1482:	79 07       	cpc	r23, r25
    1484:	58 f0       	brcs	.+22     	; 0x149c <TFT_V_Line+0x32>
	{
		TFT_Dot(x_pos,k,color);
    1486:	c4 2e       	mov	r12, r20
    1488:	d1 2c       	mov	r13, r1
    148a:	a7 01       	movw	r20, r14
    148c:	be 01       	movw	r22, r28
    148e:	c6 01       	movw	r24, r12
    1490:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>
}

void TFT_V_Line(unsigned int y1,unsigned int y2,char x_pos,unsigned int color)
{
	unsigned int k;
	for(k = y1; k <= y2; k++)
    1494:	21 96       	adiw	r28, 0x01	; 1
    1496:	0c 17       	cp	r16, r28
    1498:	1d 07       	cpc	r17, r29
    149a:	b8 f7       	brcc	.-18     	; 0x148a <TFT_V_Line+0x20>
	{
		TFT_Dot(x_pos,k,color);
	}
}
    149c:	df 91       	pop	r29
    149e:	cf 91       	pop	r28
    14a0:	1f 91       	pop	r17
    14a2:	0f 91       	pop	r16
    14a4:	ff 90       	pop	r15
    14a6:	ef 90       	pop	r14
    14a8:	df 90       	pop	r13
    14aa:	cf 90       	pop	r12
    14ac:	08 95       	ret

000014ae <TFT_Rectangle>:

void TFT_Rectangle(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    14ae:	cf 92       	push	r12
    14b0:	df 92       	push	r13
    14b2:	ef 92       	push	r14
    14b4:	ff 92       	push	r15
    14b6:	0f 93       	push	r16
    14b8:	1f 93       	push	r17
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	c8 2e       	mov	r12, r24
    14c0:	eb 01       	movw	r28, r22
    14c2:	d4 2e       	mov	r13, r20
    14c4:	79 01       	movw	r14, r18
	TFT_H_Line(x1,x2,y1,color);
    14c6:	98 01       	movw	r18, r16
    14c8:	ab 01       	movw	r20, r22
    14ca:	6d 2d       	mov	r22, r13
    14cc:	0e 94 19 0a 	call	0x1432	; 0x1432 <TFT_H_Line>
	TFT_H_Line(x1,x2,y2,color);
    14d0:	98 01       	movw	r18, r16
    14d2:	a7 01       	movw	r20, r14
    14d4:	6d 2d       	mov	r22, r13
    14d6:	8c 2d       	mov	r24, r12
    14d8:	0e 94 19 0a 	call	0x1432	; 0x1432 <TFT_H_Line>
	TFT_V_Line(y1,y2,x1,color);
    14dc:	98 01       	movw	r18, r16
    14de:	4c 2d       	mov	r20, r12
    14e0:	b7 01       	movw	r22, r14
    14e2:	ce 01       	movw	r24, r28
    14e4:	0e 94 35 0a 	call	0x146a	; 0x146a <TFT_V_Line>
	TFT_V_Line(y1,y2,x2,color);
    14e8:	98 01       	movw	r18, r16
    14ea:	4d 2d       	mov	r20, r13
    14ec:	b7 01       	movw	r22, r14
    14ee:	ce 01       	movw	r24, r28
    14f0:	0e 94 35 0a 	call	0x146a	; 0x146a <TFT_V_Line>
}
    14f4:	df 91       	pop	r29
    14f6:	cf 91       	pop	r28
    14f8:	1f 91       	pop	r17
    14fa:	0f 91       	pop	r16
    14fc:	ff 90       	pop	r15
    14fe:	ef 90       	pop	r14
    1500:	df 90       	pop	r13
    1502:	cf 90       	pop	r12
    1504:	08 95       	ret

00001506 <TFT_Char>:
		}
	}
}

void TFT_Char(char C,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    1506:	2f 92       	push	r2
    1508:	3f 92       	push	r3
    150a:	4f 92       	push	r4
    150c:	5f 92       	push	r5
    150e:	6f 92       	push	r6
    1510:	7f 92       	push	r7
    1512:	8f 92       	push	r8
    1514:	9f 92       	push	r9
    1516:	af 92       	push	r10
    1518:	bf 92       	push	r11
    151a:	cf 92       	push	r12
    151c:	df 92       	push	r13
    151e:	ef 92       	push	r14
    1520:	ff 92       	push	r15
    1522:	0f 93       	push	r16
    1524:	1f 93       	push	r17
    1526:	cf 93       	push	r28
    1528:	df 93       	push	r29
    152a:	cd b7       	in	r28, 0x3d	; 61
    152c:	de b7       	in	r29, 0x3e	; 62
    152e:	ae 97       	sbiw	r28, 0x2e	; 46
    1530:	0f b6       	in	r0, 0x3f	; 63
    1532:	f8 94       	cli
    1534:	de bf       	out	0x3e, r29	; 62
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	cd bf       	out	0x3d, r28	; 61
    153a:	7a a7       	std	Y+42, r23	; 0x2a
    153c:	69 a7       	std	Y+41, r22	; 0x29
    153e:	5a 01       	movw	r10, r20
    1540:	28 01       	movw	r4, r16
	unsigned int font16x16[16];
	unsigned int x_new;
	unsigned char k,i,print1,print2;  //edited breb LINE: char k,i,x_new,x_old,print1,print2;
	unsigned int print3,print4;

	if(DimFont == 8)
    1542:	28 30       	cpi	r18, 0x08	; 8
    1544:	09 f0       	breq	.+2      	; 0x1548 <TFT_Char+0x42>
    1546:	62 c0       	rjmp	.+196    	; 0x160c <TFT_Char+0x106>
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
    1548:	08 2f       	mov	r16, r24
    154a:	10 e0       	ldi	r17, 0x00	; 0
    154c:	00 0f       	add	r16, r16
    154e:	11 1f       	adc	r17, r17
    1550:	00 0f       	add	r16, r16
    1552:	11 1f       	adc	r17, r17
    1554:	00 0f       	add	r16, r16
    1556:	11 1f       	adc	r17, r17
		PtrFont = PtrFont + Cptrfont;
    1558:	0c 5c       	subi	r16, 0xCC	; 204
    155a:	14 4f       	sbci	r17, 0xF4	; 244

		TFT_Set_Address(x,y,x,y);
    155c:	9a 01       	movw	r18, r20
    155e:	ab 01       	movw	r20, r22
    1560:	b5 01       	movw	r22, r10
    1562:	ca 01       	movw	r24, r20
    1564:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
    1568:	ce 01       	movw	r24, r28
    156a:	09 96       	adiw	r24, 0x09	; 9
    156c:	de 01       	movw	r26, r28
    156e:	11 96       	adiw	r26, 0x01	; 1
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
    1570:	f8 01       	movw	r30, r16
    1572:	24 91       	lpm	r18, Z
    1574:	2d 93       	st	X+, r18
			PtrFont++;
    1576:	0f 5f       	subi	r16, 0xFF	; 255
    1578:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented by aman
		y_new = y;

		for(k = 0; k <= 7; k++)
    157a:	a8 17       	cp	r26, r24
    157c:	b9 07       	cpc	r27, r25
    157e:	c1 f7       	brne	.-16     	; 0x1570 <TFT_Char+0x6a>
    1580:	c5 01       	movw	r24, r10
    1582:	08 96       	adiw	r24, 0x08	; 8
    1584:	9c a7       	std	Y+44, r25	; 0x2c
    1586:	8b a7       	std	Y+43, r24	; 0x2b
    1588:	fe 01       	movw	r30, r28
    158a:	31 96       	adiw	r30, 0x01	; 1
    158c:	1f 01       	movw	r2, r30
    158e:	65 01       	movw	r12, r10
    1590:	89 a5       	ldd	r24, Y+41	; 0x29
    1592:	9a a5       	ldd	r25, Y+42	; 0x2a
    1594:	01 96       	adiw	r24, 0x01	; 1
    1596:	9e a7       	std	Y+46, r25	; 0x2e
    1598:	8d a7       	std	Y+45, r24	; 0x2d
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    159a:	61 2c       	mov	r6, r1
    159c:	32 c0       	rjmp	.+100    	; 0x1602 <TFT_Char+0xfc>
    159e:	c8 01       	movw	r24, r16
    15a0:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
			{
				print1 = (font8x8[i] & 0x80);
    15a2:	f1 01       	movw	r30, r2
    15a4:	20 81       	ld	r18, Z
				print2 = print1 >>7;
				if(print2 == 1)
    15a6:	22 23       	and	r18, r18
    15a8:	2c f4       	brge	.+10     	; 0x15b4 <TFT_Char+0xae>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    15aa:	a2 01       	movw	r20, r4
    15ac:	b6 01       	movw	r22, r12
    15ae:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>
    15b2:	0a c0       	rjmp	.+20     	; 0x15c8 <TFT_Char+0xc2>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    15b4:	a7 01       	movw	r20, r14
    15b6:	b6 01       	movw	r22, r12
    15b8:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    15bc:	95 01       	movw	r18, r10
    15be:	a8 01       	movw	r20, r16
    15c0:	b5 01       	movw	r22, r10
    15c2:	c8 01       	movw	r24, r16
    15c4:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
				}
				font8x8[i] = font8x8[i] << 1;
    15c8:	f4 01       	movw	r30, r8
    15ca:	80 81       	ld	r24, Z
    15cc:	88 0f       	add	r24, r24
    15ce:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
		{
			for(k = 0; k <= 7; k++)
    15d0:	73 94       	inc	r7
    15d2:	0f 5f       	subi	r16, 0xFF	; 255
    15d4:	1f 4f       	sbci	r17, 0xFF	; 255
    15d6:	f8 e0       	ldi	r31, 0x08	; 8
    15d8:	7f 12       	cpse	r7, r31
    15da:	e1 cf       	rjmp	.-62     	; 0x159e <TFT_Char+0x98>
					TFT_Set_Address(x_new,y,x_new,y);
				}
				font8x8[i] = font8x8[i] << 1;
			}

			y_new++;
    15dc:	8f ef       	ldi	r24, 0xFF	; 255
    15de:	c8 1a       	sub	r12, r24
    15e0:	d8 0a       	sbc	r13, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    15e2:	96 01       	movw	r18, r12
    15e4:	49 a5       	ldd	r20, Y+41	; 0x29
    15e6:	5a a5       	ldd	r21, Y+42	; 0x2a
    15e8:	b6 01       	movw	r22, r12
    15ea:	ca 01       	movw	r24, r20
    15ec:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
    15f0:	9f ef       	ldi	r25, 0xFF	; 255
    15f2:	29 1a       	sub	r2, r25
    15f4:	39 0a       	sbc	r3, r25
		{
			font8x8[k] =pgm_read_byte(PtrFont) ; //*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 7; i++)
    15f6:	eb a5       	ldd	r30, Y+43	; 0x2b
    15f8:	fc a5       	ldd	r31, Y+44	; 0x2c
    15fa:	ce 16       	cp	r12, r30
    15fc:	df 06       	cpc	r13, r31
    15fe:	09 f4       	brne	.+2      	; 0x1602 <TFT_Char+0xfc>
    1600:	73 c0       	rjmp	.+230    	; 0x16e8 <TFT_Char+0x1e2>
    1602:	0d a5       	ldd	r16, Y+45	; 0x2d
    1604:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
		PtrFont = &FONT_8x8[0]; // aman & can be eliminated ;;; default prev line: PtrFont = &FONT_8x8;
		Cptrfont = (C-32)*8;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    1606:	76 2c       	mov	r7, r6
    1608:	41 01       	movw	r8, r2
    160a:	c9 cf       	rjmp	.-110    	; 0x159e <TFT_Char+0x98>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

	else if(DimFont == 16)
    160c:	20 31       	cpi	r18, 0x10	; 16
    160e:	09 f0       	breq	.+2      	; 0x1612 <TFT_Char+0x10c>
    1610:	6b c0       	rjmp	.+214    	; 0x16e8 <TFT_Char+0x1e2>
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
    1612:	f0 e2       	ldi	r31, 0x20	; 32
    1614:	8f 9f       	mul	r24, r31
    1616:	80 01       	movw	r16, r0
    1618:	11 24       	eor	r1, r1
		PtrFont = PtrFont + Cptrfont;
    161a:	0c 5a       	subi	r16, 0xAC	; 172
    161c:	13 40       	sbci	r17, 0x03	; 3

		TFT_Set_Address(x,y,x,y);
    161e:	9a 01       	movw	r18, r20
    1620:	49 a5       	ldd	r20, Y+41	; 0x29
    1622:	5a a5       	ldd	r21, Y+42	; 0x2a
    1624:	b5 01       	movw	r22, r10
    1626:	ca 01       	movw	r24, r20
    1628:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
    162c:	98 01       	movw	r18, r16
    162e:	20 5e       	subi	r18, 0xE0	; 224
    1630:	3f 4f       	sbci	r19, 0xFF	; 255
    1632:	de 01       	movw	r26, r28
    1634:	19 96       	adiw	r26, 0x09	; 9
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    1636:	f8 01       	movw	r30, r16
    1638:	84 91       	lpm	r24, Z
    163a:	31 96       	adiw	r30, 0x01	; 1
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    163c:	e4 91       	lpm	r30, Z
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
		{
			font16x16[k] = pgm_read_byte(PtrFont);//*PtrFont;
    163e:	90 e0       	ldi	r25, 0x00	; 0
			PtrFont++;
			font16x16[k] = (font16x16[k] << 8);
    1640:	98 2f       	mov	r25, r24
    1642:	88 27       	eor	r24, r24
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
    1644:	8e 0f       	add	r24, r30
    1646:	91 1d       	adc	r25, r1
    1648:	8d 93       	st	X+, r24
    164a:	9d 93       	st	X+, r25
    164c:	0e 5f       	subi	r16, 0xFE	; 254
    164e:	1f 4f       	sbci	r17, 0xFF	; 255
		TFT_Set_Address(x,y,x,y);
		x_new = x;
		//x_old = x;  //commented my aman
		y_new = y;

		for(k = 0; k <= 15; k++)
    1650:	20 17       	cp	r18, r16
    1652:	31 07       	cpc	r19, r17
    1654:	81 f7       	brne	.-32     	; 0x1636 <TFT_Char+0x130>
    1656:	c5 01       	movw	r24, r10
    1658:	40 96       	adiw	r24, 0x10	; 16
    165a:	9c a7       	std	Y+44, r25	; 0x2c
    165c:	8b a7       	std	Y+43, r24	; 0x2b
    165e:	fe 01       	movw	r30, r28
    1660:	39 96       	adiw	r30, 0x09	; 9
    1662:	3f 01       	movw	r6, r30
    1664:	45 01       	movw	r8, r10
    1666:	89 a5       	ldd	r24, Y+41	; 0x29
    1668:	9a a5       	ldd	r25, Y+42	; 0x2a
    166a:	01 96       	adiw	r24, 0x01	; 1
    166c:	9e a7       	std	Y+46, r25	; 0x2e
    166e:	8d a7       	std	Y+45, r24	; 0x2d
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    1670:	21 2c       	mov	r2, r1
    1672:	35 c0       	rjmp	.+106    	; 0x16de <TFT_Char+0x1d8>
    1674:	c8 01       	movw	r24, r16
    1676:	01 97       	sbiw	r24, 0x01	; 1

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
			{
				print3 = (font16x16[i] & 0x8000);
    1678:	f3 01       	movw	r30, r6
    167a:	20 81       	ld	r18, Z
    167c:	31 81       	ldd	r19, Z+1	; 0x01
				print4 = print3 >>15;

				if(print4 == 1)
    167e:	33 23       	and	r19, r19
    1680:	2c f4       	brge	.+10     	; 0x168c <TFT_Char+0x186>
				{
					TFT_Dot(x_new,y_new,Fcolor);
    1682:	a2 01       	movw	r20, r4
    1684:	b4 01       	movw	r22, r8
    1686:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>
    168a:	0a c0       	rjmp	.+20     	; 0x16a0 <TFT_Char+0x19a>
					x_new++;
				}
				else
				{
					TFT_Dot(x_new,y_new,Bcolor);
    168c:	a7 01       	movw	r20, r14
    168e:	b4 01       	movw	r22, r8
    1690:	0e 94 0a 0a 	call	0x1414	; 0x1414 <TFT_Dot>
					x_new++;
					TFT_Set_Address(x_new,y,x_new,y);
    1694:	95 01       	movw	r18, r10
    1696:	a8 01       	movw	r20, r16
    1698:	b5 01       	movw	r22, r10
    169a:	c8 01       	movw	r24, r16
    169c:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
				}

				font16x16[i] = font16x16[i] << 1;
    16a0:	f6 01       	movw	r30, r12
    16a2:	80 81       	ld	r24, Z
    16a4:	91 81       	ldd	r25, Z+1	; 0x01
    16a6:	88 0f       	add	r24, r24
    16a8:	99 1f       	adc	r25, r25
    16aa:	91 83       	std	Z+1, r25	; 0x01
    16ac:	80 83       	st	Z, r24
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
		{
			for(k = 0; k <= 15; k++)
    16ae:	33 94       	inc	r3
    16b0:	0f 5f       	subi	r16, 0xFF	; 255
    16b2:	1f 4f       	sbci	r17, 0xFF	; 255
    16b4:	f0 e1       	ldi	r31, 0x10	; 16
    16b6:	3f 12       	cpse	r3, r31
    16b8:	dd cf       	rjmp	.-70     	; 0x1674 <TFT_Char+0x16e>
				}

				font16x16[i] = font16x16[i] << 1;
			}

			y_new++;
    16ba:	8f ef       	ldi	r24, 0xFF	; 255
    16bc:	88 1a       	sub	r8, r24
    16be:	98 0a       	sbc	r9, r24
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
    16c0:	94 01       	movw	r18, r8
    16c2:	49 a5       	ldd	r20, Y+41	; 0x29
    16c4:	5a a5       	ldd	r21, Y+42	; 0x2a
    16c6:	b4 01       	movw	r22, r8
    16c8:	ca 01       	movw	r24, r20
    16ca:	0e 94 66 08 	call	0x10cc	; 0x10cc <TFT_Set_Address>
    16ce:	92 e0       	ldi	r25, 0x02	; 2
    16d0:	69 0e       	add	r6, r25
    16d2:	71 1c       	adc	r7, r1
			font16x16[k] = (font16x16[k] << 8);
			font16x16[k] = font16x16[k] + pgm_read_byte(PtrFont);//*PtrFont;
			PtrFont++;
		}

		for(i = 0; i <= 15; i++)
    16d4:	eb a5       	ldd	r30, Y+43	; 0x2b
    16d6:	fc a5       	ldd	r31, Y+44	; 0x2c
    16d8:	8e 16       	cp	r8, r30
    16da:	9f 06       	cpc	r9, r31
    16dc:	29 f0       	breq	.+10     	; 0x16e8 <TFT_Char+0x1e2>
    16de:	0d a5       	ldd	r16, Y+45	; 0x2d
    16e0:	1e a5       	ldd	r17, Y+46	; 0x2e
	{
	    PtrFont = &FONT_16x16[0];
		Cptrfont = (C-32)*32;
		PtrFont = PtrFont + Cptrfont;

		TFT_Set_Address(x,y,x,y);
    16e2:	32 2c       	mov	r3, r2
    16e4:	63 01       	movw	r12, r6
    16e6:	c6 cf       	rjmp	.-116    	; 0x1674 <TFT_Char+0x16e>
			x_new = x;
			TFT_Set_Address(x,y_new,x,y_new);
		}
	}

}
    16e8:	ae 96       	adiw	r28, 0x2e	; 46
    16ea:	0f b6       	in	r0, 0x3f	; 63
    16ec:	f8 94       	cli
    16ee:	de bf       	out	0x3e, r29	; 62
    16f0:	0f be       	out	0x3f, r0	; 63
    16f2:	cd bf       	out	0x3d, r28	; 61
    16f4:	df 91       	pop	r29
    16f6:	cf 91       	pop	r28
    16f8:	1f 91       	pop	r17
    16fa:	0f 91       	pop	r16
    16fc:	ff 90       	pop	r15
    16fe:	ef 90       	pop	r14
    1700:	df 90       	pop	r13
    1702:	cf 90       	pop	r12
    1704:	bf 90       	pop	r11
    1706:	af 90       	pop	r10
    1708:	9f 90       	pop	r9
    170a:	8f 90       	pop	r8
    170c:	7f 90       	pop	r7
    170e:	6f 90       	pop	r6
    1710:	5f 90       	pop	r5
    1712:	4f 90       	pop	r4
    1714:	3f 90       	pop	r3
    1716:	2f 90       	pop	r2
    1718:	08 95       	ret

0000171a <TFT_Text>:

void TFT_Text(const char* S,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    171a:	2f 92       	push	r2
    171c:	3f 92       	push	r3
    171e:	4f 92       	push	r4
    1720:	5f 92       	push	r5
    1722:	6f 92       	push	r6
    1724:	7f 92       	push	r7
    1726:	8f 92       	push	r8
    1728:	9f 92       	push	r9
    172a:	af 92       	push	r10
    172c:	bf 92       	push	r11
    172e:	cf 92       	push	r12
    1730:	df 92       	push	r13
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	6a 97       	sbiw	r28, 0x1a	; 26
    1744:	0f b6       	in	r0, 0x3f	; 63
    1746:	f8 94       	cli
    1748:	de bf       	out	0x3e, r29	; 62
    174a:	0f be       	out	0x3f, r0	; 63
    174c:	cd bf       	out	0x3d, r28	; 61
    174e:	6b 01       	movw	r12, r22
    1750:	1a 01       	movw	r2, r20
    1752:	28 01       	movw	r4, r16
    1754:	47 01       	movw	r8, r14
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);
    1756:	fc 01       	movw	r30, r24
    1758:	01 90       	ld	r0, Z+
    175a:	00 20       	and	r0, r0
    175c:	e9 f7       	brne	.-6      	; 0x1758 <TFT_Text+0x3e>
    175e:	af 01       	movw	r20, r30
    1760:	48 1b       	sub	r20, r24
    1762:	59 0b       	sbc	r21, r25

	for(k = 0; k <= (lenght - 1); k++)
    1764:	ba 01       	movw	r22, r20
    1766:	62 50       	subi	r22, 0x02	; 2
    1768:	71 09       	sbc	r23, r1
    176a:	5b 01       	movw	r10, r22
    176c:	77 23       	and	r23, r23
    176e:	0c f4       	brge	.+2      	; 0x1772 <TFT_Text+0x58>
    1770:	4c c0       	rjmp	.+152    	; 0x180a <TFT_Text+0xf0>
    1772:	dc 01       	movw	r26, r24
    1774:	fe 01       	movw	r30, r28
    1776:	31 96       	adiw	r30, 0x01	; 1
    1778:	40 e0       	ldi	r20, 0x00	; 0
    177a:	50 e0       	ldi	r21, 0x00	; 0
	{
		buffer[k] = S[k];
    177c:	8d 91       	ld	r24, X+
    177e:	81 93       	st	Z+, r24
{
	int lenght,k;
	char buffer[24];
	lenght = strlen(S);

	for(k = 0; k <= (lenght - 1); k++)
    1780:	4f 5f       	subi	r20, 0xFF	; 255
    1782:	5f 4f       	sbci	r21, 0xFF	; 255
    1784:	a4 16       	cp	r10, r20
    1786:	b5 06       	cpc	r11, r21
    1788:	cc f7       	brge	.-14     	; 0x177c <TFT_Text+0x62>
    178a:	3c c0       	rjmp	.+120    	; 0x1804 <TFT_Text+0xea>
    178c:	ce 01       	movw	r24, r28
    178e:	01 96       	adiw	r24, 0x01	; 1
    1790:	9a 8f       	std	Y+26, r25	; 0x1a
    1792:	89 8f       	std	Y+25, r24	; 0x19
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    1794:	61 2c       	mov	r6, r1
    1796:	71 2c       	mov	r7, r1
	{
		for(k = 0; k <= (lenght - 1); k++)
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    1798:	74 01       	movw	r14, r8
    179a:	82 01       	movw	r16, r4
    179c:	28 e0       	ldi	r18, 0x08	; 8
    179e:	a1 01       	movw	r20, r2
    17a0:	b6 01       	movw	r22, r12
    17a2:	e9 8d       	ldd	r30, Y+25	; 0x19
    17a4:	fa 8d       	ldd	r31, Y+26	; 0x1a
    17a6:	81 91       	ld	r24, Z+
    17a8:	fa 8f       	std	Y+26, r31	; 0x1a
    17aa:	e9 8f       	std	Y+25, r30	; 0x19
    17ac:	0e 94 83 0a 	call	0x1506	; 0x1506 <TFT_Char>
			x = x + 8;
    17b0:	f8 e0       	ldi	r31, 0x08	; 8
    17b2:	cf 0e       	add	r12, r31
    17b4:	d1 1c       	adc	r13, r1
		buffer[k] = S[k];
	}

	if(DimFont == 8)
	{
		for(k = 0; k <= (lenght - 1); k++)
    17b6:	6f ef       	ldi	r22, 0xFF	; 255
    17b8:	66 1a       	sub	r6, r22
    17ba:	76 0a       	sbc	r7, r22
    17bc:	a6 14       	cp	r10, r6
    17be:	b7 04       	cpc	r11, r7
    17c0:	5c f7       	brge	.-42     	; 0x1798 <TFT_Text+0x7e>
    17c2:	25 c0       	rjmp	.+74     	; 0x180e <TFT_Text+0xf4>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 8;
		}
	}
	else if(DimFont == 16)
    17c4:	20 31       	cpi	r18, 0x10	; 16
    17c6:	19 f5       	brne	.+70     	; 0x180e <TFT_Text+0xf4>
	{
		for(k = 0; k <= (lenght - 1); k++)
    17c8:	bb 20       	and	r11, r11
    17ca:	0c f1       	brlt	.+66     	; 0x180e <TFT_Text+0xf4>
    17cc:	ce 01       	movw	r24, r28
    17ce:	01 96       	adiw	r24, 0x01	; 1
    17d0:	9a 8f       	std	Y+26, r25	; 0x1a
    17d2:	89 8f       	std	Y+25, r24	; 0x19
    17d4:	61 2c       	mov	r6, r1
    17d6:	71 2c       	mov	r7, r1
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
    17d8:	74 01       	movw	r14, r8
    17da:	82 01       	movw	r16, r4
    17dc:	20 e1       	ldi	r18, 0x10	; 16
    17de:	a1 01       	movw	r20, r2
    17e0:	b6 01       	movw	r22, r12
    17e2:	e9 8d       	ldd	r30, Y+25	; 0x19
    17e4:	fa 8d       	ldd	r31, Y+26	; 0x1a
    17e6:	81 91       	ld	r24, Z+
    17e8:	fa 8f       	std	Y+26, r31	; 0x1a
    17ea:	e9 8f       	std	Y+25, r30	; 0x19
    17ec:	0e 94 83 0a 	call	0x1506	; 0x1506 <TFT_Char>
			x = x + 14;  //default is 16 but 14 is to minimize the space
    17f0:	fe e0       	ldi	r31, 0x0E	; 14
    17f2:	cf 0e       	add	r12, r31
    17f4:	d1 1c       	adc	r13, r1
			x = x + 8;
		}
	}
	else if(DimFont == 16)
	{
		for(k = 0; k <= (lenght - 1); k++)
    17f6:	6f ef       	ldi	r22, 0xFF	; 255
    17f8:	66 1a       	sub	r6, r22
    17fa:	76 0a       	sbc	r7, r22
    17fc:	a6 14       	cp	r10, r6
    17fe:	b7 04       	cpc	r11, r7
    1800:	5c f7       	brge	.-42     	; 0x17d8 <TFT_Text+0xbe>
    1802:	05 c0       	rjmp	.+10     	; 0x180e <TFT_Text+0xf4>
	for(k = 0; k <= (lenght - 1); k++)
	{
		buffer[k] = S[k];
	}

	if(DimFont == 8)
    1804:	28 30       	cpi	r18, 0x08	; 8
    1806:	f1 f6       	brne	.-68     	; 0x17c4 <TFT_Text+0xaa>
    1808:	c1 cf       	rjmp	.-126    	; 0x178c <TFT_Text+0x72>
    180a:	28 30       	cpi	r18, 0x08	; 8
    180c:	d9 f6       	brne	.-74     	; 0x17c4 <TFT_Text+0xaa>
		{
			TFT_Char(buffer[k],x,y,DimFont,Fcolor,Bcolor);
			x = x + 14;  //default is 16 but 14 is to minimize the space
		}
	}
}
    180e:	6a 96       	adiw	r28, 0x1a	; 26
    1810:	0f b6       	in	r0, 0x3f	; 63
    1812:	f8 94       	cli
    1814:	de bf       	out	0x3e, r29	; 62
    1816:	0f be       	out	0x3f, r0	; 63
    1818:	cd bf       	out	0x3d, r28	; 61
    181a:	df 91       	pop	r29
    181c:	cf 91       	pop	r28
    181e:	1f 91       	pop	r17
    1820:	0f 91       	pop	r16
    1822:	ff 90       	pop	r15
    1824:	ef 90       	pop	r14
    1826:	df 90       	pop	r13
    1828:	cf 90       	pop	r12
    182a:	bf 90       	pop	r11
    182c:	af 90       	pop	r10
    182e:	9f 90       	pop	r9
    1830:	8f 90       	pop	r8
    1832:	7f 90       	pop	r7
    1834:	6f 90       	pop	r6
    1836:	5f 90       	pop	r5
    1838:	4f 90       	pop	r4
    183a:	3f 90       	pop	r3
    183c:	2f 90       	pop	r2
    183e:	08 95       	ret

00001840 <TFT_PutsInt>:

void TFT_PutsInt(int32_t val,signed int field_length,unsigned int x,unsigned int y,char DimFont,unsigned int Fcolor,unsigned int Bcolor)
{
    1840:	2f 92       	push	r2
    1842:	3f 92       	push	r3
    1844:	4f 92       	push	r4
    1846:	5f 92       	push	r5
    1848:	6f 92       	push	r6
    184a:	7f 92       	push	r7
    184c:	8f 92       	push	r8
    184e:	9f 92       	push	r9
    1850:	af 92       	push	r10
    1852:	bf 92       	push	r11
    1854:	cf 92       	push	r12
    1856:	df 92       	push	r13
    1858:	ef 92       	push	r14
    185a:	ff 92       	push	r15
    185c:	0f 93       	push	r16
    185e:	1f 93       	push	r17
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	cd b7       	in	r28, 0x3d	; 61
    1866:	de b7       	in	r29, 0x3e	; 62
    1868:	2b 97       	sbiw	r28, 0x0b	; 11
    186a:	0f b6       	in	r0, 0x3f	; 63
    186c:	f8 94       	cli
    186e:	de bf       	out	0x3e, r29	; 62
    1870:	0f be       	out	0x3f, r0	; 63
    1872:	cd bf       	out	0x3d, r28	; 61
    1874:	3a 01       	movw	r6, r20
    1876:	49 01       	movw	r8, r18
    1878:	18 01       	movw	r2, r16
    187a:	eb 86       	std	Y+11, r14	; 0x0b
    187c:	26 01       	movw	r4, r12
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
    187e:	fe 01       	movw	r30, r28
    1880:	31 96       	adiw	r30, 0x01	; 1
    1882:	2a e0       	ldi	r18, 0x0A	; 10
    1884:	df 01       	movw	r26, r30
    1886:	1d 92       	st	X+, r1
    1888:	2a 95       	dec	r18
    188a:	e9 f7       	brne	.-6      	; 0x1886 <TFT_PutsInt+0x46>
	int i=9,j=0;
	while(val)
    188c:	61 15       	cp	r22, r1
    188e:	71 05       	cpc	r23, r1
    1890:	81 05       	cpc	r24, r1
    1892:	91 05       	cpc	r25, r1
    1894:	c9 f0       	breq	.+50     	; 0x18c8 <TFT_PutsInt+0x88>
    1896:	6e 01       	movw	r12, r28
    1898:	bb e0       	ldi	r27, 0x0B	; 11
    189a:	cb 0e       	add	r12, r27
    189c:	d1 1c       	adc	r13, r1
	{
		str[i]=val%10;
    189e:	1a e0       	ldi	r17, 0x0A	; 10
    18a0:	e1 2e       	mov	r14, r17
    18a2:	f1 2c       	mov	r15, r1
    18a4:	00 e0       	ldi	r16, 0x00	; 0
    18a6:	10 e0       	ldi	r17, 0x00	; 0
    18a8:	a8 01       	movw	r20, r16
    18aa:	97 01       	movw	r18, r14
    18ac:	0e 94 34 1d 	call	0x3a68	; 0x3a68 <__divmodsi4>
    18b0:	f6 01       	movw	r30, r12
    18b2:	62 93       	st	-Z, r22
    18b4:	6f 01       	movw	r12, r30
		val=val/10;
    18b6:	62 2f       	mov	r22, r18
    18b8:	73 2f       	mov	r23, r19
    18ba:	84 2f       	mov	r24, r20
    18bc:	95 2f       	mov	r25, r21
{
	//This function writes a long integer type value to LCD module

	char str[10]={0,0,0,0,0,0,0,0,0,0};
	int i=9,j=0;
	while(val)
    18be:	61 15       	cp	r22, r1
    18c0:	71 05       	cpc	r23, r1
    18c2:	81 05       	cpc	r24, r1
    18c4:	91 05       	cpc	r25, r1
    18c6:	81 f7       	brne	.-32     	; 0x18a8 <TFT_PutsInt+0x68>
	{
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
    18c8:	ff ef       	ldi	r31, 0xFF	; 255
    18ca:	6f 16       	cp	r6, r31
    18cc:	7f 06       	cpc	r7, r31
    18ce:	71 f4       	brne	.+28     	; 0x18ec <TFT_PutsInt+0xac>
	while(str[j]==0) j++;
    18d0:	29 81       	ldd	r18, Y+1	; 0x01
    18d2:	21 11       	cpse	r18, r1
    18d4:	11 c0       	rjmp	.+34     	; 0x18f8 <TFT_PutsInt+0xb8>
    18d6:	fe 01       	movw	r30, r28
    18d8:	32 96       	adiw	r30, 0x02	; 2
    18da:	c1 2c       	mov	r12, r1
    18dc:	d1 2c       	mov	r13, r1
    18de:	2f ef       	ldi	r18, 0xFF	; 255
    18e0:	c2 1a       	sub	r12, r18
    18e2:	d2 0a       	sbc	r13, r18
    18e4:	21 91       	ld	r18, Z+
    18e6:	22 23       	and	r18, r18
    18e8:	d1 f3       	breq	.-12     	; 0x18de <TFT_PutsInt+0x9e>
    18ea:	08 c0       	rjmp	.+16     	; 0x18fc <TFT_PutsInt+0xbc>
	else
	j=10-field_length;
    18ec:	2a e0       	ldi	r18, 0x0A	; 10
    18ee:	30 e0       	ldi	r19, 0x00	; 0
    18f0:	69 01       	movw	r12, r18
    18f2:	c6 18       	sub	r12, r6
    18f4:	d7 08       	sbc	r13, r7
    18f6:	02 c0       	rjmp	.+4      	; 0x18fc <TFT_PutsInt+0xbc>
		str[i]=val%10;
		val=val/10;
		i--;
	}
	if(field_length==-1)
	while(str[j]==0) j++;
    18f8:	c1 2c       	mov	r12, r1
    18fa:	d1 2c       	mov	r13, r1
	else
	j=10-field_length;

	if(val<0)
    18fc:	99 23       	and	r25, r25
    18fe:	ac f4       	brge	.+42     	; 0x192a <TFT_PutsInt+0xea>
	{
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
    1900:	75 01       	movw	r14, r10
    1902:	82 01       	movw	r16, r4
    1904:	2b 85       	ldd	r18, Y+11	; 0x0b
    1906:	a1 01       	movw	r20, r2
    1908:	b4 01       	movw	r22, r8
    190a:	8d e2       	ldi	r24, 0x2D	; 45
    190c:	0e 94 83 0a 	call	0x1506	; 0x1506 <TFT_Char>
		if(DimFont == 8) x+=8;
    1910:	8b 85       	ldd	r24, Y+11	; 0x0b
    1912:	88 30       	cpi	r24, 0x08	; 8
    1914:	21 f4       	brne	.+8      	; 0x191e <TFT_PutsInt+0xde>
    1916:	98 e0       	ldi	r25, 0x08	; 8
    1918:	89 0e       	add	r8, r25
    191a:	91 1c       	adc	r9, r1
    191c:	06 c0       	rjmp	.+12     	; 0x192a <TFT_PutsInt+0xea>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    191e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1920:	a0 31       	cpi	r26, 0x10	; 16
    1922:	19 f4       	brne	.+6      	; 0x192a <TFT_PutsInt+0xea>
    1924:	be e0       	ldi	r27, 0x0E	; 14
    1926:	8b 0e       	add	r8, r27
    1928:	91 1c       	adc	r9, r1
	}

	for(i=j;i<10;i++)
    192a:	ea e0       	ldi	r30, 0x0A	; 10
    192c:	ce 16       	cp	r12, r30
    192e:	d1 04       	cpc	r13, r1
    1930:	2c f5       	brge	.+74     	; 0x197c <TFT_PutsInt+0x13c>
    1932:	81 e0       	ldi	r24, 0x01	; 1
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	8c 0f       	add	r24, r28
    1938:	9d 1f       	adc	r25, r29
    193a:	c8 0e       	add	r12, r24
    193c:	d9 1e       	adc	r13, r25
    193e:	3e 01       	movw	r6, r28
    1940:	9b e0       	ldi	r25, 0x0B	; 11
    1942:	69 0e       	add	r6, r25
    1944:	71 1c       	adc	r7, r1
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
    1946:	d6 01       	movw	r26, r12
    1948:	8d 91       	ld	r24, X+
    194a:	6d 01       	movw	r12, r26
    194c:	75 01       	movw	r14, r10
    194e:	82 01       	movw	r16, r4
    1950:	2b 85       	ldd	r18, Y+11	; 0x0b
    1952:	a1 01       	movw	r20, r2
    1954:	b4 01       	movw	r22, r8
    1956:	80 5d       	subi	r24, 0xD0	; 208
    1958:	0e 94 83 0a 	call	0x1506	; 0x1506 <TFT_Char>
		if(DimFont == 8) x+=8;
    195c:	bb 85       	ldd	r27, Y+11	; 0x0b
    195e:	b8 30       	cpi	r27, 0x08	; 8
    1960:	21 f4       	brne	.+8      	; 0x196a <TFT_PutsInt+0x12a>
    1962:	e8 e0       	ldi	r30, 0x08	; 8
    1964:	8e 0e       	add	r8, r30
    1966:	91 1c       	adc	r9, r1
    1968:	06 c0       	rjmp	.+12     	; 0x1976 <TFT_PutsInt+0x136>
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
    196a:	fb 85       	ldd	r31, Y+11	; 0x0b
    196c:	f0 31       	cpi	r31, 0x10	; 16
    196e:	19 f4       	brne	.+6      	; 0x1976 <TFT_PutsInt+0x136>
    1970:	2e e0       	ldi	r18, 0x0E	; 14
    1972:	82 0e       	add	r8, r18
    1974:	91 1c       	adc	r9, r1
		TFT_Char('-', x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}

	for(i=j;i<10;i++)
    1976:	c6 14       	cp	r12, r6
    1978:	d7 04       	cpc	r13, r7
    197a:	29 f7       	brne	.-54     	; 0x1946 <TFT_PutsInt+0x106>
	{
		TFT_Char(48+str[i], x, y, DimFont, Fcolor, Bcolor);
		if(DimFont == 8) x+=8;
		else if(DimFont == 16) x+=14; //here 16 is genuine but 14 is to minimize the space between two character
	}
}
    197c:	2b 96       	adiw	r28, 0x0b	; 11
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	df 91       	pop	r29
    198a:	cf 91       	pop	r28
    198c:	1f 91       	pop	r17
    198e:	0f 91       	pop	r16
    1990:	ff 90       	pop	r15
    1992:	ef 90       	pop	r14
    1994:	df 90       	pop	r13
    1996:	cf 90       	pop	r12
    1998:	bf 90       	pop	r11
    199a:	af 90       	pop	r10
    199c:	9f 90       	pop	r9
    199e:	8f 90       	pop	r8
    19a0:	7f 90       	pop	r7
    19a2:	6f 90       	pop	r6
    19a4:	5f 90       	pop	r5
    19a6:	4f 90       	pop	r4
    19a8:	3f 90       	pop	r3
    19aa:	2f 90       	pop	r2
    19ac:	08 95       	ret

000019ae <SPI_MasterInit>:
//clock rate: 125Khz

void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	DDR_SPI |= (1<<DD_MOSI)|(1<<DD_SCK);
    19ae:	87 b3       	in	r24, 0x17	; 23
    19b0:	80 6a       	ori	r24, 0xA0	; 160
    19b2:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/64=125kHz */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR1);  
    19b4:	82 e5       	ldi	r24, 0x52	; 82
    19b6:	8d b9       	out	0x0d, r24	; 13
    19b8:	08 95       	ret

000019ba <SPI_MasterTransmit_Receive>:
}

unsigned char SPI_MasterTransmit_Receive(char cData)
{
	/* Start transmission */
	SPDR = cData;
    19ba:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
    19bc:	77 9b       	sbis	0x0e, 7	; 14
    19be:	fe cf       	rjmp	.-4      	; 0x19bc <SPI_MasterTransmit_Receive+0x2>
	cData=SPDR;
    19c0:	8f b1       	in	r24, 0x0f	; 15
	return cData;
}
    19c2:	08 95       	ret

000019c4 <TPReadX>:
{
	SPI_MasterInit();
}

uint16_t TPReadX(void)
{
    19c4:	cf 93       	push	r28
    19c6:	df 93       	push	r29
	uint16_t x=0;
	TP_CS_0;
    19c8:	c4 98       	cbi	0x18, 4	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19ca:	2a e1       	ldi	r18, 0x1A	; 26
    19cc:	2a 95       	dec	r18
    19ce:	f1 f7       	brne	.-4      	; 0x19cc <TPReadX+0x8>
    19d0:	00 c0       	rjmp	.+0      	; 0x19d2 <TPReadX+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0x90);
    19d2:	80 e9       	ldi	r24, 0x90	; 144
    19d4:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    19d8:	3a e1       	ldi	r19, 0x1A	; 26
    19da:	3a 95       	dec	r19
    19dc:	f1 f7       	brne	.-4      	; 0x19da <TPReadX+0x16>
    19de:	00 c0       	rjmp	.+0      	; 0x19e0 <TPReadX+0x1c>
	_delay_us(10);
	x=SPI_MasterTransmit_Receive(0x00);
    19e0:	80 e0       	ldi	r24, 0x00	; 0
    19e2:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    19e6:	c8 2f       	mov	r28, r24
    19e8:	d0 e0       	ldi	r29, 0x00	; 0
	x<<=8;
    19ea:	dc 2f       	mov	r29, r28
    19ec:	cc 27       	eor	r28, r28
	x+=SPI_MasterTransmit_Receive(0x00);
    19ee:	80 e0       	ldi	r24, 0x00	; 0
    19f0:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    19f4:	9e 01       	movw	r18, r28
    19f6:	28 0f       	add	r18, r24
    19f8:	31 1d       	adc	r19, r1
    19fa:	c9 01       	movw	r24, r18
	TP_CS_1;
    19fc:	c4 9a       	sbi	0x18, 4	; 24
	x=x>>7;
	x  = x & 0x0FFF;
	return x;
}
    19fe:	88 0f       	add	r24, r24
    1a00:	89 2f       	mov	r24, r25
    1a02:	88 1f       	adc	r24, r24
    1a04:	99 0b       	sbc	r25, r25
    1a06:	91 95       	neg	r25
    1a08:	df 91       	pop	r29
    1a0a:	cf 91       	pop	r28
    1a0c:	08 95       	ret

00001a0e <TPReadY>:

uint16_t TPReadY(void)
{
    1a0e:	cf 93       	push	r28
    1a10:	df 93       	push	r29
	uint16_t y=0;
	TP_CS_0;
    1a12:	c4 98       	cbi	0x18, 4	; 24
    1a14:	8a e1       	ldi	r24, 0x1A	; 26
    1a16:	8a 95       	dec	r24
    1a18:	f1 f7       	brne	.-4      	; 0x1a16 <TPReadY+0x8>
    1a1a:	00 c0       	rjmp	.+0      	; 0x1a1c <TPReadY+0xe>
	_delay_us(10);
	SPI_MasterTransmit_Receive(0xd0);
    1a1c:	80 ed       	ldi	r24, 0xD0	; 208
    1a1e:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    1a22:	8a e1       	ldi	r24, 0x1A	; 26
    1a24:	8a 95       	dec	r24
    1a26:	f1 f7       	brne	.-4      	; 0x1a24 <TPReadY+0x16>
    1a28:	00 c0       	rjmp	.+0      	; 0x1a2a <TPReadY+0x1c>
	_delay_us(10);
	y=SPI_MasterTransmit_Receive(0x00);
    1a2a:	80 e0       	ldi	r24, 0x00	; 0
    1a2c:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    1a30:	c8 2f       	mov	r28, r24
    1a32:	d0 e0       	ldi	r29, 0x00	; 0
	y<<=8;
    1a34:	dc 2f       	mov	r29, r28
    1a36:	cc 27       	eor	r28, r28
	y+=SPI_MasterTransmit_Receive(0x00);
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <SPI_MasterTransmit_Receive>
    1a3e:	c8 0f       	add	r28, r24
    1a40:	d1 1d       	adc	r29, r1
	TP_CS_1;
    1a42:	c4 9a       	sbi	0x18, 4	; 24
	y = y>>7;
    1a44:	ce 01       	movw	r24, r28
    1a46:	88 0f       	add	r24, r24
    1a48:	89 2f       	mov	r24, r25
    1a4a:	88 1f       	adc	r24, r24
    1a4c:	99 0b       	sbc	r25, r25
    1a4e:	91 95       	neg	r25
	y = y & 0x00FF;
	return y;
}
    1a50:	99 27       	eor	r25, r25
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	08 95       	ret

00001a58 <Read_TPval>:

uint16_t Read_TPval(unsigned int *tpxyval)
{
    1a58:	cf 93       	push	r28
    1a5a:	df 93       	push	r29
    1a5c:	ec 01       	movw	r28, r24
	tpxyval[0]=TPReadX();
    1a5e:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <TPReadX>
    1a62:	99 83       	std	Y+1, r25	; 0x01
    1a64:	88 83       	st	Y, r24
	tpxyval[1]=TPReadY();
    1a66:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <TPReadY>
    1a6a:	9b 83       	std	Y+3, r25	; 0x03
    1a6c:	8a 83       	std	Y+2, r24	; 0x02
	return 1;
}
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	df 91       	pop	r29
    1a74:	cf 91       	pop	r28
    1a76:	08 95       	ret

00001a78 <Read_ADC>:
{
	ADCSRA=0x80 | AD_PRSCL;
}

unsigned int Read_ADC(unsigned char adc_input, unsigned char ADC_VREF)
{
    1a78:	95 e0       	ldi	r25, 0x05	; 5
	char i;
	int temp=0;
    1a7a:	20 e0       	ldi	r18, 0x00	; 0
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
	for (i=0;i<5;i++)
	{
		ADMUX=adc_input | ADC_VREF; //MUX setup page 215
    1a7e:	86 2b       	or	r24, r22
    1a80:	87 b9       	out	0x07, r24	; 7
    1a82:	4a e1       	ldi	r20, 0x1A	; 26
    1a84:	4a 95       	dec	r20
    1a86:	f1 f7       	brne	.-4      	; 0x1a84 <Read_ADC+0xc>
    1a88:	00 c0       	rjmp	.+0      	; 0x1a8a <Read_ADC+0x12>
		_delay_us(10);
		ADCSRA|=0x40;
    1a8a:	36 9a       	sbi	0x06, 6	; 6
		while ((ADCSRA & 0x10)==0);
    1a8c:	34 9b       	sbis	0x06, 4	; 6
    1a8e:	fe cf       	rjmp	.-4      	; 0x1a8c <Read_ADC+0x14>
		ADCSRA|=(1<<4);
    1a90:	34 9a       	sbi	0x06, 4	; 6
		temp = temp + ADCW;
    1a92:	44 b1       	in	r20, 0x04	; 4
    1a94:	55 b1       	in	r21, 0x05	; 5
    1a96:	24 0f       	add	r18, r20
    1a98:	35 1f       	adc	r19, r21
    1a9a:	91 50       	subi	r25, 0x01	; 1

unsigned int Read_ADC(unsigned char adc_input, unsigned char ADC_VREF)
{
	char i;
	int temp=0;
	for (i=0;i<5;i++)
    1a9c:	89 f7       	brne	.-30     	; 0x1a80 <Read_ADC+0x8>
		ADCSRA|=0x40;
		while ((ADCSRA & 0x10)==0);
		ADCSRA|=(1<<4);
		temp = temp + ADCW;
	}
	return (temp/i);	
    1a9e:	c9 01       	movw	r24, r18
    1aa0:	65 e0       	ldi	r22, 0x05	; 5
    1aa2:	70 e0       	ldi	r23, 0x00	; 0
    1aa4:	0e 94 fe 1c 	call	0x39fc	; 0x39fc <__divmodhi4>
    1aa8:	cb 01       	movw	r24, r22
}
    1aaa:	08 95       	ret

00001aac <show_button>:

#define text_color black
#define bg_color white

void show_button()
{
    1aac:	ef 92       	push	r14
    1aae:	ff 92       	push	r15
    1ab0:	0f 93       	push	r16
    1ab2:	1f 93       	push	r17
	TFT_Text("3",141,93,16,text_color,bg_color);
	TFT_Box(181,76,231,126,bg_color);
	TFT_Text("/",198,93,16,text_color,bg_color);
	/////////////////////////////////////////////
	*/
	TFT_Box(10,133,60,183,bg_color);
    1ab4:	0f ef       	ldi	r16, 0xFF	; 255
    1ab6:	1f ef       	ldi	r17, 0xFF	; 255
    1ab8:	27 eb       	ldi	r18, 0xB7	; 183
    1aba:	30 e0       	ldi	r19, 0x00	; 0
    1abc:	4c e3       	ldi	r20, 0x3C	; 60
    1abe:	50 e0       	ldi	r21, 0x00	; 0
    1ac0:	65 e8       	ldi	r22, 0x85	; 133
    1ac2:	70 e0       	ldi	r23, 0x00	; 0
    1ac4:	8a e0       	ldi	r24, 0x0A	; 10
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("1",27,150,16,text_color,bg_color);
    1acc:	ee 24       	eor	r14, r14
    1ace:	ea 94       	dec	r14
    1ad0:	fe 2c       	mov	r15, r14
    1ad2:	00 e0       	ldi	r16, 0x00	; 0
    1ad4:	10 e0       	ldi	r17, 0x00	; 0
    1ad6:	20 e1       	ldi	r18, 0x10	; 16
    1ad8:	46 e9       	ldi	r20, 0x96	; 150
    1ada:	50 e0       	ldi	r21, 0x00	; 0
    1adc:	6b e1       	ldi	r22, 0x1B	; 27
    1ade:	70 e0       	ldi	r23, 0x00	; 0
    1ae0:	80 e6       	ldi	r24, 0x60	; 96
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(67,133,117,183,bg_color);
    1ae8:	0f ef       	ldi	r16, 0xFF	; 255
    1aea:	1f ef       	ldi	r17, 0xFF	; 255
    1aec:	27 eb       	ldi	r18, 0xB7	; 183
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	45 e7       	ldi	r20, 0x75	; 117
    1af2:	50 e0       	ldi	r21, 0x00	; 0
    1af4:	65 e8       	ldi	r22, 0x85	; 133
    1af6:	70 e0       	ldi	r23, 0x00	; 0
    1af8:	83 e4       	ldi	r24, 0x43	; 67
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("2",84,150,16,text_color,bg_color);
    1b00:	00 e0       	ldi	r16, 0x00	; 0
    1b02:	10 e0       	ldi	r17, 0x00	; 0
    1b04:	20 e1       	ldi	r18, 0x10	; 16
    1b06:	46 e9       	ldi	r20, 0x96	; 150
    1b08:	50 e0       	ldi	r21, 0x00	; 0
    1b0a:	64 e5       	ldi	r22, 0x54	; 84
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	82 e6       	ldi	r24, 0x62	; 98
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(124,133,174,183,bg_color);
    1b16:	0f ef       	ldi	r16, 0xFF	; 255
    1b18:	1f ef       	ldi	r17, 0xFF	; 255
    1b1a:	27 eb       	ldi	r18, 0xB7	; 183
    1b1c:	30 e0       	ldi	r19, 0x00	; 0
    1b1e:	4e ea       	ldi	r20, 0xAE	; 174
    1b20:	50 e0       	ldi	r21, 0x00	; 0
    1b22:	65 e8       	ldi	r22, 0x85	; 133
    1b24:	70 e0       	ldi	r23, 0x00	; 0
    1b26:	8c e7       	ldi	r24, 0x7C	; 124
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("3",141,150,16,text_color,bg_color);
    1b2e:	00 e0       	ldi	r16, 0x00	; 0
    1b30:	10 e0       	ldi	r17, 0x00	; 0
    1b32:	20 e1       	ldi	r18, 0x10	; 16
    1b34:	46 e9       	ldi	r20, 0x96	; 150
    1b36:	50 e0       	ldi	r21, 0x00	; 0
    1b38:	6d e8       	ldi	r22, 0x8D	; 141
    1b3a:	70 e0       	ldi	r23, 0x00	; 0
    1b3c:	84 e6       	ldi	r24, 0x64	; 100
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(181,133,231,183,bg_color);
    1b44:	0f ef       	ldi	r16, 0xFF	; 255
    1b46:	1f ef       	ldi	r17, 0xFF	; 255
    1b48:	27 eb       	ldi	r18, 0xB7	; 183
    1b4a:	30 e0       	ldi	r19, 0x00	; 0
    1b4c:	47 ee       	ldi	r20, 0xE7	; 231
    1b4e:	50 e0       	ldi	r21, 0x00	; 0
    1b50:	65 e8       	ldi	r22, 0x85	; 133
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	85 eb       	ldi	r24, 0xB5	; 181
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("4",198,150,16,text_color,bg_color);
    1b5c:	00 e0       	ldi	r16, 0x00	; 0
    1b5e:	10 e0       	ldi	r17, 0x00	; 0
    1b60:	20 e1       	ldi	r18, 0x10	; 16
    1b62:	46 e9       	ldi	r20, 0x96	; 150
    1b64:	50 e0       	ldi	r21, 0x00	; 0
    1b66:	66 ec       	ldi	r22, 0xC6	; 198
    1b68:	70 e0       	ldi	r23, 0x00	; 0
    1b6a:	86 e6       	ldi	r24, 0x66	; 102
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,190,60,240,bg_color);
    1b72:	0f ef       	ldi	r16, 0xFF	; 255
    1b74:	1f ef       	ldi	r17, 0xFF	; 255
    1b76:	20 ef       	ldi	r18, 0xF0	; 240
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	4c e3       	ldi	r20, 0x3C	; 60
    1b7c:	50 e0       	ldi	r21, 0x00	; 0
    1b7e:	6e eb       	ldi	r22, 0xBE	; 190
    1b80:	70 e0       	ldi	r23, 0x00	; 0
    1b82:	8a e0       	ldi	r24, 0x0A	; 10
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("5",27,207,16,text_color,bg_color);
    1b8a:	00 e0       	ldi	r16, 0x00	; 0
    1b8c:	10 e0       	ldi	r17, 0x00	; 0
    1b8e:	20 e1       	ldi	r18, 0x10	; 16
    1b90:	4f ec       	ldi	r20, 0xCF	; 207
    1b92:	50 e0       	ldi	r21, 0x00	; 0
    1b94:	6b e1       	ldi	r22, 0x1B	; 27
    1b96:	70 e0       	ldi	r23, 0x00	; 0
    1b98:	88 e6       	ldi	r24, 0x68	; 104
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(67,190,117,240,bg_color);
    1ba0:	0f ef       	ldi	r16, 0xFF	; 255
    1ba2:	1f ef       	ldi	r17, 0xFF	; 255
    1ba4:	20 ef       	ldi	r18, 0xF0	; 240
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	45 e7       	ldi	r20, 0x75	; 117
    1baa:	50 e0       	ldi	r21, 0x00	; 0
    1bac:	6e eb       	ldi	r22, 0xBE	; 190
    1bae:	70 e0       	ldi	r23, 0x00	; 0
    1bb0:	83 e4       	ldi	r24, 0x43	; 67
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("6",84,207,16,text_color,bg_color);
    1bb8:	00 e0       	ldi	r16, 0x00	; 0
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	20 e1       	ldi	r18, 0x10	; 16
    1bbe:	4f ec       	ldi	r20, 0xCF	; 207
    1bc0:	50 e0       	ldi	r21, 0x00	; 0
    1bc2:	64 e5       	ldi	r22, 0x54	; 84
    1bc4:	70 e0       	ldi	r23, 0x00	; 0
    1bc6:	8a e6       	ldi	r24, 0x6A	; 106
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(124,190,174,240,bg_color);
    1bce:	0f ef       	ldi	r16, 0xFF	; 255
    1bd0:	1f ef       	ldi	r17, 0xFF	; 255
    1bd2:	20 ef       	ldi	r18, 0xF0	; 240
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	4e ea       	ldi	r20, 0xAE	; 174
    1bd8:	50 e0       	ldi	r21, 0x00	; 0
    1bda:	6e eb       	ldi	r22, 0xBE	; 190
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	8c e7       	ldi	r24, 0x7C	; 124
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("7",141,207,16,text_color,bg_color);
    1be6:	00 e0       	ldi	r16, 0x00	; 0
    1be8:	10 e0       	ldi	r17, 0x00	; 0
    1bea:	20 e1       	ldi	r18, 0x10	; 16
    1bec:	4f ec       	ldi	r20, 0xCF	; 207
    1bee:	50 e0       	ldi	r21, 0x00	; 0
    1bf0:	6d e8       	ldi	r22, 0x8D	; 141
    1bf2:	70 e0       	ldi	r23, 0x00	; 0
    1bf4:	8c e6       	ldi	r24, 0x6C	; 108
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(181,190,231,240,bg_color);
    1bfc:	0f ef       	ldi	r16, 0xFF	; 255
    1bfe:	1f ef       	ldi	r17, 0xFF	; 255
    1c00:	20 ef       	ldi	r18, 0xF0	; 240
    1c02:	30 e0       	ldi	r19, 0x00	; 0
    1c04:	47 ee       	ldi	r20, 0xE7	; 231
    1c06:	50 e0       	ldi	r21, 0x00	; 0
    1c08:	6e eb       	ldi	r22, 0xBE	; 190
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	85 eb       	ldi	r24, 0xB5	; 181
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("8",198,207,16,text_color,bg_color);
    1c14:	00 e0       	ldi	r16, 0x00	; 0
    1c16:	10 e0       	ldi	r17, 0x00	; 0
    1c18:	20 e1       	ldi	r18, 0x10	; 16
    1c1a:	4f ec       	ldi	r20, 0xCF	; 207
    1c1c:	50 e0       	ldi	r21, 0x00	; 0
    1c1e:	66 ec       	ldi	r22, 0xC6	; 198
    1c20:	70 e0       	ldi	r23, 0x00	; 0
    1c22:	8e e6       	ldi	r24, 0x6E	; 110
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	/////////////////////////////////////////////
	TFT_Box(10,247,60,297,bg_color);
    1c2a:	0f ef       	ldi	r16, 0xFF	; 255
    1c2c:	1f ef       	ldi	r17, 0xFF	; 255
    1c2e:	29 e2       	ldi	r18, 0x29	; 41
    1c30:	31 e0       	ldi	r19, 0x01	; 1
    1c32:	4c e3       	ldi	r20, 0x3C	; 60
    1c34:	50 e0       	ldi	r21, 0x00	; 0
    1c36:	67 ef       	ldi	r22, 0xF7	; 247
    1c38:	70 e0       	ldi	r23, 0x00	; 0
    1c3a:	8a e0       	ldi	r24, 0x0A	; 10
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("9",27,264,16,text_color,bg_color);
    1c42:	00 e0       	ldi	r16, 0x00	; 0
    1c44:	10 e0       	ldi	r17, 0x00	; 0
    1c46:	20 e1       	ldi	r18, 0x10	; 16
    1c48:	48 e0       	ldi	r20, 0x08	; 8
    1c4a:	51 e0       	ldi	r21, 0x01	; 1
    1c4c:	6b e1       	ldi	r22, 0x1B	; 27
    1c4e:	70 e0       	ldi	r23, 0x00	; 0
    1c50:	80 e7       	ldi	r24, 0x70	; 112
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(67,247,117,297,bg_color);
    1c58:	0f ef       	ldi	r16, 0xFF	; 255
    1c5a:	1f ef       	ldi	r17, 0xFF	; 255
    1c5c:	29 e2       	ldi	r18, 0x29	; 41
    1c5e:	31 e0       	ldi	r19, 0x01	; 1
    1c60:	45 e7       	ldi	r20, 0x75	; 117
    1c62:	50 e0       	ldi	r21, 0x00	; 0
    1c64:	67 ef       	ldi	r22, 0xF7	; 247
    1c66:	70 e0       	ldi	r23, 0x00	; 0
    1c68:	83 e4       	ldi	r24, 0x43	; 67
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("0",84,264,16,text_color,bg_color);
    1c70:	00 e0       	ldi	r16, 0x00	; 0
    1c72:	10 e0       	ldi	r17, 0x00	; 0
    1c74:	20 e1       	ldi	r18, 0x10	; 16
    1c76:	48 e0       	ldi	r20, 0x08	; 8
    1c78:	51 e0       	ldi	r21, 0x01	; 1
    1c7a:	64 e5       	ldi	r22, 0x54	; 84
    1c7c:	70 e0       	ldi	r23, 0x00	; 0
    1c7e:	82 e7       	ldi	r24, 0x72	; 114
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(124,247,174,297,bg_color);
    1c86:	0f ef       	ldi	r16, 0xFF	; 255
    1c88:	1f ef       	ldi	r17, 0xFF	; 255
    1c8a:	29 e2       	ldi	r18, 0x29	; 41
    1c8c:	31 e0       	ldi	r19, 0x01	; 1
    1c8e:	4e ea       	ldi	r20, 0xAE	; 174
    1c90:	50 e0       	ldi	r21, 0x00	; 0
    1c92:	67 ef       	ldi	r22, 0xF7	; 247
    1c94:	70 e0       	ldi	r23, 0x00	; 0
    1c96:	8c e7       	ldi	r24, 0x7C	; 124
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("DEL",128,264,16,text_color,bg_color);
    1c9e:	00 e0       	ldi	r16, 0x00	; 0
    1ca0:	10 e0       	ldi	r17, 0x00	; 0
    1ca2:	20 e1       	ldi	r18, 0x10	; 16
    1ca4:	48 e0       	ldi	r20, 0x08	; 8
    1ca6:	51 e0       	ldi	r21, 0x01	; 1
    1ca8:	60 e8       	ldi	r22, 0x80	; 128
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	84 e7       	ldi	r24, 0x74	; 116
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(181,247,231,297,bg_color);
    1cb4:	0f ef       	ldi	r16, 0xFF	; 255
    1cb6:	1f ef       	ldi	r17, 0xFF	; 255
    1cb8:	29 e2       	ldi	r18, 0x29	; 41
    1cba:	31 e0       	ldi	r19, 0x01	; 1
    1cbc:	47 ee       	ldi	r20, 0xE7	; 231
    1cbe:	50 e0       	ldi	r21, 0x00	; 0
    1cc0:	67 ef       	ldi	r22, 0xF7	; 247
    1cc2:	70 e0       	ldi	r23, 0x00	; 0
    1cc4:	85 eb       	ldi	r24, 0xB5	; 181
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("OK",191,264,16,text_color,bg_color);
    1ccc:	00 e0       	ldi	r16, 0x00	; 0
    1cce:	10 e0       	ldi	r17, 0x00	; 0
    1cd0:	20 e1       	ldi	r18, 0x10	; 16
    1cd2:	48 e0       	ldi	r20, 0x08	; 8
    1cd4:	51 e0       	ldi	r21, 0x01	; 1
    1cd6:	6f eb       	ldi	r22, 0xBF	; 191
    1cd8:	70 e0       	ldi	r23, 0x00	; 0
    1cda:	88 e7       	ldi	r24, 0x78	; 120
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	/*********************************************/
	//_________End Button Creatoin_______________//
	/*********************************************/
}
    1ce2:	1f 91       	pop	r17
    1ce4:	0f 91       	pop	r16
    1ce6:	ff 90       	pop	r15
    1ce8:	ef 90       	pop	r14
    1cea:	08 95       	ret

00001cec <__vector_1>:
#include "button.h"

uint32_t i_water=0, i_time=0;

ISR(INT0_vect)
{
    1cec:	1f 92       	push	r1
    1cee:	0f 92       	push	r0
    1cf0:	0f b6       	in	r0, 0x3f	; 63
    1cf2:	0f 92       	push	r0
    1cf4:	11 24       	eor	r1, r1
    1cf6:	8f 93       	push	r24
    1cf8:	9f 93       	push	r25
    1cfa:	af 93       	push	r26
    1cfc:	bf 93       	push	r27
	i_water = i_water + 1;
    1cfe:	80 91 da 02 	lds	r24, 0x02DA
    1d02:	90 91 db 02 	lds	r25, 0x02DB
    1d06:	a0 91 dc 02 	lds	r26, 0x02DC
    1d0a:	b0 91 dd 02 	lds	r27, 0x02DD
    1d0e:	01 96       	adiw	r24, 0x01	; 1
    1d10:	a1 1d       	adc	r26, r1
    1d12:	b1 1d       	adc	r27, r1
    1d14:	80 93 da 02 	sts	0x02DA, r24
    1d18:	90 93 db 02 	sts	0x02DB, r25
    1d1c:	a0 93 dc 02 	sts	0x02DC, r26
    1d20:	b0 93 dd 02 	sts	0x02DD, r27
}
    1d24:	bf 91       	pop	r27
    1d26:	af 91       	pop	r26
    1d28:	9f 91       	pop	r25
    1d2a:	8f 91       	pop	r24
    1d2c:	0f 90       	pop	r0
    1d2e:	0f be       	out	0x3f, r0	; 63
    1d30:	0f 90       	pop	r0
    1d32:	1f 90       	pop	r1
    1d34:	18 95       	reti

00001d36 <__vector_7>:
ISR(TIMER1_COMPA_vect)
{
    1d36:	1f 92       	push	r1
    1d38:	0f 92       	push	r0
    1d3a:	0f b6       	in	r0, 0x3f	; 63
    1d3c:	0f 92       	push	r0
    1d3e:	11 24       	eor	r1, r1
    1d40:	8f 93       	push	r24
    1d42:	9f 93       	push	r25
    1d44:	af 93       	push	r26
    1d46:	bf 93       	push	r27
	i_time = i_time + 1;
    1d48:	80 91 d6 02 	lds	r24, 0x02D6
    1d4c:	90 91 d7 02 	lds	r25, 0x02D7
    1d50:	a0 91 d8 02 	lds	r26, 0x02D8
    1d54:	b0 91 d9 02 	lds	r27, 0x02D9
    1d58:	01 96       	adiw	r24, 0x01	; 1
    1d5a:	a1 1d       	adc	r26, r1
    1d5c:	b1 1d       	adc	r27, r1
    1d5e:	80 93 d6 02 	sts	0x02D6, r24
    1d62:	90 93 d7 02 	sts	0x02D7, r25
    1d66:	a0 93 d8 02 	sts	0x02D8, r26
    1d6a:	b0 93 d9 02 	sts	0x02D9, r27
}
    1d6e:	bf 91       	pop	r27
    1d70:	af 91       	pop	r26
    1d72:	9f 91       	pop	r25
    1d74:	8f 91       	pop	r24
    1d76:	0f 90       	pop	r0
    1d78:	0f be       	out	0x3f, r0	; 63
    1d7a:	0f 90       	pop	r0
    1d7c:	1f 90       	pop	r1
    1d7e:	18 95       	reti

00001d80 <main>:

int main(void)
{
    1d80:	cf 93       	push	r28
    1d82:	df 93       	push	r29
    1d84:	cd b7       	in	r28, 0x3d	; 61
    1d86:	de b7       	in	r29, 0x3e	; 62
    1d88:	e0 97       	sbiw	r28, 0x30	; 48
    1d8a:	0f b6       	in	r0, 0x3f	; 63
    1d8c:	f8 94       	cli
    1d8e:	de bf       	out	0x3e, r29	; 62
    1d90:	0f be       	out	0x3f, r0	; 63
    1d92:	cd bf       	out	0x3d, r28	; 61
	#define back_color blue
	uint16_t TPval[2]={0};
    1d94:	19 82       	std	Y+1, r1	; 0x01
    1d96:	1a 82       	std	Y+2, r1	; 0x02
    1d98:	1b 82       	std	Y+3, r1	; 0x03
    1d9a:	1c 82       	std	Y+4, r1	; 0x04
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
	uint32_t water_read=0, temp_read=0, time_read=0;
	uint8_t input_f=0;
	
	PORTA=0x00;
    1d9c:	1b ba       	out	0x1b, r1	; 27
	PORTB=0x40;
    1d9e:	10 e4       	ldi	r17, 0x40	; 64
    1da0:	18 bb       	out	0x18, r17	; 24
	PORTC=0x00;
    1da2:	15 ba       	out	0x15, r1	; 21
	PORTD=0x00; //0x0C;
    1da4:	12 ba       	out	0x12, r1	; 18
	
	DDRA=0xFE;
    1da6:	8e ef       	ldi	r24, 0xFE	; 254
    1da8:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xBF;
    1daa:	8f eb       	ldi	r24, 0xBF	; 191
    1dac:	87 bb       	out	0x17, r24	; 23
	DDRC=0xFF;
    1dae:	8f ef       	ldi	r24, 0xFF	; 255
    1db0:	84 bb       	out	0x14, r24	; 20
	DDRD=0xF3;
    1db2:	83 ef       	ldi	r24, 0xF3	; 243
    1db4:	81 bb       	out	0x11, r24	; 17
#include <avr/io.h>
#include <util/delay.h>

void adc_init(unsigned char AD_PRSCL)
{
	ADCSRA=0x80 | AD_PRSCL;
    1db6:	87 e8       	ldi	r24, 0x87	; 135
    1db8:	86 b9       	out	0x06, r24	; 6
	
	adc_init(7);
	TFT_Init();
    1dba:	0e 94 98 08 	call	0x1130	; 0x1130 <TFT_Init>
#include "my_spi.h"
#include <util/delay.h>

void TP_init(void)
{
	SPI_MasterInit();
    1dbe:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <SPI_MasterInit>
	TP_init();
	//show_button();
	TCCR1A=0x00;
    1dc2:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=0x0C;		//Timer counter 1 initialization with CTC and interrupt mode with Compare match OCR1A 
    1dc4:	8c e0       	ldi	r24, 0x0C	; 12
    1dc6:	8e bd       	out	0x2e, r24	; 46
	OCR1AH=0x7A;
    1dc8:	8a e7       	ldi	r24, 0x7A	; 122
    1dca:	8b bd       	out	0x2b, r24	; 43
	OCR1AL=0x12;
    1dcc:	82 e1       	ldi	r24, 0x12	; 18
    1dce:	8a bd       	out	0x2a, r24	; 42

	GICR |= (1<<INT0);				// Enable INT2
    1dd0:	8b b7       	in	r24, 0x3b	; 59
    1dd2:	80 64       	ori	r24, 0x40	; 64
    1dd4:	8b bf       	out	0x3b, r24	; 59
	MCUCSR |= 0x00;					// Trigger INT2 settings
    1dd6:	84 b7       	in	r24, 0x34	; 52
    1dd8:	84 bf       	out	0x34, r24	; 52
	MCUCR |= (1<<ISC01)|(1<<ISC00);	//trigger int0 on rising edge
    1dda:	85 b7       	in	r24, 0x35	; 53
    1ddc:	83 60       	ori	r24, 0x03	; 3
    1dde:	85 bf       	out	0x35, r24	; 53
	GIFR = (1<<INTF0);				//Interrupt flag 2 is cleared by writing a logical one into INTF2
    1de0:	1a bf       	out	0x3a, r17	; 58
	TIMSK=0x10;						//Timer/Counter1, Output Compare A Match Interrupt Enable
    1de2:	80 e1       	ldi	r24, 0x10	; 16
    1de4:	89 bf       	out	0x39, r24	; 57
	sei();							//Global Interrupt enable
    1de6:	78 94       	sei
int main(void)
{
	#define back_color blue
	uint16_t TPval[2]={0};
	uint16_t mxpos=13;
	uint32_t kp_val=0, water=0, temp=0, time=0;
    1de8:	19 8e       	std	Y+25, r1	; 0x19
    1dea:	1a 8e       	std	Y+26, r1	; 0x1a
    1dec:	1b 8e       	std	Y+27, r1	; 0x1b
    1dee:	1c 8e       	std	Y+28, r1	; 0x1c
    1df0:	1d 8a       	std	Y+21, r1	; 0x15
    1df2:	1e 8a       	std	Y+22, r1	; 0x16
    1df4:	1f 8a       	std	Y+23, r1	; 0x17
    1df6:	18 8e       	std	Y+24, r1	; 0x18
	while (1)
	{
		TFT_PutsInt(Read_ADC(0,0x00),4,200,5,8,blue,white);
		if (!(PIND & (1<<PD3)))
		{
			Read_TPval(TPval);
    1df8:	8e 01       	movw	r16, r28
    1dfa:	0f 5f       	subi	r16, 0xFF	; 255
    1dfc:	1f 4f       	sbci	r17, 0xFF	; 255
    1dfe:	1e 83       	std	Y+6, r17	; 0x06
    1e00:	0d 83       	std	Y+5, r16	; 0x05
				else if (TPval[1]>183 && TPval[1]<236)
				{
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
    1e02:	1e a2       	std	Y+38, r1	; 0x26
    1e04:	1f a2       	std	Y+39, r1	; 0x27
    1e06:	18 a6       	std	Y+40, r1	; 0x28
    1e08:	19 a6       	std	Y+41, r1	; 0x29
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
	while(1)
	{
		if (!(PIND & (1<<PD3)))
		{
			Read_TPval(TPval);
    1e0a:	9d 80       	ldd	r9, Y+5	; 0x05
    1e0c:	2e 80       	ldd	r2, Y+6	; 0x06
				else if (TPval[1]>183 && TPval[1]<236)
				{
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
    1e0e:	10 e0       	ldi	r17, 0x00	; 0
    1e10:	1a a7       	std	Y+42, r17	; 0x2a
    1e12:	20 e0       	ldi	r18, 0x00	; 0
    1e14:	2b a7       	std	Y+43, r18	; 0x2b
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	3c a7       	std	Y+44, r19	; 0x2c
    1e1a:	40 e0       	ldi	r20, 0x00	; 0
    1e1c:	4d a7       	std	Y+45, r20	; 0x2d
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
	while(1)
	{
		if (!(PIND & (1<<PD3)))
		{
			Read_TPval(TPval);
    1e1e:	32 2c       	mov	r3, r2
    1e20:	9f 86       	std	Y+15, r9	; 0x0f
    1e22:	28 8a       	std	Y+16, r2	; 0x10
    1e24:	29 2c       	mov	r2, r9
	//**************************************************//
	//Start Application from here***********************//
	//**************************************************//
start_pgm:	
	//Welcome message and startup
	TFT_Fill(back_color);
    1e26:	8f e1       	ldi	r24, 0x1F	; 31
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	//TFT_Text("Mark Wash & Dyeing Ltd.",23,30,8,yellow,back_color);
	TFT_Text("ASTEX",75,84,16,white,back_color);
    1e2e:	0f 2e       	mov	r0, r31
    1e30:	ff e1       	ldi	r31, 0x1F	; 31
    1e32:	ef 2e       	mov	r14, r31
    1e34:	f1 2c       	mov	r15, r1
    1e36:	f0 2d       	mov	r31, r0
    1e38:	0f ef       	ldi	r16, 0xFF	; 255
    1e3a:	1f ef       	ldi	r17, 0xFF	; 255
    1e3c:	20 e1       	ldi	r18, 0x10	; 16
    1e3e:	44 e5       	ldi	r20, 0x54	; 84
    1e40:	50 e0       	ldi	r21, 0x00	; 0
    1e42:	6b e4       	ldi	r22, 0x4B	; 75
    1e44:	70 e0       	ldi	r23, 0x00	; 0
    1e46:	8b e7       	ldi	r24, 0x7B	; 123
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(35,150,195,174,yellow);
    1e4e:	00 ee       	ldi	r16, 0xE0	; 224
    1e50:	1f ef       	ldi	r17, 0xFF	; 255
    1e52:	2e ea       	ldi	r18, 0xAE	; 174
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	43 ec       	ldi	r20, 0xC3	; 195
    1e58:	50 e0       	ldi	r21, 0x00	; 0
    1e5a:	66 e9       	ldi	r22, 0x96	; 150
    1e5c:	70 e0       	ldi	r23, 0x00	; 0
    1e5e:	83 e2       	ldi	r24, 0x23	; 35
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("Start Task",45,155,16,blue,yellow);
    1e66:	0f 2e       	mov	r0, r31
    1e68:	f0 ee       	ldi	r31, 0xE0	; 224
    1e6a:	ef 2e       	mov	r14, r31
    1e6c:	ff 24       	eor	r15, r15
    1e6e:	fa 94       	dec	r15
    1e70:	f0 2d       	mov	r31, r0
    1e72:	0f e1       	ldi	r16, 0x1F	; 31
    1e74:	10 e0       	ldi	r17, 0x00	; 0
    1e76:	20 e1       	ldi	r18, 0x10	; 16
    1e78:	4b e9       	ldi	r20, 0x9B	; 155
    1e7a:	50 e0       	ldi	r21, 0x00	; 0
    1e7c:	6d e2       	ldi	r22, 0x2D	; 45
    1e7e:	70 e0       	ldi	r23, 0x00	; 0
    1e80:	81 e8       	ldi	r24, 0x81	; 129
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Temperature:",96,5,8,white,blue);
    1e88:	0f 2e       	mov	r0, r31
    1e8a:	ff e1       	ldi	r31, 0x1F	; 31
    1e8c:	ef 2e       	mov	r14, r31
    1e8e:	f1 2c       	mov	r15, r1
    1e90:	f0 2d       	mov	r31, r0
    1e92:	0f ef       	ldi	r16, 0xFF	; 255
    1e94:	1f ef       	ldi	r17, 0xFF	; 255
    1e96:	28 e0       	ldi	r18, 0x08	; 8
    1e98:	45 e0       	ldi	r20, 0x05	; 5
    1e9a:	50 e0       	ldi	r21, 0x00	; 0
    1e9c:	60 e6       	ldi	r22, 0x60	; 96
    1e9e:	70 e0       	ldi	r23, 0x00	; 0
    1ea0:	8c e8       	ldi	r24, 0x8C	; 140
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>

	while (1)
	{
		TFT_PutsInt(Read_ADC(0,0x00),4,200,5,8,blue,white);
    1ea8:	60 e0       	ldi	r22, 0x00	; 0
    1eaa:	80 e0       	ldi	r24, 0x00	; 0
    1eac:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <Read_ADC>
    1eb0:	bc 01       	movw	r22, r24
    1eb2:	80 e0       	ldi	r24, 0x00	; 0
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	aa 24       	eor	r10, r10
    1eb8:	aa 94       	dec	r10
    1eba:	ba 2c       	mov	r11, r10
    1ebc:	0f 2e       	mov	r0, r31
    1ebe:	ff e1       	ldi	r31, 0x1F	; 31
    1ec0:	cf 2e       	mov	r12, r31
    1ec2:	d1 2c       	mov	r13, r1
    1ec4:	f0 2d       	mov	r31, r0
    1ec6:	68 94       	set
    1ec8:	ee 24       	eor	r14, r14
    1eca:	e3 f8       	bld	r14, 3
    1ecc:	05 e0       	ldi	r16, 0x05	; 5
    1ece:	10 e0       	ldi	r17, 0x00	; 0
    1ed0:	28 ec       	ldi	r18, 0xC8	; 200
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	44 e0       	ldi	r20, 0x04	; 4
    1ed6:	50 e0       	ldi	r21, 0x00	; 0
    1ed8:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		if (!(PIND & (1<<PD3)))
    1edc:	83 99       	sbic	0x10, 3	; 16
    1ede:	e4 cf       	rjmp	.-56     	; 0x1ea8 <main+0x128>
		{
			Read_TPval(TPval);
    1ee0:	ce 01       	movw	r24, r28
    1ee2:	01 96       	adiw	r24, 0x01	; 1
    1ee4:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1ee8:	8f e1       	ldi	r24, 0x1F	; 31
    1eea:	9e e4       	ldi	r25, 0x4E	; 78
    1eec:	01 97       	sbiw	r24, 0x01	; 1
    1eee:	f1 f7       	brne	.-4      	; 0x1eec <main+0x16c>
    1ef0:	00 c0       	rjmp	.+0      	; 0x1ef2 <main+0x172>
    1ef2:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	01 96       	adiw	r24, 0x01	; 1
    1ef8:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)
    1efc:	89 81       	ldd	r24, Y+1	; 0x01
    1efe:	9a 81       	ldd	r25, Y+2	; 0x02
    1f00:	89 57       	subi	r24, 0x79	; 121
    1f02:	91 09       	sbc	r25, r1
    1f04:	4d 97       	sbiw	r24, 0x1d	; 29
    1f06:	30 f4       	brcc	.+12     	; 0x1f14 <main+0x194>
    1f08:	8b 81       	ldd	r24, Y+3	; 0x03
    1f0a:	9c 81       	ldd	r25, Y+4	; 0x04
    1f0c:	c4 97       	sbiw	r24, 0x34	; 52
    1f0e:	85 39       	cpi	r24, 0x95	; 149
    1f10:	91 05       	cpc	r25, r1
    1f12:	50 f0       	brcs	.+20     	; 0x1f28 <main+0x1a8>
    1f14:	9f ef       	ldi	r25, 0xFF	; 255
    1f16:	a0 e7       	ldi	r26, 0x70	; 112
    1f18:	b2 e0       	ldi	r27, 0x02	; 2
    1f1a:	91 50       	subi	r25, 0x01	; 1
    1f1c:	a0 40       	sbci	r26, 0x00	; 0
    1f1e:	b0 40       	sbci	r27, 0x00	; 0
    1f20:	e1 f7       	brne	.-8      	; 0x1f1a <main+0x19a>
    1f22:	00 c0       	rjmp	.+0      	; 0x1f24 <main+0x1a4>
    1f24:	00 00       	nop
    1f26:	c0 cf       	rjmp	.-128    	; 0x1ea8 <main+0x128>
	}
		//for manual input show the button
	TFT_Fill(back_color);
	show_button();
	input_f = 1;
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    1f28:	51 2c       	mov	r5, r1
		{
			TFT_Box(10,69,231,101,white);
			TFT_Box(10,20,231,54,back_color);
			TFT_Text("Input Time ... ",10,20,16,white,back_color);
			TFT_Text("(Minute)",10,38,16,white,back_color);
			input_f = 6;
    1f2a:	0f 2e       	mov	r0, r31
    1f2c:	f6 e0       	ldi	r31, 0x06	; 6
    1f2e:	4f 2e       	mov	r4, r31
    1f30:	f0 2d       	mov	r31, r0
				{
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
    1f32:	ed e0       	ldi	r30, 0x0D	; 13
    1f34:	ef 83       	std	Y+7, r30	; 0x07
    1f36:	5b 86       	std	Y+11, r5	; 0x0b
	}
	//End welcome message and startup
	
	//Start task input/selection system
selection:
	TFT_Fill(back_color);
    1f38:	8f e1       	ldi	r24, 0x1F	; 31
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	TFT_Text("Choose an option...",23,20,8,white,back_color);
    1f40:	0f 2e       	mov	r0, r31
    1f42:	ff e1       	ldi	r31, 0x1F	; 31
    1f44:	ef 2e       	mov	r14, r31
    1f46:	f1 2c       	mov	r15, r1
    1f48:	f0 2d       	mov	r31, r0
    1f4a:	0f ef       	ldi	r16, 0xFF	; 255
    1f4c:	1f ef       	ldi	r17, 0xFF	; 255
    1f4e:	28 e0       	ldi	r18, 0x08	; 8
    1f50:	44 e1       	ldi	r20, 0x14	; 20
    1f52:	50 e0       	ldi	r21, 0x00	; 0
    1f54:	67 e1       	ldi	r22, 0x17	; 23
    1f56:	70 e0       	ldi	r23, 0x00	; 0
    1f58:	89 e9       	ldi	r24, 0x99	; 153
    1f5a:	90 e0       	ldi	r25, 0x00	; 0
    1f5c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(27,45,203,62,yellow);
    1f60:	00 ee       	ldi	r16, 0xE0	; 224
    1f62:	1f ef       	ldi	r17, 0xFF	; 255
    1f64:	2e e3       	ldi	r18, 0x3E	; 62
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	4b ec       	ldi	r20, 0xCB	; 203
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	6d e2       	ldi	r22, 0x2D	; 45
    1f6e:	70 e0       	ldi	r23, 0x00	; 0
    1f70:	8b e1       	ldi	r24, 0x1B	; 27
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("70Lit. _ 25'C _ 2min",35,50,8,black,yellow);
    1f78:	0f 2e       	mov	r0, r31
    1f7a:	f0 ee       	ldi	r31, 0xE0	; 224
    1f7c:	ef 2e       	mov	r14, r31
    1f7e:	ff 24       	eor	r15, r15
    1f80:	fa 94       	dec	r15
    1f82:	f0 2d       	mov	r31, r0
    1f84:	00 e0       	ldi	r16, 0x00	; 0
    1f86:	10 e0       	ldi	r17, 0x00	; 0
    1f88:	28 e0       	ldi	r18, 0x08	; 8
    1f8a:	42 e3       	ldi	r20, 0x32	; 50
    1f8c:	50 e0       	ldi	r21, 0x00	; 0
    1f8e:	63 e2       	ldi	r22, 0x23	; 35
    1f90:	70 e0       	ldi	r23, 0x00	; 0
    1f92:	8d ea       	ldi	r24, 0xAD	; 173
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(27,80,203,97,yellow);
    1f9a:	00 ee       	ldi	r16, 0xE0	; 224
    1f9c:	1f ef       	ldi	r17, 0xFF	; 255
    1f9e:	21 e6       	ldi	r18, 0x61	; 97
    1fa0:	30 e0       	ldi	r19, 0x00	; 0
    1fa2:	4b ec       	ldi	r20, 0xCB	; 203
    1fa4:	50 e0       	ldi	r21, 0x00	; 0
    1fa6:	60 e5       	ldi	r22, 0x50	; 80
    1fa8:	70 e0       	ldi	r23, 0x00	; 0
    1faa:	8b e1       	ldi	r24, 0x1B	; 27
    1fac:	90 e0       	ldi	r25, 0x00	; 0
    1fae:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("70Lit. _ 50'C _ 2min",35,85,8,black,yellow);
    1fb2:	00 e0       	ldi	r16, 0x00	; 0
    1fb4:	10 e0       	ldi	r17, 0x00	; 0
    1fb6:	28 e0       	ldi	r18, 0x08	; 8
    1fb8:	45 e5       	ldi	r20, 0x55	; 85
    1fba:	50 e0       	ldi	r21, 0x00	; 0
    1fbc:	63 e2       	ldi	r22, 0x23	; 35
    1fbe:	70 e0       	ldi	r23, 0x00	; 0
    1fc0:	82 ec       	ldi	r24, 0xC2	; 194
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(27,115,203,132,yellow);
    1fc8:	00 ee       	ldi	r16, 0xE0	; 224
    1fca:	1f ef       	ldi	r17, 0xFF	; 255
    1fcc:	24 e8       	ldi	r18, 0x84	; 132
    1fce:	30 e0       	ldi	r19, 0x00	; 0
    1fd0:	4b ec       	ldi	r20, 0xCB	; 203
    1fd2:	50 e0       	ldi	r21, 0x00	; 0
    1fd4:	63 e7       	ldi	r22, 0x73	; 115
    1fd6:	70 e0       	ldi	r23, 0x00	; 0
    1fd8:	8b e1       	ldi	r24, 0x1B	; 27
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("50Lit. _ 50'C _ 2min",35,120,8,black,yellow);
    1fe0:	00 e0       	ldi	r16, 0x00	; 0
    1fe2:	10 e0       	ldi	r17, 0x00	; 0
    1fe4:	28 e0       	ldi	r18, 0x08	; 8
    1fe6:	48 e7       	ldi	r20, 0x78	; 120
    1fe8:	50 e0       	ldi	r21, 0x00	; 0
    1fea:	63 e2       	ldi	r22, 0x23	; 35
    1fec:	70 e0       	ldi	r23, 0x00	; 0
    1fee:	87 ed       	ldi	r24, 0xD7	; 215
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(27,150,203,167,yellow);
    1ff6:	00 ee       	ldi	r16, 0xE0	; 224
    1ff8:	1f ef       	ldi	r17, 0xFF	; 255
    1ffa:	27 ea       	ldi	r18, 0xA7	; 167
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	4b ec       	ldi	r20, 0xCB	; 203
    2000:	50 e0       	ldi	r21, 0x00	; 0
    2002:	66 e9       	ldi	r22, 0x96	; 150
    2004:	70 e0       	ldi	r23, 0x00	; 0
    2006:	8b e1       	ldi	r24, 0x1B	; 27
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("60Lit. _ 50'C _ 2min",35,155,8,black,yellow);
    200e:	00 e0       	ldi	r16, 0x00	; 0
    2010:	10 e0       	ldi	r17, 0x00	; 0
    2012:	28 e0       	ldi	r18, 0x08	; 8
    2014:	4b e9       	ldi	r20, 0x9B	; 155
    2016:	50 e0       	ldi	r21, 0x00	; 0
    2018:	63 e2       	ldi	r22, 0x23	; 35
    201a:	70 e0       	ldi	r23, 0x00	; 0
    201c:	8c ee       	ldi	r24, 0xEC	; 236
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(27,188,203,228,red);
    2024:	00 e0       	ldi	r16, 0x00	; 0
    2026:	18 ef       	ldi	r17, 0xF8	; 248
    2028:	24 ee       	ldi	r18, 0xE4	; 228
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	4b ec       	ldi	r20, 0xCB	; 203
    202e:	50 e0       	ldi	r21, 0x00	; 0
    2030:	6c eb       	ldi	r22, 0xBC	; 188
    2032:	70 e0       	ldi	r23, 0x00	; 0
    2034:	8b e1       	ldi	r24, 0x1B	; 27
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("Manual Input",31,199,16,white,red);
    203c:	0f 2e       	mov	r0, r31
    203e:	e1 2c       	mov	r14, r1
    2040:	f8 ef       	ldi	r31, 0xF8	; 248
    2042:	ff 2e       	mov	r15, r31
    2044:	f0 2d       	mov	r31, r0
    2046:	0f ef       	ldi	r16, 0xFF	; 255
    2048:	1f ef       	ldi	r17, 0xFF	; 255
    204a:	20 e1       	ldi	r18, 0x10	; 16
    204c:	47 ec       	ldi	r20, 0xC7	; 199
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	6f e1       	ldi	r22, 0x1F	; 31
    2052:	70 e0       	ldi	r23, 0x00	; 0
    2054:	81 e0       	ldi	r24, 0x01	; 1
    2056:	91 e0       	ldi	r25, 0x01	; 1
    2058:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    205c:	83 9b       	sbis	0x10, 3	; 16
    205e:	fe cf       	rjmp	.-4      	; 0x205c <main+0x2dc>
	while (1)
	{
		if (!(PIND & (1<<PD3)))
    2060:	83 99       	sbic	0x10, 3	; 16
    2062:	fe cf       	rjmp	.-4      	; 0x2060 <main+0x2e0>
		{
			Read_TPval(TPval);
    2064:	8f 85       	ldd	r24, Y+15	; 0x0f
    2066:	98 89       	ldd	r25, Y+16	; 0x10
    2068:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    206c:	8f e1       	ldi	r24, 0x1F	; 31
    206e:	9e e4       	ldi	r25, 0x4E	; 78
    2070:	01 97       	sbiw	r24, 0x01	; 1
    2072:	f1 f7       	brne	.-4      	; 0x2070 <main+0x2f0>
    2074:	00 c0       	rjmp	.+0      	; 0x2076 <main+0x2f6>
    2076:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    2078:	8f 85       	ldd	r24, Y+15	; 0x0f
    207a:	98 89       	ldd	r25, Y+16	; 0x10
    207c:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
    2080:	8b 81       	ldd	r24, Y+3	; 0x03
    2082:	9c 81       	ldd	r25, Y+4	; 0x04
    2084:	84 97       	sbiw	r24, 0x24	; 36
    2086:	8f 3a       	cpi	r24, 0xAF	; 175
    2088:	91 05       	cpc	r25, r1
    208a:	f8 f4       	brcc	.+62     	; 0x20ca <main+0x34a>
			{
				if (TPval[0]>197 && TPval[0]<216)
    208c:	89 81       	ldd	r24, Y+1	; 0x01
    208e:	9a 81       	ldd	r25, Y+2	; 0x02
    2090:	9c 01       	movw	r18, r24
    2092:	26 5c       	subi	r18, 0xC6	; 198
    2094:	31 09       	sbc	r19, r1
    2096:	22 31       	cpi	r18, 0x12	; 18
    2098:	31 05       	cpc	r19, r1
    209a:	08 f4       	brcc	.+2      	; 0x209e <main+0x31e>
    209c:	3e c3       	rjmp	.+1660   	; 0x271a <main+0x99a>
					water = 70;
					temp = 25;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
    209e:	2a 5e       	subi	r18, 0xEA	; 234
    20a0:	3f 4f       	sbci	r19, 0xFF	; 255
    20a2:	2e 30       	cpi	r18, 0x0E	; 14
    20a4:	31 05       	cpc	r19, r1
    20a6:	08 f4       	brcc	.+2      	; 0x20aa <main+0x32a>
    20a8:	49 c3       	rjmp	.+1682   	; 0x273c <main+0x9bc>
					water = 70;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
    20aa:	25 5e       	subi	r18, 0xE5	; 229
    20ac:	3f 4f       	sbci	r19, 0xFF	; 255
    20ae:	22 31       	cpi	r18, 0x12	; 18
    20b0:	31 05       	cpc	r19, r1
    20b2:	08 f4       	brcc	.+2      	; 0x20b6 <main+0x336>
    20b4:	54 c3       	rjmp	.+1704   	; 0x275e <main+0x9de>
					water = 50;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
    20b6:	2b 5e       	subi	r18, 0xEB	; 235
    20b8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ba:	20 31       	cpi	r18, 0x10	; 16
    20bc:	31 05       	cpc	r19, r1
    20be:	08 f4       	brcc	.+2      	; 0x20c2 <main+0x342>
    20c0:	5f c3       	rjmp	.+1726   	; 0x2780 <main+0xa00>
					water = 60;
					temp = 50;
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>83 && TPval[0]<116)  //button for manual input
    20c2:	84 55       	subi	r24, 0x54	; 84
    20c4:	91 09       	sbc	r25, r1
    20c6:	80 97       	sbiw	r24, 0x20	; 32
    20c8:	50 f0       	brcs	.+20     	; 0x20de <main+0x35e>
    20ca:	9f ef       	ldi	r25, 0xFF	; 255
    20cc:	a0 e7       	ldi	r26, 0x70	; 112
    20ce:	b2 e0       	ldi	r27, 0x02	; 2
    20d0:	91 50       	subi	r25, 0x01	; 1
    20d2:	a0 40       	sbci	r26, 0x00	; 0
    20d4:	b0 40       	sbci	r27, 0x00	; 0
    20d6:	e1 f7       	brne	.-8      	; 0x20d0 <main+0x350>
    20d8:	00 c0       	rjmp	.+0      	; 0x20da <main+0x35a>
    20da:	00 00       	nop
    20dc:	c1 cf       	rjmp	.-126    	; 0x2060 <main+0x2e0>
			}
			_delay_ms(100);
		}
	}
		//for manual input show the button
	TFT_Fill(back_color);
    20de:	8f e1       	ldi	r24, 0x1F	; 31
    20e0:	90 e0       	ldi	r25, 0x00	; 0
    20e2:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	show_button();
    20e6:	0e 94 56 0d 	call	0x1aac	; 0x1aac <show_button>
	input_f = 1;
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    20ea:	83 9b       	sbis	0x10, 3	; 16
    20ec:	fe cf       	rjmp	.-4      	; 0x20ea <main+0x36a>
    20ee:	bb 24       	eor	r11, r11
    20f0:	b3 94       	inc	r11
    20f2:	6e a0       	ldd	r6, Y+38	; 0x26
    20f4:	7f a0       	ldd	r7, Y+39	; 0x27
    20f6:	88 a4       	ldd	r8, Y+40	; 0x28
    20f8:	99 a4       	ldd	r9, Y+41	; 0x29
    20fa:	0f 2e       	mov	r0, r31
    20fc:	fd e0       	ldi	r31, 0x0D	; 13
    20fe:	cf 2e       	mov	r12, r31
    2100:	f0 2d       	mov	r31, r0
    2102:	d5 2c       	mov	r13, r5
		if (input_f == 1)
		{
			TFT_Box(10,69,231,101,white);
			TFT_Text("Input Water ...",10,20,16,white,back_color);
			TFT_Text("(Liter)  ",10,38,16,white,back_color);
			input_f = 2;
    2104:	68 94       	set
    2106:	aa 24       	eor	r10, r10
    2108:	a1 f8       	bld	r10, 1
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
    210a:	29 8a       	std	Y+17, r2	; 0x11
    210c:	28 88       	ldd	r2, Y+16	; 0x10
    210e:	3d 8e       	std	Y+29, r3	; 0x1d
    2110:	3f 84       	ldd	r3, Y+15	; 0x0f
    2112:	8b 2d       	mov	r24, r11
	show_button();
	input_f = 1;
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
	while(1)
	{
		if (input_f == 1)
    2114:	81 30       	cpi	r24, 0x01	; 1
    2116:	29 f5       	brne	.+74     	; 0x2162 <main+0x3e2>
		{
			TFT_Box(10,69,231,101,white);
    2118:	0f ef       	ldi	r16, 0xFF	; 255
    211a:	1f ef       	ldi	r17, 0xFF	; 255
    211c:	25 e6       	ldi	r18, 0x65	; 101
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	47 ee       	ldi	r20, 0xE7	; 231
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	65 e4       	ldi	r22, 0x45	; 69
    2126:	70 e0       	ldi	r23, 0x00	; 0
    2128:	8a e0       	ldi	r24, 0x0A	; 10
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
			TFT_Text("Input Water ...",10,20,16,white,back_color);
    2130:	0f 2e       	mov	r0, r31
    2132:	ff e1       	ldi	r31, 0x1F	; 31
    2134:	ef 2e       	mov	r14, r31
    2136:	f1 2c       	mov	r15, r1
    2138:	f0 2d       	mov	r31, r0
    213a:	20 e1       	ldi	r18, 0x10	; 16
    213c:	44 e1       	ldi	r20, 0x14	; 20
    213e:	50 e0       	ldi	r21, 0x00	; 0
    2140:	6a e0       	ldi	r22, 0x0A	; 10
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	8e e0       	ldi	r24, 0x0E	; 14
    2146:	91 e0       	ldi	r25, 0x01	; 1
    2148:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			TFT_Text("(Liter)  ",10,38,16,white,back_color);
    214c:	20 e1       	ldi	r18, 0x10	; 16
    214e:	46 e2       	ldi	r20, 0x26	; 38
    2150:	50 e0       	ldi	r21, 0x00	; 0
    2152:	6a e0       	ldi	r22, 0x0A	; 10
    2154:	70 e0       	ldi	r23, 0x00	; 0
    2156:	8e e1       	ldi	r24, 0x1E	; 30
    2158:	91 e0       	ldi	r25, 0x01	; 1
    215a:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			input_f = 2;
    215e:	8a 2d       	mov	r24, r10
    2160:	69 c0       	rjmp	.+210    	; 0x2234 <main+0x4b4>
		}
		else if (input_f == 3)
    2162:	83 30       	cpi	r24, 0x03	; 3
    2164:	99 f5       	brne	.+102    	; 0x21cc <main+0x44c>
		{
			TFT_Box(10,69,231,101,white);
    2166:	0f ef       	ldi	r16, 0xFF	; 255
    2168:	1f ef       	ldi	r17, 0xFF	; 255
    216a:	25 e6       	ldi	r18, 0x65	; 101
    216c:	30 e0       	ldi	r19, 0x00	; 0
    216e:	47 ee       	ldi	r20, 0xE7	; 231
    2170:	50 e0       	ldi	r21, 0x00	; 0
    2172:	65 e4       	ldi	r22, 0x45	; 69
    2174:	70 e0       	ldi	r23, 0x00	; 0
    2176:	8a e0       	ldi	r24, 0x0A	; 10
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    217e:	0f e1       	ldi	r16, 0x1F	; 31
    2180:	10 e0       	ldi	r17, 0x00	; 0
    2182:	26 e3       	ldi	r18, 0x36	; 54
    2184:	30 e0       	ldi	r19, 0x00	; 0
    2186:	47 ee       	ldi	r20, 0xE7	; 231
    2188:	50 e0       	ldi	r21, 0x00	; 0
    218a:	64 e1       	ldi	r22, 0x14	; 20
    218c:	70 e0       	ldi	r23, 0x00	; 0
    218e:	8a e0       	ldi	r24, 0x0A	; 10
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
			TFT_Text("Input Temp ... ",10,20,16,white,back_color);
    2196:	0f 2e       	mov	r0, r31
    2198:	ff e1       	ldi	r31, 0x1F	; 31
    219a:	ef 2e       	mov	r14, r31
    219c:	f1 2c       	mov	r15, r1
    219e:	f0 2d       	mov	r31, r0
    21a0:	0f ef       	ldi	r16, 0xFF	; 255
    21a2:	1f ef       	ldi	r17, 0xFF	; 255
    21a4:	20 e1       	ldi	r18, 0x10	; 16
    21a6:	44 e1       	ldi	r20, 0x14	; 20
    21a8:	50 e0       	ldi	r21, 0x00	; 0
    21aa:	6a e0       	ldi	r22, 0x0A	; 10
    21ac:	70 e0       	ldi	r23, 0x00	; 0
    21ae:	88 e2       	ldi	r24, 0x28	; 40
    21b0:	91 e0       	ldi	r25, 0x01	; 1
    21b2:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			TFT_Text("(Deg. C) ",10,38,16,white,back_color);
    21b6:	20 e1       	ldi	r18, 0x10	; 16
    21b8:	46 e2       	ldi	r20, 0x26	; 38
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	6a e0       	ldi	r22, 0x0A	; 10
    21be:	70 e0       	ldi	r23, 0x00	; 0
    21c0:	88 e3       	ldi	r24, 0x38	; 56
    21c2:	91 e0       	ldi	r25, 0x01	; 1
    21c4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			input_f = 4;
    21c8:	84 e0       	ldi	r24, 0x04	; 4
    21ca:	34 c0       	rjmp	.+104    	; 0x2234 <main+0x4b4>
		}
		else if (input_f == 5)
    21cc:	85 30       	cpi	r24, 0x05	; 5
    21ce:	91 f5       	brne	.+100    	; 0x2234 <main+0x4b4>
		{
			TFT_Box(10,69,231,101,white);
    21d0:	0f ef       	ldi	r16, 0xFF	; 255
    21d2:	1f ef       	ldi	r17, 0xFF	; 255
    21d4:	25 e6       	ldi	r18, 0x65	; 101
    21d6:	30 e0       	ldi	r19, 0x00	; 0
    21d8:	47 ee       	ldi	r20, 0xE7	; 231
    21da:	50 e0       	ldi	r21, 0x00	; 0
    21dc:	65 e4       	ldi	r22, 0x45	; 69
    21de:	70 e0       	ldi	r23, 0x00	; 0
    21e0:	8a e0       	ldi	r24, 0x0A	; 10
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
			TFT_Box(10,20,231,54,back_color);
    21e8:	0f e1       	ldi	r16, 0x1F	; 31
    21ea:	10 e0       	ldi	r17, 0x00	; 0
    21ec:	26 e3       	ldi	r18, 0x36	; 54
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	47 ee       	ldi	r20, 0xE7	; 231
    21f2:	50 e0       	ldi	r21, 0x00	; 0
    21f4:	64 e1       	ldi	r22, 0x14	; 20
    21f6:	70 e0       	ldi	r23, 0x00	; 0
    21f8:	8a e0       	ldi	r24, 0x0A	; 10
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
			TFT_Text("Input Time ... ",10,20,16,white,back_color);
    2200:	0f 2e       	mov	r0, r31
    2202:	ff e1       	ldi	r31, 0x1F	; 31
    2204:	ef 2e       	mov	r14, r31
    2206:	f1 2c       	mov	r15, r1
    2208:	f0 2d       	mov	r31, r0
    220a:	0f ef       	ldi	r16, 0xFF	; 255
    220c:	1f ef       	ldi	r17, 0xFF	; 255
    220e:	20 e1       	ldi	r18, 0x10	; 16
    2210:	44 e1       	ldi	r20, 0x14	; 20
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	6a e0       	ldi	r22, 0x0A	; 10
    2216:	70 e0       	ldi	r23, 0x00	; 0
    2218:	82 e4       	ldi	r24, 0x42	; 66
    221a:	91 e0       	ldi	r25, 0x01	; 1
    221c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			TFT_Text("(Minute)",10,38,16,white,back_color);
    2220:	20 e1       	ldi	r18, 0x10	; 16
    2222:	46 e2       	ldi	r20, 0x26	; 38
    2224:	50 e0       	ldi	r21, 0x00	; 0
    2226:	6a e0       	ldi	r22, 0x0A	; 10
    2228:	70 e0       	ldi	r23, 0x00	; 0
    222a:	82 e5       	ldi	r24, 0x52	; 82
    222c:	91 e0       	ldi	r25, 0x01	; 1
    222e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			input_f = 6;
    2232:	84 2d       	mov	r24, r4
		}
		
		if (!(PIND & (1<<PD3)))
    2234:	83 99       	sbic	0x10, 3	; 16
    2236:	6e cf       	rjmp	.-292    	; 0x2114 <main+0x394>
    2238:	b8 2e       	mov	r11, r24
    223a:	18 2f       	mov	r17, r24
		{
			Read_TPval(TPval);
    223c:	83 2d       	mov	r24, r3
    223e:	92 2d       	mov	r25, r2
    2240:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    2244:	ef e1       	ldi	r30, 0x1F	; 31
    2246:	fe e4       	ldi	r31, 0x4E	; 78
    2248:	31 97       	sbiw	r30, 0x01	; 1
    224a:	f1 f7       	brne	.-4      	; 0x2248 <main+0x4c8>
    224c:	00 c0       	rjmp	.+0      	; 0x224e <main+0x4ce>
    224e:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    2250:	83 2d       	mov	r24, r3
    2252:	92 2d       	mov	r25, r2
    2254:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>36 && TPval[0]<72)  // 9 0 DEL >> 
    2258:	89 81       	ldd	r24, Y+1	; 0x01
    225a:	9a 81       	ldd	r25, Y+2	; 0x02
    225c:	9c 01       	movw	r18, r24
    225e:	25 52       	subi	r18, 0x25	; 37
    2260:	31 09       	sbc	r19, r1
    2262:	23 32       	cpi	r18, 0x23	; 35
    2264:	31 05       	cpc	r19, r1
    2266:	08 f0       	brcs	.+2      	; 0x226a <main+0x4ea>
    2268:	af c0       	rjmp	.+350    	; 0x23c8 <main+0x648>
			{
				if (TPval[1]>23 && TPval[1]<73)
    226a:	8b 81       	ldd	r24, Y+3	; 0x03
    226c:	9c 81       	ldd	r25, Y+4	; 0x04
    226e:	9c 01       	movw	r18, r24
    2270:	28 51       	subi	r18, 0x18	; 24
    2272:	31 09       	sbc	r19, r1
    2274:	21 33       	cpi	r18, 0x31	; 49
    2276:	31 05       	cpc	r19, r1
    2278:	60 f5       	brcc	.+88     	; 0x22d2 <main+0x552>
				{
					TFT_Text("9",mxpos,77,16,black,white);
    227a:	ee 24       	eor	r14, r14
    227c:	ea 94       	dec	r14
    227e:	fe 2c       	mov	r15, r14
    2280:	00 e0       	ldi	r16, 0x00	; 0
    2282:	10 e0       	ldi	r17, 0x00	; 0
    2284:	20 e1       	ldi	r18, 0x10	; 16
    2286:	4d e4       	ldi	r20, 0x4D	; 77
    2288:	50 e0       	ldi	r21, 0x00	; 0
    228a:	b6 01       	movw	r22, r12
    228c:	80 e7       	ldi	r24, 0x70	; 112
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2294:	fe e0       	ldi	r31, 0x0E	; 14
    2296:	cf 0e       	add	r12, r31
    2298:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 9;
    229a:	b4 01       	movw	r22, r8
    229c:	a3 01       	movw	r20, r6
    229e:	44 0f       	add	r20, r20
    22a0:	55 1f       	adc	r21, r21
    22a2:	66 1f       	adc	r22, r22
    22a4:	77 1f       	adc	r23, r23
    22a6:	db 01       	movw	r26, r22
    22a8:	ca 01       	movw	r24, r20
    22aa:	88 0f       	add	r24, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	aa 1f       	adc	r26, r26
    22b0:	bb 1f       	adc	r27, r27
    22b2:	88 0f       	add	r24, r24
    22b4:	99 1f       	adc	r25, r25
    22b6:	aa 1f       	adc	r26, r26
    22b8:	bb 1f       	adc	r27, r27
    22ba:	84 0f       	add	r24, r20
    22bc:	95 1f       	adc	r25, r21
    22be:	a6 1f       	adc	r26, r22
    22c0:	b7 1f       	adc	r27, r23
    22c2:	3c 01       	movw	r6, r24
    22c4:	4d 01       	movw	r8, r26
    22c6:	09 e0       	ldi	r16, 0x09	; 9
    22c8:	60 0e       	add	r6, r16
    22ca:	71 1c       	adc	r7, r1
    22cc:	81 1c       	adc	r8, r1
    22ce:	91 1c       	adc	r9, r1
    22d0:	78 c0       	rjmp	.+240    	; 0x23c2 <main+0x642>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    22d2:	9c 01       	movw	r18, r24
    22d4:	2e 54       	subi	r18, 0x4E	; 78
    22d6:	31 09       	sbc	r19, r1
    22d8:	20 33       	cpi	r18, 0x30	; 48
    22da:	31 05       	cpc	r19, r1
    22dc:	38 f5       	brcc	.+78     	; 0x232c <main+0x5ac>
				{
					TFT_Text("0",mxpos,77,16,black,white);
    22de:	ee 24       	eor	r14, r14
    22e0:	ea 94       	dec	r14
    22e2:	fe 2c       	mov	r15, r14
    22e4:	00 e0       	ldi	r16, 0x00	; 0
    22e6:	10 e0       	ldi	r17, 0x00	; 0
    22e8:	20 e1       	ldi	r18, 0x10	; 16
    22ea:	4d e4       	ldi	r20, 0x4D	; 77
    22ec:	50 e0       	ldi	r21, 0x00	; 0
    22ee:	b6 01       	movw	r22, r12
    22f0:	82 e7       	ldi	r24, 0x72	; 114
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    22f8:	1e e0       	ldi	r17, 0x0E	; 14
    22fa:	c1 0e       	add	r12, r17
    22fc:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10);
    22fe:	b4 01       	movw	r22, r8
    2300:	a3 01       	movw	r20, r6
    2302:	44 0f       	add	r20, r20
    2304:	55 1f       	adc	r21, r21
    2306:	66 1f       	adc	r22, r22
    2308:	77 1f       	adc	r23, r23
    230a:	db 01       	movw	r26, r22
    230c:	ca 01       	movw	r24, r20
    230e:	88 0f       	add	r24, r24
    2310:	99 1f       	adc	r25, r25
    2312:	aa 1f       	adc	r26, r26
    2314:	bb 1f       	adc	r27, r27
    2316:	88 0f       	add	r24, r24
    2318:	99 1f       	adc	r25, r25
    231a:	aa 1f       	adc	r26, r26
    231c:	bb 1f       	adc	r27, r27
    231e:	3a 01       	movw	r6, r20
    2320:	4b 01       	movw	r8, r22
    2322:	68 0e       	add	r6, r24
    2324:	79 1e       	adc	r7, r25
    2326:	8a 1e       	adc	r8, r26
    2328:	9b 1e       	adc	r9, r27
    232a:	4b c0       	rjmp	.+150    	; 0x23c2 <main+0x642>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    232c:	9c 01       	movw	r18, r24
    232e:	22 58       	subi	r18, 0x82	; 130
    2330:	31 09       	sbc	r19, r1
    2332:	23 33       	cpi	r18, 0x33	; 51
    2334:	31 05       	cpc	r19, r1
    2336:	d8 f4       	brcc	.+54     	; 0x236e <main+0x5ee>
				{
					mxpos-=14;
    2338:	2e e0       	ldi	r18, 0x0E	; 14
    233a:	c2 1a       	sub	r12, r18
    233c:	d1 08       	sbc	r13, r1
					TFT_Text(" ",mxpos,77,16,black,white);
    233e:	ee 24       	eor	r14, r14
    2340:	ea 94       	dec	r14
    2342:	fe 2c       	mov	r15, r14
    2344:	00 e0       	ldi	r16, 0x00	; 0
    2346:	10 e0       	ldi	r17, 0x00	; 0
    2348:	20 e1       	ldi	r18, 0x10	; 16
    234a:	4d e4       	ldi	r20, 0x4D	; 77
    234c:	50 e0       	ldi	r21, 0x00	; 0
    234e:	b6 01       	movw	r22, r12
    2350:	8f eb       	ldi	r24, 0xBF	; 191
    2352:	92 e0       	ldi	r25, 0x02	; 2
    2354:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					kp_val = (kp_val / 10);
    2358:	c4 01       	movw	r24, r8
    235a:	b3 01       	movw	r22, r6
    235c:	2a e0       	ldi	r18, 0x0A	; 10
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	40 e0       	ldi	r20, 0x00	; 0
    2362:	50 e0       	ldi	r21, 0x00	; 0
    2364:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    2368:	39 01       	movw	r6, r18
    236a:	4a 01       	movw	r8, r20
    236c:	2a c0       	rjmp	.+84     	; 0x23c2 <main+0x642>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    236e:	88 5b       	subi	r24, 0xB8	; 184
    2370:	91 09       	sbc	r25, r1
    2372:	c4 97       	sbiw	r24, 0x34	; 52
    2374:	30 f5       	brcc	.+76     	; 0x23c2 <main+0x642>
				{
					if (input_f == 2)
    2376:	12 30       	cpi	r17, 0x02	; 2
    2378:	39 f0       	breq	.+14     	; 0x2388 <main+0x608>
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
					}
					else if (input_f == 4)
    237a:	14 30       	cpi	r17, 0x04	; 4
    237c:	a1 f0       	breq	.+40     	; 0x23a6 <main+0x626>
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
					}
					else if (input_f == 6)
    237e:	16 30       	cpi	r17, 0x06	; 6
    2380:	01 f5       	brne	.+64     	; 0x23c2 <main+0x642>
    2382:	29 88       	ldd	r2, Y+17	; 0x11
    2384:	3d 8c       	ldd	r3, Y+29	; 0x1d
    2386:	0c c2       	rjmp	.+1048   	; 0x27a0 <main+0xa20>
    2388:	6d 8a       	std	Y+21, r6	; 0x15
    238a:	7e 8a       	std	Y+22, r7	; 0x16
    238c:	8f 8a       	std	Y+23, r8	; 0x17
    238e:	98 8e       	std	Y+24, r9	; 0x18
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 3;
    2390:	0f 2e       	mov	r0, r31
    2392:	f3 e0       	ldi	r31, 0x03	; 3
    2394:	bf 2e       	mov	r11, r31
    2396:	f0 2d       	mov	r31, r0
				else if (TPval[1]>183 && TPval[1]<236)
				{
					if (input_f == 2)
					{
						water = kp_val;
						kp_val = 0;
    2398:	6a a4       	ldd	r6, Y+42	; 0x2a
    239a:	7b a4       	ldd	r7, Y+43	; 0x2b
    239c:	8c a4       	ldd	r8, Y+44	; 0x2c
    239e:	9d a4       	ldd	r9, Y+45	; 0x2d
						mxpos = 13;
    23a0:	cf 80       	ldd	r12, Y+7	; 0x07
    23a2:	db 84       	ldd	r13, Y+11	; 0x0b
    23a4:	0e c0       	rjmp	.+28     	; 0x23c2 <main+0x642>
    23a6:	69 8e       	std	Y+25, r6	; 0x19
    23a8:	7a 8e       	std	Y+26, r7	; 0x1a
    23aa:	8b 8e       	std	Y+27, r8	; 0x1b
    23ac:	9c 8e       	std	Y+28, r9	; 0x1c
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
						mxpos = 13;
						input_f = 5;
    23ae:	0f 2e       	mov	r0, r31
    23b0:	f5 e0       	ldi	r31, 0x05	; 5
    23b2:	bf 2e       	mov	r11, r31
    23b4:	f0 2d       	mov	r31, r0
						input_f = 3;
					}
					else if (input_f == 4)
					{
						temp = kp_val;
						kp_val = 0;
    23b6:	6a a4       	ldd	r6, Y+42	; 0x2a
    23b8:	7b a4       	ldd	r7, Y+43	; 0x2b
    23ba:	8c a4       	ldd	r8, Y+44	; 0x2c
    23bc:	9d a4       	ldd	r9, Y+45	; 0x2d
						mxpos = 13;
    23be:	cf 80       	ldd	r12, Y+7	; 0x07
    23c0:	db 84       	ldd	r13, Y+11	; 0x0b
						mxpos = 13;
						input_f = 0;
						break;
					}
				}
				while (!(PIND & (1<<PD3)));
    23c2:	83 9b       	sbis	0x10, 3	; 16
    23c4:	fe cf       	rjmp	.-4      	; 0x23c2 <main+0x642>
    23c6:	9f c1       	rjmp	.+830    	; 0x2706 <main+0x986>
			}
			else if (TPval[0]>75 && TPval[0]<112)  // 5 6 7 8 
    23c8:	9c 01       	movw	r18, r24
    23ca:	2c 54       	subi	r18, 0x4C	; 76
    23cc:	31 09       	sbc	r19, r1
    23ce:	24 32       	cpi	r18, 0x24	; 36
    23d0:	31 05       	cpc	r19, r1
    23d2:	08 f0       	brcs	.+2      	; 0x23d6 <main+0x656>
    23d4:	ca c0       	rjmp	.+404    	; 0x256a <main+0x7ea>
			{
				if (TPval[1]>23 && TPval[1]<73)
    23d6:	8b 81       	ldd	r24, Y+3	; 0x03
    23d8:	9c 81       	ldd	r25, Y+4	; 0x04
    23da:	9c 01       	movw	r18, r24
    23dc:	28 51       	subi	r18, 0x18	; 24
    23de:	31 09       	sbc	r19, r1
    23e0:	21 33       	cpi	r18, 0x31	; 49
    23e2:	31 05       	cpc	r19, r1
    23e4:	60 f5       	brcc	.+88     	; 0x243e <main+0x6be>
				{
					TFT_Text("5",mxpos,77,16,black,white);
    23e6:	ee 24       	eor	r14, r14
    23e8:	ea 94       	dec	r14
    23ea:	fe 2c       	mov	r15, r14
    23ec:	00 e0       	ldi	r16, 0x00	; 0
    23ee:	10 e0       	ldi	r17, 0x00	; 0
    23f0:	20 e1       	ldi	r18, 0x10	; 16
    23f2:	4d e4       	ldi	r20, 0x4D	; 77
    23f4:	50 e0       	ldi	r21, 0x00	; 0
    23f6:	b6 01       	movw	r22, r12
    23f8:	88 e6       	ldi	r24, 0x68	; 104
    23fa:	90 e0       	ldi	r25, 0x00	; 0
    23fc:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2400:	3e e0       	ldi	r19, 0x0E	; 14
    2402:	c3 0e       	add	r12, r19
    2404:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 5;
    2406:	b4 01       	movw	r22, r8
    2408:	a3 01       	movw	r20, r6
    240a:	44 0f       	add	r20, r20
    240c:	55 1f       	adc	r21, r21
    240e:	66 1f       	adc	r22, r22
    2410:	77 1f       	adc	r23, r23
    2412:	db 01       	movw	r26, r22
    2414:	ca 01       	movw	r24, r20
    2416:	88 0f       	add	r24, r24
    2418:	99 1f       	adc	r25, r25
    241a:	aa 1f       	adc	r26, r26
    241c:	bb 1f       	adc	r27, r27
    241e:	88 0f       	add	r24, r24
    2420:	99 1f       	adc	r25, r25
    2422:	aa 1f       	adc	r26, r26
    2424:	bb 1f       	adc	r27, r27
    2426:	84 0f       	add	r24, r20
    2428:	95 1f       	adc	r25, r21
    242a:	a6 1f       	adc	r26, r22
    242c:	b7 1f       	adc	r27, r23
    242e:	3c 01       	movw	r6, r24
    2430:	4d 01       	movw	r8, r26
    2432:	45 e0       	ldi	r20, 0x05	; 5
    2434:	64 0e       	add	r6, r20
    2436:	71 1c       	adc	r7, r1
    2438:	81 1c       	adc	r8, r1
    243a:	91 1c       	adc	r9, r1
    243c:	93 c0       	rjmp	.+294    	; 0x2564 <main+0x7e4>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    243e:	9c 01       	movw	r18, r24
    2440:	2e 54       	subi	r18, 0x4E	; 78
    2442:	31 09       	sbc	r19, r1
    2444:	20 33       	cpi	r18, 0x30	; 48
    2446:	31 05       	cpc	r19, r1
    2448:	60 f5       	brcc	.+88     	; 0x24a2 <main+0x722>
				{
					TFT_Text("6",mxpos,77,16,black,white);
    244a:	ee 24       	eor	r14, r14
    244c:	ea 94       	dec	r14
    244e:	fe 2c       	mov	r15, r14
    2450:	00 e0       	ldi	r16, 0x00	; 0
    2452:	10 e0       	ldi	r17, 0x00	; 0
    2454:	20 e1       	ldi	r18, 0x10	; 16
    2456:	4d e4       	ldi	r20, 0x4D	; 77
    2458:	50 e0       	ldi	r21, 0x00	; 0
    245a:	b6 01       	movw	r22, r12
    245c:	8a e6       	ldi	r24, 0x6A	; 106
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2464:	5e e0       	ldi	r21, 0x0E	; 14
    2466:	c5 0e       	add	r12, r21
    2468:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 6;
    246a:	b4 01       	movw	r22, r8
    246c:	a3 01       	movw	r20, r6
    246e:	44 0f       	add	r20, r20
    2470:	55 1f       	adc	r21, r21
    2472:	66 1f       	adc	r22, r22
    2474:	77 1f       	adc	r23, r23
    2476:	db 01       	movw	r26, r22
    2478:	ca 01       	movw	r24, r20
    247a:	88 0f       	add	r24, r24
    247c:	99 1f       	adc	r25, r25
    247e:	aa 1f       	adc	r26, r26
    2480:	bb 1f       	adc	r27, r27
    2482:	88 0f       	add	r24, r24
    2484:	99 1f       	adc	r25, r25
    2486:	aa 1f       	adc	r26, r26
    2488:	bb 1f       	adc	r27, r27
    248a:	84 0f       	add	r24, r20
    248c:	95 1f       	adc	r25, r21
    248e:	a6 1f       	adc	r26, r22
    2490:	b7 1f       	adc	r27, r23
    2492:	3c 01       	movw	r6, r24
    2494:	4d 01       	movw	r8, r26
    2496:	e6 e0       	ldi	r30, 0x06	; 6
    2498:	6e 0e       	add	r6, r30
    249a:	71 1c       	adc	r7, r1
    249c:	81 1c       	adc	r8, r1
    249e:	91 1c       	adc	r9, r1
    24a0:	61 c0       	rjmp	.+194    	; 0x2564 <main+0x7e4>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    24a2:	9c 01       	movw	r18, r24
    24a4:	22 58       	subi	r18, 0x82	; 130
    24a6:	31 09       	sbc	r19, r1
    24a8:	23 33       	cpi	r18, 0x33	; 51
    24aa:	31 05       	cpc	r19, r1
    24ac:	60 f5       	brcc	.+88     	; 0x2506 <main+0x786>
				{
					TFT_Text("7",mxpos,77,16,black,white);
    24ae:	ee 24       	eor	r14, r14
    24b0:	ea 94       	dec	r14
    24b2:	fe 2c       	mov	r15, r14
    24b4:	00 e0       	ldi	r16, 0x00	; 0
    24b6:	10 e0       	ldi	r17, 0x00	; 0
    24b8:	20 e1       	ldi	r18, 0x10	; 16
    24ba:	4d e4       	ldi	r20, 0x4D	; 77
    24bc:	50 e0       	ldi	r21, 0x00	; 0
    24be:	b6 01       	movw	r22, r12
    24c0:	8c e6       	ldi	r24, 0x6C	; 108
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    24c8:	fe e0       	ldi	r31, 0x0E	; 14
    24ca:	cf 0e       	add	r12, r31
    24cc:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 7;
    24ce:	b4 01       	movw	r22, r8
    24d0:	a3 01       	movw	r20, r6
    24d2:	44 0f       	add	r20, r20
    24d4:	55 1f       	adc	r21, r21
    24d6:	66 1f       	adc	r22, r22
    24d8:	77 1f       	adc	r23, r23
    24da:	db 01       	movw	r26, r22
    24dc:	ca 01       	movw	r24, r20
    24de:	88 0f       	add	r24, r24
    24e0:	99 1f       	adc	r25, r25
    24e2:	aa 1f       	adc	r26, r26
    24e4:	bb 1f       	adc	r27, r27
    24e6:	88 0f       	add	r24, r24
    24e8:	99 1f       	adc	r25, r25
    24ea:	aa 1f       	adc	r26, r26
    24ec:	bb 1f       	adc	r27, r27
    24ee:	84 0f       	add	r24, r20
    24f0:	95 1f       	adc	r25, r21
    24f2:	a6 1f       	adc	r26, r22
    24f4:	b7 1f       	adc	r27, r23
    24f6:	3c 01       	movw	r6, r24
    24f8:	4d 01       	movw	r8, r26
    24fa:	07 e0       	ldi	r16, 0x07	; 7
    24fc:	60 0e       	add	r6, r16
    24fe:	71 1c       	adc	r7, r1
    2500:	81 1c       	adc	r8, r1
    2502:	91 1c       	adc	r9, r1
    2504:	2f c0       	rjmp	.+94     	; 0x2564 <main+0x7e4>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    2506:	88 5b       	subi	r24, 0xB8	; 184
    2508:	91 09       	sbc	r25, r1
    250a:	c4 97       	sbiw	r24, 0x34	; 52
    250c:	58 f5       	brcc	.+86     	; 0x2564 <main+0x7e4>
				{
					TFT_Text("8",mxpos,77,16,black,white);
    250e:	ee 24       	eor	r14, r14
    2510:	ea 94       	dec	r14
    2512:	fe 2c       	mov	r15, r14
    2514:	00 e0       	ldi	r16, 0x00	; 0
    2516:	10 e0       	ldi	r17, 0x00	; 0
    2518:	20 e1       	ldi	r18, 0x10	; 16
    251a:	4d e4       	ldi	r20, 0x4D	; 77
    251c:	50 e0       	ldi	r21, 0x00	; 0
    251e:	b6 01       	movw	r22, r12
    2520:	8e e6       	ldi	r24, 0x6E	; 110
    2522:	90 e0       	ldi	r25, 0x00	; 0
    2524:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2528:	1e e0       	ldi	r17, 0x0E	; 14
    252a:	c1 0e       	add	r12, r17
    252c:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 8;
    252e:	b4 01       	movw	r22, r8
    2530:	a3 01       	movw	r20, r6
    2532:	44 0f       	add	r20, r20
    2534:	55 1f       	adc	r21, r21
    2536:	66 1f       	adc	r22, r22
    2538:	77 1f       	adc	r23, r23
    253a:	db 01       	movw	r26, r22
    253c:	ca 01       	movw	r24, r20
    253e:	88 0f       	add	r24, r24
    2540:	99 1f       	adc	r25, r25
    2542:	aa 1f       	adc	r26, r26
    2544:	bb 1f       	adc	r27, r27
    2546:	88 0f       	add	r24, r24
    2548:	99 1f       	adc	r25, r25
    254a:	aa 1f       	adc	r26, r26
    254c:	bb 1f       	adc	r27, r27
    254e:	84 0f       	add	r24, r20
    2550:	95 1f       	adc	r25, r21
    2552:	a6 1f       	adc	r26, r22
    2554:	b7 1f       	adc	r27, r23
    2556:	3c 01       	movw	r6, r24
    2558:	4d 01       	movw	r8, r26
    255a:	28 e0       	ldi	r18, 0x08	; 8
    255c:	62 0e       	add	r6, r18
    255e:	71 1c       	adc	r7, r1
    2560:	81 1c       	adc	r8, r1
    2562:	91 1c       	adc	r9, r1
				}
				while (!(PIND & (1<<PD3)));
    2564:	83 9b       	sbis	0x10, 3	; 16
    2566:	fe cf       	rjmp	.-4      	; 0x2564 <main+0x7e4>
    2568:	ce c0       	rjmp	.+412    	; 0x2706 <main+0x986>
			}
			else if (TPval[0]>115 && TPval[0]<150)  // 1 2 3 4 
    256a:	84 57       	subi	r24, 0x74	; 116
    256c:	91 09       	sbc	r25, r1
    256e:	82 97       	sbiw	r24, 0x22	; 34
    2570:	08 f0       	brcs	.+2      	; 0x2574 <main+0x7f4>
    2572:	c9 c0       	rjmp	.+402    	; 0x2706 <main+0x986>
			{
				if (TPval[1]>23 && TPval[1]<73)
    2574:	8b 81       	ldd	r24, Y+3	; 0x03
    2576:	9c 81       	ldd	r25, Y+4	; 0x04
    2578:	9c 01       	movw	r18, r24
    257a:	28 51       	subi	r18, 0x18	; 24
    257c:	31 09       	sbc	r19, r1
    257e:	21 33       	cpi	r18, 0x31	; 49
    2580:	31 05       	cpc	r19, r1
    2582:	60 f5       	brcc	.+88     	; 0x25dc <main+0x85c>
				{
					TFT_Text("1",mxpos,77,16,black,white);
    2584:	ee 24       	eor	r14, r14
    2586:	ea 94       	dec	r14
    2588:	fe 2c       	mov	r15, r14
    258a:	00 e0       	ldi	r16, 0x00	; 0
    258c:	10 e0       	ldi	r17, 0x00	; 0
    258e:	20 e1       	ldi	r18, 0x10	; 16
    2590:	4d e4       	ldi	r20, 0x4D	; 77
    2592:	50 e0       	ldi	r21, 0x00	; 0
    2594:	b6 01       	movw	r22, r12
    2596:	80 e6       	ldi	r24, 0x60	; 96
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    259e:	3e e0       	ldi	r19, 0x0E	; 14
    25a0:	c3 0e       	add	r12, r19
    25a2:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 1;
    25a4:	b4 01       	movw	r22, r8
    25a6:	a3 01       	movw	r20, r6
    25a8:	44 0f       	add	r20, r20
    25aa:	55 1f       	adc	r21, r21
    25ac:	66 1f       	adc	r22, r22
    25ae:	77 1f       	adc	r23, r23
    25b0:	db 01       	movw	r26, r22
    25b2:	ca 01       	movw	r24, r20
    25b4:	88 0f       	add	r24, r24
    25b6:	99 1f       	adc	r25, r25
    25b8:	aa 1f       	adc	r26, r26
    25ba:	bb 1f       	adc	r27, r27
    25bc:	88 0f       	add	r24, r24
    25be:	99 1f       	adc	r25, r25
    25c0:	aa 1f       	adc	r26, r26
    25c2:	bb 1f       	adc	r27, r27
    25c4:	84 0f       	add	r24, r20
    25c6:	95 1f       	adc	r25, r21
    25c8:	a6 1f       	adc	r26, r22
    25ca:	b7 1f       	adc	r27, r23
    25cc:	3c 01       	movw	r6, r24
    25ce:	4d 01       	movw	r8, r26
    25d0:	4f ef       	ldi	r20, 0xFF	; 255
    25d2:	64 1a       	sub	r6, r20
    25d4:	74 0a       	sbc	r7, r20
    25d6:	84 0a       	sbc	r8, r20
    25d8:	94 0a       	sbc	r9, r20
    25da:	93 c0       	rjmp	.+294    	; 0x2702 <main+0x982>
				}
				else if (TPval[1]>77 && TPval[1]<126)
    25dc:	9c 01       	movw	r18, r24
    25de:	2e 54       	subi	r18, 0x4E	; 78
    25e0:	31 09       	sbc	r19, r1
    25e2:	20 33       	cpi	r18, 0x30	; 48
    25e4:	31 05       	cpc	r19, r1
    25e6:	60 f5       	brcc	.+88     	; 0x2640 <main+0x8c0>
				{
					TFT_Text("2",mxpos,77,16,black,white);
    25e8:	ee 24       	eor	r14, r14
    25ea:	ea 94       	dec	r14
    25ec:	fe 2c       	mov	r15, r14
    25ee:	00 e0       	ldi	r16, 0x00	; 0
    25f0:	10 e0       	ldi	r17, 0x00	; 0
    25f2:	20 e1       	ldi	r18, 0x10	; 16
    25f4:	4d e4       	ldi	r20, 0x4D	; 77
    25f6:	50 e0       	ldi	r21, 0x00	; 0
    25f8:	b6 01       	movw	r22, r12
    25fa:	82 e6       	ldi	r24, 0x62	; 98
    25fc:	90 e0       	ldi	r25, 0x00	; 0
    25fe:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2602:	5e e0       	ldi	r21, 0x0E	; 14
    2604:	c5 0e       	add	r12, r21
    2606:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 2;
    2608:	b4 01       	movw	r22, r8
    260a:	a3 01       	movw	r20, r6
    260c:	44 0f       	add	r20, r20
    260e:	55 1f       	adc	r21, r21
    2610:	66 1f       	adc	r22, r22
    2612:	77 1f       	adc	r23, r23
    2614:	db 01       	movw	r26, r22
    2616:	ca 01       	movw	r24, r20
    2618:	88 0f       	add	r24, r24
    261a:	99 1f       	adc	r25, r25
    261c:	aa 1f       	adc	r26, r26
    261e:	bb 1f       	adc	r27, r27
    2620:	88 0f       	add	r24, r24
    2622:	99 1f       	adc	r25, r25
    2624:	aa 1f       	adc	r26, r26
    2626:	bb 1f       	adc	r27, r27
    2628:	84 0f       	add	r24, r20
    262a:	95 1f       	adc	r25, r21
    262c:	a6 1f       	adc	r26, r22
    262e:	b7 1f       	adc	r27, r23
    2630:	3c 01       	movw	r6, r24
    2632:	4d 01       	movw	r8, r26
    2634:	e2 e0       	ldi	r30, 0x02	; 2
    2636:	6e 0e       	add	r6, r30
    2638:	71 1c       	adc	r7, r1
    263a:	81 1c       	adc	r8, r1
    263c:	91 1c       	adc	r9, r1
    263e:	61 c0       	rjmp	.+194    	; 0x2702 <main+0x982>
				}
				else if (TPval[1]>129 && TPval[1]<181)
    2640:	9c 01       	movw	r18, r24
    2642:	22 58       	subi	r18, 0x82	; 130
    2644:	31 09       	sbc	r19, r1
    2646:	23 33       	cpi	r18, 0x33	; 51
    2648:	31 05       	cpc	r19, r1
    264a:	60 f5       	brcc	.+88     	; 0x26a4 <main+0x924>
				{
					TFT_Text("3",mxpos,77,16,black,white);
    264c:	ee 24       	eor	r14, r14
    264e:	ea 94       	dec	r14
    2650:	fe 2c       	mov	r15, r14
    2652:	00 e0       	ldi	r16, 0x00	; 0
    2654:	10 e0       	ldi	r17, 0x00	; 0
    2656:	20 e1       	ldi	r18, 0x10	; 16
    2658:	4d e4       	ldi	r20, 0x4D	; 77
    265a:	50 e0       	ldi	r21, 0x00	; 0
    265c:	b6 01       	movw	r22, r12
    265e:	84 e6       	ldi	r24, 0x64	; 100
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    2666:	fe e0       	ldi	r31, 0x0E	; 14
    2668:	cf 0e       	add	r12, r31
    266a:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 3;
    266c:	b4 01       	movw	r22, r8
    266e:	a3 01       	movw	r20, r6
    2670:	44 0f       	add	r20, r20
    2672:	55 1f       	adc	r21, r21
    2674:	66 1f       	adc	r22, r22
    2676:	77 1f       	adc	r23, r23
    2678:	db 01       	movw	r26, r22
    267a:	ca 01       	movw	r24, r20
    267c:	88 0f       	add	r24, r24
    267e:	99 1f       	adc	r25, r25
    2680:	aa 1f       	adc	r26, r26
    2682:	bb 1f       	adc	r27, r27
    2684:	88 0f       	add	r24, r24
    2686:	99 1f       	adc	r25, r25
    2688:	aa 1f       	adc	r26, r26
    268a:	bb 1f       	adc	r27, r27
    268c:	84 0f       	add	r24, r20
    268e:	95 1f       	adc	r25, r21
    2690:	a6 1f       	adc	r26, r22
    2692:	b7 1f       	adc	r27, r23
    2694:	3c 01       	movw	r6, r24
    2696:	4d 01       	movw	r8, r26
    2698:	03 e0       	ldi	r16, 0x03	; 3
    269a:	60 0e       	add	r6, r16
    269c:	71 1c       	adc	r7, r1
    269e:	81 1c       	adc	r8, r1
    26a0:	91 1c       	adc	r9, r1
    26a2:	2f c0       	rjmp	.+94     	; 0x2702 <main+0x982>
				}
				else if (TPval[1]>183 && TPval[1]<236)
    26a4:	88 5b       	subi	r24, 0xB8	; 184
    26a6:	91 09       	sbc	r25, r1
    26a8:	c4 97       	sbiw	r24, 0x34	; 52
    26aa:	58 f5       	brcc	.+86     	; 0x2702 <main+0x982>
				{
					TFT_Text("4",mxpos,77,16,black,white);
    26ac:	ee 24       	eor	r14, r14
    26ae:	ea 94       	dec	r14
    26b0:	fe 2c       	mov	r15, r14
    26b2:	00 e0       	ldi	r16, 0x00	; 0
    26b4:	10 e0       	ldi	r17, 0x00	; 0
    26b6:	20 e1       	ldi	r18, 0x10	; 16
    26b8:	4d e4       	ldi	r20, 0x4D	; 77
    26ba:	50 e0       	ldi	r21, 0x00	; 0
    26bc:	b6 01       	movw	r22, r12
    26be:	86 e6       	ldi	r24, 0x66	; 102
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
					mxpos+=14;
    26c6:	1e e0       	ldi	r17, 0x0E	; 14
    26c8:	c1 0e       	add	r12, r17
    26ca:	d1 1c       	adc	r13, r1
					kp_val = (kp_val * 10) + 4;
    26cc:	b4 01       	movw	r22, r8
    26ce:	a3 01       	movw	r20, r6
    26d0:	44 0f       	add	r20, r20
    26d2:	55 1f       	adc	r21, r21
    26d4:	66 1f       	adc	r22, r22
    26d6:	77 1f       	adc	r23, r23
    26d8:	db 01       	movw	r26, r22
    26da:	ca 01       	movw	r24, r20
    26dc:	88 0f       	add	r24, r24
    26de:	99 1f       	adc	r25, r25
    26e0:	aa 1f       	adc	r26, r26
    26e2:	bb 1f       	adc	r27, r27
    26e4:	88 0f       	add	r24, r24
    26e6:	99 1f       	adc	r25, r25
    26e8:	aa 1f       	adc	r26, r26
    26ea:	bb 1f       	adc	r27, r27
    26ec:	84 0f       	add	r24, r20
    26ee:	95 1f       	adc	r25, r21
    26f0:	a6 1f       	adc	r26, r22
    26f2:	b7 1f       	adc	r27, r23
    26f4:	3c 01       	movw	r6, r24
    26f6:	4d 01       	movw	r8, r26
    26f8:	24 e0       	ldi	r18, 0x04	; 4
    26fa:	62 0e       	add	r6, r18
    26fc:	71 1c       	adc	r7, r1
    26fe:	81 1c       	adc	r8, r1
    2700:	91 1c       	adc	r9, r1
				}
				while (!(PIND & (1<<PD3)));
    2702:	83 9b       	sbis	0x10, 3	; 16
    2704:	fe cf       	rjmp	.-4      	; 0x2702 <main+0x982>
    2706:	3f ef       	ldi	r19, 0xFF	; 255
    2708:	40 e7       	ldi	r20, 0x70	; 112
    270a:	52 e0       	ldi	r21, 0x02	; 2
    270c:	31 50       	subi	r19, 0x01	; 1
    270e:	40 40       	sbci	r20, 0x00	; 0
    2710:	50 40       	sbci	r21, 0x00	; 0
    2712:	e1 f7       	brne	.-8      	; 0x270c <main+0x98c>
    2714:	00 c0       	rjmp	.+0      	; 0x2716 <main+0x996>
    2716:	00 00       	nop
    2718:	fc cc       	rjmp	.-1544   	; 0x2112 <main+0x392>
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
					water = 70;
					temp = 25;
					time = 2;
    271a:	68 94       	set
    271c:	66 24       	eor	r6, r6
    271e:	61 f8       	bld	r6, 1
    2720:	71 2c       	mov	r7, r1
    2722:	81 2c       	mov	r8, r1
    2724:	91 2c       	mov	r9, r1
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
					water = 70;
					temp = 25;
    2726:	89 e1       	ldi	r24, 0x19	; 25
    2728:	89 8f       	std	Y+25, r24	; 0x19
    272a:	1a 8e       	std	Y+26, r1	; 0x1a
    272c:	1b 8e       	std	Y+27, r1	; 0x1b
    272e:	1c 8e       	std	Y+28, r1	; 0x1c
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>35 && TPval[1]<211)  // for taking predefined or manual input
			{
				if (TPval[0]>197 && TPval[0]<216)
				{
					water = 70;
    2730:	96 e4       	ldi	r25, 0x46	; 70
    2732:	9d 8b       	std	Y+21, r25	; 0x15
    2734:	1e 8a       	std	Y+22, r1	; 0x16
    2736:	1f 8a       	std	Y+23, r1	; 0x17
    2738:	18 8e       	std	Y+24, r1	; 0x18
    273a:	32 c0       	rjmp	.+100    	; 0x27a0 <main+0xa20>
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
					water = 70;
					temp = 50;
					time = 2;
    273c:	68 94       	set
    273e:	66 24       	eor	r6, r6
    2740:	61 f8       	bld	r6, 1
    2742:	71 2c       	mov	r7, r1
    2744:	81 2c       	mov	r8, r1
    2746:	91 2c       	mov	r9, r1
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
					water = 70;
					temp = 50;
    2748:	a2 e3       	ldi	r26, 0x32	; 50
    274a:	a9 8f       	std	Y+25, r26	; 0x19
    274c:	1a 8e       	std	Y+26, r1	; 0x1a
    274e:	1b 8e       	std	Y+27, r1	; 0x1b
    2750:	1c 8e       	std	Y+28, r1	; 0x1c
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>175 && TPval[0]<190)
				{
					water = 70;
    2752:	b6 e4       	ldi	r27, 0x46	; 70
    2754:	bd 8b       	std	Y+21, r27	; 0x15
    2756:	1e 8a       	std	Y+22, r1	; 0x16
    2758:	1f 8a       	std	Y+23, r1	; 0x17
    275a:	18 8e       	std	Y+24, r1	; 0x18
    275c:	21 c0       	rjmp	.+66     	; 0x27a0 <main+0xa20>
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
					water = 50;
					temp = 50;
					time = 2;
    275e:	68 94       	set
    2760:	66 24       	eor	r6, r6
    2762:	61 f8       	bld	r6, 1
    2764:	71 2c       	mov	r7, r1
    2766:	81 2c       	mov	r8, r1
    2768:	91 2c       	mov	r9, r1
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
					water = 50;
					temp = 50;
    276a:	e2 e3       	ldi	r30, 0x32	; 50
    276c:	e9 8f       	std	Y+25, r30	; 0x19
    276e:	1a 8e       	std	Y+26, r1	; 0x1a
    2770:	1b 8e       	std	Y+27, r1	; 0x1b
    2772:	1c 8e       	std	Y+28, r1	; 0x1c
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>148 && TPval[0]<167)
				{
					water = 50;
    2774:	f2 e3       	ldi	r31, 0x32	; 50
    2776:	fd 8b       	std	Y+21, r31	; 0x15
    2778:	1e 8a       	std	Y+22, r1	; 0x16
    277a:	1f 8a       	std	Y+23, r1	; 0x17
    277c:	18 8e       	std	Y+24, r1	; 0x18
    277e:	10 c0       	rjmp	.+32     	; 0x27a0 <main+0xa20>
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
					water = 60;
					temp = 50;
					time = 2;
    2780:	68 94       	set
    2782:	66 24       	eor	r6, r6
    2784:	61 f8       	bld	r6, 1
    2786:	71 2c       	mov	r7, r1
    2788:	81 2c       	mov	r8, r1
    278a:	91 2c       	mov	r9, r1
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
					water = 60;
					temp = 50;
    278c:	02 e3       	ldi	r16, 0x32	; 50
    278e:	09 8f       	std	Y+25, r16	; 0x19
    2790:	1a 8e       	std	Y+26, r1	; 0x1a
    2792:	1b 8e       	std	Y+27, r1	; 0x1b
    2794:	1c 8e       	std	Y+28, r1	; 0x1c
					time = 2;
					goto confirmation;
				}
				else if (TPval[0]>127 && TPval[0]<144)
				{
					water = 60;
    2796:	1c e3       	ldi	r17, 0x3C	; 60
    2798:	1d 8b       	std	Y+21, r17	; 0x15
    279a:	1e 8a       	std	Y+22, r1	; 0x16
    279c:	1f 8a       	std	Y+23, r1	; 0x17
    279e:	18 8e       	std	Y+24, r1	; 0x18
	
	//End task Input system
	
	//Start confirmation input
confirmation:
	TFT_Fill(back_color);
    27a0:	8f e1       	ldi	r24, 0x1F	; 31
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	TFT_Text("Water :      Liture",20,50,8,white,back_color);
    27a8:	0f 2e       	mov	r0, r31
    27aa:	ff e1       	ldi	r31, 0x1F	; 31
    27ac:	ef 2e       	mov	r14, r31
    27ae:	f1 2c       	mov	r15, r1
    27b0:	f0 2d       	mov	r31, r0
    27b2:	0f ef       	ldi	r16, 0xFF	; 255
    27b4:	1f ef       	ldi	r17, 0xFF	; 255
    27b6:	28 e0       	ldi	r18, 0x08	; 8
    27b8:	42 e3       	ldi	r20, 0x32	; 50
    27ba:	50 e0       	ldi	r21, 0x00	; 0
    27bc:	64 e1       	ldi	r22, 0x14	; 20
    27be:	70 e0       	ldi	r23, 0x00	; 0
    27c0:	8b e5       	ldi	r24, 0x5B	; 91
    27c2:	91 e0       	ldi	r25, 0x01	; 1
    27c4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(water,-1,84,50,8,white,back_color);
    27c8:	2d 89       	ldd	r18, Y+21	; 0x15
    27ca:	2e a7       	std	Y+46, r18	; 0x2e
    27cc:	3e 89       	ldd	r19, Y+22	; 0x16
    27ce:	3f a7       	std	Y+47, r19	; 0x2f
    27d0:	4f 89       	ldd	r20, Y+23	; 0x17
    27d2:	48 ab       	std	Y+48, r20	; 0x30
    27d4:	58 8d       	ldd	r21, Y+24	; 0x18
    27d6:	5d a3       	std	Y+37, r21	; 0x25
    27d8:	0f 2e       	mov	r0, r31
    27da:	ff e1       	ldi	r31, 0x1F	; 31
    27dc:	af 2e       	mov	r10, r31
    27de:	b1 2c       	mov	r11, r1
    27e0:	f0 2d       	mov	r31, r0
    27e2:	cc 24       	eor	r12, r12
    27e4:	ca 94       	dec	r12
    27e6:	dc 2c       	mov	r13, r12
    27e8:	68 94       	set
    27ea:	ee 24       	eor	r14, r14
    27ec:	e3 f8       	bld	r14, 3
    27ee:	02 e3       	ldi	r16, 0x32	; 50
    27f0:	10 e0       	ldi	r17, 0x00	; 0
    27f2:	24 e5       	ldi	r18, 0x54	; 84
    27f4:	30 e0       	ldi	r19, 0x00	; 0
    27f6:	4f ef       	ldi	r20, 0xFF	; 255
    27f8:	5f ef       	ldi	r21, 0xFF	; 255
    27fa:	6d 89       	ldd	r22, Y+21	; 0x15
    27fc:	7e 89       	ldd	r23, Y+22	; 0x16
    27fe:	8f 89       	ldd	r24, Y+23	; 0x17
    2800:	98 8d       	ldd	r25, Y+24	; 0x18
    2802:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Temp. :      Deg. C",20,70,8,white,back_color);
    2806:	0f 2e       	mov	r0, r31
    2808:	ff e1       	ldi	r31, 0x1F	; 31
    280a:	ef 2e       	mov	r14, r31
    280c:	f1 2c       	mov	r15, r1
    280e:	f0 2d       	mov	r31, r0
    2810:	0f ef       	ldi	r16, 0xFF	; 255
    2812:	1f ef       	ldi	r17, 0xFF	; 255
    2814:	28 e0       	ldi	r18, 0x08	; 8
    2816:	46 e4       	ldi	r20, 0x46	; 70
    2818:	50 e0       	ldi	r21, 0x00	; 0
    281a:	64 e1       	ldi	r22, 0x14	; 20
    281c:	70 e0       	ldi	r23, 0x00	; 0
    281e:	8f e6       	ldi	r24, 0x6F	; 111
    2820:	91 e0       	ldi	r25, 0x01	; 1
    2822:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(temp,-1,84,70,8,white,back_color);
    2826:	89 8d       	ldd	r24, Y+25	; 0x19
    2828:	8d 8f       	std	Y+29, r24	; 0x1d
    282a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    282c:	9e 8f       	std	Y+30, r25	; 0x1e
    282e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2830:	af 8f       	std	Y+31, r26	; 0x1f
    2832:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2834:	b8 a3       	std	Y+32, r27	; 0x20
    2836:	68 94       	set
    2838:	ee 24       	eor	r14, r14
    283a:	e3 f8       	bld	r14, 3
    283c:	06 e4       	ldi	r16, 0x46	; 70
    283e:	10 e0       	ldi	r17, 0x00	; 0
    2840:	24 e5       	ldi	r18, 0x54	; 84
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	4f ef       	ldi	r20, 0xFF	; 255
    2846:	5f ef       	ldi	r21, 0xFF	; 255
    2848:	68 2f       	mov	r22, r24
    284a:	79 2f       	mov	r23, r25
    284c:	8a 2f       	mov	r24, r26
    284e:	9b 2f       	mov	r25, r27
    2850:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Time  :      minute",20,90,8,white,back_color);
    2854:	0f 2e       	mov	r0, r31
    2856:	ff e1       	ldi	r31, 0x1F	; 31
    2858:	ef 2e       	mov	r14, r31
    285a:	f1 2c       	mov	r15, r1
    285c:	f0 2d       	mov	r31, r0
    285e:	0f ef       	ldi	r16, 0xFF	; 255
    2860:	1f ef       	ldi	r17, 0xFF	; 255
    2862:	28 e0       	ldi	r18, 0x08	; 8
    2864:	4a e5       	ldi	r20, 0x5A	; 90
    2866:	50 e0       	ldi	r21, 0x00	; 0
    2868:	64 e1       	ldi	r22, 0x14	; 20
    286a:	70 e0       	ldi	r23, 0x00	; 0
    286c:	83 e8       	ldi	r24, 0x83	; 131
    286e:	91 e0       	ldi	r25, 0x01	; 1
    2870:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(time,-1,84,90,8,white,back_color);
    2874:	69 a2       	std	Y+33, r6	; 0x21
    2876:	7a a2       	std	Y+34, r7	; 0x22
    2878:	8b a2       	std	Y+35, r8	; 0x23
    287a:	9c a2       	std	Y+36, r9	; 0x24
    287c:	68 94       	set
    287e:	ee 24       	eor	r14, r14
    2880:	e3 f8       	bld	r14, 3
    2882:	0a e5       	ldi	r16, 0x5A	; 90
    2884:	10 e0       	ldi	r17, 0x00	; 0
    2886:	24 e5       	ldi	r18, 0x54	; 84
    2888:	30 e0       	ldi	r19, 0x00	; 0
    288a:	4f ef       	ldi	r20, 0xFF	; 255
    288c:	5f ef       	ldi	r21, 0xFF	; 255
    288e:	c4 01       	movw	r24, r8
    2890:	b3 01       	movw	r22, r6
    2892:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Box(50,140,190,180,white);
    2896:	0f ef       	ldi	r16, 0xFF	; 255
    2898:	1f ef       	ldi	r17, 0xFF	; 255
    289a:	24 eb       	ldi	r18, 0xB4	; 180
    289c:	30 e0       	ldi	r19, 0x00	; 0
    289e:	4e eb       	ldi	r20, 0xBE	; 190
    28a0:	50 e0       	ldi	r21, 0x00	; 0
    28a2:	6c e8       	ldi	r22, 0x8C	; 140
    28a4:	70 e0       	ldi	r23, 0x00	; 0
    28a6:	82 e3       	ldi	r24, 0x32	; 50
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Box(50,200,190,240,white);
    28ae:	20 ef       	ldi	r18, 0xF0	; 240
    28b0:	30 e0       	ldi	r19, 0x00	; 0
    28b2:	4e eb       	ldi	r20, 0xBE	; 190
    28b4:	50 e0       	ldi	r21, 0x00	; 0
    28b6:	68 ec       	ldi	r22, 0xC8	; 200
    28b8:	70 e0       	ldi	r23, 0x00	; 0
    28ba:	82 e3       	ldi	r24, 0x32	; 50
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("CORRECT !",57,152,16,black,white);
    28c2:	ee 24       	eor	r14, r14
    28c4:	ea 94       	dec	r14
    28c6:	fe 2c       	mov	r15, r14
    28c8:	00 e0       	ldi	r16, 0x00	; 0
    28ca:	10 e0       	ldi	r17, 0x00	; 0
    28cc:	20 e1       	ldi	r18, 0x10	; 16
    28ce:	48 e9       	ldi	r20, 0x98	; 152
    28d0:	50 e0       	ldi	r21, 0x00	; 0
    28d2:	69 e3       	ldi	r22, 0x39	; 57
    28d4:	70 e0       	ldi	r23, 0x00	; 0
    28d6:	87 e9       	ldi	r24, 0x97	; 151
    28d8:	91 e0       	ldi	r25, 0x01	; 1
    28da:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("INCORRECT",57,212,16,red,white);
    28de:	00 e0       	ldi	r16, 0x00	; 0
    28e0:	18 ef       	ldi	r17, 0xF8	; 248
    28e2:	20 e1       	ldi	r18, 0x10	; 16
    28e4:	44 ed       	ldi	r20, 0xD4	; 212
    28e6:	50 e0       	ldi	r21, 0x00	; 0
    28e8:	69 e3       	ldi	r22, 0x39	; 57
    28ea:	70 e0       	ldi	r23, 0x00	; 0
    28ec:	81 ea       	ldi	r24, 0xA1	; 161
    28ee:	91 e0       	ldi	r25, 0x01	; 1
    28f0:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	while (!(PIND & (1<<PD3)));  // to eliminate the unwanted button press
    28f4:	83 9b       	sbis	0x10, 3	; 16
    28f6:	fe cf       	rjmp	.-4      	; 0x28f4 <main+0xb74>
	while(1)
	{
		if (!(PIND & (1<<PD3)))
    28f8:	83 99       	sbic	0x10, 3	; 16
    28fa:	fe cf       	rjmp	.-4      	; 0x28f8 <main+0xb78>
		{
			Read_TPval(TPval);
    28fc:	82 2d       	mov	r24, r2
    28fe:	93 2d       	mov	r25, r3
    2900:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    2904:	ef e1       	ldi	r30, 0x1F	; 31
    2906:	fe e4       	ldi	r31, 0x4E	; 78
    2908:	31 97       	sbiw	r30, 0x01	; 1
    290a:	f1 f7       	brne	.-4      	; 0x2908 <main+0xb88>
    290c:	00 c0       	rjmp	.+0      	; 0x290e <main+0xb8e>
    290e:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    2910:	82 2d       	mov	r24, r2
    2912:	93 2d       	mov	r25, r3
    2914:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[1]>60 && TPval[1]<195)
    2918:	2b 81       	ldd	r18, Y+3	; 0x03
    291a:	3c 81       	ldd	r19, Y+4	; 0x04
    291c:	2d 53       	subi	r18, 0x3D	; 61
    291e:	31 09       	sbc	r19, r1
    2920:	26 38       	cpi	r18, 0x86	; 134
    2922:	31 05       	cpc	r19, r1
    2924:	48 f7       	brcc	.-46     	; 0x28f8 <main+0xb78>
			{
				if (TPval[0]>120 && TPval[0]<150)  //Correct button
    2926:	29 81       	ldd	r18, Y+1	; 0x01
    2928:	3a 81       	ldd	r19, Y+2	; 0x02
    292a:	a9 01       	movw	r20, r18
    292c:	49 57       	subi	r20, 0x79	; 121
    292e:	51 09       	sbc	r21, r1
    2930:	4d 31       	cpi	r20, 0x1D	; 29
    2932:	51 05       	cpc	r21, r1
    2934:	80 f0       	brcs	.+32     	; 0x2956 <main+0xbd6>
				{
					break;
				}
				else if (TPval[0]>75 && TPval[0]<105)  // Incorrect button
    2936:	2c 54       	subi	r18, 0x4C	; 76
    2938:	31 09       	sbc	r19, r1
    293a:	2d 31       	cpi	r18, 0x1D	; 29
    293c:	31 05       	cpc	r19, r1
    293e:	08 f4       	brcc	.+2      	; 0x2942 <main+0xbc2>
    2940:	fb ca       	rjmp	.-2570   	; 0x1f38 <main+0x1b8>
    2942:	ff ef       	ldi	r31, 0xFF	; 255
    2944:	00 e7       	ldi	r16, 0x70	; 112
    2946:	12 e0       	ldi	r17, 0x02	; 2
    2948:	f1 50       	subi	r31, 0x01	; 1
    294a:	00 40       	sbci	r16, 0x00	; 0
    294c:	10 40       	sbci	r17, 0x00	; 0
    294e:	e1 f7       	brne	.-8      	; 0x2948 <main+0xbc8>
    2950:	00 c0       	rjmp	.+0      	; 0x2952 <main+0xbd2>
    2952:	00 00       	nop
    2954:	d1 cf       	rjmp	.-94     	; 0x28f8 <main+0xb78>
    2956:	69 8a       	std	Y+17, r6	; 0x11
    2958:	7a 8a       	std	Y+18, r7	; 0x12
    295a:	8b 8a       	std	Y+19, r8	; 0x13
    295c:	9c 8a       	std	Y+20, r9	; 0x14
    295e:	9e a4       	ldd	r9, Y+46	; 0x2e
    2960:	8f a4       	ldd	r8, Y+47	; 0x2f
    2962:	78 a8       	ldd	r7, Y+48	; 0x30
    2964:	29 8d       	ldd	r18, Y+25	; 0x19
    2966:	2f 83       	std	Y+7, r18	; 0x07
    2968:	3a 8d       	ldd	r19, Y+26	; 0x1a
    296a:	38 87       	std	Y+8, r19	; 0x08
    296c:	4b 8d       	ldd	r20, Y+27	; 0x1b
    296e:	49 87       	std	Y+9, r20	; 0x09
    2970:	5c 8d       	ldd	r21, Y+28	; 0x1c
    2972:	5a 87       	std	Y+10, r21	; 0x0a
    2974:	8d 89       	ldd	r24, Y+21	; 0x15
    2976:	8b 87       	std	Y+11, r24	; 0x0b
    2978:	9e 89       	ldd	r25, Y+22	; 0x16
    297a:	9c 87       	std	Y+12, r25	; 0x0c
    297c:	af 89       	ldd	r26, Y+23	; 0x17
    297e:	ad 87       	std	Y+13, r26	; 0x0d
    2980:	b8 8d       	ldd	r27, Y+24	; 0x18
    2982:	be 87       	std	Y+14, r27	; 0x0e
		}
	}
	//End confirmation input
	
	//Start progress page
	TFT_Fill(back_color);
    2984:	8f e1       	ldi	r24, 0x1F	; 31
    2986:	90 e0       	ldi	r25, 0x00	; 0
    2988:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	TFT_Text("Progress monitor...",20,20,8,white,back_color);
    298c:	0f 2e       	mov	r0, r31
    298e:	ff e1       	ldi	r31, 0x1F	; 31
    2990:	ef 2e       	mov	r14, r31
    2992:	f1 2c       	mov	r15, r1
    2994:	f0 2d       	mov	r31, r0
    2996:	0f ef       	ldi	r16, 0xFF	; 255
    2998:	1f ef       	ldi	r17, 0xFF	; 255
    299a:	28 e0       	ldi	r18, 0x08	; 8
    299c:	44 e1       	ldi	r20, 0x14	; 20
    299e:	50 e0       	ldi	r21, 0x00	; 0
    29a0:	64 e1       	ldi	r22, 0x14	; 20
    29a2:	70 e0       	ldi	r23, 0x00	; 0
    29a4:	8b ea       	ldi	r24, 0xAB	; 171
    29a6:	91 e0       	ldi	r25, 0x01	; 1
    29a8:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	
	TFT_Box(30,40,210,56,white);
    29ac:	28 e3       	ldi	r18, 0x38	; 56
    29ae:	30 e0       	ldi	r19, 0x00	; 0
    29b0:	42 ed       	ldi	r20, 0xD2	; 210
    29b2:	50 e0       	ldi	r21, 0x00	; 0
    29b4:	68 e2       	ldi	r22, 0x28	; 40
    29b6:	70 e0       	ldi	r23, 0x00	; 0
    29b8:	8e e1       	ldi	r24, 0x1E	; 30
    29ba:	90 e0       	ldi	r25, 0x00	; 0
    29bc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Rectangle(30,56,210,120,white);
    29c0:	28 e7       	ldi	r18, 0x78	; 120
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	42 ed       	ldi	r20, 0xD2	; 210
    29c6:	50 e0       	ldi	r21, 0x00	; 0
    29c8:	68 e3       	ldi	r22, 0x38	; 56
    29ca:	70 e0       	ldi	r23, 0x00	; 0
    29cc:	8e e1       	ldi	r24, 0x1E	; 30
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	0e 94 57 0a 	call	0x14ae	; 0x14ae <TFT_Rectangle>
	TFT_Text("Water:",35,44,8,black,white);
    29d4:	ee 24       	eor	r14, r14
    29d6:	ea 94       	dec	r14
    29d8:	fe 2c       	mov	r15, r14
    29da:	00 e0       	ldi	r16, 0x00	; 0
    29dc:	10 e0       	ldi	r17, 0x00	; 0
    29de:	28 e0       	ldi	r18, 0x08	; 8
    29e0:	4c e2       	ldi	r20, 0x2C	; 44
    29e2:	50 e0       	ldi	r21, 0x00	; 0
    29e4:	63 e2       	ldi	r22, 0x23	; 35
    29e6:	70 e0       	ldi	r23, 0x00	; 0
    29e8:	8f eb       	ldi	r24, 0xBF	; 191
    29ea:	91 e0       	ldi	r25, 0x01	; 1
    29ec:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Status   : Valve Off",35,60,8,white,back_color); // Idle, Loading, Complete//On
    29f0:	0f 2e       	mov	r0, r31
    29f2:	ff e1       	ldi	r31, 0x1F	; 31
    29f4:	ef 2e       	mov	r14, r31
    29f6:	f1 2c       	mov	r15, r1
    29f8:	f0 2d       	mov	r31, r0
    29fa:	0f ef       	ldi	r16, 0xFF	; 255
    29fc:	1f ef       	ldi	r17, 0xFF	; 255
    29fe:	28 e0       	ldi	r18, 0x08	; 8
    2a00:	4c e3       	ldi	r20, 0x3C	; 60
    2a02:	50 e0       	ldi	r21, 0x00	; 0
    2a04:	63 e2       	ldi	r22, 0x23	; 35
    2a06:	70 e0       	ldi	r23, 0x00	; 0
    2a08:	86 ec       	ldi	r24, 0xC6	; 198
    2a0a:	91 e0       	ldi	r25, 0x01	; 1
    2a0c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("0   %     0   Liter",43,72,8,white,back_color);
    2a10:	28 e0       	ldi	r18, 0x08	; 8
    2a12:	48 e4       	ldi	r20, 0x48	; 72
    2a14:	50 e0       	ldi	r21, 0x00	; 0
    2a16:	6b e2       	ldi	r22, 0x2B	; 43
    2a18:	70 e0       	ldi	r23, 0x00	; 0
    2a1a:	8b ed       	ldi	r24, 0xDB	; 219
    2a1c:	91 e0       	ldi	r25, 0x01	; 1
    2a1e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Target   :     Liter",35,84,8,white,back_color);
    2a22:	28 e0       	ldi	r18, 0x08	; 8
    2a24:	44 e5       	ldi	r20, 0x54	; 84
    2a26:	50 e0       	ldi	r21, 0x00	; 0
    2a28:	63 e2       	ldi	r22, 0x23	; 35
    2a2a:	70 e0       	ldi	r23, 0x00	; 0
    2a2c:	8f ee       	ldi	r24, 0xEF	; 239
    2a2e:	91 e0       	ldi	r25, 0x01	; 1
    2a30:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(water,-1,123,84,8,white,back_color);
    2a34:	0f 2e       	mov	r0, r31
    2a36:	ff e1       	ldi	r31, 0x1F	; 31
    2a38:	af 2e       	mov	r10, r31
    2a3a:	b1 2c       	mov	r11, r1
    2a3c:	f0 2d       	mov	r31, r0
    2a3e:	cc 24       	eor	r12, r12
    2a40:	ca 94       	dec	r12
    2a42:	dc 2c       	mov	r13, r12
    2a44:	68 94       	set
    2a46:	ee 24       	eor	r14, r14
    2a48:	e3 f8       	bld	r14, 3
    2a4a:	04 e5       	ldi	r16, 0x54	; 84
    2a4c:	10 e0       	ldi	r17, 0x00	; 0
    2a4e:	2b e7       	ldi	r18, 0x7B	; 123
    2a50:	30 e0       	ldi	r19, 0x00	; 0
    2a52:	4f ef       	ldi	r20, 0xFF	; 255
    2a54:	5f ef       	ldi	r21, 0xFF	; 255
    2a56:	69 2d       	mov	r22, r9
    2a58:	78 2d       	mov	r23, r8
    2a5a:	87 2d       	mov	r24, r7
    2a5c:	9d a1       	ldd	r25, Y+37	; 0x25
    2a5e:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Remaining:     Liter",35,102,8,white,back_color);
    2a62:	0f 2e       	mov	r0, r31
    2a64:	ff e1       	ldi	r31, 0x1F	; 31
    2a66:	ef 2e       	mov	r14, r31
    2a68:	f1 2c       	mov	r15, r1
    2a6a:	f0 2d       	mov	r31, r0
    2a6c:	0f ef       	ldi	r16, 0xFF	; 255
    2a6e:	1f ef       	ldi	r17, 0xFF	; 255
    2a70:	28 e0       	ldi	r18, 0x08	; 8
    2a72:	46 e6       	ldi	r20, 0x66	; 102
    2a74:	50 e0       	ldi	r21, 0x00	; 0
    2a76:	63 e2       	ldi	r22, 0x23	; 35
    2a78:	70 e0       	ldi	r23, 0x00	; 0
    2a7a:	84 e0       	ldi	r24, 0x04	; 4
    2a7c:	92 e0       	ldi	r25, 0x02	; 2
    2a7e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(water,4,123,102,8,white,back_color);
    2a82:	68 94       	set
    2a84:	ee 24       	eor	r14, r14
    2a86:	e3 f8       	bld	r14, 3
    2a88:	06 e6       	ldi	r16, 0x66	; 102
    2a8a:	10 e0       	ldi	r17, 0x00	; 0
    2a8c:	2b e7       	ldi	r18, 0x7B	; 123
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	44 e0       	ldi	r20, 0x04	; 4
    2a92:	50 e0       	ldi	r21, 0x00	; 0
    2a94:	69 2d       	mov	r22, r9
    2a96:	78 2d       	mov	r23, r8
    2a98:	87 2d       	mov	r24, r7
    2a9a:	9d a1       	ldd	r25, Y+37	; 0x25
    2a9c:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	
	TFT_Box(30,128,210,144,white);
    2aa0:	0f ef       	ldi	r16, 0xFF	; 255
    2aa2:	1f ef       	ldi	r17, 0xFF	; 255
    2aa4:	20 e9       	ldi	r18, 0x90	; 144
    2aa6:	30 e0       	ldi	r19, 0x00	; 0
    2aa8:	42 ed       	ldi	r20, 0xD2	; 210
    2aaa:	50 e0       	ldi	r21, 0x00	; 0
    2aac:	60 e8       	ldi	r22, 0x80	; 128
    2aae:	70 e0       	ldi	r23, 0x00	; 0
    2ab0:	8e e1       	ldi	r24, 0x1E	; 30
    2ab2:	90 e0       	ldi	r25, 0x00	; 0
    2ab4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Rectangle(30,144,210,208,white);
    2ab8:	20 ed       	ldi	r18, 0xD0	; 208
    2aba:	30 e0       	ldi	r19, 0x00	; 0
    2abc:	42 ed       	ldi	r20, 0xD2	; 210
    2abe:	50 e0       	ldi	r21, 0x00	; 0
    2ac0:	60 e9       	ldi	r22, 0x90	; 144
    2ac2:	70 e0       	ldi	r23, 0x00	; 0
    2ac4:	8e e1       	ldi	r24, 0x1E	; 30
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	0e 94 57 0a 	call	0x14ae	; 0x14ae <TFT_Rectangle>
	TFT_Text("Temperature:",35,132,8,black,white);
    2acc:	ee 24       	eor	r14, r14
    2ace:	ea 94       	dec	r14
    2ad0:	fe 2c       	mov	r15, r14
    2ad2:	00 e0       	ldi	r16, 0x00	; 0
    2ad4:	10 e0       	ldi	r17, 0x00	; 0
    2ad6:	28 e0       	ldi	r18, 0x08	; 8
    2ad8:	44 e8       	ldi	r20, 0x84	; 132
    2ada:	50 e0       	ldi	r21, 0x00	; 0
    2adc:	63 e2       	ldi	r22, 0x23	; 35
    2ade:	70 e0       	ldi	r23, 0x00	; 0
    2ae0:	8c e8       	ldi	r24, 0x8C	; 140
    2ae2:	90 e0       	ldi	r25, 0x00	; 0
    2ae4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Status   : Valve Off",35,148,8,white,back_color);  //NC, Rising, Complete
    2ae8:	0f 2e       	mov	r0, r31
    2aea:	ff e1       	ldi	r31, 0x1F	; 31
    2aec:	ef 2e       	mov	r14, r31
    2aee:	f1 2c       	mov	r15, r1
    2af0:	f0 2d       	mov	r31, r0
    2af2:	0f ef       	ldi	r16, 0xFF	; 255
    2af4:	1f ef       	ldi	r17, 0xFF	; 255
    2af6:	28 e0       	ldi	r18, 0x08	; 8
    2af8:	44 e9       	ldi	r20, 0x94	; 148
    2afa:	50 e0       	ldi	r21, 0x00	; 0
    2afc:	63 e2       	ldi	r22, 0x23	; 35
    2afe:	70 e0       	ldi	r23, 0x00	; 0
    2b00:	86 ec       	ldi	r24, 0xC6	; 198
    2b02:	91 e0       	ldi	r25, 0x01	; 1
    2b04:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("0   %     N   Deg.C",43,160,8,white,back_color);
    2b08:	28 e0       	ldi	r18, 0x08	; 8
    2b0a:	40 ea       	ldi	r20, 0xA0	; 160
    2b0c:	50 e0       	ldi	r21, 0x00	; 0
    2b0e:	6b e2       	ldi	r22, 0x2B	; 43
    2b10:	70 e0       	ldi	r23, 0x00	; 0
    2b12:	89 e1       	ldi	r24, 0x19	; 25
    2b14:	92 e0       	ldi	r25, 0x02	; 2
    2b16:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Target   :     Deg.C",35,172,8,white,back_color);
    2b1a:	28 e0       	ldi	r18, 0x08	; 8
    2b1c:	4c ea       	ldi	r20, 0xAC	; 172
    2b1e:	50 e0       	ldi	r21, 0x00	; 0
    2b20:	63 e2       	ldi	r22, 0x23	; 35
    2b22:	70 e0       	ldi	r23, 0x00	; 0
    2b24:	8d e2       	ldi	r24, 0x2D	; 45
    2b26:	92 e0       	ldi	r25, 0x02	; 2
    2b28:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(temp,-1,123,172,8,white,back_color);
    2b2c:	68 94       	set
    2b2e:	ee 24       	eor	r14, r14
    2b30:	e3 f8       	bld	r14, 3
    2b32:	0c ea       	ldi	r16, 0xAC	; 172
    2b34:	10 e0       	ldi	r17, 0x00	; 0
    2b36:	2b e7       	ldi	r18, 0x7B	; 123
    2b38:	30 e0       	ldi	r19, 0x00	; 0
    2b3a:	4f ef       	ldi	r20, 0xFF	; 255
    2b3c:	5f ef       	ldi	r21, 0xFF	; 255
    2b3e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2b40:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2b42:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b44:	98 a1       	ldd	r25, Y+32	; 0x20
    2b46:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Remaining:     Deg.C",35,188,8,white,back_color);
    2b4a:	0f 2e       	mov	r0, r31
    2b4c:	ff e1       	ldi	r31, 0x1F	; 31
    2b4e:	ef 2e       	mov	r14, r31
    2b50:	f1 2c       	mov	r15, r1
    2b52:	f0 2d       	mov	r31, r0
    2b54:	0f ef       	ldi	r16, 0xFF	; 255
    2b56:	1f ef       	ldi	r17, 0xFF	; 255
    2b58:	28 e0       	ldi	r18, 0x08	; 8
    2b5a:	4c eb       	ldi	r20, 0xBC	; 188
    2b5c:	50 e0       	ldi	r21, 0x00	; 0
    2b5e:	63 e2       	ldi	r22, 0x23	; 35
    2b60:	70 e0       	ldi	r23, 0x00	; 0
    2b62:	82 e4       	ldi	r24, 0x42	; 66
    2b64:	92 e0       	ldi	r25, 0x02	; 2
    2b66:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(temp,3,123,188,8,white,back_color);
    2b6a:	68 94       	set
    2b6c:	ee 24       	eor	r14, r14
    2b6e:	e3 f8       	bld	r14, 3
    2b70:	0c eb       	ldi	r16, 0xBC	; 188
    2b72:	10 e0       	ldi	r17, 0x00	; 0
    2b74:	2b e7       	ldi	r18, 0x7B	; 123
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	43 e0       	ldi	r20, 0x03	; 3
    2b7a:	50 e0       	ldi	r21, 0x00	; 0
    2b7c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2b7e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2b80:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b82:	98 a1       	ldd	r25, Y+32	; 0x20
    2b84:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	
	TFT_Box(30,216,210,232,white);
    2b88:	0f ef       	ldi	r16, 0xFF	; 255
    2b8a:	1f ef       	ldi	r17, 0xFF	; 255
    2b8c:	28 ee       	ldi	r18, 0xE8	; 232
    2b8e:	30 e0       	ldi	r19, 0x00	; 0
    2b90:	42 ed       	ldi	r20, 0xD2	; 210
    2b92:	50 e0       	ldi	r21, 0x00	; 0
    2b94:	68 ed       	ldi	r22, 0xD8	; 216
    2b96:	70 e0       	ldi	r23, 0x00	; 0
    2b98:	8e e1       	ldi	r24, 0x1E	; 30
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Rectangle(30,232,210,296,white);
    2ba0:	28 e2       	ldi	r18, 0x28	; 40
    2ba2:	31 e0       	ldi	r19, 0x01	; 1
    2ba4:	42 ed       	ldi	r20, 0xD2	; 210
    2ba6:	50 e0       	ldi	r21, 0x00	; 0
    2ba8:	68 ee       	ldi	r22, 0xE8	; 232
    2baa:	70 e0       	ldi	r23, 0x00	; 0
    2bac:	8e e1       	ldi	r24, 0x1E	; 30
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	0e 94 57 0a 	call	0x14ae	; 0x14ae <TFT_Rectangle>
	TFT_Text("Time:",35,220,8,black,white);
    2bb4:	ee 24       	eor	r14, r14
    2bb6:	ea 94       	dec	r14
    2bb8:	fe 2c       	mov	r15, r14
    2bba:	00 e0       	ldi	r16, 0x00	; 0
    2bbc:	10 e0       	ldi	r17, 0x00	; 0
    2bbe:	28 e0       	ldi	r18, 0x08	; 8
    2bc0:	4c ed       	ldi	r20, 0xDC	; 220
    2bc2:	50 e0       	ldi	r21, 0x00	; 0
    2bc4:	63 e2       	ldi	r22, 0x23	; 35
    2bc6:	70 e0       	ldi	r23, 0x00	; 0
    2bc8:	87 e5       	ldi	r24, 0x57	; 87
    2bca:	92 e0       	ldi	r25, 0x02	; 2
    2bcc:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Status   : Idle",35,236,8,white,back_color);   //Idle , Counting, Complete
    2bd0:	0f 2e       	mov	r0, r31
    2bd2:	ff e1       	ldi	r31, 0x1F	; 31
    2bd4:	ef 2e       	mov	r14, r31
    2bd6:	f1 2c       	mov	r15, r1
    2bd8:	f0 2d       	mov	r31, r0
    2bda:	0f ef       	ldi	r16, 0xFF	; 255
    2bdc:	1f ef       	ldi	r17, 0xFF	; 255
    2bde:	28 e0       	ldi	r18, 0x08	; 8
    2be0:	4c ee       	ldi	r20, 0xEC	; 236
    2be2:	50 e0       	ldi	r21, 0x00	; 0
    2be4:	63 e2       	ldi	r22, 0x23	; 35
    2be6:	70 e0       	ldi	r23, 0x00	; 0
    2be8:	8d e5       	ldi	r24, 0x5D	; 93
    2bea:	92 e0       	ldi	r25, 0x02	; 2
    2bec:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Target   :     min",35,248,8,white,back_color);
    2bf0:	28 e0       	ldi	r18, 0x08	; 8
    2bf2:	48 ef       	ldi	r20, 0xF8	; 248
    2bf4:	50 e0       	ldi	r21, 0x00	; 0
    2bf6:	63 e2       	ldi	r22, 0x23	; 35
    2bf8:	70 e0       	ldi	r23, 0x00	; 0
    2bfa:	8d e6       	ldi	r24, 0x6D	; 109
    2bfc:	92 e0       	ldi	r25, 0x02	; 2
    2bfe:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(time,-1,123,248,8,white,back_color);
    2c02:	68 94       	set
    2c04:	ee 24       	eor	r14, r14
    2c06:	e3 f8       	bld	r14, 3
    2c08:	08 ef       	ldi	r16, 0xF8	; 248
    2c0a:	10 e0       	ldi	r17, 0x00	; 0
    2c0c:	2b e7       	ldi	r18, 0x7B	; 123
    2c0e:	30 e0       	ldi	r19, 0x00	; 0
    2c10:	4f ef       	ldi	r20, 0xFF	; 255
    2c12:	5f ef       	ldi	r21, 0xFF	; 255
    2c14:	69 a1       	ldd	r22, Y+33	; 0x21
    2c16:	7a a1       	ldd	r23, Y+34	; 0x22
    2c18:	8b a1       	ldd	r24, Y+35	; 0x23
    2c1a:	9c a1       	ldd	r25, Y+36	; 0x24
    2c1c:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Counted  : 0      min",35,260,8,white,back_color);
    2c20:	0f 2e       	mov	r0, r31
    2c22:	ff e1       	ldi	r31, 0x1F	; 31
    2c24:	ef 2e       	mov	r14, r31
    2c26:	f1 2c       	mov	r15, r1
    2c28:	f0 2d       	mov	r31, r0
    2c2a:	0f ef       	ldi	r16, 0xFF	; 255
    2c2c:	1f ef       	ldi	r17, 0xFF	; 255
    2c2e:	28 e0       	ldi	r18, 0x08	; 8
    2c30:	44 e0       	ldi	r20, 0x04	; 4
    2c32:	51 e0       	ldi	r21, 0x01	; 1
    2c34:	63 e2       	ldi	r22, 0x23	; 35
    2c36:	70 e0       	ldi	r23, 0x00	; 0
    2c38:	80 e8       	ldi	r24, 0x80	; 128
    2c3a:	92 e0       	ldi	r25, 0x02	; 2
    2c3c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Text("Remaining:       min",35,276,8,white,back_color);
    2c40:	28 e0       	ldi	r18, 0x08	; 8
    2c42:	44 e1       	ldi	r20, 0x14	; 20
    2c44:	51 e0       	ldi	r21, 0x01	; 1
    2c46:	63 e2       	ldi	r22, 0x23	; 35
    2c48:	70 e0       	ldi	r23, 0x00	; 0
    2c4a:	86 e9       	ldi	r24, 0x96	; 150
    2c4c:	92 e0       	ldi	r25, 0x02	; 2
    2c4e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_PutsInt(time,4,123,276,8,white,back_color);
    2c52:	68 94       	set
    2c54:	ee 24       	eor	r14, r14
    2c56:	e3 f8       	bld	r14, 3
    2c58:	04 e1       	ldi	r16, 0x14	; 20
    2c5a:	11 e0       	ldi	r17, 0x01	; 1
    2c5c:	2b e7       	ldi	r18, 0x7B	; 123
    2c5e:	30 e0       	ldi	r19, 0x00	; 0
    2c60:	44 e0       	ldi	r20, 0x04	; 4
    2c62:	50 e0       	ldi	r21, 0x00	; 0
    2c64:	69 a1       	ldd	r22, Y+33	; 0x21
    2c66:	7a a1       	ldd	r23, Y+34	; 0x22
    2c68:	8b a1       	ldd	r24, Y+35	; 0x23
    2c6a:	9c a1       	ldd	r25, Y+36	; 0x24
    2c6c:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	
	//Applying one by one method to calculate water, temperature and time measurement
	
	i_water = 0;
    2c70:	10 92 da 02 	sts	0x02DA, r1
    2c74:	10 92 db 02 	sts	0x02DB, r1
    2c78:	10 92 dc 02 	sts	0x02DC, r1
    2c7c:	10 92 dd 02 	sts	0x02DD, r1
	i_time = 0;
    2c80:	10 92 d6 02 	sts	0x02D6, r1
    2c84:	10 92 d7 02 	sts	0x02D7, r1
    2c88:	10 92 d8 02 	sts	0x02D8, r1
    2c8c:	10 92 d9 02 	sts	0x02D9, r1
	while (1) //This while loop is for water valve open after 5 seconds
	{
		if (i_time > 2)
    2c90:	60 e0       	ldi	r22, 0x00	; 0
    2c92:	70 e0       	ldi	r23, 0x00	; 0
    2c94:	80 e0       	ldi	r24, 0x00	; 0
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	12 c0       	rjmp	.+36     	; 0x2cbe <main+0xf3e>
		{
			PORTD |= (1<<0);  //This port pin is for water valve on
    2c9a:	90 9a       	sbi	0x12, 0	; 18
			TFT_Text("On ",171,60,8,white,red);
    2c9c:	0f 2e       	mov	r0, r31
    2c9e:	e1 2c       	mov	r14, r1
    2ca0:	f8 ef       	ldi	r31, 0xF8	; 248
    2ca2:	ff 2e       	mov	r15, r31
    2ca4:	f0 2d       	mov	r31, r0
    2ca6:	0f ef       	ldi	r16, 0xFF	; 255
    2ca8:	1f ef       	ldi	r17, 0xFF	; 255
    2caa:	28 e0       	ldi	r18, 0x08	; 8
    2cac:	4c e3       	ldi	r20, 0x3C	; 60
    2cae:	50 e0       	ldi	r21, 0x00	; 0
    2cb0:	6b ea       	ldi	r22, 0xAB	; 171
    2cb2:	70 e0       	ldi	r23, 0x00	; 0
    2cb4:	8b ea       	ldi	r24, 0xAB	; 171
    2cb6:	92 e0       	ldi	r25, 0x02	; 2
    2cb8:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			break;
    2cbc:	21 c0       	rjmp	.+66     	; 0x2d00 <main+0xf80>
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    2cbe:	aa 24       	eor	r10, r10
    2cc0:	aa 94       	dec	r10
    2cc2:	ba 2c       	mov	r11, r10
    2cc4:	0f 2e       	mov	r0, r31
    2cc6:	ff e1       	ldi	r31, 0x1F	; 31
    2cc8:	cf 2e       	mov	r12, r31
    2cca:	d1 2c       	mov	r13, r1
    2ccc:	f0 2d       	mov	r31, r0
    2cce:	68 94       	set
    2cd0:	ee 24       	eor	r14, r14
    2cd2:	e3 f8       	bld	r14, 3
    2cd4:	05 e0       	ldi	r16, 0x05	; 5
    2cd6:	10 e0       	ldi	r17, 0x00	; 0
    2cd8:	25 e0       	ldi	r18, 0x05	; 5
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	44 e0       	ldi	r20, 0x04	; 4
    2cde:	50 e0       	ldi	r21, 0x00	; 0
    2ce0:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	
	i_water = 0;
	i_time = 0;
	while (1) //This while loop is for water valve open after 5 seconds
	{
		if (i_time > 2)
    2ce4:	60 91 d6 02 	lds	r22, 0x02D6
    2ce8:	70 91 d7 02 	lds	r23, 0x02D7
    2cec:	80 91 d8 02 	lds	r24, 0x02D8
    2cf0:	90 91 d9 02 	lds	r25, 0x02D9
    2cf4:	63 30       	cpi	r22, 0x03	; 3
    2cf6:	71 05       	cpc	r23, r1
    2cf8:	81 05       	cpc	r24, r1
    2cfa:	91 05       	cpc	r25, r1
    2cfc:	00 f3       	brcs	.-64     	; 0x2cbe <main+0xf3e>
    2cfe:	cd cf       	rjmp	.-102    	; 0x2c9a <main+0xf1a>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	while (1) //This while loop is for water calculation
	{
		water_read = (i_water*10)/33; //This is the assumption to calculate water 1 liter = 2 rotation of propeller
    2d00:	80 91 da 02 	lds	r24, 0x02DA
    2d04:	90 91 db 02 	lds	r25, 0x02DB
    2d08:	a0 91 dc 02 	lds	r26, 0x02DC
    2d0c:	b0 91 dd 02 	lds	r27, 0x02DD
    2d10:	88 0f       	add	r24, r24
    2d12:	99 1f       	adc	r25, r25
    2d14:	aa 1f       	adc	r26, r26
    2d16:	bb 1f       	adc	r27, r27
    2d18:	ac 01       	movw	r20, r24
    2d1a:	bd 01       	movw	r22, r26
    2d1c:	44 0f       	add	r20, r20
    2d1e:	55 1f       	adc	r21, r21
    2d20:	66 1f       	adc	r22, r22
    2d22:	77 1f       	adc	r23, r23
    2d24:	44 0f       	add	r20, r20
    2d26:	55 1f       	adc	r21, r21
    2d28:	66 1f       	adc	r22, r22
    2d2a:	77 1f       	adc	r23, r23
    2d2c:	8c 01       	movw	r16, r24
    2d2e:	9d 01       	movw	r18, r26
    2d30:	04 0f       	add	r16, r20
    2d32:	15 1f       	adc	r17, r21
    2d34:	26 1f       	adc	r18, r22
    2d36:	37 1f       	adc	r19, r23
    2d38:	c9 01       	movw	r24, r18
    2d3a:	b8 01       	movw	r22, r16
    2d3c:	21 e2       	ldi	r18, 0x21	; 33
    2d3e:	30 e0       	ldi	r19, 0x00	; 0
    2d40:	40 e0       	ldi	r20, 0x00	; 0
    2d42:	50 e0       	ldi	r21, 0x00	; 0
    2d44:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    2d48:	29 01       	movw	r4, r18
    2d4a:	3a 01       	movw	r6, r20
    2d4c:	ef e1       	ldi	r30, 0x1F	; 31
    2d4e:	fe e4       	ldi	r31, 0x4E	; 78
    2d50:	31 97       	sbiw	r30, 0x01	; 1
    2d52:	f1 f7       	brne	.-4      	; 0x2d50 <main+0xfd0>
    2d54:	00 c0       	rjmp	.+0      	; 0x2d56 <main+0xfd6>
    2d56:	00 00       	nop
		_delay_ms(10);
		if (water_read >= water)
    2d58:	0b 85       	ldd	r16, Y+11	; 0x0b
    2d5a:	1c 85       	ldd	r17, Y+12	; 0x0c
    2d5c:	2d 85       	ldd	r18, Y+13	; 0x0d
    2d5e:	3e 85       	ldd	r19, Y+14	; 0x0e
    2d60:	40 16       	cp	r4, r16
    2d62:	51 06       	cpc	r5, r17
    2d64:	62 06       	cpc	r6, r18
    2d66:	73 06       	cpc	r7, r19
    2d68:	08 f0       	brcs	.+2      	; 0x2d6c <main+0xfec>
    2d6a:	af c2       	rjmp	.+1374   	; 0x32ca <main+0x154a>
		{
			break;
		}
		else if (!(PIND & (1<<PD3)))
    2d6c:	83 99       	sbic	0x10, 3	; 16
    2d6e:	1b c0       	rjmp	.+54     	; 0x2da6 <main+0x1026>
		{
			Read_TPval(TPval);
    2d70:	ce 01       	movw	r24, r28
    2d72:	01 96       	adiw	r24, 0x01	; 1
    2d74:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    2d78:	8f e1       	ldi	r24, 0x1F	; 31
    2d7a:	9e e4       	ldi	r25, 0x4E	; 78
    2d7c:	01 97       	sbiw	r24, 0x01	; 1
    2d7e:	f1 f7       	brne	.-4      	; 0x2d7c <main+0xffc>
    2d80:	00 c0       	rjmp	.+0      	; 0x2d82 <main+0x1002>
    2d82:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    2d84:	ce 01       	movw	r24, r28
    2d86:	01 96       	adiw	r24, 0x01	; 1
    2d88:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			if (TPval[0]>190 && TPval[0]<222 && TPval[1]>37 && TPval[1]<216)
    2d8c:	89 81       	ldd	r24, Y+1	; 0x01
    2d8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d90:	8f 5b       	subi	r24, 0xBF	; 191
    2d92:	91 09       	sbc	r25, r1
    2d94:	4f 97       	sbiw	r24, 0x1f	; 31
    2d96:	38 f4       	brcc	.+14     	; 0x2da6 <main+0x1026>
    2d98:	8b 81       	ldd	r24, Y+3	; 0x03
    2d9a:	9c 81       	ldd	r25, Y+4	; 0x04
    2d9c:	86 97       	sbiw	r24, 0x26	; 38
    2d9e:	82 3b       	cpi	r24, 0xB2	; 178
    2da0:	91 05       	cpc	r25, r1
    2da2:	08 f4       	brcc	.+2      	; 0x2da6 <main+0x1026>
    2da4:	52 c0       	rjmp	.+164    	; 0x2e4a <main+0x10ca>
			{
				break;
			}
		}
		TFT_PutsInt((water_read*100)/water,-1,43,72,8,white,back_color);
    2da6:	a4 e6       	ldi	r26, 0x64	; 100
    2da8:	b0 e0       	ldi	r27, 0x00	; 0
    2daa:	a3 01       	movw	r20, r6
    2dac:	92 01       	movw	r18, r4
    2dae:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <__muluhisi3>
    2db2:	2b 85       	ldd	r18, Y+11	; 0x0b
    2db4:	3c 85       	ldd	r19, Y+12	; 0x0c
    2db6:	4d 85       	ldd	r20, Y+13	; 0x0d
    2db8:	5e 85       	ldd	r21, Y+14	; 0x0e
    2dba:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    2dbe:	ca 01       	movw	r24, r20
    2dc0:	b9 01       	movw	r22, r18
    2dc2:	0f 2e       	mov	r0, r31
    2dc4:	ff e1       	ldi	r31, 0x1F	; 31
    2dc6:	af 2e       	mov	r10, r31
    2dc8:	b1 2c       	mov	r11, r1
    2dca:	f0 2d       	mov	r31, r0
    2dcc:	cc 24       	eor	r12, r12
    2dce:	ca 94       	dec	r12
    2dd0:	dc 2c       	mov	r13, r12
    2dd2:	68 94       	set
    2dd4:	ee 24       	eor	r14, r14
    2dd6:	e3 f8       	bld	r14, 3
    2dd8:	08 e4       	ldi	r16, 0x48	; 72
    2dda:	10 e0       	ldi	r17, 0x00	; 0
    2ddc:	2b e2       	ldi	r18, 0x2B	; 43
    2dde:	30 e0       	ldi	r19, 0x00	; 0
    2de0:	4f ef       	ldi	r20, 0xFF	; 255
    2de2:	5f ef       	ldi	r21, 0xFF	; 255
    2de4:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(water_read,-1,123,72,8,white,back_color);
    2de8:	2b e7       	ldi	r18, 0x7B	; 123
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	4f ef       	ldi	r20, 0xFF	; 255
    2dee:	5f ef       	ldi	r21, 0xFF	; 255
    2df0:	c3 01       	movw	r24, r6
    2df2:	b2 01       	movw	r22, r4
    2df4:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
    2df8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2dfa:	7c 85       	ldd	r23, Y+12	; 0x0c
    2dfc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dfe:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e00:	64 19       	sub	r22, r4
    2e02:	75 09       	sbc	r23, r5
    2e04:	86 09       	sbc	r24, r6
    2e06:	97 09       	sbc	r25, r7
    2e08:	06 e6       	ldi	r16, 0x66	; 102
    2e0a:	10 e0       	ldi	r17, 0x00	; 0
    2e0c:	2b e7       	ldi	r18, 0x7B	; 123
    2e0e:	30 e0       	ldi	r19, 0x00	; 0
    2e10:	44 e0       	ldi	r20, 0x04	; 4
    2e12:	50 e0       	ldi	r21, 0x00	; 0
    2e14:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    2e18:	60 91 d6 02 	lds	r22, 0x02D6
    2e1c:	70 91 d7 02 	lds	r23, 0x02D7
    2e20:	80 91 d8 02 	lds	r24, 0x02D8
    2e24:	90 91 d9 02 	lds	r25, 0x02D9
    2e28:	aa 24       	eor	r10, r10
    2e2a:	aa 94       	dec	r10
    2e2c:	ba 2c       	mov	r11, r10
    2e2e:	0f 2e       	mov	r0, r31
    2e30:	ff e1       	ldi	r31, 0x1F	; 31
    2e32:	cf 2e       	mov	r12, r31
    2e34:	d1 2c       	mov	r13, r1
    2e36:	f0 2d       	mov	r31, r0
    2e38:	05 e0       	ldi	r16, 0x05	; 5
    2e3a:	10 e0       	ldi	r17, 0x00	; 0
    2e3c:	25 e0       	ldi	r18, 0x05	; 5
    2e3e:	30 e0       	ldi	r19, 0x00	; 0
    2e40:	44 e0       	ldi	r20, 0x04	; 4
    2e42:	50 e0       	ldi	r21, 0x00	; 0
    2e44:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	}
    2e48:	5b cf       	rjmp	.-330    	; 0x2d00 <main+0xf80>
	
	PORTD &= ~(1<<0); //This port pin is for water valve off
    2e4a:	90 98       	cbi	0x12, 0	; 18
	TFT_Text("Off",171,60,8,white,back_color);
    2e4c:	0f 2e       	mov	r0, r31
    2e4e:	ff e1       	ldi	r31, 0x1F	; 31
    2e50:	ef 2e       	mov	r14, r31
    2e52:	f1 2c       	mov	r15, r1
    2e54:	f0 2d       	mov	r31, r0
    2e56:	0f ef       	ldi	r16, 0xFF	; 255
    2e58:	1f ef       	ldi	r17, 0xFF	; 255
    2e5a:	28 e0       	ldi	r18, 0x08	; 8
    2e5c:	4c e3       	ldi	r20, 0x3C	; 60
    2e5e:	50 e0       	ldi	r21, 0x00	; 0
    2e60:	6b ea       	ldi	r22, 0xAB	; 171
    2e62:	70 e0       	ldi	r23, 0x00	; 0
    2e64:	87 ed       	ldi	r24, 0xD7	; 215
    2e66:	91 e0       	ldi	r25, 0x01	; 1
    2e68:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	
	i_time = 0;
    2e6c:	10 92 d6 02 	sts	0x02D6, r1
    2e70:	10 92 d7 02 	sts	0x02D7, r1
    2e74:	10 92 d8 02 	sts	0x02D8, r1
    2e78:	10 92 d9 02 	sts	0x02D9, r1
    2e7c:	3f c2       	rjmp	.+1150   	; 0x32fc <main+0x157c>
	while (1) //This while loop is for steam valve open after 5 seconds
	{
		if (i_time > 3)
		{
			PORTD |= (1<<1);  //This port pin is for steam valve on
    2e7e:	91 9a       	sbi	0x12, 1	; 18
			TFT_Text("On ",171,148,8,white,red);
    2e80:	0f 2e       	mov	r0, r31
    2e82:	e1 2c       	mov	r14, r1
    2e84:	f8 ef       	ldi	r31, 0xF8	; 248
    2e86:	ff 2e       	mov	r15, r31
    2e88:	f0 2d       	mov	r31, r0
    2e8a:	0f ef       	ldi	r16, 0xFF	; 255
    2e8c:	1f ef       	ldi	r17, 0xFF	; 255
    2e8e:	28 e0       	ldi	r18, 0x08	; 8
    2e90:	44 e9       	ldi	r20, 0x94	; 148
    2e92:	50 e0       	ldi	r21, 0x00	; 0
    2e94:	6b ea       	ldi	r22, 0xAB	; 171
    2e96:	70 e0       	ldi	r23, 0x00	; 0
    2e98:	8b ea       	ldi	r24, 0xAB	; 171
    2e9a:	92 e0       	ldi	r25, 0x02	; 2
    2e9c:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			break;
    2ea0:	21 c0       	rjmp	.+66     	; 0x2ee4 <main+0x1164>
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    2ea2:	aa 24       	eor	r10, r10
    2ea4:	aa 94       	dec	r10
    2ea6:	ba 2c       	mov	r11, r10
    2ea8:	0f 2e       	mov	r0, r31
    2eaa:	ff e1       	ldi	r31, 0x1F	; 31
    2eac:	cf 2e       	mov	r12, r31
    2eae:	d1 2c       	mov	r13, r1
    2eb0:	f0 2d       	mov	r31, r0
    2eb2:	68 94       	set
    2eb4:	ee 24       	eor	r14, r14
    2eb6:	e3 f8       	bld	r14, 3
    2eb8:	05 e0       	ldi	r16, 0x05	; 5
    2eba:	10 e0       	ldi	r17, 0x00	; 0
    2ebc:	25 e0       	ldi	r18, 0x05	; 5
    2ebe:	30 e0       	ldi	r19, 0x00	; 0
    2ec0:	44 e0       	ldi	r20, 0x04	; 4
    2ec2:	50 e0       	ldi	r21, 0x00	; 0
    2ec4:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	TFT_Text("Off",171,60,8,white,back_color);
	
	i_time = 0;
	while (1) //This while loop is for steam valve open after 5 seconds
	{
		if (i_time > 3)
    2ec8:	60 91 d6 02 	lds	r22, 0x02D6
    2ecc:	70 91 d7 02 	lds	r23, 0x02D7
    2ed0:	80 91 d8 02 	lds	r24, 0x02D8
    2ed4:	90 91 d9 02 	lds	r25, 0x02D9
    2ed8:	64 30       	cpi	r22, 0x04	; 4
    2eda:	71 05       	cpc	r23, r1
    2edc:	81 05       	cpc	r24, r1
    2ede:	91 05       	cpc	r25, r1
    2ee0:	00 f3       	brcs	.-64     	; 0x2ea2 <main+0x1122>
    2ee2:	cd cf       	rjmp	.-102    	; 0x2e7e <main+0x10fe>
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	while (1) //This while loop is for temperature calculation
	{
		temp_read = (Read_ADC(0,0x00)*6)/5; //This is the divider to adjust the temperature now 4 for experiment
    2ee4:	60 e0       	ldi	r22, 0x00	; 0
    2ee6:	80 e0       	ldi	r24, 0x00	; 0
    2ee8:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <Read_ADC>
    2eec:	9c 01       	movw	r18, r24
    2eee:	22 0f       	add	r18, r18
    2ef0:	33 1f       	adc	r19, r19
    2ef2:	82 0f       	add	r24, r18
    2ef4:	93 1f       	adc	r25, r19
    2ef6:	9c 01       	movw	r18, r24
    2ef8:	22 0f       	add	r18, r18
    2efa:	33 1f       	adc	r19, r19
    2efc:	ad ec       	ldi	r26, 0xCD	; 205
    2efe:	bc ec       	ldi	r27, 0xCC	; 204
    2f00:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__umulhisi3>
    2f04:	4c 01       	movw	r8, r24
    2f06:	96 94       	lsr	r9
    2f08:	87 94       	ror	r8
    2f0a:	96 94       	lsr	r9
    2f0c:	87 94       	ror	r8
    2f0e:	24 01       	movw	r4, r8
    2f10:	61 2c       	mov	r6, r1
    2f12:	71 2c       	mov	r7, r1
    2f14:	af e1       	ldi	r26, 0x1F	; 31
    2f16:	be e4       	ldi	r27, 0x4E	; 78
    2f18:	11 97       	sbiw	r26, 0x01	; 1
    2f1a:	f1 f7       	brne	.-4      	; 0x2f18 <main+0x1198>
    2f1c:	00 c0       	rjmp	.+0      	; 0x2f1e <main+0x119e>
    2f1e:	00 00       	nop
		_delay_ms(10);
		if (temp_read >= temp)
    2f20:	0f 81       	ldd	r16, Y+7	; 0x07
    2f22:	18 85       	ldd	r17, Y+8	; 0x08
    2f24:	29 85       	ldd	r18, Y+9	; 0x09
    2f26:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f28:	40 16       	cp	r4, r16
    2f2a:	51 06       	cpc	r5, r17
    2f2c:	62 06       	cpc	r6, r18
    2f2e:	73 06       	cpc	r7, r19
    2f30:	08 f0       	brcs	.+2      	; 0x2f34 <main+0x11b4>
    2f32:	70 c0       	rjmp	.+224    	; 0x3014 <main+0x1294>
		{
			break;
		}
		else if (!(PIND & (1<<PD3)))
    2f34:	83 99       	sbic	0x10, 3	; 16
    2f36:	1b c0       	rjmp	.+54     	; 0x2f6e <main+0x11ee>
		{
			Read_TPval(TPval);
    2f38:	ce 01       	movw	r24, r28
    2f3a:	01 96       	adiw	r24, 0x01	; 1
    2f3c:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    2f40:	8f e1       	ldi	r24, 0x1F	; 31
    2f42:	9e e4       	ldi	r25, 0x4E	; 78
    2f44:	01 97       	sbiw	r24, 0x01	; 1
    2f46:	f1 f7       	brne	.-4      	; 0x2f44 <main+0x11c4>
    2f48:	00 c0       	rjmp	.+0      	; 0x2f4a <main+0x11ca>
    2f4a:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    2f4c:	ce 01       	movw	r24, r28
    2f4e:	01 96       	adiw	r24, 0x01	; 1
    2f50:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			if (TPval[0]>130 && TPval[0]<165 && TPval[1]>37 && TPval[1]<216)
    2f54:	89 81       	ldd	r24, Y+1	; 0x01
    2f56:	9a 81       	ldd	r25, Y+2	; 0x02
    2f58:	83 58       	subi	r24, 0x83	; 131
    2f5a:	91 09       	sbc	r25, r1
    2f5c:	82 97       	sbiw	r24, 0x22	; 34
    2f5e:	38 f4       	brcc	.+14     	; 0x2f6e <main+0x11ee>
    2f60:	8b 81       	ldd	r24, Y+3	; 0x03
    2f62:	9c 81       	ldd	r25, Y+4	; 0x04
    2f64:	86 97       	sbiw	r24, 0x26	; 38
    2f66:	82 3b       	cpi	r24, 0xB2	; 178
    2f68:	91 05       	cpc	r25, r1
    2f6a:	08 f4       	brcc	.+2      	; 0x2f6e <main+0x11ee>
    2f6c:	53 c0       	rjmp	.+166    	; 0x3014 <main+0x1294>
			{
				break;
			}
		}
		TFT_PutsInt((temp_read*100)/temp,3,43,160,8,white,back_color);
    2f6e:	a4 e6       	ldi	r26, 0x64	; 100
    2f70:	b0 e0       	ldi	r27, 0x00	; 0
    2f72:	a3 01       	movw	r20, r6
    2f74:	92 01       	movw	r18, r4
    2f76:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <__muluhisi3>
    2f7a:	2f 81       	ldd	r18, Y+7	; 0x07
    2f7c:	38 85       	ldd	r19, Y+8	; 0x08
    2f7e:	49 85       	ldd	r20, Y+9	; 0x09
    2f80:	5a 85       	ldd	r21, Y+10	; 0x0a
    2f82:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    2f86:	ca 01       	movw	r24, r20
    2f88:	b9 01       	movw	r22, r18
    2f8a:	0f 2e       	mov	r0, r31
    2f8c:	ff e1       	ldi	r31, 0x1F	; 31
    2f8e:	af 2e       	mov	r10, r31
    2f90:	b1 2c       	mov	r11, r1
    2f92:	f0 2d       	mov	r31, r0
    2f94:	cc 24       	eor	r12, r12
    2f96:	ca 94       	dec	r12
    2f98:	dc 2c       	mov	r13, r12
    2f9a:	68 94       	set
    2f9c:	ee 24       	eor	r14, r14
    2f9e:	e3 f8       	bld	r14, 3
    2fa0:	00 ea       	ldi	r16, 0xA0	; 160
    2fa2:	10 e0       	ldi	r17, 0x00	; 0
    2fa4:	2b e2       	ldi	r18, 0x2B	; 43
    2fa6:	30 e0       	ldi	r19, 0x00	; 0
    2fa8:	43 e0       	ldi	r20, 0x03	; 3
    2faa:	50 e0       	ldi	r21, 0x00	; 0
    2fac:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(temp_read,3,123,160,8,white,back_color);
    2fb0:	b4 01       	movw	r22, r8
    2fb2:	80 e0       	ldi	r24, 0x00	; 0
    2fb4:	90 e0       	ldi	r25, 0x00	; 0
    2fb6:	2b e7       	ldi	r18, 0x7B	; 123
    2fb8:	30 e0       	ldi	r19, 0x00	; 0
    2fba:	43 e0       	ldi	r20, 0x03	; 3
    2fbc:	50 e0       	ldi	r21, 0x00	; 0
    2fbe:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(temp-temp_read,3,123,188,8,white,back_color);
    2fc2:	6f 81       	ldd	r22, Y+7	; 0x07
    2fc4:	78 85       	ldd	r23, Y+8	; 0x08
    2fc6:	89 85       	ldd	r24, Y+9	; 0x09
    2fc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fca:	64 19       	sub	r22, r4
    2fcc:	75 09       	sbc	r23, r5
    2fce:	86 09       	sbc	r24, r6
    2fd0:	97 09       	sbc	r25, r7
    2fd2:	0c eb       	ldi	r16, 0xBC	; 188
    2fd4:	10 e0       	ldi	r17, 0x00	; 0
    2fd6:	2b e7       	ldi	r18, 0x7B	; 123
    2fd8:	30 e0       	ldi	r19, 0x00	; 0
    2fda:	43 e0       	ldi	r20, 0x03	; 3
    2fdc:	50 e0       	ldi	r21, 0x00	; 0
    2fde:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    2fe2:	60 91 d6 02 	lds	r22, 0x02D6
    2fe6:	70 91 d7 02 	lds	r23, 0x02D7
    2fea:	80 91 d8 02 	lds	r24, 0x02D8
    2fee:	90 91 d9 02 	lds	r25, 0x02D9
    2ff2:	aa 24       	eor	r10, r10
    2ff4:	aa 94       	dec	r10
    2ff6:	ba 2c       	mov	r11, r10
    2ff8:	0f 2e       	mov	r0, r31
    2ffa:	ff e1       	ldi	r31, 0x1F	; 31
    2ffc:	cf 2e       	mov	r12, r31
    2ffe:	d1 2c       	mov	r13, r1
    3000:	f0 2d       	mov	r31, r0
    3002:	05 e0       	ldi	r16, 0x05	; 5
    3004:	10 e0       	ldi	r17, 0x00	; 0
    3006:	25 e0       	ldi	r18, 0x05	; 5
    3008:	30 e0       	ldi	r19, 0x00	; 0
    300a:	44 e0       	ldi	r20, 0x04	; 4
    300c:	50 e0       	ldi	r21, 0x00	; 0
    300e:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	}
    3012:	68 cf       	rjmp	.-304    	; 0x2ee4 <main+0x1164>
	
	PORTD &= ~(1<<1); //This port pin is for steam valve off
    3014:	91 98       	cbi	0x12, 1	; 18
	TFT_Text("Off",171,148,8,white,back_color);
    3016:	0f 2e       	mov	r0, r31
    3018:	ff e1       	ldi	r31, 0x1F	; 31
    301a:	ef 2e       	mov	r14, r31
    301c:	f1 2c       	mov	r15, r1
    301e:	f0 2d       	mov	r31, r0
    3020:	0f ef       	ldi	r16, 0xFF	; 255
    3022:	1f ef       	ldi	r17, 0xFF	; 255
    3024:	28 e0       	ldi	r18, 0x08	; 8
    3026:	44 e9       	ldi	r20, 0x94	; 148
    3028:	50 e0       	ldi	r21, 0x00	; 0
    302a:	6b ea       	ldi	r22, 0xAB	; 171
    302c:	70 e0       	ldi	r23, 0x00	; 0
    302e:	87 ed       	ldi	r24, 0xD7	; 215
    3030:	91 e0       	ldi	r25, 0x01	; 1
    3032:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	
	i_time = 0;
    3036:	10 92 d6 02 	sts	0x02D6, r1
    303a:	10 92 d7 02 	sts	0x02D7, r1
    303e:	10 92 d8 02 	sts	0x02D8, r1
    3042:	10 92 d9 02 	sts	0x02D9, r1
	TFT_Text("Counting",123,236,8,white,red);
    3046:	0f 2e       	mov	r0, r31
    3048:	e1 2c       	mov	r14, r1
    304a:	f8 ef       	ldi	r31, 0xF8	; 248
    304c:	ff 2e       	mov	r15, r31
    304e:	f0 2d       	mov	r31, r0
    3050:	28 e0       	ldi	r18, 0x08	; 8
    3052:	4c ee       	ldi	r20, 0xEC	; 236
    3054:	50 e0       	ldi	r21, 0x00	; 0
    3056:	6b e7       	ldi	r22, 0x7B	; 123
    3058:	70 e0       	ldi	r23, 0x00	; 0
    305a:	8f ea       	ldi	r24, 0xAF	; 175
    305c:	92 e0       	ldi	r25, 0x02	; 2
    305e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    3062:	60 91 d6 02 	lds	r22, 0x02D6
    3066:	70 91 d7 02 	lds	r23, 0x02D7
    306a:	80 91 d8 02 	lds	r24, 0x02D8
    306e:	90 91 d9 02 	lds	r25, 0x02D9
    3072:	2c e3       	ldi	r18, 0x3C	; 60
    3074:	30 e0       	ldi	r19, 0x00	; 0
    3076:	40 e0       	ldi	r20, 0x00	; 0
    3078:	50 e0       	ldi	r21, 0x00	; 0
    307a:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    307e:	29 01       	movw	r4, r18
    3080:	3a 01       	movw	r6, r20
		if (time_read >= time)
    3082:	09 89       	ldd	r16, Y+17	; 0x11
    3084:	1a 89       	ldd	r17, Y+18	; 0x12
    3086:	2b 89       	ldd	r18, Y+19	; 0x13
    3088:	3c 89       	ldd	r19, Y+20	; 0x14
    308a:	40 16       	cp	r4, r16
    308c:	51 06       	cpc	r5, r17
    308e:	62 06       	cpc	r6, r18
    3090:	73 06       	cpc	r7, r19
    3092:	08 f4       	brcc	.+2      	; 0x3096 <main+0x1316>
    3094:	3f c0       	rjmp	.+126    	; 0x3114 <main+0x1394>
		{
skip_time:
			PORTD |= (1<<6); //This port pin is for alarm on
    3096:	96 9a       	sbi	0x12, 6	; 18
			TFT_Text("Idle    ",123,236,8,white,back_color);
    3098:	0f 2e       	mov	r0, r31
    309a:	ff e1       	ldi	r31, 0x1F	; 31
    309c:	ef 2e       	mov	r14, r31
    309e:	f1 2c       	mov	r15, r1
    30a0:	f0 2d       	mov	r31, r0
    30a2:	0f ef       	ldi	r16, 0xFF	; 255
    30a4:	1f ef       	ldi	r17, 0xFF	; 255
    30a6:	28 e0       	ldi	r18, 0x08	; 8
    30a8:	4c ee       	ldi	r20, 0xEC	; 236
    30aa:	50 e0       	ldi	r21, 0x00	; 0
    30ac:	6b e7       	ldi	r22, 0x7B	; 123
    30ae:	70 e0       	ldi	r23, 0x00	; 0
    30b0:	88 eb       	ldi	r24, 0xB8	; 184
    30b2:	92 e0       	ldi	r25, 0x02	; 2
    30b4:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	 //this section is to wait for alarm off command
	 i_time = 0;
    30b8:	10 92 d6 02 	sts	0x02D6, r1
    30bc:	10 92 d7 02 	sts	0x02D7, r1
    30c0:	10 92 d8 02 	sts	0x02D8, r1
    30c4:	10 92 d9 02 	sts	0x02D9, r1
	TFT_Fill(back_color);
    30c8:	8f e1       	ldi	r24, 0x1F	; 31
    30ca:	90 e0       	ldi	r25, 0x00	; 0
    30cc:	0e 94 ab 09 	call	0x1356	; 0x1356 <TFT_Fill>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
    30d0:	20 e1       	ldi	r18, 0x10	; 16
    30d2:	44 e5       	ldi	r20, 0x54	; 84
    30d4:	50 e0       	ldi	r21, 0x00	; 0
    30d6:	63 e3       	ldi	r22, 0x33	; 51
    30d8:	70 e0       	ldi	r23, 0x00	; 0
    30da:	81 ec       	ldi	r24, 0xC1	; 193
    30dc:	92 e0       	ldi	r25, 0x02	; 2
    30de:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	TFT_Box(35,150,195,174,white);
    30e2:	2e ea       	ldi	r18, 0xAE	; 174
    30e4:	30 e0       	ldi	r19, 0x00	; 0
    30e6:	43 ec       	ldi	r20, 0xC3	; 195
    30e8:	50 e0       	ldi	r21, 0x00	; 0
    30ea:	66 e9       	ldi	r22, 0x96	; 150
    30ec:	70 e0       	ldi	r23, 0x00	; 0
    30ee:	83 e2       	ldi	r24, 0x23	; 35
    30f0:	90 e0       	ldi	r25, 0x00	; 0
    30f2:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <TFT_Box>
	TFT_Text("ALARM OFF",53,155,16,red,white);	
    30f6:	ee 24       	eor	r14, r14
    30f8:	ea 94       	dec	r14
    30fa:	fe 2c       	mov	r15, r14
    30fc:	00 e0       	ldi	r16, 0x00	; 0
    30fe:	18 ef       	ldi	r17, 0xF8	; 248
    3100:	20 e1       	ldi	r18, 0x10	; 16
    3102:	4b e9       	ldi	r20, 0x9B	; 155
    3104:	50 e0       	ldi	r21, 0x00	; 0
    3106:	65 e3       	ldi	r22, 0x35	; 53
    3108:	70 e0       	ldi	r23, 0x00	; 0
    310a:	8b ec       	ldi	r24, 0xCB	; 203
    310c:	92 e0       	ldi	r25, 0x02	; 2
    310e:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
    3112:	97 c0       	rjmp	.+302    	; 0x3242 <main+0x14c2>
skip_time:
			PORTD |= (1<<6); //This port pin is for alarm on
			TFT_Text("Idle    ",123,236,8,white,back_color);
			break;
		}
		TFT_PutsInt(time_read,-1,123,260,8,white,back_color);
    3114:	0f 2e       	mov	r0, r31
    3116:	ff e1       	ldi	r31, 0x1F	; 31
    3118:	af 2e       	mov	r10, r31
    311a:	b1 2c       	mov	r11, r1
    311c:	f0 2d       	mov	r31, r0
    311e:	cc 24       	eor	r12, r12
    3120:	ca 94       	dec	r12
    3122:	dc 2c       	mov	r13, r12
    3124:	68 94       	set
    3126:	ee 24       	eor	r14, r14
    3128:	e3 f8       	bld	r14, 3
    312a:	04 e0       	ldi	r16, 0x04	; 4
    312c:	11 e0       	ldi	r17, 0x01	; 1
    312e:	2b e7       	ldi	r18, 0x7B	; 123
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	4f ef       	ldi	r20, 0xFF	; 255
    3134:	5f ef       	ldi	r21, 0xFF	; 255
    3136:	c3 01       	movw	r24, r6
    3138:	b2 01       	movw	r22, r4
    313a:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_Text(":",155,260,8,white,back_color);
    313e:	0f 2e       	mov	r0, r31
    3140:	ff e1       	ldi	r31, 0x1F	; 31
    3142:	ef 2e       	mov	r14, r31
    3144:	f1 2c       	mov	r15, r1
    3146:	f0 2d       	mov	r31, r0
    3148:	0f ef       	ldi	r16, 0xFF	; 255
    314a:	1f ef       	ldi	r17, 0xFF	; 255
    314c:	28 e0       	ldi	r18, 0x08	; 8
    314e:	44 e0       	ldi	r20, 0x04	; 4
    3150:	51 e0       	ldi	r21, 0x01	; 1
    3152:	6b e9       	ldi	r22, 0x9B	; 155
    3154:	70 e0       	ldi	r23, 0x00	; 0
    3156:	8b e5       	ldi	r24, 0x5B	; 91
    3158:	92 e0       	ldi	r25, 0x02	; 2
    315a:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
		TFT_PutsInt(i_time % 60,2,163,260,8,white,back_color);
    315e:	60 91 d6 02 	lds	r22, 0x02D6
    3162:	70 91 d7 02 	lds	r23, 0x02D7
    3166:	80 91 d8 02 	lds	r24, 0x02D8
    316a:	90 91 d9 02 	lds	r25, 0x02D9
    316e:	2c e3       	ldi	r18, 0x3C	; 60
    3170:	30 e0       	ldi	r19, 0x00	; 0
    3172:	40 e0       	ldi	r20, 0x00	; 0
    3174:	50 e0       	ldi	r21, 0x00	; 0
    3176:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    317a:	68 94       	set
    317c:	ee 24       	eor	r14, r14
    317e:	e3 f8       	bld	r14, 3
    3180:	04 e0       	ldi	r16, 0x04	; 4
    3182:	11 e0       	ldi	r17, 0x01	; 1
    3184:	23 ea       	ldi	r18, 0xA3	; 163
    3186:	30 e0       	ldi	r19, 0x00	; 0
    3188:	42 e0       	ldi	r20, 0x02	; 2
    318a:	50 e0       	ldi	r21, 0x00	; 0
    318c:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		TFT_PutsInt(time - time_read,4,123,276,8,white,back_color);
    3190:	69 89       	ldd	r22, Y+17	; 0x11
    3192:	7a 89       	ldd	r23, Y+18	; 0x12
    3194:	8b 89       	ldd	r24, Y+19	; 0x13
    3196:	9c 89       	ldd	r25, Y+20	; 0x14
    3198:	64 19       	sub	r22, r4
    319a:	75 09       	sbc	r23, r5
    319c:	86 09       	sbc	r24, r6
    319e:	97 09       	sbc	r25, r7
    31a0:	04 e1       	ldi	r16, 0x14	; 20
    31a2:	11 e0       	ldi	r17, 0x01	; 1
    31a4:	2b e7       	ldi	r18, 0x7B	; 123
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	44 e0       	ldi	r20, 0x04	; 4
    31aa:	50 e0       	ldi	r21, 0x00	; 0
    31ac:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
		if (!(PIND & (1<<PD3)))
    31b0:	83 99       	sbic	0x10, 3	; 16
    31b2:	11 c0       	rjmp	.+34     	; 0x31d6 <main+0x1456>
		{
			Read_TPval(TPval);
    31b4:	ce 01       	movw	r24, r28
    31b6:	01 96       	adiw	r24, 0x01	; 1
    31b8:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>77 && TPval[0]<103 && TPval[1]>37 && TPval[1]<216)
    31bc:	89 81       	ldd	r24, Y+1	; 0x01
    31be:	9a 81       	ldd	r25, Y+2	; 0x02
    31c0:	8e 54       	subi	r24, 0x4E	; 78
    31c2:	91 09       	sbc	r25, r1
    31c4:	49 97       	sbiw	r24, 0x19	; 25
    31c6:	38 f4       	brcc	.+14     	; 0x31d6 <main+0x1456>
    31c8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ca:	9c 81       	ldd	r25, Y+4	; 0x04
    31cc:	86 97       	sbiw	r24, 0x26	; 38
    31ce:	82 3b       	cpi	r24, 0xB2	; 178
    31d0:	91 05       	cpc	r25, r1
    31d2:	08 f4       	brcc	.+2      	; 0x31d6 <main+0x1456>
    31d4:	60 cf       	rjmp	.-320    	; 0x3096 <main+0x1316>
			{
				goto skip_time;
			}
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    31d6:	60 91 d6 02 	lds	r22, 0x02D6
    31da:	70 91 d7 02 	lds	r23, 0x02D7
    31de:	80 91 d8 02 	lds	r24, 0x02D8
    31e2:	90 91 d9 02 	lds	r25, 0x02D9
    31e6:	aa 24       	eor	r10, r10
    31e8:	aa 94       	dec	r10
    31ea:	ba 2c       	mov	r11, r10
    31ec:	0f 2e       	mov	r0, r31
    31ee:	ff e1       	ldi	r31, 0x1F	; 31
    31f0:	cf 2e       	mov	r12, r31
    31f2:	d1 2c       	mov	r13, r1
    31f4:	f0 2d       	mov	r31, r0
    31f6:	68 94       	set
    31f8:	ee 24       	eor	r14, r14
    31fa:	e3 f8       	bld	r14, 3
    31fc:	05 e0       	ldi	r16, 0x05	; 5
    31fe:	10 e0       	ldi	r17, 0x00	; 0
    3200:	25 e0       	ldi	r18, 0x05	; 5
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	44 e0       	ldi	r20, 0x04	; 4
    3206:	50 e0       	ldi	r21, 0x00	; 0
    3208:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	
	i_time = 0;
	TFT_Text("Counting",123,236,8,white,red);
	while (1) //This while loop is for time calculation
	{
		time_read = i_time / 60;
    320c:	60 91 d6 02 	lds	r22, 0x02D6
    3210:	70 91 d7 02 	lds	r23, 0x02D7
    3214:	80 91 d8 02 	lds	r24, 0x02D8
    3218:	90 91 d9 02 	lds	r25, 0x02D9
    321c:	2c e3       	ldi	r18, 0x3C	; 60
    321e:	30 e0       	ldi	r19, 0x00	; 0
    3220:	40 e0       	ldi	r20, 0x00	; 0
    3222:	50 e0       	ldi	r21, 0x00	; 0
    3224:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    3228:	29 01       	movw	r4, r18
    322a:	3a 01       	movw	r6, r20
		if (time_read >= time)
    322c:	29 89       	ldd	r18, Y+17	; 0x11
    322e:	3a 89       	ldd	r19, Y+18	; 0x12
    3230:	4b 89       	ldd	r20, Y+19	; 0x13
    3232:	5c 89       	ldd	r21, Y+20	; 0x14
    3234:	42 16       	cp	r4, r18
    3236:	53 06       	cpc	r5, r19
    3238:	64 06       	cpc	r6, r20
    323a:	75 06       	cpc	r7, r21
    323c:	08 f4       	brcc	.+2      	; 0x3240 <main+0x14c0>
    323e:	6a cf       	rjmp	.-300    	; 0x3114 <main+0x1394>
    3240:	2a cf       	rjmp	.-428    	; 0x3096 <main+0x1316>
	TFT_Text("ALARMING!",51,84,16,white,back_color);
	TFT_Box(35,150,195,174,white);
	TFT_Text("ALARM OFF",53,155,16,red,white);	
	while (1)
	{
		if (!(PIND & (1<<PD3)))
    3242:	83 99       	sbic	0x10, 3	; 16
    3244:	26 c0       	rjmp	.+76     	; 0x3292 <main+0x1512>
		{
			Read_TPval(TPval);
    3246:	ce 01       	movw	r24, r28
    3248:	01 96       	adiw	r24, 0x01	; 1
    324a:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
    324e:	8f e1       	ldi	r24, 0x1F	; 31
    3250:	9e e4       	ldi	r25, 0x4E	; 78
    3252:	01 97       	sbiw	r24, 0x01	; 1
    3254:	f1 f7       	brne	.-4      	; 0x3252 <main+0x14d2>
    3256:	00 c0       	rjmp	.+0      	; 0x3258 <main+0x14d8>
    3258:	00 00       	nop
			_delay_ms(10);
			Read_TPval(TPval);
    325a:	ce 01       	movw	r24, r28
    325c:	01 96       	adiw	r24, 0x01	; 1
    325e:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <Read_TPval>
			//TFT_PutsInt(TPval[0],4,0,0,8,blue,white);
			//TFT_PutsInt(TPval[1],4,40,0,8,blue,white);
			if (TPval[0]>120 && TPval[0]<150 && TPval[1]>51 && TPval[1]<201)
    3262:	89 81       	ldd	r24, Y+1	; 0x01
    3264:	9a 81       	ldd	r25, Y+2	; 0x02
    3266:	89 57       	subi	r24, 0x79	; 121
    3268:	91 09       	sbc	r25, r1
    326a:	4d 97       	sbiw	r24, 0x1d	; 29
    326c:	48 f4       	brcc	.+18     	; 0x3280 <main+0x1500>
    326e:	8b 81       	ldd	r24, Y+3	; 0x03
    3270:	9c 81       	ldd	r25, Y+4	; 0x04
    3272:	c4 97       	sbiw	r24, 0x34	; 52
    3274:	85 39       	cpi	r24, 0x95	; 149
    3276:	91 05       	cpc	r25, r1
    3278:	18 f4       	brcc	.+6      	; 0x3280 <main+0x1500>
			{
				PORTD &= ~(1<<6); //This port pin is programmed for alarm Off
    327a:	96 98       	cbi	0x12, 6	; 18
				goto start_pgm;
    327c:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <main+0xa6>
    3280:	9f ef       	ldi	r25, 0xFF	; 255
    3282:	a0 e7       	ldi	r26, 0x70	; 112
    3284:	b2 e0       	ldi	r27, 0x02	; 2
    3286:	91 50       	subi	r25, 0x01	; 1
    3288:	a0 40       	sbci	r26, 0x00	; 0
    328a:	b0 40       	sbci	r27, 0x00	; 0
    328c:	e1 f7       	brne	.-8      	; 0x3286 <main+0x1506>
    328e:	00 c0       	rjmp	.+0      	; 0x3290 <main+0x1510>
    3290:	00 00       	nop
			}
			_delay_ms(100);
		}
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
    3292:	60 91 d6 02 	lds	r22, 0x02D6
    3296:	70 91 d7 02 	lds	r23, 0x02D7
    329a:	80 91 d8 02 	lds	r24, 0x02D8
    329e:	90 91 d9 02 	lds	r25, 0x02D9
    32a2:	aa 24       	eor	r10, r10
    32a4:	aa 94       	dec	r10
    32a6:	ba 2c       	mov	r11, r10
    32a8:	0f 2e       	mov	r0, r31
    32aa:	ff e1       	ldi	r31, 0x1F	; 31
    32ac:	cf 2e       	mov	r12, r31
    32ae:	d1 2c       	mov	r13, r1
    32b0:	f0 2d       	mov	r31, r0
    32b2:	68 94       	set
    32b4:	ee 24       	eor	r14, r14
    32b6:	e3 f8       	bld	r14, 3
    32b8:	05 e0       	ldi	r16, 0x05	; 5
    32ba:	10 e0       	ldi	r17, 0x00	; 0
    32bc:	25 e0       	ldi	r18, 0x05	; 5
    32be:	30 e0       	ldi	r19, 0x00	; 0
    32c0:	44 e0       	ldi	r20, 0x04	; 4
    32c2:	50 e0       	ldi	r21, 0x00	; 0
    32c4:	0e 94 20 0c 	call	0x1840	; 0x1840 <TFT_PutsInt>
	}
    32c8:	bc cf       	rjmp	.-136    	; 0x3242 <main+0x14c2>
		TFT_PutsInt(water_read,-1,123,72,8,white,back_color);
		TFT_PutsInt(water-water_read,4,123,102,8,white,back_color);
		TFT_PutsInt(i_time,4,5,5,8,blue,white);
	}
	
	PORTD &= ~(1<<0); //This port pin is for water valve off
    32ca:	90 98       	cbi	0x12, 0	; 18
	TFT_Text("Off",171,60,8,white,back_color);
    32cc:	0f 2e       	mov	r0, r31
    32ce:	ff e1       	ldi	r31, 0x1F	; 31
    32d0:	ef 2e       	mov	r14, r31
    32d2:	f1 2c       	mov	r15, r1
    32d4:	f0 2d       	mov	r31, r0
    32d6:	0f ef       	ldi	r16, 0xFF	; 255
    32d8:	1f ef       	ldi	r17, 0xFF	; 255
    32da:	28 e0       	ldi	r18, 0x08	; 8
    32dc:	4c e3       	ldi	r20, 0x3C	; 60
    32de:	50 e0       	ldi	r21, 0x00	; 0
    32e0:	6b ea       	ldi	r22, 0xAB	; 171
    32e2:	70 e0       	ldi	r23, 0x00	; 0
    32e4:	87 ed       	ldi	r24, 0xD7	; 215
    32e6:	91 e0       	ldi	r25, 0x01	; 1
    32e8:	0e 94 8d 0b 	call	0x171a	; 0x171a <TFT_Text>
	
	i_time = 0;
    32ec:	10 92 d6 02 	sts	0x02D6, r1
    32f0:	10 92 d7 02 	sts	0x02D7, r1
    32f4:	10 92 d8 02 	sts	0x02D8, r1
    32f8:	10 92 d9 02 	sts	0x02D9, r1
	
	i_water = 0;
	i_time = 0;
	while (1) //This while loop is for water valve open after 5 seconds
	{
		if (i_time > 2)
    32fc:	60 e0       	ldi	r22, 0x00	; 0
    32fe:	70 e0       	ldi	r23, 0x00	; 0
    3300:	80 e0       	ldi	r24, 0x00	; 0
    3302:	90 e0       	ldi	r25, 0x00	; 0
    3304:	ce cd       	rjmp	.-1124   	; 0x2ea2 <main+0x1122>

00003306 <vfprintf>:
    3306:	a3 e1       	ldi	r26, 0x13	; 19
    3308:	b0 e0       	ldi	r27, 0x00	; 0
    330a:	e9 e8       	ldi	r30, 0x89	; 137
    330c:	f9 e1       	ldi	r31, 0x19	; 25
    330e:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__prologue_saves__>
    3312:	7c 01       	movw	r14, r24
    3314:	1b 01       	movw	r2, r22
    3316:	6a 01       	movw	r12, r20
    3318:	fc 01       	movw	r30, r24
    331a:	17 82       	std	Z+7, r1	; 0x07
    331c:	16 82       	std	Z+6, r1	; 0x06
    331e:	83 81       	ldd	r24, Z+3	; 0x03
    3320:	81 ff       	sbrs	r24, 1
    3322:	66 c3       	rjmp	.+1740   	; 0x39f0 <vfprintf+0x6ea>
    3324:	be 01       	movw	r22, r28
    3326:	6f 5f       	subi	r22, 0xFF	; 255
    3328:	7f 4f       	sbci	r23, 0xFF	; 255
    332a:	4b 01       	movw	r8, r22
    332c:	f7 01       	movw	r30, r14
    332e:	93 81       	ldd	r25, Z+3	; 0x03
    3330:	f1 01       	movw	r30, r2
    3332:	93 fd       	sbrc	r25, 3
    3334:	85 91       	lpm	r24, Z+
    3336:	93 ff       	sbrs	r25, 3
    3338:	81 91       	ld	r24, Z+
    333a:	1f 01       	movw	r2, r30
    333c:	88 23       	and	r24, r24
    333e:	09 f4       	brne	.+2      	; 0x3342 <vfprintf+0x3c>
    3340:	53 c3       	rjmp	.+1702   	; 0x39e8 <vfprintf+0x6e2>
    3342:	85 32       	cpi	r24, 0x25	; 37
    3344:	39 f4       	brne	.+14     	; 0x3354 <vfprintf+0x4e>
    3346:	93 fd       	sbrc	r25, 3
    3348:	85 91       	lpm	r24, Z+
    334a:	93 ff       	sbrs	r25, 3
    334c:	81 91       	ld	r24, Z+
    334e:	1f 01       	movw	r2, r30
    3350:	85 32       	cpi	r24, 0x25	; 37
    3352:	39 f4       	brne	.+14     	; 0x3362 <vfprintf+0x5c>
    3354:	b7 01       	movw	r22, r14
    3356:	90 e0       	ldi	r25, 0x00	; 0
    3358:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    335c:	56 01       	movw	r10, r12
    335e:	65 01       	movw	r12, r10
    3360:	e5 cf       	rjmp	.-54     	; 0x332c <vfprintf+0x26>
    3362:	10 e0       	ldi	r17, 0x00	; 0
    3364:	51 2c       	mov	r5, r1
    3366:	20 e0       	ldi	r18, 0x00	; 0
    3368:	20 32       	cpi	r18, 0x20	; 32
    336a:	a0 f4       	brcc	.+40     	; 0x3394 <vfprintf+0x8e>
    336c:	8b 32       	cpi	r24, 0x2B	; 43
    336e:	69 f0       	breq	.+26     	; 0x338a <vfprintf+0x84>
    3370:	30 f4       	brcc	.+12     	; 0x337e <vfprintf+0x78>
    3372:	80 32       	cpi	r24, 0x20	; 32
    3374:	59 f0       	breq	.+22     	; 0x338c <vfprintf+0x86>
    3376:	83 32       	cpi	r24, 0x23	; 35
    3378:	69 f4       	brne	.+26     	; 0x3394 <vfprintf+0x8e>
    337a:	20 61       	ori	r18, 0x10	; 16
    337c:	2c c0       	rjmp	.+88     	; 0x33d6 <vfprintf+0xd0>
    337e:	8d 32       	cpi	r24, 0x2D	; 45
    3380:	39 f0       	breq	.+14     	; 0x3390 <vfprintf+0x8a>
    3382:	80 33       	cpi	r24, 0x30	; 48
    3384:	39 f4       	brne	.+14     	; 0x3394 <vfprintf+0x8e>
    3386:	21 60       	ori	r18, 0x01	; 1
    3388:	26 c0       	rjmp	.+76     	; 0x33d6 <vfprintf+0xd0>
    338a:	22 60       	ori	r18, 0x02	; 2
    338c:	24 60       	ori	r18, 0x04	; 4
    338e:	23 c0       	rjmp	.+70     	; 0x33d6 <vfprintf+0xd0>
    3390:	28 60       	ori	r18, 0x08	; 8
    3392:	21 c0       	rjmp	.+66     	; 0x33d6 <vfprintf+0xd0>
    3394:	27 fd       	sbrc	r18, 7
    3396:	27 c0       	rjmp	.+78     	; 0x33e6 <vfprintf+0xe0>
    3398:	30 ed       	ldi	r19, 0xD0	; 208
    339a:	38 0f       	add	r19, r24
    339c:	3a 30       	cpi	r19, 0x0A	; 10
    339e:	78 f4       	brcc	.+30     	; 0x33be <vfprintf+0xb8>
    33a0:	26 ff       	sbrs	r18, 6
    33a2:	06 c0       	rjmp	.+12     	; 0x33b0 <vfprintf+0xaa>
    33a4:	fa e0       	ldi	r31, 0x0A	; 10
    33a6:	1f 9f       	mul	r17, r31
    33a8:	30 0d       	add	r19, r0
    33aa:	11 24       	eor	r1, r1
    33ac:	13 2f       	mov	r17, r19
    33ae:	13 c0       	rjmp	.+38     	; 0x33d6 <vfprintf+0xd0>
    33b0:	6a e0       	ldi	r22, 0x0A	; 10
    33b2:	56 9e       	mul	r5, r22
    33b4:	30 0d       	add	r19, r0
    33b6:	11 24       	eor	r1, r1
    33b8:	53 2e       	mov	r5, r19
    33ba:	20 62       	ori	r18, 0x20	; 32
    33bc:	0c c0       	rjmp	.+24     	; 0x33d6 <vfprintf+0xd0>
    33be:	8e 32       	cpi	r24, 0x2E	; 46
    33c0:	21 f4       	brne	.+8      	; 0x33ca <vfprintf+0xc4>
    33c2:	26 fd       	sbrc	r18, 6
    33c4:	11 c3       	rjmp	.+1570   	; 0x39e8 <vfprintf+0x6e2>
    33c6:	20 64       	ori	r18, 0x40	; 64
    33c8:	06 c0       	rjmp	.+12     	; 0x33d6 <vfprintf+0xd0>
    33ca:	8c 36       	cpi	r24, 0x6C	; 108
    33cc:	11 f4       	brne	.+4      	; 0x33d2 <vfprintf+0xcc>
    33ce:	20 68       	ori	r18, 0x80	; 128
    33d0:	02 c0       	rjmp	.+4      	; 0x33d6 <vfprintf+0xd0>
    33d2:	88 36       	cpi	r24, 0x68	; 104
    33d4:	41 f4       	brne	.+16     	; 0x33e6 <vfprintf+0xe0>
    33d6:	f1 01       	movw	r30, r2
    33d8:	93 fd       	sbrc	r25, 3
    33da:	85 91       	lpm	r24, Z+
    33dc:	93 ff       	sbrs	r25, 3
    33de:	81 91       	ld	r24, Z+
    33e0:	1f 01       	movw	r2, r30
    33e2:	81 11       	cpse	r24, r1
    33e4:	c1 cf       	rjmp	.-126    	; 0x3368 <vfprintf+0x62>
    33e6:	9b eb       	ldi	r25, 0xBB	; 187
    33e8:	98 0f       	add	r25, r24
    33ea:	93 30       	cpi	r25, 0x03	; 3
    33ec:	18 f4       	brcc	.+6      	; 0x33f4 <vfprintf+0xee>
    33ee:	20 61       	ori	r18, 0x10	; 16
    33f0:	80 5e       	subi	r24, 0xE0	; 224
    33f2:	06 c0       	rjmp	.+12     	; 0x3400 <vfprintf+0xfa>
    33f4:	9b e9       	ldi	r25, 0x9B	; 155
    33f6:	98 0f       	add	r25, r24
    33f8:	93 30       	cpi	r25, 0x03	; 3
    33fa:	08 f0       	brcs	.+2      	; 0x33fe <vfprintf+0xf8>
    33fc:	aa c1       	rjmp	.+852    	; 0x3752 <vfprintf+0x44c>
    33fe:	2f 7e       	andi	r18, 0xEF	; 239
    3400:	26 ff       	sbrs	r18, 6
    3402:	16 e0       	ldi	r17, 0x06	; 6
    3404:	2f 73       	andi	r18, 0x3F	; 63
    3406:	72 2e       	mov	r7, r18
    3408:	85 36       	cpi	r24, 0x65	; 101
    340a:	21 f4       	brne	.+8      	; 0x3414 <vfprintf+0x10e>
    340c:	f2 2f       	mov	r31, r18
    340e:	f0 64       	ori	r31, 0x40	; 64
    3410:	7f 2e       	mov	r7, r31
    3412:	08 c0       	rjmp	.+16     	; 0x3424 <vfprintf+0x11e>
    3414:	86 36       	cpi	r24, 0x66	; 102
    3416:	21 f4       	brne	.+8      	; 0x3420 <vfprintf+0x11a>
    3418:	62 2f       	mov	r22, r18
    341a:	60 68       	ori	r22, 0x80	; 128
    341c:	76 2e       	mov	r7, r22
    341e:	02 c0       	rjmp	.+4      	; 0x3424 <vfprintf+0x11e>
    3420:	11 11       	cpse	r17, r1
    3422:	11 50       	subi	r17, 0x01	; 1
    3424:	77 fe       	sbrs	r7, 7
    3426:	07 c0       	rjmp	.+14     	; 0x3436 <vfprintf+0x130>
    3428:	1c 33       	cpi	r17, 0x3C	; 60
    342a:	48 f4       	brcc	.+18     	; 0x343e <vfprintf+0x138>
    342c:	44 24       	eor	r4, r4
    342e:	43 94       	inc	r4
    3430:	41 0e       	add	r4, r17
    3432:	27 e0       	ldi	r18, 0x07	; 7
    3434:	0b c0       	rjmp	.+22     	; 0x344c <vfprintf+0x146>
    3436:	18 30       	cpi	r17, 0x08	; 8
    3438:	30 f4       	brcc	.+12     	; 0x3446 <vfprintf+0x140>
    343a:	21 2f       	mov	r18, r17
    343c:	06 c0       	rjmp	.+12     	; 0x344a <vfprintf+0x144>
    343e:	27 e0       	ldi	r18, 0x07	; 7
    3440:	4c e3       	ldi	r20, 0x3C	; 60
    3442:	44 2e       	mov	r4, r20
    3444:	03 c0       	rjmp	.+6      	; 0x344c <vfprintf+0x146>
    3446:	27 e0       	ldi	r18, 0x07	; 7
    3448:	17 e0       	ldi	r17, 0x07	; 7
    344a:	41 2c       	mov	r4, r1
    344c:	56 01       	movw	r10, r12
    344e:	74 e0       	ldi	r23, 0x04	; 4
    3450:	a7 0e       	add	r10, r23
    3452:	b1 1c       	adc	r11, r1
    3454:	f6 01       	movw	r30, r12
    3456:	60 81       	ld	r22, Z
    3458:	71 81       	ldd	r23, Z+1	; 0x01
    345a:	82 81       	ldd	r24, Z+2	; 0x02
    345c:	93 81       	ldd	r25, Z+3	; 0x03
    345e:	04 2d       	mov	r16, r4
    3460:	a4 01       	movw	r20, r8
    3462:	0e 94 b8 1d 	call	0x3b70	; 0x3b70 <__ftoa_engine>
    3466:	6c 01       	movw	r12, r24
    3468:	09 81       	ldd	r16, Y+1	; 0x01
    346a:	00 ff       	sbrs	r16, 0
    346c:	02 c0       	rjmp	.+4      	; 0x3472 <vfprintf+0x16c>
    346e:	03 ff       	sbrs	r16, 3
    3470:	06 c0       	rjmp	.+12     	; 0x347e <vfprintf+0x178>
    3472:	71 fc       	sbrc	r7, 1
    3474:	07 c0       	rjmp	.+14     	; 0x3484 <vfprintf+0x17e>
    3476:	72 fc       	sbrc	r7, 2
    3478:	08 c0       	rjmp	.+16     	; 0x348a <vfprintf+0x184>
    347a:	61 2c       	mov	r6, r1
    347c:	08 c0       	rjmp	.+16     	; 0x348e <vfprintf+0x188>
    347e:	3d e2       	ldi	r19, 0x2D	; 45
    3480:	63 2e       	mov	r6, r19
    3482:	05 c0       	rjmp	.+10     	; 0x348e <vfprintf+0x188>
    3484:	2b e2       	ldi	r18, 0x2B	; 43
    3486:	62 2e       	mov	r6, r18
    3488:	02 c0       	rjmp	.+4      	; 0x348e <vfprintf+0x188>
    348a:	90 e2       	ldi	r25, 0x20	; 32
    348c:	69 2e       	mov	r6, r25
    348e:	80 2f       	mov	r24, r16
    3490:	8c 70       	andi	r24, 0x0C	; 12
    3492:	99 f1       	breq	.+102    	; 0x34fa <vfprintf+0x1f4>
    3494:	66 20       	and	r6, r6
    3496:	11 f0       	breq	.+4      	; 0x349c <vfprintf+0x196>
    3498:	84 e0       	ldi	r24, 0x04	; 4
    349a:	01 c0       	rjmp	.+2      	; 0x349e <vfprintf+0x198>
    349c:	83 e0       	ldi	r24, 0x03	; 3
    349e:	85 15       	cp	r24, r5
    34a0:	10 f0       	brcs	.+4      	; 0x34a6 <vfprintf+0x1a0>
    34a2:	51 2c       	mov	r5, r1
    34a4:	0b c0       	rjmp	.+22     	; 0x34bc <vfprintf+0x1b6>
    34a6:	58 1a       	sub	r5, r24
    34a8:	73 fc       	sbrc	r7, 3
    34aa:	08 c0       	rjmp	.+16     	; 0x34bc <vfprintf+0x1b6>
    34ac:	b7 01       	movw	r22, r14
    34ae:	80 e2       	ldi	r24, 0x20	; 32
    34b0:	90 e0       	ldi	r25, 0x00	; 0
    34b2:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    34b6:	5a 94       	dec	r5
    34b8:	c9 f7       	brne	.-14     	; 0x34ac <vfprintf+0x1a6>
    34ba:	f3 cf       	rjmp	.-26     	; 0x34a2 <vfprintf+0x19c>
    34bc:	66 20       	and	r6, r6
    34be:	29 f0       	breq	.+10     	; 0x34ca <vfprintf+0x1c4>
    34c0:	b7 01       	movw	r22, r14
    34c2:	86 2d       	mov	r24, r6
    34c4:	90 e0       	ldi	r25, 0x00	; 0
    34c6:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    34ca:	03 fd       	sbrc	r16, 3
    34cc:	03 c0       	rjmp	.+6      	; 0x34d4 <vfprintf+0x1ce>
    34ce:	08 e4       	ldi	r16, 0x48	; 72
    34d0:	1f e0       	ldi	r17, 0x0F	; 15
    34d2:	02 c0       	rjmp	.+4      	; 0x34d8 <vfprintf+0x1d2>
    34d4:	04 e4       	ldi	r16, 0x44	; 68
    34d6:	1f e0       	ldi	r17, 0x0F	; 15
    34d8:	f7 2d       	mov	r31, r7
    34da:	f0 71       	andi	r31, 0x10	; 16
    34dc:	7f 2e       	mov	r7, r31
    34de:	f8 01       	movw	r30, r16
    34e0:	84 91       	lpm	r24, Z
    34e2:	88 23       	and	r24, r24
    34e4:	09 f4       	brne	.+2      	; 0x34e8 <vfprintf+0x1e2>
    34e6:	76 c2       	rjmp	.+1260   	; 0x39d4 <vfprintf+0x6ce>
    34e8:	71 10       	cpse	r7, r1
    34ea:	80 52       	subi	r24, 0x20	; 32
    34ec:	b7 01       	movw	r22, r14
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    34f4:	0f 5f       	subi	r16, 0xFF	; 255
    34f6:	1f 4f       	sbci	r17, 0xFF	; 255
    34f8:	f2 cf       	rjmp	.-28     	; 0x34de <vfprintf+0x1d8>
    34fa:	77 fe       	sbrs	r7, 7
    34fc:	0f c0       	rjmp	.+30     	; 0x351c <vfprintf+0x216>
    34fe:	4c 0c       	add	r4, r12
    3500:	04 ff       	sbrs	r16, 4
    3502:	04 c0       	rjmp	.+8      	; 0x350c <vfprintf+0x206>
    3504:	8a 81       	ldd	r24, Y+2	; 0x02
    3506:	81 33       	cpi	r24, 0x31	; 49
    3508:	09 f4       	brne	.+2      	; 0x350c <vfprintf+0x206>
    350a:	4a 94       	dec	r4
    350c:	14 14       	cp	r1, r4
    350e:	74 f5       	brge	.+92     	; 0x356c <vfprintf+0x266>
    3510:	f8 e0       	ldi	r31, 0x08	; 8
    3512:	f4 15       	cp	r31, r4
    3514:	78 f5       	brcc	.+94     	; 0x3574 <vfprintf+0x26e>
    3516:	88 e0       	ldi	r24, 0x08	; 8
    3518:	48 2e       	mov	r4, r24
    351a:	2c c0       	rjmp	.+88     	; 0x3574 <vfprintf+0x26e>
    351c:	76 fc       	sbrc	r7, 6
    351e:	2a c0       	rjmp	.+84     	; 0x3574 <vfprintf+0x26e>
    3520:	81 2f       	mov	r24, r17
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	8c 15       	cp	r24, r12
    3526:	9d 05       	cpc	r25, r13
    3528:	9c f0       	brlt	.+38     	; 0x3550 <vfprintf+0x24a>
    352a:	6c ef       	ldi	r22, 0xFC	; 252
    352c:	c6 16       	cp	r12, r22
    352e:	6f ef       	ldi	r22, 0xFF	; 255
    3530:	d6 06       	cpc	r13, r22
    3532:	74 f0       	brlt	.+28     	; 0x3550 <vfprintf+0x24a>
    3534:	77 2d       	mov	r23, r7
    3536:	70 68       	ori	r23, 0x80	; 128
    3538:	77 2e       	mov	r7, r23
    353a:	0a c0       	rjmp	.+20     	; 0x3550 <vfprintf+0x24a>
    353c:	e2 e0       	ldi	r30, 0x02	; 2
    353e:	f0 e0       	ldi	r31, 0x00	; 0
    3540:	ec 0f       	add	r30, r28
    3542:	fd 1f       	adc	r31, r29
    3544:	e1 0f       	add	r30, r17
    3546:	f1 1d       	adc	r31, r1
    3548:	80 81       	ld	r24, Z
    354a:	80 33       	cpi	r24, 0x30	; 48
    354c:	19 f4       	brne	.+6      	; 0x3554 <vfprintf+0x24e>
    354e:	11 50       	subi	r17, 0x01	; 1
    3550:	11 11       	cpse	r17, r1
    3552:	f4 cf       	rjmp	.-24     	; 0x353c <vfprintf+0x236>
    3554:	77 fe       	sbrs	r7, 7
    3556:	0e c0       	rjmp	.+28     	; 0x3574 <vfprintf+0x26e>
    3558:	44 24       	eor	r4, r4
    355a:	43 94       	inc	r4
    355c:	41 0e       	add	r4, r17
    355e:	81 2f       	mov	r24, r17
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	c8 16       	cp	r12, r24
    3564:	d9 06       	cpc	r13, r25
    3566:	2c f4       	brge	.+10     	; 0x3572 <vfprintf+0x26c>
    3568:	1c 19       	sub	r17, r12
    356a:	04 c0       	rjmp	.+8      	; 0x3574 <vfprintf+0x26e>
    356c:	44 24       	eor	r4, r4
    356e:	43 94       	inc	r4
    3570:	01 c0       	rjmp	.+2      	; 0x3574 <vfprintf+0x26e>
    3572:	10 e0       	ldi	r17, 0x00	; 0
    3574:	77 fe       	sbrs	r7, 7
    3576:	07 c0       	rjmp	.+14     	; 0x3586 <vfprintf+0x280>
    3578:	1c 14       	cp	r1, r12
    357a:	1d 04       	cpc	r1, r13
    357c:	3c f4       	brge	.+14     	; 0x358c <vfprintf+0x286>
    357e:	96 01       	movw	r18, r12
    3580:	2f 5f       	subi	r18, 0xFF	; 255
    3582:	3f 4f       	sbci	r19, 0xFF	; 255
    3584:	05 c0       	rjmp	.+10     	; 0x3590 <vfprintf+0x28a>
    3586:	25 e0       	ldi	r18, 0x05	; 5
    3588:	30 e0       	ldi	r19, 0x00	; 0
    358a:	02 c0       	rjmp	.+4      	; 0x3590 <vfprintf+0x28a>
    358c:	21 e0       	ldi	r18, 0x01	; 1
    358e:	30 e0       	ldi	r19, 0x00	; 0
    3590:	66 20       	and	r6, r6
    3592:	11 f0       	breq	.+4      	; 0x3598 <vfprintf+0x292>
    3594:	2f 5f       	subi	r18, 0xFF	; 255
    3596:	3f 4f       	sbci	r19, 0xFF	; 255
    3598:	11 23       	and	r17, r17
    359a:	31 f0       	breq	.+12     	; 0x35a8 <vfprintf+0x2a2>
    359c:	41 2f       	mov	r20, r17
    359e:	50 e0       	ldi	r21, 0x00	; 0
    35a0:	4f 5f       	subi	r20, 0xFF	; 255
    35a2:	5f 4f       	sbci	r21, 0xFF	; 255
    35a4:	24 0f       	add	r18, r20
    35a6:	35 1f       	adc	r19, r21
    35a8:	45 2d       	mov	r20, r5
    35aa:	50 e0       	ldi	r21, 0x00	; 0
    35ac:	24 17       	cp	r18, r20
    35ae:	35 07       	cpc	r19, r21
    35b0:	14 f4       	brge	.+4      	; 0x35b6 <vfprintf+0x2b0>
    35b2:	52 1a       	sub	r5, r18
    35b4:	01 c0       	rjmp	.+2      	; 0x35b8 <vfprintf+0x2b2>
    35b6:	51 2c       	mov	r5, r1
    35b8:	87 2d       	mov	r24, r7
    35ba:	89 70       	andi	r24, 0x09	; 9
    35bc:	49 f4       	brne	.+18     	; 0x35d0 <vfprintf+0x2ca>
    35be:	55 20       	and	r5, r5
    35c0:	39 f0       	breq	.+14     	; 0x35d0 <vfprintf+0x2ca>
    35c2:	b7 01       	movw	r22, r14
    35c4:	80 e2       	ldi	r24, 0x20	; 32
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    35cc:	5a 94       	dec	r5
    35ce:	f7 cf       	rjmp	.-18     	; 0x35be <vfprintf+0x2b8>
    35d0:	66 20       	and	r6, r6
    35d2:	29 f0       	breq	.+10     	; 0x35de <vfprintf+0x2d8>
    35d4:	b7 01       	movw	r22, r14
    35d6:	86 2d       	mov	r24, r6
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    35de:	73 fc       	sbrc	r7, 3
    35e0:	09 c0       	rjmp	.+18     	; 0x35f4 <vfprintf+0x2ee>
    35e2:	55 20       	and	r5, r5
    35e4:	39 f0       	breq	.+14     	; 0x35f4 <vfprintf+0x2ee>
    35e6:	b7 01       	movw	r22, r14
    35e8:	80 e3       	ldi	r24, 0x30	; 48
    35ea:	90 e0       	ldi	r25, 0x00	; 0
    35ec:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    35f0:	5a 94       	dec	r5
    35f2:	f7 cf       	rjmp	.-18     	; 0x35e2 <vfprintf+0x2dc>
    35f4:	77 fe       	sbrs	r7, 7
    35f6:	5f c0       	rjmp	.+190    	; 0x36b6 <vfprintf+0x3b0>
    35f8:	9c 2d       	mov	r25, r12
    35fa:	8d 2d       	mov	r24, r13
    35fc:	d7 fe       	sbrs	r13, 7
    35fe:	02 c0       	rjmp	.+4      	; 0x3604 <vfprintf+0x2fe>
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	80 e0       	ldi	r24, 0x00	; 0
    3604:	69 2e       	mov	r6, r25
    3606:	78 2e       	mov	r7, r24
    3608:	40 e0       	ldi	r20, 0x00	; 0
    360a:	50 e0       	ldi	r21, 0x00	; 0
    360c:	c6 01       	movw	r24, r12
    360e:	84 19       	sub	r24, r4
    3610:	91 09       	sbc	r25, r1
    3612:	9d 87       	std	Y+13, r25	; 0x0d
    3614:	8c 87       	std	Y+12, r24	; 0x0c
    3616:	96 01       	movw	r18, r12
    3618:	26 19       	sub	r18, r6
    361a:	37 09       	sbc	r19, r7
    361c:	28 0d       	add	r18, r8
    361e:	39 1d       	adc	r19, r9
    3620:	81 2f       	mov	r24, r17
    3622:	90 e0       	ldi	r25, 0x00	; 0
    3624:	ee 27       	eor	r30, r30
    3626:	ff 27       	eor	r31, r31
    3628:	e8 1b       	sub	r30, r24
    362a:	f9 0b       	sbc	r31, r25
    362c:	ff 87       	std	Y+15, r31	; 0x0f
    362e:	ee 87       	std	Y+14, r30	; 0x0e
    3630:	ff ef       	ldi	r31, 0xFF	; 255
    3632:	6f 16       	cp	r6, r31
    3634:	7f 06       	cpc	r7, r31
    3636:	69 f4       	brne	.+26     	; 0x3652 <vfprintf+0x34c>
    3638:	b7 01       	movw	r22, r14
    363a:	8e e2       	ldi	r24, 0x2E	; 46
    363c:	90 e0       	ldi	r25, 0x00	; 0
    363e:	2b 8b       	std	Y+19, r18	; 0x13
    3640:	3a 8b       	std	Y+18, r19	; 0x12
    3642:	48 8b       	std	Y+16, r20	; 0x10
    3644:	59 8b       	std	Y+17, r21	; 0x11
    3646:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    364a:	59 89       	ldd	r21, Y+17	; 0x11
    364c:	48 89       	ldd	r20, Y+16	; 0x10
    364e:	3a 89       	ldd	r19, Y+18	; 0x12
    3650:	2b 89       	ldd	r18, Y+19	; 0x13
    3652:	c6 14       	cp	r12, r6
    3654:	d7 04       	cpc	r13, r7
    3656:	54 f0       	brlt	.+20     	; 0x366c <vfprintf+0x366>
    3658:	6c 85       	ldd	r22, Y+12	; 0x0c
    365a:	7d 85       	ldd	r23, Y+13	; 0x0d
    365c:	66 15       	cp	r22, r6
    365e:	77 05       	cpc	r23, r7
    3660:	2c f4       	brge	.+10     	; 0x366c <vfprintf+0x366>
    3662:	f9 01       	movw	r30, r18
    3664:	e4 0f       	add	r30, r20
    3666:	f5 1f       	adc	r31, r21
    3668:	81 81       	ldd	r24, Z+1	; 0x01
    366a:	01 c0       	rjmp	.+2      	; 0x366e <vfprintf+0x368>
    366c:	80 e3       	ldi	r24, 0x30	; 48
    366e:	71 e0       	ldi	r23, 0x01	; 1
    3670:	67 1a       	sub	r6, r23
    3672:	71 08       	sbc	r7, r1
    3674:	4f 5f       	subi	r20, 0xFF	; 255
    3676:	5f 4f       	sbci	r21, 0xFF	; 255
    3678:	ee 85       	ldd	r30, Y+14	; 0x0e
    367a:	ff 85       	ldd	r31, Y+15	; 0x0f
    367c:	6e 16       	cp	r6, r30
    367e:	7f 06       	cpc	r7, r31
    3680:	6c f0       	brlt	.+26     	; 0x369c <vfprintf+0x396>
    3682:	b7 01       	movw	r22, r14
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	2b 8b       	std	Y+19, r18	; 0x13
    3688:	3a 8b       	std	Y+18, r19	; 0x12
    368a:	48 8b       	std	Y+16, r20	; 0x10
    368c:	59 8b       	std	Y+17, r21	; 0x11
    368e:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3692:	2b 89       	ldd	r18, Y+19	; 0x13
    3694:	3a 89       	ldd	r19, Y+18	; 0x12
    3696:	48 89       	ldd	r20, Y+16	; 0x10
    3698:	59 89       	ldd	r21, Y+17	; 0x11
    369a:	ca cf       	rjmp	.-108    	; 0x3630 <vfprintf+0x32a>
    369c:	6c 14       	cp	r6, r12
    369e:	7d 04       	cpc	r7, r13
    36a0:	39 f4       	brne	.+14     	; 0x36b0 <vfprintf+0x3aa>
    36a2:	9a 81       	ldd	r25, Y+2	; 0x02
    36a4:	96 33       	cpi	r25, 0x36	; 54
    36a6:	18 f4       	brcc	.+6      	; 0x36ae <vfprintf+0x3a8>
    36a8:	95 33       	cpi	r25, 0x35	; 53
    36aa:	11 f4       	brne	.+4      	; 0x36b0 <vfprintf+0x3aa>
    36ac:	04 ff       	sbrs	r16, 4
    36ae:	81 e3       	ldi	r24, 0x31	; 49
    36b0:	b7 01       	movw	r22, r14
    36b2:	90 e0       	ldi	r25, 0x00	; 0
    36b4:	4b c0       	rjmp	.+150    	; 0x374c <vfprintf+0x446>
    36b6:	8a 81       	ldd	r24, Y+2	; 0x02
    36b8:	81 33       	cpi	r24, 0x31	; 49
    36ba:	09 f0       	breq	.+2      	; 0x36be <vfprintf+0x3b8>
    36bc:	0f 7e       	andi	r16, 0xEF	; 239
    36be:	b7 01       	movw	r22, r14
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    36c6:	11 11       	cpse	r17, r1
    36c8:	05 c0       	rjmp	.+10     	; 0x36d4 <vfprintf+0x3ce>
    36ca:	74 fe       	sbrs	r7, 4
    36cc:	18 c0       	rjmp	.+48     	; 0x36fe <vfprintf+0x3f8>
    36ce:	85 e4       	ldi	r24, 0x45	; 69
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	17 c0       	rjmp	.+46     	; 0x3702 <vfprintf+0x3fc>
    36d4:	b7 01       	movw	r22, r14
    36d6:	8e e2       	ldi	r24, 0x2E	; 46
    36d8:	90 e0       	ldi	r25, 0x00	; 0
    36da:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    36de:	82 e0       	ldi	r24, 0x02	; 2
    36e0:	66 24       	eor	r6, r6
    36e2:	63 94       	inc	r6
    36e4:	68 0e       	add	r6, r24
    36e6:	f4 01       	movw	r30, r8
    36e8:	e8 0f       	add	r30, r24
    36ea:	f1 1d       	adc	r31, r1
    36ec:	80 81       	ld	r24, Z
    36ee:	b7 01       	movw	r22, r14
    36f0:	90 e0       	ldi	r25, 0x00	; 0
    36f2:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    36f6:	11 50       	subi	r17, 0x01	; 1
    36f8:	41 f3       	breq	.-48     	; 0x36ca <vfprintf+0x3c4>
    36fa:	86 2d       	mov	r24, r6
    36fc:	f1 cf       	rjmp	.-30     	; 0x36e0 <vfprintf+0x3da>
    36fe:	85 e6       	ldi	r24, 0x65	; 101
    3700:	90 e0       	ldi	r25, 0x00	; 0
    3702:	b7 01       	movw	r22, r14
    3704:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3708:	d7 fc       	sbrc	r13, 7
    370a:	05 c0       	rjmp	.+10     	; 0x3716 <vfprintf+0x410>
    370c:	c1 14       	cp	r12, r1
    370e:	d1 04       	cpc	r13, r1
    3710:	39 f4       	brne	.+14     	; 0x3720 <vfprintf+0x41a>
    3712:	04 ff       	sbrs	r16, 4
    3714:	05 c0       	rjmp	.+10     	; 0x3720 <vfprintf+0x41a>
    3716:	d1 94       	neg	r13
    3718:	c1 94       	neg	r12
    371a:	d1 08       	sbc	r13, r1
    371c:	8d e2       	ldi	r24, 0x2D	; 45
    371e:	01 c0       	rjmp	.+2      	; 0x3722 <vfprintf+0x41c>
    3720:	8b e2       	ldi	r24, 0x2B	; 43
    3722:	b7 01       	movw	r22, r14
    3724:	90 e0       	ldi	r25, 0x00	; 0
    3726:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    372a:	80 e3       	ldi	r24, 0x30	; 48
    372c:	6a e0       	ldi	r22, 0x0A	; 10
    372e:	c6 16       	cp	r12, r22
    3730:	d1 04       	cpc	r13, r1
    3732:	2c f0       	brlt	.+10     	; 0x373e <vfprintf+0x438>
    3734:	8f 5f       	subi	r24, 0xFF	; 255
    3736:	fa e0       	ldi	r31, 0x0A	; 10
    3738:	cf 1a       	sub	r12, r31
    373a:	d1 08       	sbc	r13, r1
    373c:	f7 cf       	rjmp	.-18     	; 0x372c <vfprintf+0x426>
    373e:	b7 01       	movw	r22, r14
    3740:	90 e0       	ldi	r25, 0x00	; 0
    3742:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3746:	b7 01       	movw	r22, r14
    3748:	c6 01       	movw	r24, r12
    374a:	c0 96       	adiw	r24, 0x30	; 48
    374c:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3750:	41 c1       	rjmp	.+642    	; 0x39d4 <vfprintf+0x6ce>
    3752:	83 36       	cpi	r24, 0x63	; 99
    3754:	31 f0       	breq	.+12     	; 0x3762 <vfprintf+0x45c>
    3756:	83 37       	cpi	r24, 0x73	; 115
    3758:	79 f0       	breq	.+30     	; 0x3778 <vfprintf+0x472>
    375a:	83 35       	cpi	r24, 0x53	; 83
    375c:	09 f0       	breq	.+2      	; 0x3760 <vfprintf+0x45a>
    375e:	58 c0       	rjmp	.+176    	; 0x3810 <vfprintf+0x50a>
    3760:	21 c0       	rjmp	.+66     	; 0x37a4 <vfprintf+0x49e>
    3762:	56 01       	movw	r10, r12
    3764:	72 e0       	ldi	r23, 0x02	; 2
    3766:	a7 0e       	add	r10, r23
    3768:	b1 1c       	adc	r11, r1
    376a:	f6 01       	movw	r30, r12
    376c:	80 81       	ld	r24, Z
    376e:	89 83       	std	Y+1, r24	; 0x01
    3770:	01 e0       	ldi	r16, 0x01	; 1
    3772:	10 e0       	ldi	r17, 0x00	; 0
    3774:	64 01       	movw	r12, r8
    3776:	14 c0       	rjmp	.+40     	; 0x37a0 <vfprintf+0x49a>
    3778:	56 01       	movw	r10, r12
    377a:	f2 e0       	ldi	r31, 0x02	; 2
    377c:	af 0e       	add	r10, r31
    377e:	b1 1c       	adc	r11, r1
    3780:	f6 01       	movw	r30, r12
    3782:	c0 80       	ld	r12, Z
    3784:	d1 80       	ldd	r13, Z+1	; 0x01
    3786:	26 ff       	sbrs	r18, 6
    3788:	03 c0       	rjmp	.+6      	; 0x3790 <vfprintf+0x48a>
    378a:	61 2f       	mov	r22, r17
    378c:	70 e0       	ldi	r23, 0x00	; 0
    378e:	02 c0       	rjmp	.+4      	; 0x3794 <vfprintf+0x48e>
    3790:	6f ef       	ldi	r22, 0xFF	; 255
    3792:	7f ef       	ldi	r23, 0xFF	; 255
    3794:	c6 01       	movw	r24, r12
    3796:	2b 8b       	std	Y+19, r18	; 0x13
    3798:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <strnlen>
    379c:	8c 01       	movw	r16, r24
    379e:	2b 89       	ldd	r18, Y+19	; 0x13
    37a0:	2f 77       	andi	r18, 0x7F	; 127
    37a2:	15 c0       	rjmp	.+42     	; 0x37ce <vfprintf+0x4c8>
    37a4:	56 01       	movw	r10, r12
    37a6:	f2 e0       	ldi	r31, 0x02	; 2
    37a8:	af 0e       	add	r10, r31
    37aa:	b1 1c       	adc	r11, r1
    37ac:	f6 01       	movw	r30, r12
    37ae:	c0 80       	ld	r12, Z
    37b0:	d1 80       	ldd	r13, Z+1	; 0x01
    37b2:	26 ff       	sbrs	r18, 6
    37b4:	03 c0       	rjmp	.+6      	; 0x37bc <vfprintf+0x4b6>
    37b6:	61 2f       	mov	r22, r17
    37b8:	70 e0       	ldi	r23, 0x00	; 0
    37ba:	02 c0       	rjmp	.+4      	; 0x37c0 <vfprintf+0x4ba>
    37bc:	6f ef       	ldi	r22, 0xFF	; 255
    37be:	7f ef       	ldi	r23, 0xFF	; 255
    37c0:	c6 01       	movw	r24, r12
    37c2:	2b 8b       	std	Y+19, r18	; 0x13
    37c4:	0e 94 90 1e 	call	0x3d20	; 0x3d20 <strnlen_P>
    37c8:	8c 01       	movw	r16, r24
    37ca:	2b 89       	ldd	r18, Y+19	; 0x13
    37cc:	20 68       	ori	r18, 0x80	; 128
    37ce:	72 2e       	mov	r7, r18
    37d0:	23 fd       	sbrc	r18, 3
    37d2:	1a c0       	rjmp	.+52     	; 0x3808 <vfprintf+0x502>
    37d4:	85 2d       	mov	r24, r5
    37d6:	90 e0       	ldi	r25, 0x00	; 0
    37d8:	08 17       	cp	r16, r24
    37da:	19 07       	cpc	r17, r25
    37dc:	a8 f4       	brcc	.+42     	; 0x3808 <vfprintf+0x502>
    37de:	b7 01       	movw	r22, r14
    37e0:	80 e2       	ldi	r24, 0x20	; 32
    37e2:	90 e0       	ldi	r25, 0x00	; 0
    37e4:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    37e8:	5a 94       	dec	r5
    37ea:	f4 cf       	rjmp	.-24     	; 0x37d4 <vfprintf+0x4ce>
    37ec:	f6 01       	movw	r30, r12
    37ee:	77 fc       	sbrc	r7, 7
    37f0:	85 91       	lpm	r24, Z+
    37f2:	77 fe       	sbrs	r7, 7
    37f4:	81 91       	ld	r24, Z+
    37f6:	6f 01       	movw	r12, r30
    37f8:	b7 01       	movw	r22, r14
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3800:	51 10       	cpse	r5, r1
    3802:	5a 94       	dec	r5
    3804:	01 50       	subi	r16, 0x01	; 1
    3806:	11 09       	sbc	r17, r1
    3808:	01 15       	cp	r16, r1
    380a:	11 05       	cpc	r17, r1
    380c:	79 f7       	brne	.-34     	; 0x37ec <vfprintf+0x4e6>
    380e:	e2 c0       	rjmp	.+452    	; 0x39d4 <vfprintf+0x6ce>
    3810:	84 36       	cpi	r24, 0x64	; 100
    3812:	11 f0       	breq	.+4      	; 0x3818 <vfprintf+0x512>
    3814:	89 36       	cpi	r24, 0x69	; 105
    3816:	51 f5       	brne	.+84     	; 0x386c <vfprintf+0x566>
    3818:	56 01       	movw	r10, r12
    381a:	27 ff       	sbrs	r18, 7
    381c:	09 c0       	rjmp	.+18     	; 0x3830 <vfprintf+0x52a>
    381e:	f4 e0       	ldi	r31, 0x04	; 4
    3820:	af 0e       	add	r10, r31
    3822:	b1 1c       	adc	r11, r1
    3824:	f6 01       	movw	r30, r12
    3826:	60 81       	ld	r22, Z
    3828:	71 81       	ldd	r23, Z+1	; 0x01
    382a:	82 81       	ldd	r24, Z+2	; 0x02
    382c:	93 81       	ldd	r25, Z+3	; 0x03
    382e:	0a c0       	rjmp	.+20     	; 0x3844 <vfprintf+0x53e>
    3830:	f2 e0       	ldi	r31, 0x02	; 2
    3832:	af 0e       	add	r10, r31
    3834:	b1 1c       	adc	r11, r1
    3836:	f6 01       	movw	r30, r12
    3838:	60 81       	ld	r22, Z
    383a:	71 81       	ldd	r23, Z+1	; 0x01
    383c:	88 27       	eor	r24, r24
    383e:	77 fd       	sbrc	r23, 7
    3840:	80 95       	com	r24
    3842:	98 2f       	mov	r25, r24
    3844:	02 2f       	mov	r16, r18
    3846:	0f 76       	andi	r16, 0x6F	; 111
    3848:	97 ff       	sbrs	r25, 7
    384a:	08 c0       	rjmp	.+16     	; 0x385c <vfprintf+0x556>
    384c:	90 95       	com	r25
    384e:	80 95       	com	r24
    3850:	70 95       	com	r23
    3852:	61 95       	neg	r22
    3854:	7f 4f       	sbci	r23, 0xFF	; 255
    3856:	8f 4f       	sbci	r24, 0xFF	; 255
    3858:	9f 4f       	sbci	r25, 0xFF	; 255
    385a:	00 68       	ori	r16, 0x80	; 128
    385c:	2a e0       	ldi	r18, 0x0A	; 10
    385e:	30 e0       	ldi	r19, 0x00	; 0
    3860:	a4 01       	movw	r20, r8
    3862:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <__ultoa_invert>
    3866:	c8 2e       	mov	r12, r24
    3868:	c8 18       	sub	r12, r8
    386a:	3e c0       	rjmp	.+124    	; 0x38e8 <vfprintf+0x5e2>
    386c:	02 2f       	mov	r16, r18
    386e:	85 37       	cpi	r24, 0x75	; 117
    3870:	21 f4       	brne	.+8      	; 0x387a <vfprintf+0x574>
    3872:	0f 7e       	andi	r16, 0xEF	; 239
    3874:	2a e0       	ldi	r18, 0x0A	; 10
    3876:	30 e0       	ldi	r19, 0x00	; 0
    3878:	1d c0       	rjmp	.+58     	; 0x38b4 <vfprintf+0x5ae>
    387a:	09 7f       	andi	r16, 0xF9	; 249
    387c:	8f 36       	cpi	r24, 0x6F	; 111
    387e:	91 f0       	breq	.+36     	; 0x38a4 <vfprintf+0x59e>
    3880:	18 f4       	brcc	.+6      	; 0x3888 <vfprintf+0x582>
    3882:	88 35       	cpi	r24, 0x58	; 88
    3884:	59 f0       	breq	.+22     	; 0x389c <vfprintf+0x596>
    3886:	b0 c0       	rjmp	.+352    	; 0x39e8 <vfprintf+0x6e2>
    3888:	80 37       	cpi	r24, 0x70	; 112
    388a:	19 f0       	breq	.+6      	; 0x3892 <vfprintf+0x58c>
    388c:	88 37       	cpi	r24, 0x78	; 120
    388e:	11 f0       	breq	.+4      	; 0x3894 <vfprintf+0x58e>
    3890:	ab c0       	rjmp	.+342    	; 0x39e8 <vfprintf+0x6e2>
    3892:	00 61       	ori	r16, 0x10	; 16
    3894:	04 ff       	sbrs	r16, 4
    3896:	09 c0       	rjmp	.+18     	; 0x38aa <vfprintf+0x5a4>
    3898:	04 60       	ori	r16, 0x04	; 4
    389a:	07 c0       	rjmp	.+14     	; 0x38aa <vfprintf+0x5a4>
    389c:	24 ff       	sbrs	r18, 4
    389e:	08 c0       	rjmp	.+16     	; 0x38b0 <vfprintf+0x5aa>
    38a0:	06 60       	ori	r16, 0x06	; 6
    38a2:	06 c0       	rjmp	.+12     	; 0x38b0 <vfprintf+0x5aa>
    38a4:	28 e0       	ldi	r18, 0x08	; 8
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	05 c0       	rjmp	.+10     	; 0x38b4 <vfprintf+0x5ae>
    38aa:	20 e1       	ldi	r18, 0x10	; 16
    38ac:	30 e0       	ldi	r19, 0x00	; 0
    38ae:	02 c0       	rjmp	.+4      	; 0x38b4 <vfprintf+0x5ae>
    38b0:	20 e1       	ldi	r18, 0x10	; 16
    38b2:	32 e0       	ldi	r19, 0x02	; 2
    38b4:	56 01       	movw	r10, r12
    38b6:	07 ff       	sbrs	r16, 7
    38b8:	09 c0       	rjmp	.+18     	; 0x38cc <vfprintf+0x5c6>
    38ba:	f4 e0       	ldi	r31, 0x04	; 4
    38bc:	af 0e       	add	r10, r31
    38be:	b1 1c       	adc	r11, r1
    38c0:	f6 01       	movw	r30, r12
    38c2:	60 81       	ld	r22, Z
    38c4:	71 81       	ldd	r23, Z+1	; 0x01
    38c6:	82 81       	ldd	r24, Z+2	; 0x02
    38c8:	93 81       	ldd	r25, Z+3	; 0x03
    38ca:	08 c0       	rjmp	.+16     	; 0x38dc <vfprintf+0x5d6>
    38cc:	f2 e0       	ldi	r31, 0x02	; 2
    38ce:	af 0e       	add	r10, r31
    38d0:	b1 1c       	adc	r11, r1
    38d2:	f6 01       	movw	r30, r12
    38d4:	60 81       	ld	r22, Z
    38d6:	71 81       	ldd	r23, Z+1	; 0x01
    38d8:	80 e0       	ldi	r24, 0x00	; 0
    38da:	90 e0       	ldi	r25, 0x00	; 0
    38dc:	a4 01       	movw	r20, r8
    38de:	0e 94 d8 1e 	call	0x3db0	; 0x3db0 <__ultoa_invert>
    38e2:	c8 2e       	mov	r12, r24
    38e4:	c8 18       	sub	r12, r8
    38e6:	0f 77       	andi	r16, 0x7F	; 127
    38e8:	06 ff       	sbrs	r16, 6
    38ea:	0b c0       	rjmp	.+22     	; 0x3902 <vfprintf+0x5fc>
    38ec:	20 2f       	mov	r18, r16
    38ee:	2e 7f       	andi	r18, 0xFE	; 254
    38f0:	c1 16       	cp	r12, r17
    38f2:	50 f4       	brcc	.+20     	; 0x3908 <vfprintf+0x602>
    38f4:	04 ff       	sbrs	r16, 4
    38f6:	0a c0       	rjmp	.+20     	; 0x390c <vfprintf+0x606>
    38f8:	02 fd       	sbrc	r16, 2
    38fa:	08 c0       	rjmp	.+16     	; 0x390c <vfprintf+0x606>
    38fc:	20 2f       	mov	r18, r16
    38fe:	2e 7e       	andi	r18, 0xEE	; 238
    3900:	05 c0       	rjmp	.+10     	; 0x390c <vfprintf+0x606>
    3902:	dc 2c       	mov	r13, r12
    3904:	20 2f       	mov	r18, r16
    3906:	03 c0       	rjmp	.+6      	; 0x390e <vfprintf+0x608>
    3908:	dc 2c       	mov	r13, r12
    390a:	01 c0       	rjmp	.+2      	; 0x390e <vfprintf+0x608>
    390c:	d1 2e       	mov	r13, r17
    390e:	24 ff       	sbrs	r18, 4
    3910:	0d c0       	rjmp	.+26     	; 0x392c <vfprintf+0x626>
    3912:	fe 01       	movw	r30, r28
    3914:	ec 0d       	add	r30, r12
    3916:	f1 1d       	adc	r31, r1
    3918:	80 81       	ld	r24, Z
    391a:	80 33       	cpi	r24, 0x30	; 48
    391c:	11 f4       	brne	.+4      	; 0x3922 <vfprintf+0x61c>
    391e:	29 7e       	andi	r18, 0xE9	; 233
    3920:	09 c0       	rjmp	.+18     	; 0x3934 <vfprintf+0x62e>
    3922:	22 ff       	sbrs	r18, 2
    3924:	06 c0       	rjmp	.+12     	; 0x3932 <vfprintf+0x62c>
    3926:	d3 94       	inc	r13
    3928:	d3 94       	inc	r13
    392a:	04 c0       	rjmp	.+8      	; 0x3934 <vfprintf+0x62e>
    392c:	82 2f       	mov	r24, r18
    392e:	86 78       	andi	r24, 0x86	; 134
    3930:	09 f0       	breq	.+2      	; 0x3934 <vfprintf+0x62e>
    3932:	d3 94       	inc	r13
    3934:	23 fd       	sbrc	r18, 3
    3936:	13 c0       	rjmp	.+38     	; 0x395e <vfprintf+0x658>
    3938:	20 ff       	sbrs	r18, 0
    393a:	06 c0       	rjmp	.+12     	; 0x3948 <vfprintf+0x642>
    393c:	1c 2d       	mov	r17, r12
    393e:	d5 14       	cp	r13, r5
    3940:	18 f4       	brcc	.+6      	; 0x3948 <vfprintf+0x642>
    3942:	15 0d       	add	r17, r5
    3944:	1d 19       	sub	r17, r13
    3946:	d5 2c       	mov	r13, r5
    3948:	d5 14       	cp	r13, r5
    394a:	68 f4       	brcc	.+26     	; 0x3966 <vfprintf+0x660>
    394c:	b7 01       	movw	r22, r14
    394e:	80 e2       	ldi	r24, 0x20	; 32
    3950:	90 e0       	ldi	r25, 0x00	; 0
    3952:	2b 8b       	std	Y+19, r18	; 0x13
    3954:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3958:	d3 94       	inc	r13
    395a:	2b 89       	ldd	r18, Y+19	; 0x13
    395c:	f5 cf       	rjmp	.-22     	; 0x3948 <vfprintf+0x642>
    395e:	d5 14       	cp	r13, r5
    3960:	10 f4       	brcc	.+4      	; 0x3966 <vfprintf+0x660>
    3962:	5d 18       	sub	r5, r13
    3964:	01 c0       	rjmp	.+2      	; 0x3968 <vfprintf+0x662>
    3966:	51 2c       	mov	r5, r1
    3968:	24 ff       	sbrs	r18, 4
    396a:	12 c0       	rjmp	.+36     	; 0x3990 <vfprintf+0x68a>
    396c:	b7 01       	movw	r22, r14
    396e:	80 e3       	ldi	r24, 0x30	; 48
    3970:	90 e0       	ldi	r25, 0x00	; 0
    3972:	2b 8b       	std	Y+19, r18	; 0x13
    3974:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    3978:	2b 89       	ldd	r18, Y+19	; 0x13
    397a:	22 ff       	sbrs	r18, 2
    397c:	17 c0       	rjmp	.+46     	; 0x39ac <vfprintf+0x6a6>
    397e:	21 ff       	sbrs	r18, 1
    3980:	03 c0       	rjmp	.+6      	; 0x3988 <vfprintf+0x682>
    3982:	88 e5       	ldi	r24, 0x58	; 88
    3984:	90 e0       	ldi	r25, 0x00	; 0
    3986:	02 c0       	rjmp	.+4      	; 0x398c <vfprintf+0x686>
    3988:	88 e7       	ldi	r24, 0x78	; 120
    398a:	90 e0       	ldi	r25, 0x00	; 0
    398c:	b7 01       	movw	r22, r14
    398e:	0c c0       	rjmp	.+24     	; 0x39a8 <vfprintf+0x6a2>
    3990:	82 2f       	mov	r24, r18
    3992:	86 78       	andi	r24, 0x86	; 134
    3994:	59 f0       	breq	.+22     	; 0x39ac <vfprintf+0x6a6>
    3996:	21 fd       	sbrc	r18, 1
    3998:	02 c0       	rjmp	.+4      	; 0x399e <vfprintf+0x698>
    399a:	80 e2       	ldi	r24, 0x20	; 32
    399c:	01 c0       	rjmp	.+2      	; 0x39a0 <vfprintf+0x69a>
    399e:	8b e2       	ldi	r24, 0x2B	; 43
    39a0:	27 fd       	sbrc	r18, 7
    39a2:	8d e2       	ldi	r24, 0x2D	; 45
    39a4:	b7 01       	movw	r22, r14
    39a6:	90 e0       	ldi	r25, 0x00	; 0
    39a8:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    39ac:	c1 16       	cp	r12, r17
    39ae:	38 f4       	brcc	.+14     	; 0x39be <vfprintf+0x6b8>
    39b0:	b7 01       	movw	r22, r14
    39b2:	80 e3       	ldi	r24, 0x30	; 48
    39b4:	90 e0       	ldi	r25, 0x00	; 0
    39b6:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    39ba:	11 50       	subi	r17, 0x01	; 1
    39bc:	f7 cf       	rjmp	.-18     	; 0x39ac <vfprintf+0x6a6>
    39be:	ca 94       	dec	r12
    39c0:	f4 01       	movw	r30, r8
    39c2:	ec 0d       	add	r30, r12
    39c4:	f1 1d       	adc	r31, r1
    39c6:	80 81       	ld	r24, Z
    39c8:	b7 01       	movw	r22, r14
    39ca:	90 e0       	ldi	r25, 0x00	; 0
    39cc:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    39d0:	c1 10       	cpse	r12, r1
    39d2:	f5 cf       	rjmp	.-22     	; 0x39be <vfprintf+0x6b8>
    39d4:	55 20       	and	r5, r5
    39d6:	09 f4       	brne	.+2      	; 0x39da <vfprintf+0x6d4>
    39d8:	c2 cc       	rjmp	.-1660   	; 0x335e <vfprintf+0x58>
    39da:	b7 01       	movw	r22, r14
    39dc:	80 e2       	ldi	r24, 0x20	; 32
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <fputc>
    39e4:	5a 94       	dec	r5
    39e6:	f6 cf       	rjmp	.-20     	; 0x39d4 <vfprintf+0x6ce>
    39e8:	f7 01       	movw	r30, r14
    39ea:	86 81       	ldd	r24, Z+6	; 0x06
    39ec:	97 81       	ldd	r25, Z+7	; 0x07
    39ee:	02 c0       	rjmp	.+4      	; 0x39f4 <vfprintf+0x6ee>
    39f0:	8f ef       	ldi	r24, 0xFF	; 255
    39f2:	9f ef       	ldi	r25, 0xFF	; 255
    39f4:	63 96       	adiw	r28, 0x13	; 19
    39f6:	e2 e1       	ldi	r30, 0x12	; 18
    39f8:	0c 94 89 1d 	jmp	0x3b12	; 0x3b12 <__epilogue_restores__>

000039fc <__divmodhi4>:
    39fc:	97 fb       	bst	r25, 7
    39fe:	07 2e       	mov	r0, r23
    3a00:	16 f4       	brtc	.+4      	; 0x3a06 <__divmodhi4+0xa>
    3a02:	00 94       	com	r0
    3a04:	07 d0       	rcall	.+14     	; 0x3a14 <__divmodhi4_neg1>
    3a06:	77 fd       	sbrc	r23, 7
    3a08:	09 d0       	rcall	.+18     	; 0x3a1c <__divmodhi4_neg2>
    3a0a:	0e 94 a4 1d 	call	0x3b48	; 0x3b48 <__udivmodhi4>
    3a0e:	07 fc       	sbrc	r0, 7
    3a10:	05 d0       	rcall	.+10     	; 0x3a1c <__divmodhi4_neg2>
    3a12:	3e f4       	brtc	.+14     	; 0x3a22 <__divmodhi4_exit>

00003a14 <__divmodhi4_neg1>:
    3a14:	90 95       	com	r25
    3a16:	81 95       	neg	r24
    3a18:	9f 4f       	sbci	r25, 0xFF	; 255
    3a1a:	08 95       	ret

00003a1c <__divmodhi4_neg2>:
    3a1c:	70 95       	com	r23
    3a1e:	61 95       	neg	r22
    3a20:	7f 4f       	sbci	r23, 0xFF	; 255

00003a22 <__divmodhi4_exit>:
    3a22:	08 95       	ret

00003a24 <__udivmodsi4>:
    3a24:	a1 e2       	ldi	r26, 0x21	; 33
    3a26:	1a 2e       	mov	r1, r26
    3a28:	aa 1b       	sub	r26, r26
    3a2a:	bb 1b       	sub	r27, r27
    3a2c:	fd 01       	movw	r30, r26
    3a2e:	0d c0       	rjmp	.+26     	; 0x3a4a <__udivmodsi4_ep>

00003a30 <__udivmodsi4_loop>:
    3a30:	aa 1f       	adc	r26, r26
    3a32:	bb 1f       	adc	r27, r27
    3a34:	ee 1f       	adc	r30, r30
    3a36:	ff 1f       	adc	r31, r31
    3a38:	a2 17       	cp	r26, r18
    3a3a:	b3 07       	cpc	r27, r19
    3a3c:	e4 07       	cpc	r30, r20
    3a3e:	f5 07       	cpc	r31, r21
    3a40:	20 f0       	brcs	.+8      	; 0x3a4a <__udivmodsi4_ep>
    3a42:	a2 1b       	sub	r26, r18
    3a44:	b3 0b       	sbc	r27, r19
    3a46:	e4 0b       	sbc	r30, r20
    3a48:	f5 0b       	sbc	r31, r21

00003a4a <__udivmodsi4_ep>:
    3a4a:	66 1f       	adc	r22, r22
    3a4c:	77 1f       	adc	r23, r23
    3a4e:	88 1f       	adc	r24, r24
    3a50:	99 1f       	adc	r25, r25
    3a52:	1a 94       	dec	r1
    3a54:	69 f7       	brne	.-38     	; 0x3a30 <__udivmodsi4_loop>
    3a56:	60 95       	com	r22
    3a58:	70 95       	com	r23
    3a5a:	80 95       	com	r24
    3a5c:	90 95       	com	r25
    3a5e:	9b 01       	movw	r18, r22
    3a60:	ac 01       	movw	r20, r24
    3a62:	bd 01       	movw	r22, r26
    3a64:	cf 01       	movw	r24, r30
    3a66:	08 95       	ret

00003a68 <__divmodsi4>:
    3a68:	05 2e       	mov	r0, r21
    3a6a:	97 fb       	bst	r25, 7
    3a6c:	1e f4       	brtc	.+6      	; 0x3a74 <__divmodsi4+0xc>
    3a6e:	00 94       	com	r0
    3a70:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <__negsi2>
    3a74:	57 fd       	sbrc	r21, 7
    3a76:	07 d0       	rcall	.+14     	; 0x3a86 <__divmodsi4_neg2>
    3a78:	0e 94 12 1d 	call	0x3a24	; 0x3a24 <__udivmodsi4>
    3a7c:	07 fc       	sbrc	r0, 7
    3a7e:	03 d0       	rcall	.+6      	; 0x3a86 <__divmodsi4_neg2>
    3a80:	4e f4       	brtc	.+18     	; 0x3a94 <__divmodsi4_exit>
    3a82:	0c 94 4b 1d 	jmp	0x3a96	; 0x3a96 <__negsi2>

00003a86 <__divmodsi4_neg2>:
    3a86:	50 95       	com	r21
    3a88:	40 95       	com	r20
    3a8a:	30 95       	com	r19
    3a8c:	21 95       	neg	r18
    3a8e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a90:	4f 4f       	sbci	r20, 0xFF	; 255
    3a92:	5f 4f       	sbci	r21, 0xFF	; 255

00003a94 <__divmodsi4_exit>:
    3a94:	08 95       	ret

00003a96 <__negsi2>:
    3a96:	90 95       	com	r25
    3a98:	80 95       	com	r24
    3a9a:	70 95       	com	r23
    3a9c:	61 95       	neg	r22
    3a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    3aa0:	8f 4f       	sbci	r24, 0xFF	; 255
    3aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa4:	08 95       	ret

00003aa6 <__umulhisi3>:
    3aa6:	a2 9f       	mul	r26, r18
    3aa8:	b0 01       	movw	r22, r0
    3aaa:	b3 9f       	mul	r27, r19
    3aac:	c0 01       	movw	r24, r0
    3aae:	a3 9f       	mul	r26, r19
    3ab0:	70 0d       	add	r23, r0
    3ab2:	81 1d       	adc	r24, r1
    3ab4:	11 24       	eor	r1, r1
    3ab6:	91 1d       	adc	r25, r1
    3ab8:	b2 9f       	mul	r27, r18
    3aba:	70 0d       	add	r23, r0
    3abc:	81 1d       	adc	r24, r1
    3abe:	11 24       	eor	r1, r1
    3ac0:	91 1d       	adc	r25, r1
    3ac2:	08 95       	ret

00003ac4 <__muluhisi3>:
    3ac4:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__umulhisi3>
    3ac8:	a5 9f       	mul	r26, r21
    3aca:	90 0d       	add	r25, r0
    3acc:	b4 9f       	mul	r27, r20
    3ace:	90 0d       	add	r25, r0
    3ad0:	a4 9f       	mul	r26, r20
    3ad2:	80 0d       	add	r24, r0
    3ad4:	91 1d       	adc	r25, r1
    3ad6:	11 24       	eor	r1, r1
    3ad8:	08 95       	ret

00003ada <__prologue_saves__>:
    3ada:	2f 92       	push	r2
    3adc:	3f 92       	push	r3
    3ade:	4f 92       	push	r4
    3ae0:	5f 92       	push	r5
    3ae2:	6f 92       	push	r6
    3ae4:	7f 92       	push	r7
    3ae6:	8f 92       	push	r8
    3ae8:	9f 92       	push	r9
    3aea:	af 92       	push	r10
    3aec:	bf 92       	push	r11
    3aee:	cf 92       	push	r12
    3af0:	df 92       	push	r13
    3af2:	ef 92       	push	r14
    3af4:	ff 92       	push	r15
    3af6:	0f 93       	push	r16
    3af8:	1f 93       	push	r17
    3afa:	cf 93       	push	r28
    3afc:	df 93       	push	r29
    3afe:	cd b7       	in	r28, 0x3d	; 61
    3b00:	de b7       	in	r29, 0x3e	; 62
    3b02:	ca 1b       	sub	r28, r26
    3b04:	db 0b       	sbc	r29, r27
    3b06:	0f b6       	in	r0, 0x3f	; 63
    3b08:	f8 94       	cli
    3b0a:	de bf       	out	0x3e, r29	; 62
    3b0c:	0f be       	out	0x3f, r0	; 63
    3b0e:	cd bf       	out	0x3d, r28	; 61
    3b10:	09 94       	ijmp

00003b12 <__epilogue_restores__>:
    3b12:	2a 88       	ldd	r2, Y+18	; 0x12
    3b14:	39 88       	ldd	r3, Y+17	; 0x11
    3b16:	48 88       	ldd	r4, Y+16	; 0x10
    3b18:	5f 84       	ldd	r5, Y+15	; 0x0f
    3b1a:	6e 84       	ldd	r6, Y+14	; 0x0e
    3b1c:	7d 84       	ldd	r7, Y+13	; 0x0d
    3b1e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b20:	9b 84       	ldd	r9, Y+11	; 0x0b
    3b22:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b24:	b9 84       	ldd	r11, Y+9	; 0x09
    3b26:	c8 84       	ldd	r12, Y+8	; 0x08
    3b28:	df 80       	ldd	r13, Y+7	; 0x07
    3b2a:	ee 80       	ldd	r14, Y+6	; 0x06
    3b2c:	fd 80       	ldd	r15, Y+5	; 0x05
    3b2e:	0c 81       	ldd	r16, Y+4	; 0x04
    3b30:	1b 81       	ldd	r17, Y+3	; 0x03
    3b32:	aa 81       	ldd	r26, Y+2	; 0x02
    3b34:	b9 81       	ldd	r27, Y+1	; 0x01
    3b36:	ce 0f       	add	r28, r30
    3b38:	d1 1d       	adc	r29, r1
    3b3a:	0f b6       	in	r0, 0x3f	; 63
    3b3c:	f8 94       	cli
    3b3e:	de bf       	out	0x3e, r29	; 62
    3b40:	0f be       	out	0x3f, r0	; 63
    3b42:	cd bf       	out	0x3d, r28	; 61
    3b44:	ed 01       	movw	r28, r26
    3b46:	08 95       	ret

00003b48 <__udivmodhi4>:
    3b48:	aa 1b       	sub	r26, r26
    3b4a:	bb 1b       	sub	r27, r27
    3b4c:	51 e1       	ldi	r21, 0x11	; 17
    3b4e:	07 c0       	rjmp	.+14     	; 0x3b5e <__udivmodhi4_ep>

00003b50 <__udivmodhi4_loop>:
    3b50:	aa 1f       	adc	r26, r26
    3b52:	bb 1f       	adc	r27, r27
    3b54:	a6 17       	cp	r26, r22
    3b56:	b7 07       	cpc	r27, r23
    3b58:	10 f0       	brcs	.+4      	; 0x3b5e <__udivmodhi4_ep>
    3b5a:	a6 1b       	sub	r26, r22
    3b5c:	b7 0b       	sbc	r27, r23

00003b5e <__udivmodhi4_ep>:
    3b5e:	88 1f       	adc	r24, r24
    3b60:	99 1f       	adc	r25, r25
    3b62:	5a 95       	dec	r21
    3b64:	a9 f7       	brne	.-22     	; 0x3b50 <__udivmodhi4_loop>
    3b66:	80 95       	com	r24
    3b68:	90 95       	com	r25
    3b6a:	bc 01       	movw	r22, r24
    3b6c:	cd 01       	movw	r24, r26
    3b6e:	08 95       	ret

00003b70 <__ftoa_engine>:
    3b70:	28 30       	cpi	r18, 0x08	; 8
    3b72:	08 f0       	brcs	.+2      	; 0x3b76 <__ftoa_engine+0x6>
    3b74:	27 e0       	ldi	r18, 0x07	; 7
    3b76:	33 27       	eor	r19, r19
    3b78:	da 01       	movw	r26, r20
    3b7a:	99 0f       	add	r25, r25
    3b7c:	31 1d       	adc	r19, r1
    3b7e:	87 fd       	sbrc	r24, 7
    3b80:	91 60       	ori	r25, 0x01	; 1
    3b82:	00 96       	adiw	r24, 0x00	; 0
    3b84:	61 05       	cpc	r22, r1
    3b86:	71 05       	cpc	r23, r1
    3b88:	39 f4       	brne	.+14     	; 0x3b98 <__ftoa_engine+0x28>
    3b8a:	32 60       	ori	r19, 0x02	; 2
    3b8c:	2e 5f       	subi	r18, 0xFE	; 254
    3b8e:	3d 93       	st	X+, r19
    3b90:	30 e3       	ldi	r19, 0x30	; 48
    3b92:	2a 95       	dec	r18
    3b94:	e1 f7       	brne	.-8      	; 0x3b8e <__ftoa_engine+0x1e>
    3b96:	08 95       	ret
    3b98:	9f 3f       	cpi	r25, 0xFF	; 255
    3b9a:	30 f0       	brcs	.+12     	; 0x3ba8 <__ftoa_engine+0x38>
    3b9c:	80 38       	cpi	r24, 0x80	; 128
    3b9e:	71 05       	cpc	r23, r1
    3ba0:	61 05       	cpc	r22, r1
    3ba2:	09 f0       	breq	.+2      	; 0x3ba6 <__ftoa_engine+0x36>
    3ba4:	3c 5f       	subi	r19, 0xFC	; 252
    3ba6:	3c 5f       	subi	r19, 0xFC	; 252
    3ba8:	3d 93       	st	X+, r19
    3baa:	91 30       	cpi	r25, 0x01	; 1
    3bac:	08 f0       	brcs	.+2      	; 0x3bb0 <__ftoa_engine+0x40>
    3bae:	80 68       	ori	r24, 0x80	; 128
    3bb0:	91 1d       	adc	r25, r1
    3bb2:	df 93       	push	r29
    3bb4:	cf 93       	push	r28
    3bb6:	1f 93       	push	r17
    3bb8:	0f 93       	push	r16
    3bba:	ff 92       	push	r15
    3bbc:	ef 92       	push	r14
    3bbe:	19 2f       	mov	r17, r25
    3bc0:	98 7f       	andi	r25, 0xF8	; 248
    3bc2:	96 95       	lsr	r25
    3bc4:	e9 2f       	mov	r30, r25
    3bc6:	96 95       	lsr	r25
    3bc8:	96 95       	lsr	r25
    3bca:	e9 0f       	add	r30, r25
    3bcc:	ff 27       	eor	r31, r31
    3bce:	ea 55       	subi	r30, 0x5A	; 90
    3bd0:	f0 4f       	sbci	r31, 0xF0	; 240
    3bd2:	99 27       	eor	r25, r25
    3bd4:	33 27       	eor	r19, r19
    3bd6:	ee 24       	eor	r14, r14
    3bd8:	ff 24       	eor	r15, r15
    3bda:	a7 01       	movw	r20, r14
    3bdc:	e7 01       	movw	r28, r14
    3bde:	05 90       	lpm	r0, Z+
    3be0:	08 94       	sec
    3be2:	07 94       	ror	r0
    3be4:	28 f4       	brcc	.+10     	; 0x3bf0 <__ftoa_engine+0x80>
    3be6:	36 0f       	add	r19, r22
    3be8:	e7 1e       	adc	r14, r23
    3bea:	f8 1e       	adc	r15, r24
    3bec:	49 1f       	adc	r20, r25
    3bee:	51 1d       	adc	r21, r1
    3bf0:	66 0f       	add	r22, r22
    3bf2:	77 1f       	adc	r23, r23
    3bf4:	88 1f       	adc	r24, r24
    3bf6:	99 1f       	adc	r25, r25
    3bf8:	06 94       	lsr	r0
    3bfa:	a1 f7       	brne	.-24     	; 0x3be4 <__ftoa_engine+0x74>
    3bfc:	05 90       	lpm	r0, Z+
    3bfe:	07 94       	ror	r0
    3c00:	28 f4       	brcc	.+10     	; 0x3c0c <__ftoa_engine+0x9c>
    3c02:	e7 0e       	add	r14, r23
    3c04:	f8 1e       	adc	r15, r24
    3c06:	49 1f       	adc	r20, r25
    3c08:	56 1f       	adc	r21, r22
    3c0a:	c1 1d       	adc	r28, r1
    3c0c:	77 0f       	add	r23, r23
    3c0e:	88 1f       	adc	r24, r24
    3c10:	99 1f       	adc	r25, r25
    3c12:	66 1f       	adc	r22, r22
    3c14:	06 94       	lsr	r0
    3c16:	a1 f7       	brne	.-24     	; 0x3c00 <__ftoa_engine+0x90>
    3c18:	05 90       	lpm	r0, Z+
    3c1a:	07 94       	ror	r0
    3c1c:	28 f4       	brcc	.+10     	; 0x3c28 <__ftoa_engine+0xb8>
    3c1e:	f8 0e       	add	r15, r24
    3c20:	49 1f       	adc	r20, r25
    3c22:	56 1f       	adc	r21, r22
    3c24:	c7 1f       	adc	r28, r23
    3c26:	d1 1d       	adc	r29, r1
    3c28:	88 0f       	add	r24, r24
    3c2a:	99 1f       	adc	r25, r25
    3c2c:	66 1f       	adc	r22, r22
    3c2e:	77 1f       	adc	r23, r23
    3c30:	06 94       	lsr	r0
    3c32:	a1 f7       	brne	.-24     	; 0x3c1c <__ftoa_engine+0xac>
    3c34:	05 90       	lpm	r0, Z+
    3c36:	07 94       	ror	r0
    3c38:	20 f4       	brcc	.+8      	; 0x3c42 <__ftoa_engine+0xd2>
    3c3a:	49 0f       	add	r20, r25
    3c3c:	56 1f       	adc	r21, r22
    3c3e:	c7 1f       	adc	r28, r23
    3c40:	d8 1f       	adc	r29, r24
    3c42:	99 0f       	add	r25, r25
    3c44:	66 1f       	adc	r22, r22
    3c46:	77 1f       	adc	r23, r23
    3c48:	88 1f       	adc	r24, r24
    3c4a:	06 94       	lsr	r0
    3c4c:	a9 f7       	brne	.-22     	; 0x3c38 <__ftoa_engine+0xc8>
    3c4e:	84 91       	lpm	r24, Z
    3c50:	10 95       	com	r17
    3c52:	17 70       	andi	r17, 0x07	; 7
    3c54:	41 f0       	breq	.+16     	; 0x3c66 <__ftoa_engine+0xf6>
    3c56:	d6 95       	lsr	r29
    3c58:	c7 95       	ror	r28
    3c5a:	57 95       	ror	r21
    3c5c:	47 95       	ror	r20
    3c5e:	f7 94       	ror	r15
    3c60:	e7 94       	ror	r14
    3c62:	1a 95       	dec	r17
    3c64:	c1 f7       	brne	.-16     	; 0x3c56 <__ftoa_engine+0xe6>
    3c66:	ec e4       	ldi	r30, 0x4C	; 76
    3c68:	ff e0       	ldi	r31, 0x0F	; 15
    3c6a:	68 94       	set
    3c6c:	15 90       	lpm	r1, Z+
    3c6e:	15 91       	lpm	r17, Z+
    3c70:	35 91       	lpm	r19, Z+
    3c72:	65 91       	lpm	r22, Z+
    3c74:	95 91       	lpm	r25, Z+
    3c76:	05 90       	lpm	r0, Z+
    3c78:	7f e2       	ldi	r23, 0x2F	; 47
    3c7a:	73 95       	inc	r23
    3c7c:	e1 18       	sub	r14, r1
    3c7e:	f1 0a       	sbc	r15, r17
    3c80:	43 0b       	sbc	r20, r19
    3c82:	56 0b       	sbc	r21, r22
    3c84:	c9 0b       	sbc	r28, r25
    3c86:	d0 09       	sbc	r29, r0
    3c88:	c0 f7       	brcc	.-16     	; 0x3c7a <__ftoa_engine+0x10a>
    3c8a:	e1 0c       	add	r14, r1
    3c8c:	f1 1e       	adc	r15, r17
    3c8e:	43 1f       	adc	r20, r19
    3c90:	56 1f       	adc	r21, r22
    3c92:	c9 1f       	adc	r28, r25
    3c94:	d0 1d       	adc	r29, r0
    3c96:	7e f4       	brtc	.+30     	; 0x3cb6 <__ftoa_engine+0x146>
    3c98:	70 33       	cpi	r23, 0x30	; 48
    3c9a:	11 f4       	brne	.+4      	; 0x3ca0 <__ftoa_engine+0x130>
    3c9c:	8a 95       	dec	r24
    3c9e:	e6 cf       	rjmp	.-52     	; 0x3c6c <__ftoa_engine+0xfc>
    3ca0:	e8 94       	clt
    3ca2:	01 50       	subi	r16, 0x01	; 1
    3ca4:	30 f0       	brcs	.+12     	; 0x3cb2 <__ftoa_engine+0x142>
    3ca6:	08 0f       	add	r16, r24
    3ca8:	0a f4       	brpl	.+2      	; 0x3cac <__ftoa_engine+0x13c>
    3caa:	00 27       	eor	r16, r16
    3cac:	02 17       	cp	r16, r18
    3cae:	08 f4       	brcc	.+2      	; 0x3cb2 <__ftoa_engine+0x142>
    3cb0:	20 2f       	mov	r18, r16
    3cb2:	23 95       	inc	r18
    3cb4:	02 2f       	mov	r16, r18
    3cb6:	7a 33       	cpi	r23, 0x3A	; 58
    3cb8:	28 f0       	brcs	.+10     	; 0x3cc4 <__ftoa_engine+0x154>
    3cba:	79 e3       	ldi	r23, 0x39	; 57
    3cbc:	7d 93       	st	X+, r23
    3cbe:	2a 95       	dec	r18
    3cc0:	e9 f7       	brne	.-6      	; 0x3cbc <__ftoa_engine+0x14c>
    3cc2:	10 c0       	rjmp	.+32     	; 0x3ce4 <__ftoa_engine+0x174>
    3cc4:	7d 93       	st	X+, r23
    3cc6:	2a 95       	dec	r18
    3cc8:	89 f6       	brne	.-94     	; 0x3c6c <__ftoa_engine+0xfc>
    3cca:	06 94       	lsr	r0
    3ccc:	97 95       	ror	r25
    3cce:	67 95       	ror	r22
    3cd0:	37 95       	ror	r19
    3cd2:	17 95       	ror	r17
    3cd4:	17 94       	ror	r1
    3cd6:	e1 18       	sub	r14, r1
    3cd8:	f1 0a       	sbc	r15, r17
    3cda:	43 0b       	sbc	r20, r19
    3cdc:	56 0b       	sbc	r21, r22
    3cde:	c9 0b       	sbc	r28, r25
    3ce0:	d0 09       	sbc	r29, r0
    3ce2:	98 f0       	brcs	.+38     	; 0x3d0a <__ftoa_engine+0x19a>
    3ce4:	23 95       	inc	r18
    3ce6:	7e 91       	ld	r23, -X
    3ce8:	73 95       	inc	r23
    3cea:	7a 33       	cpi	r23, 0x3A	; 58
    3cec:	08 f0       	brcs	.+2      	; 0x3cf0 <__ftoa_engine+0x180>
    3cee:	70 e3       	ldi	r23, 0x30	; 48
    3cf0:	7c 93       	st	X, r23
    3cf2:	20 13       	cpse	r18, r16
    3cf4:	b8 f7       	brcc	.-18     	; 0x3ce4 <__ftoa_engine+0x174>
    3cf6:	7e 91       	ld	r23, -X
    3cf8:	70 61       	ori	r23, 0x10	; 16
    3cfa:	7d 93       	st	X+, r23
    3cfc:	30 f0       	brcs	.+12     	; 0x3d0a <__ftoa_engine+0x19a>
    3cfe:	83 95       	inc	r24
    3d00:	71 e3       	ldi	r23, 0x31	; 49
    3d02:	7d 93       	st	X+, r23
    3d04:	70 e3       	ldi	r23, 0x30	; 48
    3d06:	2a 95       	dec	r18
    3d08:	e1 f7       	brne	.-8      	; 0x3d02 <__ftoa_engine+0x192>
    3d0a:	11 24       	eor	r1, r1
    3d0c:	ef 90       	pop	r14
    3d0e:	ff 90       	pop	r15
    3d10:	0f 91       	pop	r16
    3d12:	1f 91       	pop	r17
    3d14:	cf 91       	pop	r28
    3d16:	df 91       	pop	r29
    3d18:	99 27       	eor	r25, r25
    3d1a:	87 fd       	sbrc	r24, 7
    3d1c:	90 95       	com	r25
    3d1e:	08 95       	ret

00003d20 <strnlen_P>:
    3d20:	fc 01       	movw	r30, r24
    3d22:	05 90       	lpm	r0, Z+
    3d24:	61 50       	subi	r22, 0x01	; 1
    3d26:	70 40       	sbci	r23, 0x00	; 0
    3d28:	01 10       	cpse	r0, r1
    3d2a:	d8 f7       	brcc	.-10     	; 0x3d22 <strnlen_P+0x2>
    3d2c:	80 95       	com	r24
    3d2e:	90 95       	com	r25
    3d30:	8e 0f       	add	r24, r30
    3d32:	9f 1f       	adc	r25, r31
    3d34:	08 95       	ret

00003d36 <strnlen>:
    3d36:	fc 01       	movw	r30, r24
    3d38:	61 50       	subi	r22, 0x01	; 1
    3d3a:	70 40       	sbci	r23, 0x00	; 0
    3d3c:	01 90       	ld	r0, Z+
    3d3e:	01 10       	cpse	r0, r1
    3d40:	d8 f7       	brcc	.-10     	; 0x3d38 <strnlen+0x2>
    3d42:	80 95       	com	r24
    3d44:	90 95       	com	r25
    3d46:	8e 0f       	add	r24, r30
    3d48:	9f 1f       	adc	r25, r31
    3d4a:	08 95       	ret

00003d4c <fputc>:
    3d4c:	0f 93       	push	r16
    3d4e:	1f 93       	push	r17
    3d50:	cf 93       	push	r28
    3d52:	df 93       	push	r29
    3d54:	18 2f       	mov	r17, r24
    3d56:	09 2f       	mov	r16, r25
    3d58:	eb 01       	movw	r28, r22
    3d5a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d5c:	81 fd       	sbrc	r24, 1
    3d5e:	03 c0       	rjmp	.+6      	; 0x3d66 <fputc+0x1a>
    3d60:	8f ef       	ldi	r24, 0xFF	; 255
    3d62:	9f ef       	ldi	r25, 0xFF	; 255
    3d64:	20 c0       	rjmp	.+64     	; 0x3da6 <fputc+0x5a>
    3d66:	82 ff       	sbrs	r24, 2
    3d68:	10 c0       	rjmp	.+32     	; 0x3d8a <fputc+0x3e>
    3d6a:	4e 81       	ldd	r20, Y+6	; 0x06
    3d6c:	5f 81       	ldd	r21, Y+7	; 0x07
    3d6e:	2c 81       	ldd	r18, Y+4	; 0x04
    3d70:	3d 81       	ldd	r19, Y+5	; 0x05
    3d72:	42 17       	cp	r20, r18
    3d74:	53 07       	cpc	r21, r19
    3d76:	7c f4       	brge	.+30     	; 0x3d96 <fputc+0x4a>
    3d78:	e8 81       	ld	r30, Y
    3d7a:	f9 81       	ldd	r31, Y+1	; 0x01
    3d7c:	9f 01       	movw	r18, r30
    3d7e:	2f 5f       	subi	r18, 0xFF	; 255
    3d80:	3f 4f       	sbci	r19, 0xFF	; 255
    3d82:	39 83       	std	Y+1, r19	; 0x01
    3d84:	28 83       	st	Y, r18
    3d86:	10 83       	st	Z, r17
    3d88:	06 c0       	rjmp	.+12     	; 0x3d96 <fputc+0x4a>
    3d8a:	e8 85       	ldd	r30, Y+8	; 0x08
    3d8c:	f9 85       	ldd	r31, Y+9	; 0x09
    3d8e:	81 2f       	mov	r24, r17
    3d90:	09 95       	icall
    3d92:	89 2b       	or	r24, r25
    3d94:	29 f7       	brne	.-54     	; 0x3d60 <fputc+0x14>
    3d96:	2e 81       	ldd	r18, Y+6	; 0x06
    3d98:	3f 81       	ldd	r19, Y+7	; 0x07
    3d9a:	2f 5f       	subi	r18, 0xFF	; 255
    3d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d9e:	3f 83       	std	Y+7, r19	; 0x07
    3da0:	2e 83       	std	Y+6, r18	; 0x06
    3da2:	81 2f       	mov	r24, r17
    3da4:	90 2f       	mov	r25, r16
    3da6:	df 91       	pop	r29
    3da8:	cf 91       	pop	r28
    3daa:	1f 91       	pop	r17
    3dac:	0f 91       	pop	r16
    3dae:	08 95       	ret

00003db0 <__ultoa_invert>:
    3db0:	fa 01       	movw	r30, r20
    3db2:	aa 27       	eor	r26, r26
    3db4:	28 30       	cpi	r18, 0x08	; 8
    3db6:	51 f1       	breq	.+84     	; 0x3e0c <__ultoa_invert+0x5c>
    3db8:	20 31       	cpi	r18, 0x10	; 16
    3dba:	81 f1       	breq	.+96     	; 0x3e1c <__ultoa_invert+0x6c>
    3dbc:	e8 94       	clt
    3dbe:	6f 93       	push	r22
    3dc0:	6e 7f       	andi	r22, 0xFE	; 254
    3dc2:	6e 5f       	subi	r22, 0xFE	; 254
    3dc4:	7f 4f       	sbci	r23, 0xFF	; 255
    3dc6:	8f 4f       	sbci	r24, 0xFF	; 255
    3dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    3dca:	af 4f       	sbci	r26, 0xFF	; 255
    3dcc:	b1 e0       	ldi	r27, 0x01	; 1
    3dce:	3e d0       	rcall	.+124    	; 0x3e4c <__ultoa_invert+0x9c>
    3dd0:	b4 e0       	ldi	r27, 0x04	; 4
    3dd2:	3c d0       	rcall	.+120    	; 0x3e4c <__ultoa_invert+0x9c>
    3dd4:	67 0f       	add	r22, r23
    3dd6:	78 1f       	adc	r23, r24
    3dd8:	89 1f       	adc	r24, r25
    3dda:	9a 1f       	adc	r25, r26
    3ddc:	a1 1d       	adc	r26, r1
    3dde:	68 0f       	add	r22, r24
    3de0:	79 1f       	adc	r23, r25
    3de2:	8a 1f       	adc	r24, r26
    3de4:	91 1d       	adc	r25, r1
    3de6:	a1 1d       	adc	r26, r1
    3de8:	6a 0f       	add	r22, r26
    3dea:	71 1d       	adc	r23, r1
    3dec:	81 1d       	adc	r24, r1
    3dee:	91 1d       	adc	r25, r1
    3df0:	a1 1d       	adc	r26, r1
    3df2:	20 d0       	rcall	.+64     	; 0x3e34 <__ultoa_invert+0x84>
    3df4:	09 f4       	brne	.+2      	; 0x3df8 <__ultoa_invert+0x48>
    3df6:	68 94       	set
    3df8:	3f 91       	pop	r19
    3dfa:	2a e0       	ldi	r18, 0x0A	; 10
    3dfc:	26 9f       	mul	r18, r22
    3dfe:	11 24       	eor	r1, r1
    3e00:	30 19       	sub	r19, r0
    3e02:	30 5d       	subi	r19, 0xD0	; 208
    3e04:	31 93       	st	Z+, r19
    3e06:	de f6       	brtc	.-74     	; 0x3dbe <__ultoa_invert+0xe>
    3e08:	cf 01       	movw	r24, r30
    3e0a:	08 95       	ret
    3e0c:	46 2f       	mov	r20, r22
    3e0e:	47 70       	andi	r20, 0x07	; 7
    3e10:	40 5d       	subi	r20, 0xD0	; 208
    3e12:	41 93       	st	Z+, r20
    3e14:	b3 e0       	ldi	r27, 0x03	; 3
    3e16:	0f d0       	rcall	.+30     	; 0x3e36 <__ultoa_invert+0x86>
    3e18:	c9 f7       	brne	.-14     	; 0x3e0c <__ultoa_invert+0x5c>
    3e1a:	f6 cf       	rjmp	.-20     	; 0x3e08 <__ultoa_invert+0x58>
    3e1c:	46 2f       	mov	r20, r22
    3e1e:	4f 70       	andi	r20, 0x0F	; 15
    3e20:	40 5d       	subi	r20, 0xD0	; 208
    3e22:	4a 33       	cpi	r20, 0x3A	; 58
    3e24:	18 f0       	brcs	.+6      	; 0x3e2c <__ultoa_invert+0x7c>
    3e26:	49 5d       	subi	r20, 0xD9	; 217
    3e28:	31 fd       	sbrc	r19, 1
    3e2a:	40 52       	subi	r20, 0x20	; 32
    3e2c:	41 93       	st	Z+, r20
    3e2e:	02 d0       	rcall	.+4      	; 0x3e34 <__ultoa_invert+0x84>
    3e30:	a9 f7       	brne	.-22     	; 0x3e1c <__ultoa_invert+0x6c>
    3e32:	ea cf       	rjmp	.-44     	; 0x3e08 <__ultoa_invert+0x58>
    3e34:	b4 e0       	ldi	r27, 0x04	; 4
    3e36:	a6 95       	lsr	r26
    3e38:	97 95       	ror	r25
    3e3a:	87 95       	ror	r24
    3e3c:	77 95       	ror	r23
    3e3e:	67 95       	ror	r22
    3e40:	ba 95       	dec	r27
    3e42:	c9 f7       	brne	.-14     	; 0x3e36 <__ultoa_invert+0x86>
    3e44:	00 97       	sbiw	r24, 0x00	; 0
    3e46:	61 05       	cpc	r22, r1
    3e48:	71 05       	cpc	r23, r1
    3e4a:	08 95       	ret
    3e4c:	9b 01       	movw	r18, r22
    3e4e:	ac 01       	movw	r20, r24
    3e50:	0a 2e       	mov	r0, r26
    3e52:	06 94       	lsr	r0
    3e54:	57 95       	ror	r21
    3e56:	47 95       	ror	r20
    3e58:	37 95       	ror	r19
    3e5a:	27 95       	ror	r18
    3e5c:	ba 95       	dec	r27
    3e5e:	c9 f7       	brne	.-14     	; 0x3e52 <__ultoa_invert+0xa2>
    3e60:	62 0f       	add	r22, r18
    3e62:	73 1f       	adc	r23, r19
    3e64:	84 1f       	adc	r24, r20
    3e66:	95 1f       	adc	r25, r21
    3e68:	a0 1d       	adc	r26, r0
    3e6a:	08 95       	ret

00003e6c <_exit>:
    3e6c:	f8 94       	cli

00003e6e <__stop_program>:
    3e6e:	ff cf       	rjmp	.-2      	; 0x3e6e <__stop_program>
